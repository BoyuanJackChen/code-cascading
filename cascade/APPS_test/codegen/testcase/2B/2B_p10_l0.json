[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 8 6\"\nassert solution(\"10\") == \"1 9 2 8 6 10 7 4 8\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution(\"4 1 3\") == \"1 3\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n''') == '5'\nassert solution('''\n2\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n''') == '1 2 8'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n\n''') == '1 2 3 7 8'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"18\") == \"2\"\nassert solution(\"1000000000\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5 1 8 6\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '1 8 6'\nassert solution(input_) == '1 8 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5 1 8 6'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5 1 8 6'\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n3 7\n3 8\n''') == '5 1 8 6'\nassert solution('''\n4\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5 1 8 6'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('2 1') == '2'\nassert solution('3 2') == '2'\nassert solution('4 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '20 8'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1 2\n''') == '20 8'\nassert solution('''\n20\n1 1 1 1 2 2\n''') == '20 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 6 5 4\\n\") == \"6 5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10\n10 1 2 3 4 5 2 6 8\n''') == '10 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"20 8\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == \"20 8\"\nassert solution('''\n20\n10 2 8 1 2 4 1 20 4 5\n''') == \"20 8\"\nassert solution('''\n100\n1 5 2 2 2 1\n''') == \"5 1\"\nassert solution('''\n10\n10 4 7 3 3 2 2 1 1\n''') == \"4 7 3 3 2 1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"20 8\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 1 2\\n\"\n    \"10 2\\n\"\n    \"4 3 5 1\"\n    ) == \"10 2\"\n\nassert solution(\n    \"5 5\\n\"\n    \"3 1 2 1\"\n    ) == \"5 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('5 5 4') == '56'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\nassert solution('10 10 10') == '83'\nassert solution('20 20 20') == '2'\nassert solution('50 50 50') == '100'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 3') == \"24\"\nassert solution('5 5 4') == \"56\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_value) == \"4\"\n\n\n\"\"\"\n\nfrom collections import deque\nfrom math import inf",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4'\nassert solution('7\\n1 3 5 6 5 4 2') == '6'\nassert solution('3\\n2 2 2') == '1'\n\n\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == 'LLRLLRRLL'\nassert solution('2') == 'R'\nassert solution('3') == 'LRRR'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\nassert solution('''4\n1 2 4 3''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 4 3 2') == '4'\nassert solution('7\\n1 3 5 6 5 4 2') == '6'\nassert solution('3\\n2 2 2') == '1'\nassert solution('4\\n1 2 4 3') == '4'",
        "num_ids_2": 36,
        "num_ids_4": 67
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"R\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('4') == '2'\n\n---\n\nInput\n10\n1 2 3 4 5 6 7 8 9 10\n\nOutput\n9\nLLRLLLRRLR\n\nInput\n10\n1 3 5 6 5 4 2\n\nOutput\n6\nRLLRRRRR\n\nInput\n5\n1 2 4 3 2\n\nOutput\n4\nLLRRR\n\n\n\"\"\"\n\nimport sys\nfrom typing import List\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\n\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\n\nassert solution('''3\n2 2 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 2 3\n''') == '1'\nassert solution('''\n2\n1 3 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"5 2 5 2 5\") == \"3\"\nassert solution(\"2 3 1 7 5\") == \"-1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution([\n    '1 4 4 7 4 1',\n    '1 2 5 2 5 1',\n    '1 3 3 7',\n    '1 3 3 7',\n    '1 3 3 7',\n    '1 3 3 7',\n]) == '3'\nassert solution([\n    '1 3 4 3 4',\n    '4 5 2 5 3',\n    '3 5 6 4',\n    '4 4 6 1',\n    '3 4 6 4',\n    '3 4 6 4',\n]) == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 16
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '-1'\nassert solution('5') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4') == '3'\nassert solution('5 2\\n1 5') == '4'\nassert solution('2\\n4 2') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 5 2 5\n''') == '3'\n\nassert solution('''\n5\n2 2 5 2 5\n''') == '3'\n\nassert solution('''\n4\n1 3 3 7\n''') == '-1'\n\nassert solution('''\n3\n1 3 3 7\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"-1\"\nassert solution() == \"0\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n\nassert solution('1 4 4 7 4 1') == '3'\n\nassert solution('2 2 5 2 5') == '3'\n\nassert solution('3') == '-1'\n\nassert solution('4') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1\n3 2\n\n4\n3 7\n''') == '3'\nassert solution(\n'''\n1\n5\n\n5\n4 2\n''') == '3'\nassert solution(\n'''\n5\n5\n\n5\n4 5\n''') == '2'\nassert solution(\n'''\n5\n5\n\n5\n4 5\n''') == '-1'\nassert solution(\n'''\n2\n1 2\n\n1\n1\n\n1\n1\n\n1\n1\n\n2\n1 2\n\n1\n1\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'YES'\nassert solution('''3 1 5 5''') == 'YES'\nassert solution('''5 2 10 5''') == 'YES'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 4 4''') == 'NO'\nassert solution('''1 1 3 5''') == 'YES'\nassert solution('''3 1 5 5''') == 'YES'\n\nassert solution('''5 2 10 5''') == 'YES'\nassert solution('''0 0 1000000 1000000''') == 'YES'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'NO'\nassert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'YES'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 4 4\") == 'NO'\nassert solution(\"1 1 3 5\") == 'YES'\nassert solution(\"3 1 5 5\") == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'NO'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4 4\") == \"YES\", \"Check example #1\"\nassert solution(\"3 3 7 5\") == \"YES\", \"Check example #2\"\nassert solution(\"5 2 10 5\") == \"YES\", \"Check example #3\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 7 5\\n0 0 4 6\\n0 0 7 4\") == \"YES\"\nassert solution(\"2 2 4 4\\n1 1 3 5\\n3 1 5 5\") == \"YES\"\nassert solution(\"5 2 10 5\\n3 1 7 6\\n8 1 11 7\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\\n0 0 499999 1000000\\n500000 0 1000000 1000000\") == \"YES\"\n",
        "num_ids_2": 50,
        "num_ids_4": 107
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 2 4 4\n1 1 3 5\n3 1 5 5\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n3 3 7 5\n0 0 4 6\n0 0 7 4\n\"\"\") == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '19'\nassert solution('10') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '20'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '19'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '19'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '18'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '17'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '19'\nassert solution(input()) == '20'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"20\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('9') == '19'\nassert solution('8') == '18'\nassert solution('7') == '18'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 4 5 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '7 3 2 1 4 5 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 1 4 5 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\"\n) == \"5 3 1 2 4\", \"Wrong answer\"\n\nassert solution(\n    \"7\"\n) == \"7 4 2 3 6 5 1\", \"Wrong answer\"\n\nassert solution(\n    \"7\"\n) == \"7 4 2 3 6 5 1\", \"Wrong answer\"\n\nassert solution(\n    \"5\"\n) == \"5 3 1 2 4\", \"Wrong answer\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3 1 2 4 5\"\nassert solution(\"7\") == \"3 2 1 4 5 6\"\nassert solution(\"7\") == \"3 2 1 4 5 6\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3 1 2 4 5\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2 3 1 4 5 3\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n5 0 0 2 4') == '5 3 1 2 4'\nassert solution('7\\n7 4 0 3 0 5 1') == '7 3 2 1 4 5 6 1'\nassert solution('7\\n7 0 0 1 4 0 6') == '7 3 2 1 4 5 6'",
        "num_ids_2": 47,
        "num_ids_4": 72
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'NO'\nassert solution() == 'YES'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 2 2 3\n''') == 'YES', 'First example'\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES', 'Second example'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO', 'Third example'\nassert solution('''\n1\n1\n''') == 'NO', 'Fourth example'\nprint('All tests passed!')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'YES\\n1 1 1'\nassert solution('5 2') == 'YES\\n2 1 1 1\\n'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n1 2 2 3\n''') == 'YES'\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 2\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == 'YES', \"First\"\nassert solution(\"5 2\") == 'YES', \"Second\"\nassert solution(\"2 2\") == 'NO', \"Third\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1 2''') == '3'\nassert solution('''11 5 1''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\nassert solution('1 1 1') == '1'\nassert solution('1 1 0') == '2'\nassert solution('0 1 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\nassert solution(\"11 6 7\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''11 5 2\n11010100101\n\n''') == '1'\nassert solution('''11 5 1\n11010100101\n\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '1'\nassert solution(input) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''11 5 2\n11010100101\n''') == '1'\nassert solution('''11 5 1\n11010100101\n''') == '3'\nassert solution('''3\n100000\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 25
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == '1'\nassert solution(example_input_2) == '3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n5\n1 2 3 4''') == 'NO'\nassert solution('''1\n4\n5\n1 2 3 4''') == 'YES'\nassert solution('''2\n5\n1 2 3 4''') == 'YES'\nassert solution('''5\n1 2 3 4''') == 'NO'\nassert solution('''3\n5\n1 2 3 4''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nNO'\nassert solution('''1\n5\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2''') == 'YES\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nYES\\nYES\\nNO'\nassert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''\n4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nYES\\nYES\\nNO'\nassert solution('''\n5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''\n4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4\\n1 2 1\") == \"YES\"\nassert solution(\"3\\n3\\n1 2 1\") == \"NO\"\nassert solution(\"5\\n9\\n1 2 1 2 2 1\") == \"YES\"\nassert solution(\"3\\n5\\n1 1 2\") == \"NO\"\n",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''1\n1\n1\n1\n1\n1\n1''') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nYES'\nassert solution('''5\n1\n2\n3\n4\n5''') == 'YES\\nYES\\nYES\\nYES\\nYES'\nassert solution('''5\n1\n1\n2\n3\n4''') == 'YES\\nYES\\nYES\\nYES\\nNO'\nassert solution('''3\n1\n2\n3''') == 'YES\\nYES\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n1 2 1\") == \"YES\"\nassert solution(\"4\\n3\\n1 2\\n2 1\") == \"YES\"\nassert solution(\"1\\n2\\n1\\n2\") == \"NO\"\nassert solution(\"1\\n2\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\") == \"YES\"\n",
        "num_ids_2": 39,
        "num_ids_4": 74
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'NO'\nassert solution('1') == 'YES'\nassert solution('4') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(t1) == \"99999\"\nassert solution(t2) == \"99999\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\nassert solution('''\n10\n1111111111111\n9 8 7 6 5 4 3 2 1\n''') == '999999'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"99999\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1') == '99999'\nassert solution('5\\n11111\\n9 8 7 6 5 4 3 2 1') == '99999'\n\nimport math\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t) == '99999'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1553'\nassert solution('5') == '99999'\nassert solution('2') == '99999'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1553'\nassert solution('5') == '99999'\nassert solution('2') == '99999'\nassert solution('3') == '33'\nassert solution('1') == '33'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1557'\nassert solution('5') == '99999'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"4\", \"1337\", \"1 2 5 4 6 6 3 1 9\"]) == \"1557\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '2'\nassert solution('1 2 3') == '1 1 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 1 3'\nassert solution() == '102'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '2 1 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\", \"One move\"\nassert solution(\"123 321 456\") == \"102\", \"One move\"\nassert solution(\"5 10 15\") == \"4\", \"One move\"\nassert solution(\"15 18 21\") == \"12\", \"One move\"\nassert solution(\"100 100 101\") == \"7\", \"One move\"\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\n\nassert solution('''\n3 4 5\n2 3 4\n1 2 1\n1 2 1\n''') == '4 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == \"1 1 3\"\nassert solution('123 321 456') == \"102\"\nassert solution('5 10 15') == \"1 1 3\"\nassert solution('15 18 21') == \"1 1 3\"\nassert solution('100 100 101') == \"7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2 3\n123 321 456''') == '1'\nassert solution('''8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '1 1 3'\nassert solution('''2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46''') == '102'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n3 2\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '3 1 5 15 18 21 38 86'\nassert solution('''\n3\n3 2\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '3 1 1 3 19 38 86'\nassert solution('''\n4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3 123 321 456'\nassert solution('''\n5\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3 123 321 456'\nassert solution('''\n6\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3 123 321 456'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 15') == '1 1 3'\nassert solution('1 2 3') == '1 1 3'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '1 2'\nassert solution('1 1 2 3') == '1 2 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"4\"\nassert solution(\"15 18 21\") == \"114 228 456\"\nassert solution(\"100 100 101\") == \"7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 3 7\") == \"2\"\nassert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"2\", \"1 3 3 7\"]) == \"2\"\nassert solution([\"2\", \"100000\"]) == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 3 3 7\n''') == '2'\nassert solution('''\n2\n1 100000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('100000') == '0'\nassert solution('1,100000') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == '1 2 3 0 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 3 1\n1 2 1''') == '1 2 3 0 3'\nassert solution('''5 2\n1 3 1\n1 2 1''') == '1 2 3 0 3'\nassert solution('''10 2\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \n\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4 \n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 2\"\n) == \"1 2 3 0 3\"\n\nassert solution(\n    \"3 2\"\n) == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3'\n\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\", \"First\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\", \"Second\"\n\n\"\"\"\nfrom typing import List\nfrom bisect import bisect",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \n\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1'\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4 \n\nassert solution('''10 4\n4 1 2 3 4\n2 2 3 3 3\n3 3 3 1 2\n3 2 3 1 1\n4 4 4 4 4\n''') == '-1'\n\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 2\n1 3 1\n1 5 1\"\"\") == \"1 2 3 0 3\"\nassert solution(\"\"\"3 2\n1 3 1\n1 2 1\"\"\") == \"-1\"\nassert solution(\"\"\"10 3\n4 7 2\n1 10 3\n8 9 1\"\"\") == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test_input_1) == \"1 2 3 0 3\"\nassert solution(test_input_2) == \"-1\"\nassert solution(test_input_3) == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 55
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"0\"\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '7'\nassert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\\n\") == \"7\"\nassert solution(\"42 42\\n\") == \"0\"\nassert solution(\"48 72\\n\") == \"-1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'\nassert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\nassert solution(\"48 72\", \"120 51840\") == \"7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"120 51840\\n\") == \"7\"\nassert solution(\"42 42\\n\") == \"0\"\nassert solution(\"48 72\\n\") == \"-1\"\nassert solution(\"12 6\\n\") == \"1\"\nassert solution(\"1 2\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"7\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'ababababa'\nassert solution(stdin) == 'catcat'\nassert solution(stdin) == 'katkat'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == 'a'\nassert solution('2\\n') == 'aab'\nassert solution('3\\n') == 'aaa'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n3\nababababa\n''') == 'ababababa'\nassert solution('''3\n3\naaab\n''') == 'aaab'\nassert solution('''2\n2\naba\n''') == 'abab'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4\naba\n\"\"\") == \"ababababa\"\nassert solution(\"\"\"\n3 2\ncat\n\"\"\") == \"catcat\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Input') == 'Input'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"ababababa\"\nassert solution(\"3 2\") == \"catcat\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"abcab\"\nassert solution(\"2 1\") == \"aaa\"\nassert solution(\"3 2\") == \"ababababa\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"a\"\nassert solution(\"3\") == \"ababababa\"\n",
        "num_ids_2": 18,
        "num_ids_4": 31
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"catcat\"\nassert solution(\"5 2\") == \"abababababa\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4 \n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('8') == '2'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"3\\n1\\n2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2 5 1 2 2\n''') == '3'\nassert solution('''4\n8 3 5 2\n''') == '2'\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('1') == '0'\nassert solution('5') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 5\"\n) == \"4\", \"easy\"\nassert solution(\n    \"5 6\"\n) == \"15\", \"easy\"\nassert solution(\n    \"5 7\"\n) == \"-1\", \"easy\"\nassert solution(\n    \"10 100\"\n) == \"233\", \"easy\"\n\nassert solution(\n    \"4 3\"\n) == \"2\", \"hard\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\nasdf\\n') == '4'\nassert solution('5 6\\naaaaa\\n') == '15'\nassert solution('5 7\\naaaaa\\n') == '-1'\nassert solution('10 100\\najihiushda\\n') == '233'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\nprint(solution(sys.stdin.read()))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"4\", \"Simple test\"\nassert solution(\"3 4\") == \"5\", \"Simple test\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"4\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"3 4\") == \"14\"\nassert solution(\"8 8\") == \"33\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '4', \"Wrong answer\"\nassert solution('10 100') == '233', \"Wrong answer\"\nassert solution('5 7') == '-1', \"Wrong answer\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6\\najihiushda') == '233'\nassert solution('10 100\\najihiushda') == '-1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n\n''') == 'YES', \"First\"\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n\n''') == 'YES', \"Second\"\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n\n''') == 'NO', \"Third\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES', \"First example\"\nassert solution(input()) == 'NO', \"Second example\"\nassert solution(input()) == 'YES', \"Third example\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 4 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'NO'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 1') == 'YES'\nassert solution('5 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\nassert solution('6 6 6') == 'NO'\nassert solution('12 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0:0') == '0:0'\nassert solution('1:0') == '1:0'\nassert solution('0:00') == '0:0'\nassert solution('10:10') == '10:10'\nassert solution('11:11') == '11:11'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1:2\") == \"00:02\"\nassert solution(\"5:2\") == \"00:20\"\nassert solution(\"0:2\") == \"00:02\"\nassert solution(\"11:12\") == \"11:12\"\nassert solution(\"00:00\") == \"00:00\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"10:00\\n11:00\\n\") == \"10:30\\n\"\nassert solution(\n    \"11:10\\n11:12\\n\") == \"11:11\\n\"\nassert solution(\n    \"01:02\\n03:02\\n\") == \"02:02\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"01:02\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1:2\\n2:2\\n\") == \"1:1\\n\"\nassert solution(\"1:2\\n2:2\\n\") == \"1:1\\n\"\nassert solution(\"1:2\\n2:2\\n\") == \"1:1\\n\"\nassert solution(\"1:2\\n2:2\\n\") == \"1:1\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\n\nassert solution('''\n11:10\n11:12\n''') == '11:11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\nprint(\"YOUR CODE IS CORRECT!\")\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == None\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('12') == '2'\nassert solution('18') == '2'\nassert solution('24') == '2'\nassert solution('56') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"42\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\nassert solution(input) == \"2\"\nassert solution(input) == \"3\"\nassert solution(input) == \"4\"\nassert solution(input) == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '2'\nassert solution('''\n3\n2 6\n1 3\n0 4\n''') == '1'\nassert solution('''\n2\n4 5\n1 2\n0 4\n''') == '3'\nassert solution('''\n4\n3 2\n1 2\n0 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 6\\n2 6\\n0 4\\n3 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '7'\n",
        "num_ids_2": 60,
        "num_ids_4": 84
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 3\n2 6\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''\n3 10\n4 4\n''') == '0'\n\nassert solution('''\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_1) == \"1\"\nassert solution(example_2) == \"2\"\nassert solution(example_3) == \"7\"\nassert solution(example_4) == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 6') == '1'\nassert solution('0 4') == '0'\nassert solution('3 3') == '1'\nassert solution('4 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 3\\n2 6\\n0 4\\n3 3') == '1'\nassert solution('3\\n4 5\\n1 2\\n9 20') == '2'\n\nassert solution('4\\n2 6\\n1 3\\n0 4\\n1 20') == '7'\n",
        "num_ids_2": 48,
        "num_ids_4": 74
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == str(1)\nassert solution(\n'''\n4\n1 3\n2 6\n0 4\n3 3\n''') == str(1)\nassert solution(\n'''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == str(2)\nassert solution(\n'''\n3\n4 5\n1 2\n9 20\n''') == str(0)\nassert solution(\n'''\n2\n3 10\n1 5\n''') == str(7)\n",
        "num_ids_2": 13,
        "num_ids_4": 21
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 1 1 2 5\\n') == 'YES'\nassert solution('2\\n4 5 3\\n') == 'NO'\nassert solution('3\\n10 10\\n') == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_1) == \"YES\"\nassert solution(example_input_2) == \"YES\"\nassert solution(example_input_3) == \"NO\"\nassert solution(input) == \"YES\"\nassert solution(input_2) == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == \"YES\"\nassert solution(example_input_2) == \"NO\"\nassert solution(input) == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2 1 1 2 5\\n') == 'YES\\n'\nassert solution('3\\n4 5 3\\n') == 'NO\\n'\nassert solution('4\\n10 10\\n') == 'YES\\n'",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'\nassert solution('2\\n10 10') == 'YES'\nassert solution('2\\n1 1 1') == 'NO'",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\naaaaa\n\n''') == '15'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5\naaaaa\n''') == '4'\n\nassert solution('''\n5 6\naaaaa\n''') == '15'\n\nassert solution('''\n5 7\naaaaa\n''') == '-1'\n\nassert solution('''\n10 100\najihiushda\n''') == '233'\n\nassert solution('''\n20 20\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\nassert solution('5 7') == '-1'\nassert solution('10 9') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'\nassert solution('0') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"a\") == \"Impossible\"\nassert solution(\"asd\") == \"Impossible\"\nassert solution(\"aaaaa\") == \"Impossible\"\nassert solution(\"asdf\") == \"Impossible\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 100') == '233'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"233\"\nassert solution(input()) == \"-1\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nprint(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1\\n') == '4\\n'\nassert solution('3 2 2\\n') == '7\\n'\nassert solution('1 100 1\\n') == '3\\n'\nassert solution('30 20 10\\n') == '39\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 2 2\n\"\"\") == \"7\"\nassert solution(\"\"\"\n30 20 10\n\"\"\") == \"39\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'\nassert solution('3 0 0') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1 1\n''') == '4'\n\nassert solution('''3 2 2\n''') == '7'\n\nassert solution('''30 20 10\n''') == '39'\n\nassert solution('''1 100 1\n''') == '3'\n\nassert solution('''30 20 30\n''') == '60'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 1 1') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n''') == 'YES'\nassert solution('''\n2 3\n1 1\n1 2\n2 1\n1 1\n''') == 'NO'\nassert solution('''\n2 4\n1 1\n2 1\n1 2\n2 1\n''') == 'NO'\nassert solution('''\n6 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n5 6\\n5 7') == 'YES\\nYES\\nYES\\nNO'\nassert solution('2 2\\n2 2\\n2 2') == 'YES\\nYES\\nYES\\nNO'\nassert solution('3 3\\n1 2\\n5 6\\n7 8') == 'YES\\nYES\\nYES\\nNO'\nassert solution('3 3\\n1 1\\n5 6\\n7 8') == 'YES\\nYES\\nYES\\nNO'\nassert solution('3 3\\n4 4\\n5 6\\n7 8') == 'YES\\nYES\\nYES\\nNO'\n",
        "num_ids_2": 56,
        "num_ids_4": 120
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(t) == \"YES\"\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1''') == \"YES\"\nassert solution('''10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"YES\"\nassert solution('''1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"NO\"\nassert solution('''4 3\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"NO\"\nassert solution('''3 3\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\", \"base\"\nassert solution(\"2\") == \"NO\", \"base\"\nassert solution(\"3\") == \"YES\", \"base\"\nassert solution(\"4\") == \"NO\", \"base\"\nassert solution(\"5\") == \"YES\", \"base\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'NO'\n\n\n\"\"\"",
        "num_ids_2": 165,
        "num_ids_4": 165
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\nassert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\nassert solution('''5 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'\nassert solution('''7 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'NO'",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"YES\", \"3 4\"\nassert solution(\"3 4\") == \"NO\", \"3 4\"\nassert solution(\"3 4\") == \"YES\", \"3 4\"\nassert solution(\"3 4\") == \"NO\", \"3 4\"\nassert solution(\"3 4\") == \"YES\", \"3 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"10 10\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n\n''') == '0'\nassert solution('''5\n\n''') == '1'\nassert solution('''6\n\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n''') == '0'\nassert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''8\n''') == '1'\nassert solution('''12\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n()))()\n\n''') == '5'\n\nassert solution('''\n3\n(()\n\n''') == '4'\n\nassert solution('''\n2\n(((\n\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n(()))()') == '5'\nassert solution('3\\n(()') == '4'\nassert solution('2\\n(())') == '0'\nassert solution('7\\n((((()))))') == '60'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n(())''') == '4'\nassert solution('''1\n()())\n\nassert solution('''6\n((()))\n\nassert solution('''4\n(((()))())\n\nassert solution('''2\n(((()))())",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(5) == 5\nassert solution(3) == 4\nassert solution(2) == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n()))()\n''') == '5'\nassert solution('''3\n(()\n''') == '4'\nassert solution('''2\n(()\n''') == '0'\nassert solution('''2\n()\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n()))()\n\n''') == '5'\nassert solution('''\n3\n(()\n\n''') == '4'\nassert solution('''\n2\n(((\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n\n''') == '0'\nassert solution('''\n()\n\n''') == '4'\nassert solution('''\n((((\n\n''') == '5'\nassert solution('''\n\n((()))()\n\n''') == '5'\nassert solution('''\n\n((()))()\n\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == '4'\nassert solution(\"1\") == '2'\nassert solution(\"3\") == '0'\nassert solution(\"5\") == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '1'\nassert solution(input()) == -1",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1''') == '4'\nassert solution('''505\n1''') == '4'\nassert solution('''245\n1''') == '-1'\nassert solution('''1255\n1''') == '-1'\nassert solution('''1255\n5''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 29
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5071\n''') == '4', '''5071'''\nassert solution('''\n705\n''') == '1', '''705'''\nassert solution('''\n1241367\n''') == '-1', '''1241367'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == -1",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\nabacbecfd\n''') == \"2\"\nassert solution('''7\nabcdedc\n''') == \"3\"\nassert solution('''5\nabcde\n''') == \"1\"\nassert solution('''4\naaabbcbb\n''') == \"2\"\nassert solution('''3\naaabbcbb\n''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '1 1 1 1 1 1 1'\nassert solution('8') == '1 2 1 2 1 2 1 2'\nassert solution('9') == '1 1 1 1 1 1 1 1'\nassert solution('10') == '1 1 1 1 1 1 1 1'\nassert solution('11') == '1 1 1 1 1 1 1'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nabac') == '2'\nassert solution('6\\nabcbcd') == '2'\nassert solution('3\\nabcd') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"9\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('9') == '2'\nassert solution('7') == '1'\nassert solution('5') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\naaa\n''') == '1'\nassert solution('''6\naaaa\n''') == '2'\nassert solution('''7\naaaa\n''') == '2'\nassert solution('''8\nab\n''') == '1'\nassert solution('''4\na\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ababab\") == \"2\"\nassert solution(\"abacb\") == \"2\"\nassert solution(\"ababc\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''\n5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''\n5\na\nabacaba\nba\naba\nabab\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nabcdefg\") == \"NO\"\n\nassert solution(\"5\\nabcdefg\") == \"YES\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n1\na\n\n2\na\na\n\n3\na\na\na\n\n4\na\na\na\na\n\n5\na\na\na\na\na\n\n6\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\na\\nb\\nc\\nd\\ne\") == \"NO\"\nassert solution(\"5\\na\\nb\\nc\\nd\\ne\") == \"YES\"\nassert solution(\"2\\nab\\ncd\") == \"NO\"\n",
        "num_ids_2": 40,
        "num_ids_4": 56
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n5\na\naba\nabacaba\nba\naba\n\"\"\") == \"NO\"\n\nassert solution(\n    \"\"\"\n5\na\nabacaba\nba\naba\nabab\n\"\"\") == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 5\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"8 4\") == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 4\\n4 2 3 1 5 1 6 4\") == \"5\"\nassert solution(\"5 2\\n3 1 2 1 3\") == \"0\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'\nassert solution('5 2') == '0'\nassert solution('10 1') == '10'\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 100') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"5\"\nassert solution(input_) == \"0\"\nassert solution(input_) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 2, 3, 1, 5, 1, 6, 4]) == 5\nassert solution([5, 2, 3, 1, 5, 1, 6, 4]) == 0\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n''') == '12'\nassert solution('''3 9\n''') == '14'\nassert solution('''3 6\n''') == '12'\nassert solution('''506 2708\n''') == '3218'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,4]) == '12'\nassert solution([3,9]) == '14'\nassert solution([3,6]) == '12'\nassert solution([506,2708]) == '3218'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 9') == '14'\nassert solution('4 4') == '12'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == str(min(solution(input_) for input_ in stdin.split('\\n')))\n\nimport sys\nfrom collections import deque\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6') == '12'\nassert solution('9 3') == '14'\nassert solution('4 4') == '12'\nassert solution('506 2708') == '3218'\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 9]) == \"14\"\nassert solution([4, 4]) == \"12\"\nassert solution([5, 6]) == \"12\"\nassert solution([6, 6]) == \"12\"\nassert solution([9, 9]) == \"3218\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n3 4\n1 1''') == '10'\nassert solution('''1 2\n2 3\n1 1''') == '9'\nassert solution('''1 6\n6 7\n5 8\n4 5\n3 2\n1 1''') == '16'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 3\n5 6\n''') == '12'\n\nassert solution('''\n10 4\n3 6\n''') == '14'\n\nassert solution('''\n50 6\n3 9\n''') == '14'\n\nassert solution('''\n506 2708\n''') == '3218'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\", \"Easy\"\nassert solution(\"abacbecfd\") == \"YES\", \"Easy\"\nassert solution(\"aaabbcbb\") == \"YES\", \"Easy\"\nassert solution(\"abcdedc\") == \"NO\", \"Easy\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"YES\", \"Hard\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"8\\n\"\n    \"aabccb\"\n) == \"YES\"\n\nassert solution(\n    \"7\\n\"\n    \"abcd\"\n) == \"NO\"\n\nassert solution(\n    \"3\\n\"\n    \"aaa\"\n) == \"YES\"\n\nassert solution(\n    \"2\\n\"\n    \"aabb\"\n) == \"YES\"\n\nassert solution(\n    \"1\\n\"\n    \"a\"\n) == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"9\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abac\") == \"YES\"\nassert solution(\"abacbe\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'NO'\nassert solution('5') == 'YES'\nassert solution('7') == 'NO'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\nabcde\") == \"NO\"\nassert solution(\"8\\naaabbcbb\") == \"YES\"\nassert solution(\"9\\nabacbecfd\") == \"YES\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abac\") == \"YES\"\nassert solution(\"abcd\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '-1'\nassert solution('2 2') == '2'\nassert solution('10 2') == '-1'\nassert solution('10 1') == '10'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('3 5') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '25'\n\"\"\"\n\na, b = map(int, input().split())\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5, 10]) == \"26\"\nassert solution([2, 3]) == \"2\"\nassert solution([6, 6]) == \"26\"\nassert solution([4, 3]) == \"2\"\nassert solution([8, 7]) == \"22\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '25'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\n'''\n\nA, B = map(int, input().split())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"4 8\") == \"2\"\nassert solution(\"3 7\") == \"3\"\nassert solution(\"5 9\") == \"5\"\nassert solution(\"7 1\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''4 2''') == '-1'\nassert solution('''6 1''') == '-1'\nassert solution('''5 5''') == '25'\nassert solution('''1 5''') == '25'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"5 3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''26 6\n''') == 'YES'\nassert solution('''8 3\n''') == 'NO'\nassert solution('''1 1\n''') == 'YES'\nassert solution('''9 4\n''') == 'NO'\nassert solution('''30 30\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 4\") == \"YES\\n1 2 4 5 6 8\"\nassert solution(\"1 1\") == \"YES\\n1\"\nassert solution(\"8 3\") == \"NO\\n\"\n",
        "num_ids_2": 33,
        "num_ids_4": 46
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 3\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"2 3\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\n\nassert solution(\"10 -2\\n8 -1\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 20') == \"5\"\nassert solution('4 4') == \"3\"\nassert solution('3 2') == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 6\n4 6\n10 -2\n8 -1\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"10 -2\") == \"3\"\nassert solution(\"8 -1\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == \"YES\"\nassert solution('''1\n2\n1\n3\n2\n2\n1\n2\n1\n3\n2\n2\n1\n3\n3\n1\n1\n1\n2\n3\n2\n3\n2\n2\n2\n3\n2\n1\n3\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'NO'\nassert solution('1') == 'YES'\nassert solution('4') == 'YES'\n\n\"\"\"\n\nimport numpy as np\n\nn = int(input())\n\nmatrix = []\n\nfor i in range(n):\n    line = list(map(int, input().split()))\n    matrix.append(line)\n\nmatrix = np.array(matrix)\n\nis_palin = True\n\nfor i in range(n):\n    for j in range(n):\n        if matrix[i, j]!= matrix[n - j - 1, i]:\n            is_palin = False",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 3 1\n    8 4 3 8\n    8 4 3 8\n    \"\"\"\n    ) == \"YES\"\n\nassert solution(\n    \"\"\"\n    2\n    1 1 1\n    8 1 1\n    8 1 1\n    \"\"\"\n    ) == \"YES\"\n\nassert solution(\n    \"\"\"\n    4\n    1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n    \"\"\"\n    ) == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\"\nassert solution(\"1\\n10\") == \"YES\"\nassert solution(\"2\\n1 1 1 1 1 3 3 3 3\") == \"NO\"",
        "num_ids_2": 55,
        "num_ids_4": 96
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution(\n'''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution(\n'''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\nassert solution(\n'''\n1\n10\n''') == 'YES'\nassert solution(\n'''\n4\n2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'NO'\n'''\n\n\nimport collections\nimport itertools",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == \"YES\"\nassert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == \"YES\"\nassert solution('''\n1 2 1 1 1 1 3 3 3 3\n''') == \"NO\"\nassert solution('''\n1 1 1 1 1 1 3 3 3 3\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\nassert solution('''\n5\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('10') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"6 6\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"NO\"\n",
        "num_ids_2": 54,
        "num_ids_4": 85
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"6 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n4 6\\n10 -2') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'NO'\n",
        "num_ids_2": 45,
        "num_ids_4": 74
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution(open(1).read()) == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution(open(2).read()) == 'YES\\n0 0 0 0 0 0 0 0 0 0 1\\n'\n",
        "num_ids_2": 53,
        "num_ids_4": 82
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 2') == \"YES\\n0 1 0 2 2 0 3\"\nassert solution('10 1 11') == \"YES\\n0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0\"\nassert solution('10 1 5') == \"YES\\n0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 51,
        "num_ids_4": 81
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'\nassert solution('''7 3 2\n1 2 1\n''') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'YES\\n0 1 0 2 2 0 3'\nassert solution(sys.stdin.read()) == 'YES\\n0 0 0 0 0 0 0 0 1'\nassert solution(sys.stdin.read()) == 'YES\\n0 0 0 0 1 1 0 0 0 0'",
        "num_ids_2": 50,
        "num_ids_4": 77
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"",
        "num_ids_2": 45,
        "num_ids_4": 69
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('10 1 1') == 'YES'\nassert solution('11 1 1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['bbaba', 'bb', 'aaaa']) == 3\nassert solution(['baaba', 'ab', 'aaaa']) == 2\nassert solution(['abcde', 'abcde', 'abcde']) == 0\nassert solution(['a', 'a', 'b', 'a', 'b', 'b']) == 3\n",
        "num_ids_2": 34,
        "num_ids_4": 78
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"baaba\") == 2",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ab') == 2\nassert solution('ba') == 2\nassert solution('bb') == 2\nassert solution('bbba') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('baaba') == 2\nassert solution('ab') == 0\nassert solution('abcde') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"test\"\nassert solution(\"tst\") == \"tst\"\nassert solution(\"tt\") == \"tt\"\nassert solution(\"et\") == \"et\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nbabababa\nbabababa\"\"\") == \"1\"\nassert solution(\"\"\"\nbbaba\nbb\"\"\") == \"2\"\nassert solution(\"\"\"\nbbba\nbb\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('test') == 3\nassert solution('test') == 3\nassert solution('aaba') == 2\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 16,
        "num_ids_4": 1517
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abcde') == 'cde'\nassert solution('baaba') == 'aaba'\nassert solution('asdfasdf') == 'asdf'\nassert solution('test') == 'es'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('test') == 'test'\nassert solution('test') == 'test'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('6.904589') == '7 8'",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '3 2'\nassert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(\"Congratulations! All test cases passed\")\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n\nstdin = input()\nprint(solution(stdin))\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '10 3'\nassert solution('0.00001') == '1 3'\nassert solution('0.4999') == '9 3'\nassert solution('9.9999') == '10 3'\nassert solution('12.3') == '10 3'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_stdin) == stdout_expected_1\nassert solution(input_stdin) == stdout_expected_2\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 5 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 3 3\n''') == 'YES'\nassert solution('''6 2 3\n''') == 'NO'\nassert solution('''10 4 3\n''') == 'YES'\nassert solution('''8 5 3\n''') == 'YES'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n''') == 'YES'\nassert solution('''\n8 5 3\n''') == 'YES'\nassert solution('''\n6 3 3\n''') == 'YES'\nassert solution('''\n10 4 3\n''') == 'NO'\nassert solution('''\n6 2 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 5 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"",
        "num_ids_2": 44,
        "num_ids_4": 144
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 6 3') == 'NO'\nassert solution('10 8 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 3\") == \"YES\\n3 1\\n4 1\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 72
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\"\nassert solution(\"6 2 3\\n\") == \"NO\"\nassert solution(\"10 4 3\\n\") == \"YES\"\nassert solution(\"8 5 3\\n\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\nprint('Congratulations, you passed all test cases.')",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\nassert solution('''5 3 6''') == '100110'\nassert solution('''5 3 6''') == '011001'\n",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"110100\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2 1\n''') == '1100'\n\nassert solution('''\n3 3 3\n''') == '101100'\n\nassert solution('''\n5 3 6\n''') == '01010100'\n\nprint(\"All tests passed.\")",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 1\n''') == '1100'\nassert solution('''\n3 3 3\n''') == '101100'\nassert solution('''\n5 3 6\n''') == '01010100'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1100\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nab\nbc\n''') == \"NO\"\nassert solution('''\n3\naa\nbc\n''') == \"NO\"\nassert solution('''\n1\ncb\nac\n''') == \"YES\"\nassert solution('''\n1\naa\nbc\n''') == \"YES\"\nassert solution('''\n2\nab\nbc\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc''') == \"YES\"\nassert solution('''3\naa\nbc\n''') == \"YES\"\nassert solution('''1\ncb''') == \"YES\"\nassert solution('''0\n''') == \"NO\"\nassert solution('''5\naa\nbc\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == \"YES\", \"Example\"\nassert solution('3') == \"YES\", \"Example\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\nab\nbc\n''') == \"YES\"\nassert solution('''\n3\naa\nbc\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'acbbac'\nassert solution('3') == 'cacbacbab'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nab\\nbc\") == \"YES\", \"WA\"\nassert solution(\"2\\nab\\nbc\") == \"NO\", \"WA\"\nassert solution(\"3\\naa\\nbc\") == \"YES\", \"WA\"\nassert solution(\"4\\nab\\nbc\") == \"YES\", \"WA\"\nassert solution(\"5\\nab\\nbc\") == \"YES\", \"WA\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\na\n''') == \"NO\"\nassert solution('''\n1\na\n''') == \"YES\"\nassert solution('''\n3\naa\nbc\n''') == \"YES\"\nassert solution('''\n3\naa\nac\n''') == \"NO\"\nassert solution('''\n2\nab\nbc\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1\n''') == '1 2 3 4 5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n-2 1') == '1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('6\\n1 1 1 1 1 1') == '1 2 3 4 5 6'\nassert solution('10\\n-1 2 2 2 2 2 2 2 2 2') == '-1'\nassert solution('12\\n-1 2 2 2 2 2 2 2 2') == '-1'\n",
        "num_ids_2": 36,
        "num_ids_4": 83
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'\nassert solution('3') == '1 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3 1 2 3 4'\nprint(solution(open('input.txt')))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n-2 1\n\n''') == '3 1 2'\nassert solution('''4\n1 1 1 1\n\n''') == '1 2 3 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n-2 1\n\nOutput\n3 1 2 \n''') == '3 1 2'\nassert solution('''\n5\n1 1 1 1\n\nOutput\n1 2 3 4 5 \n''') == '1 2 3 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('3\\n-2 1') == '3 1 2'\nassert solution('6\\n-1 2 1 -2 3') == '-1 2 3 -2 1'\n",
        "num_ids_2": 37,
        "num_ids_4": 62
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n-2 1\n''') == '3 1 2'\nassert solution('''5\n1 1 1 1\n''') == '1 2 3 4 5'\nassert solution('''4\n-1 2 2\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 2 3\\n\"\n) == \"1\"\nassert solution(\n    \"5\\n\"\n    \"2 2 2 3 3\\n\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution() == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 2 2 3\") == \"1\"\nassert solution(\"5 2 2 2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n\n''') == '1'\nassert solution('''5\n2 2 2 3 3\n\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\",\n    \"1 2 3\",\n) == \"1\"\n\nassert solution(\n    \"5\",\n    \"2 2 2 3 3\",\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == '5'\nassert solution(\"10\\n\") == '5'\n\n(2,3) can be reached in four moves. We cannot reach a square that contains 10 in less than four moves.\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"5\"\nassert solution('10') == \"5\"\nassert solution('01') == \"0\"\nassert solution('12345') == \"30\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('20') == '5'\nassert solution('30') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\n\") == \"5\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"0\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"4\\n\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('12') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\n\") == \"5\"\nassert solution(\"10\\n\") == \"5\"\nassert solution(\"10\\n\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"1\") == \"3\"\nassert solution(\"100\") == \"5\"\nassert solution(\"15\") == \"10\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''319\n10 53 256\n182 103 34\n''') == '119 226'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''15\n5 5 5\n5 5 5\n''') == '0 15'\nassert solution('''319\n10 53 256\n182 103 34\n''') == '119 226'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n\n''') == '119 226'\nassert solution('''\n686\n479 178 29\n11 145 530\n\n''') == '22 334'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"319\") == \"119 226\"\nassert solution(\"686\") == \"22 334\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''319\n10 53 256\n182 103 34\n''') == '119 226'\nassert solution('''686\n479 178 29\n11 145 530\n''') == '22 334'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '0 1'\nassert solution('3') == '0 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '0 1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"0 1\"\nassert solution('15') == \"0 15\"\nassert solution('319') == \"119 226\"\nassert solution('686') == \"22 334\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 5 5\n4 4 4\n4 4 4\n''') == \"2\"\nassert solution('''\n6\n4 1 2 2 1 5 3\n2 3 4 4 4 4 4\n5 5 5 5 5 5\n6 6 6 6 6 6\n''') == \"4\"\nassert solution('''\n7\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n3 4 4 4 4 4 4\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n4 4 4 4 4 4 4\n5 5 5 5 5 5 5\n''') == \"4\"\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n2 3 4 4 4 4 4 4\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4\n''') == \"7\"\nassert solution('''\n5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n4 4\\n1 1\\n2 2\\n3 3\"\nprint(solution())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n5\n-5 -4 -3 -2 -1 0 1 2 3 4\n''') == '2 2'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n''') == '3\n\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4 1 2 2 1 5 3\n''') == \"3\"\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == \"4 4 4 4 4 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2 4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '4 4'\nassert solution('7') == '3 4'\nassert solution('11') == '4 4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 1 2\n''') == 'YES'\nassert solution('''\n5\n3 3 2 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5''') == 'YES'\nassert solution('''5\n5 3 2 1 4''') == 'NO'\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3 1 2\") == \"YES\"",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'\n\n\nimport unittest\n\nclass Test(unittest.TestCase):\n\n    def test(self):\n        pass\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 1\") == \"YES\"\nassert solution(\"3\\n2 1 3\") == \"NO\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 1 2') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '3'\nassert solution('6') == '5'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\nassert solution() == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '-1'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n6\nabcdef\nabdfec\n\n\"\"\"\n) == \"-1\"\nassert solution(\n    \"\"\"\n4\nabcd\naccd\n\n\"\"\"\n) == \"4 5 4 5\"\nassert solution(\n    \"\"\"\n3\nabcd\naccd\n\n\"\"\"\n) == \"3 5 4 5\"\nassert solution(\n    \"\"\"\n10\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\n\n\"\"\"\n) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution(input_string = '6') == \"3 5 4 5\"\nassert solution(input_string = '4') == \"0\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == \"4\"\nassert solution('''\n4\nabcd\naccd\n''') == \"-1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nabcd\\naccd\") == -1\nassert solution(\"6\\nabcdef\\nabdfec\") == \"4\"\nassert solution(\"4\\nabcd\\naccd\\n\") == \"3 5 4 5\"",
        "num_ids_2": 36,
        "num_ids_4": 59
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nabcd\\n\") == \"-\"\nassert solution(\"6\\nabcdef\\n\") == \"4\\n3 5 4 5\"\nassert solution(\"6\\nabcd\\n\") == \"3\\n4 5 4 5\"\nassert solution(\"4\\nabcd\\n\") == \"3\\n4 5 4 5\"\nassert solution(\"6\\nabcd\\n\") == \"0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 81
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\nabcd\\n\") == \"4\\n3 5 4 5\"\nassert solution(\"5\\nabcd\\n\") == \"-1\"\nassert solution(\"3\\nab\\n\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 53
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"PPSS\"\nassert solution(input()) == \"PS\"",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == 'P'\nassert solution(\"2\\n\") == 'P'\nassert solution(\"3\\n\") == 'P'\nassert solution(\"4\\n\") == 'PS'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\na\naa\na\na\n''') == 'PS'\nassert solution('''\n2\na\naa\n''') == 'SPS'\nassert solution('''\n3\na\naa\naaa\n''') == 'PS'\nassert solution('''\n4\na\naa\naaa\naaa\n''') == 'SPS'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nba\\n') == 'SPPSPSPS', f\"actual: {solution('5\\nba\\n')}\"\nassert solution('3\\na\\n') == 'PS', f\"actual: {solution('3\\na\\n')}\"\nassert solution('2\\na\\n') == 'PS', f\"actual: {solution('2\\na\\n')}\"\n",
        "num_ids_2": 63,
        "num_ids_4": 92
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\nassert solution('''\n3\na\nc\n''') == 'PS'\nassert solution('''\n2\na\nc\n''') == 'PS'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\"\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"PS\"\nassert solution(input()) == \"SPSP\"\nassert solution(input()) == \"SSPP\"\nassert solution(input()) == \"PSPS\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'SPPSPSPS', \"Wrong result\"\nassert solution('3') == 'PS', \"Wrong result\"\nassert solution('2') == 'PS', \"Wrong result\"",
        "num_ids_2": 33,
        "num_ids_4": 48
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'SPPSPSPS', 'Simple test 1'\nassert solution('2') == 'PS', 'Simple test 2'\nassert solution('3') == 'PS', 'Simple test 3'\nassert solution('4') == 'PS', 'Simple test 4'\nassert solution('5') == 'SPPSPSPS', 'Another simple test'\n\nprint(f'{solution(input())}')",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 9 8 5\") == \"1\"\nassert solution(\"5 4 3 9 8 10\") == \"2\"\nassert solution(\"8 8 8 8 8 8 8 8 8 8\") == \"1\"\nassert solution(\"5 3 8 8 9 5\") == \"2\"\nassert solution(\"5 3 9 10 9 5\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '1'\nassert solution('''\n10\n20\n30\n40\n50\n60\n70\n80\n90\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('5 5 5 5 5') == '5'\nassert solution('1') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"1 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 6 8 10''') == '1'\nassert solution('''4 5 6 8 10''') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"5 5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5 5\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"1 1 1 1 1\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 6 8 10') == \"1\"\nassert solution('0 0 0 0') == \"0\"\nassert solution('10 12') == \"3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"2 4 6 8 10\", \"1 2 3 4 5\"]) == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''7\n1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1 1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == '2'\nassert solution(\"5\") == '0'\nassert solution(\"4\") == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 1 0 1 1 0 1 0 1\n''') == '2'\n\nassert solution('''\n3\n1 1 0 1\n''') == '0'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_1) == '2'\nassert solution(example_input_2) == '0'\nassert solution(input) == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\n\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\\n\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 61
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 2 3 4 5\\n\"\n) == \"1\\n\"\n\nassert solution(\n    \"6 90 12 18 30 18\\n\"\n) == \"4\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3\\n') == '1', \"First\"\nassert solution('6\\n90 12 18 30 18') == '4', \"Second\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5\\n') == '1'\nassert solution('6 90 12 18 30 18\\n') == '4'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n\n''') == '1', 'First'\nassert solution('''\n6\n6 90 12 18 30 18\n\n''') == '4', 'Second'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 2 3 4 5\n''') == '1'\nassert solution('''\n6\n1 2 3 4 5\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1,2,3,4,5'\nassert solution('5') == '1,2,3,4,5'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"1\"\nassert solution('1') == \"1\"\nassert solution('100') == \"1\"\nassert solution('100') == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n7\n2 3 2 3 2 3 2\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n1\n1\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n1\n2\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n3\n4\n1 1\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3\n1 2 2\n\"\"\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2 3''') == '2'\nassert solution('''100\n5 4 2 3 1''') == '3'\nassert solution('''2\n1 2 3''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution('1') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution(\n'''\n5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution(\n'''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\n\nassert solution(\"10 10\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\nprint(\"You're all set!\")\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n5 3\n1 0 0 0 1\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n10 3\n0 0 1 1 0 1 0 0 0 1\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''\n100 3\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n0 0 1 1 0 1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solutions.tests[0][0]) == \"3\"\nassert solution(solutions.tests[1][0]) == \"2\"\nassert solution(solutions.tests[2][0]) == \"1\"\nassert solution(solutions.tests[3][0]) == \"0\"\nassert solution(solutions.tests[4][0]) == \"-1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 10') == '3'\nassert solution('10 3') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"7\") == \"5\"\nassert solution(\"9\") == \"2\"\nassert solution(\"11\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3\", \"Test #1 failed\"\nassert solution(\"3\") == \"6\", \"Test #2 failed\"\nassert solution(\"4\") == \"10\", \"Test #3 failed\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('6') == '6'\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3'\nassert solution('5') == '5'\nassert solution('10') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n''') == '3'\nassert solution('''10\n''') == '3'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\"\"\"\\\n3\n\"\"\")\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"0\\n\") == \"0\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '0'\nassert solution('0\\n') == '0'\nassert solution('100\\n') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1\n2\n3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"5\n1\n2\n3\n4\n5\n\"\"\") == \"6\"\n\nassert solution(\"\"\"6\n1\n2\n3\n4\n5\n6\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\nassert solution('''((()\n\n''') == '1'\nassert solution(''')(\n\n''') == '0'\nassert solution('''(\n\n''') == '0'\nassert solution('''))\n\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('(((())') == '3'\nassert solution('))') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(in1) == '3'\nassert solution(in2) == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('(((())') == '3'\nassert solution('()())') == '0'\nassert solution('(())') == '0'\nassert solution('()()()') == '3'\nassert solution(')((((((((((((()()()()()((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"3\"\n\nassert solution(solution.__doc__) == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('(((((') == '((1)+(1)+((1+1)+1)+(1+1)+1)+(1+1)+1)+(1+1)+1)+(1+1)+1)+(1+1)+1)'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''(((())\n\n''') == 3\n\nassert solution('''((()\n\n''') == 0\n\nassert solution('''((((((\n\n''') == 0\n\nassert solution('''(((\n\n''') == 0\n\nassert solution('''))(\n\n''') == 1",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(((()))') == '3'\nassert solution('(((((())' ) == '0'\nassert solution('((((()))') == '0'\nassert solution('(((((())' ) == '0'\nassert solution('((((()))') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"bbaba\", \"bb\") == 3, \"Wrong!\"\n\nassert solution(\"baaba\", \"ab\") == 2, \"Wrong!\"\n\nassert solution(\"abcde\", \"abcde\") == 0, \"Wrong!\"\n\nassert solution(\"asdfasdf\", \"fasd\") == 3, \"Wrong!\"",
        "num_ids_2": 21,
        "num_ids_4": 60
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('baaba') == 3\nassert solution('bbaba') == 3\nassert solution('bbab') == 1\nassert solution('abbab') == 1\nassert solution('bba') == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaaaaa') == 4\nassert solution('aaaaaaaa') == 5\nassert solution('aaaaaaaaa') == 6\nassert solution('aaaaaaaaaaa') == 7\nassert solution('aaaaaaaaaaaa') == 8\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"bbaba\"\n) == 3\n\nassert solution(\n    \"bb\"\n) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('test') == 'et'\nassert solution('tst') =='st'\nassert solution('tt') == 't'\nassert solution('et') == 'e'\nassert solution('asdfasdf') == 'fasdf'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"baaba\") == 2\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    abcde\n    abcde\n    \"\"\") == \"0\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('asdfasdf') == 0\nassert solution('abcde') == 2\nassert solution('fasd') == 3",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abbac\") == \"b\"\nassert solution(\"ababac\") == \"b\"\nassert solution(\"abcde\") == \"c\"\nassert solution(\"baabac\") == \"a\"\nassert solution(\"bab\") == \"b\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 4 3 4') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 2 1') == '3'\nassert solution('2 3 3 1') == '4'\n\n\"\"\"\n\nfrom functools import reduce",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 3 2 1') == '3'\nassert solution('2 3 1 2') == '2'\nassert solution('3 4 2 1') == '4'\nassert solution('4 5 2 1') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"5 8 3 2\") == \"18\"\nassert solution(\"1 3 2 2\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1 2 1 1\n''') == '2'\nassert solution('''\n    1 2 3 4\n''') == '6'\nassert solution('''\n    5 5 5 5\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 1 1''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('2 3 1 2') == '3'\nassert solution('2 4 1 1') == '2'\nassert solution('3 4 1 1') == '4'\nassert solution('5 5 1 1') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 2 1') == '4'\nassert solution('2 2 2 2') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 1 1\n''') == '2'\nassert solution('''\n2 2 1 1\n''') == '2'\nassert solution('''\n1 1 1 1\n''') == '1'\nassert solution('''\n1 2 1 2\n''') == '1'\nassert solution('''\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == \"2\"\nassert solution('6\\n1 2 3 4 5 6') == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n9 1 4 4 6 7\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('7') == '1'\nassert solution('8') == '2'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\nassert solution('4\\n9 1 4 4 6 7\\n') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '1'\nassert solution('10') == '1'\nassert solution('20') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('9 1 4 4 6 7') == '2'\nassert solution('15 3 4 5 5 8 7 7 10 1 7 8') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n9 1 4 4 6 7\\n') == '2'\nassert solution('2\\n1 1 4 4 6 7\\n') == '2'\nassert solution('3\\n5 3 4 1 3\\n') == '3'\nassert solution('4\\n5 3 4 1 3\\n') == '3'\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 21 23\") == \"3\"\nassert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"2 5 10 9 1\") == \"5\"\nassert solution(\"20 21 5 5 10 5 1\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 20 21 22\n10 20\"\"\") == \"0\"\nassert solution(\"\"\"\n10 20 21 22\n10 20\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('14 19 2 15') == '1'\nassert solution('2 1 5 2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20 10 10\n''') == '3'\nassert solution('''\n18 3 20\n''') == '2'\nassert solution('''\n15 11 17\n''') == '1'\nassert solution('''\n12 11 16\n''') == '0'\nassert solution('''\n2 2 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('5 3 2') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nassert solution('''7 3\n4 1\n3 2\n5 2\n5 4\n7 3\n4 1\n4 2\n5 2''') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"6 10 18 20\") == \"1\"\nassert solution(\"7 10 18 20\") == \"1\"\nassert solution(\"7 12 12 12\") == \"2\"\nassert solution(\"4 4 4 4\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n24 21 23\n16 17 14 20 20 11 22\n''') == '3'\nassert solution('''5\n16 17 14 20 21\n7 8 9 10 11\n''') == '5'\nassert solution('''15\n21 20 19 14 13 12\n8 11\n''') == '6'\nassert solution('''3\n21 20 19 14 13 12\n8 11\n''') == '6'\nassert solution('''7\n21 20 19 14 13 12\n8 11\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5 6\") == \"1\"\nassert solution(\"5\\n10 20 30 40 50\\n50 20 10 30 40\\n30 50 20 40 10\\n10 50 30 40 20\\n20 30 10 40 50\\n40 50 20 30 10\\n10 30 50 20 40\\n30 40 20 50 10\\n50 20 10 30 40\\n10 30 40 50 20\\n20 30 10 40 50\\n40 50 20 30 10\\n10 30 40 50 20\\n30 40 10 50 20\\n50 20 10 30 40\\n10 30 40 50 20\\n20 30 10 40 50\\n40 50 20 30 10\\n10 30 40 50 20\\n30 40 10 50 20\\n50 20 10 30 40\") == \"3\"\n",
        "num_ids_2": 172,
        "num_ids_4": 172
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT_STDIN) == OUTPUT_STDOUT\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''\n7\n1 2 5 6 7 10 21 23 24 49\n''') == '0'\nassert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '0'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('4') == '3'\nassert solution('6') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\nassert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('6\\n4 7 12 100 150 199\\n') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n2 4 8 3 6\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n5\n5 2 11 3 7\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n6\n2 5 10 1 10 2\n\"\"\") == \"1 4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''5\n5 2 11 3 7\n''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2\n''') == '1 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 2\"\nassert solution(\"6\") == \"1 4\"\nassert solution(\"7\") == \"1 5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n5\\n1\\n10\\n2\") == \"1 2\"\nassert solution(\"4\\n2\\n5\\n1\\n10\\n2\") == \"1 2\"\nassert solution(\"5\\n2\\n5\\n1\\n10\\n2\") == \"1 2\"\nassert solution(\"6\\n2\\n5\\n1\\n10\\n2\") == \"1 4\"",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 2\\n'\nassert solution('5 2') == '1 2\\n'\nassert solution('6') == '1 4\\n'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 4 8 3 6\n\n2\n3 4 5\n\n2\n5 3 9 9\n\n1 2\n\n3\n5 10 1 10 2\n\n2 4\n5 10 1 10 2\n\n3 4\n5 10 1 10 2\n\n4\n5 2 11 3 7\n\n1 4\n2 4\n2 4\n''') == '1 4\\n2 4'\nassert solution('''\n3\n2 4 8 3 6\n\n1 2\n\n4\n5 2 11 3 7\n\n3\n5 10 1 10 2\n\n2 4\n5 10 1 10 2\n\n5 3\n5 10 1 10 2\n\n1 4\n2 4\n''') == '1 4\\n2 4\\n3 4\\n1 4\\n2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n\n''') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_1) == '1 2'\nassert solution(input_2) == '2 4'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '02112'\nassert solution(stdin) == '02112'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('11') == '11'\nassert solution('12') == '11'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '021'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n121\n''') == '021'\nassert solution('''\n6\n000000\n''') == '001122'\nassert solution('''\n6\n211200\n''') == '211202'\nassert solution('''\n6\n120110\n''') == '120112'\nassert solution('''\n6\n011100\n''') == '111101'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\nassert solution('6') == '211200'\nassert solution('3') == '021'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '2112'\nassert solution('6') == '2112'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n121\n''') == '021'\nassert solution('''\n321\n''') == '321'\nassert solution('''\n112233\n''') == '212233'\nassert solution('''\n212343\n''') == '212343'\nassert solution('''\n122334\n''') == '212343'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7''') == '120120'\nassert solution('''2\n2\n2\n1\n1\n1\n1''') == '120110'\nassert solution('''3\n1\n1\n2\n2\n1\n1''') == '110100'\nassert solution('''4\n1\n1\n2\n1\n1\n1''') == '110110'\nassert solution('''5\n1\n1\n1\n1\n1\n1''') == '110111'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n121\n\n''') == '021'\nassert solution('''\n3\n1\n\n''') == '1'\nassert solution('''\n3\n120110\n\n''') == '120120'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n0\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('121') == '021'\nassert solution('01100') == '00111'\nassert solution('01000101') == '01011'\nassert solution('01') == '0'\nassert solution('0') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 3') == '4'\nassert solution('4 5') == '3'\nassert solution('10 10') == '27'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"6 3\") == \"0\"\nassert solution(\"6 4\") == \"0\"\nassert solution(\"6 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '4'\nassert solution('6 3') == '3'\nassert solution('6 4') == '3'\nassert solution('6 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n3\n''') == '4'\nassert solution('''6 3\n3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"2 5\") == \"3\"\n\n--\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"6 3\") == \"0\"\nassert solution(\"6 4\") == \"1\"\nassert solution(\"6 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '4', \"Wrong!\"\nassert solution('2 3') == '5', \"Wrong!\"\nassert solution('3 4') == '8', \"Wrong!\"\nassert solution('4 5') == '13', \"Wrong!\"\nassert solution('5 6') == '24', \"Wrong!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '3'\nassert solution('6 3') == '2'\nassert solution('6 4') == '1'\nassert solution('6 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '2'\nassert solution('6 3') == '1'\nassert solution('6 4') == '0'\nassert solution('6 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 4\\n') == '2'\nassert solution('5 3 4\\n') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3') == '4'\nassert solution('2 2 3') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 4') == '2'\nassert solution('5 2 3') == '2'\nassert solution('8 10 4') == '4'\nassert solution('8 10 4') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 2 4') == '4'\nassert solution('6 3 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 1') == '2'\nassert solution('6 2 4') == '2'\nassert solution('2 8 7') == '8'\nassert solution('-8 -4 2') == '4'\nassert solution('3 1 -1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 10 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"5 8 4\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2 4\\n\") == '2'\nassert solution(\"5 5 5\\n\") == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 4\") == \"2\"\nassert solution(\"-1 0 -3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '13'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"14\") == \"0\"\nassert solution(\"2128506\") == \"3\"\nassert solution(\"15\") == \"2\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == '16'\nassert solution('13') == '1'\nassert solution('14') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n\n--Python--\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '1'\nassert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('14') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('3') == '27'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '5'\nassert solution('100') == '10'\nassert solution('1000') == '100'\nassert solution('10000') == '1000'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n\n''') == '1'\nassert solution('''\n2\n\n''') == '2'\nassert solution('''\n3\n\n''') == '3'\nassert solution('''\n4\n\n''') == '4'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '27'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n\n''') == '27'\nassert solution('''\n1\n\n''') == '1'\nassert solution('''\n2\n\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"27\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '27'\nassert solution('10') == '100'\n'''\nfrom math import log",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '27'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '1'\nassert solution('13') == '0'\nassert solution('927') == '1'\nassert solution('48') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('9') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\nprint(solution(input()))\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(13) == '1'\nassert solution(927) == '1'\nassert solution(48) == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('3 5 4 1') == '4'\nassert solution('4 5 4 1') == '4'\nassert solution('5 5 5 5 1') == '4'\nassert solution('6 6 6 6 6 6') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 5 3 1\") == \"4\"\nassert solution(\n    \"4 2 3 1\") == \"5\"\nassert solution(\n    \"5 4 3 1\") == \"5\"\nassert solution(\n    \"5 5 5 5 5\") == \"10\"\nassert solution(\n    \"3 2 3 2 2 2\") == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('7 2 3') == '6'\nassert solution('3 5') == '6'\nassert solution('5 5 5') == '5'\nassert solution('5 4') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\nassert solution(\"4 2 3 1\") == \"3\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1234'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '12345678901'\nassert solution('1 2 3 4 5 6 7 8 9 10 1 11 12') == '1234567890123456789012'\n",
        "num_ids_2": 37,
        "num_ids_4": 68
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('2 3 1 2') == '1'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('7') == '6'\nassert solution('12') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5 3 1') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1 2 3') == '6'\nassert solution('1 2 3 4') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '4'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('10 1') == '2'\nassert solution('10 1 2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n4\n2 3\n3 2\n4 1\n1 2\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n8 5\n6 1\n5 9\n999999800 999999800\n999999800 999999800\n''') == '1'\nassert solution('''\n8 7\n6 9\n999999800 999999800\n999999800 999999800\n''') == '999999800'\nassert solution('''\n8 7\n6 1\n999999800 999999800\n999999800 999999800\n''') == '999999800'\nassert solution('''\n8 7\n6 1\n999999800 999999800\n999999800 999999800\n''') == '999999800'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 8\n8 1\n''') == '2'\nassert solution('''\n2\n1 3\n3 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 7') == '2'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\n",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n\nassert solution('''1\n5\n3\n9''') == '1'\n\nassert solution('''3\n5\n3\n1''') == '3'\n\nassert solution('''3\n8\n5\n1''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 2\\n4 1\\n8 1\\n99999999 999\\n99999999 999\") == \"2\"\nassert solution(\"5\\n8 7\\n99999999 999\\n99999999 999\\n99999999 999\") == \"1\"\nassert solution(\"1\\n8 7\\n99999999 999\\n99999999 999\") == \"99999999\"\nassert solution(\"1\\n8 7\\n99999999 999\\n99999999 999\") == \"99999999\"\nassert solution(\"1\\n8 7\\n99999999 999\\n99999999 999\") == \"99999999\"\n",
        "num_ids_2": 61,
        "num_ids_4": 111
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 2\n1 2 3\n1 2\n2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\n1 1 1 2\n1 1 1 2\n1 1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2\n2 2 2\n2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1\n0 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1'\nassert solution(\"2 2\\n1 2\\n0 1\\n\") == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\", \"3\\n1\\n\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('0 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '1'\nassert solution('0 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('0 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 0\") == \"5.00000000000000000000\"\nassert solution(\"0 0 0 0\") == \"0.00000000000000000000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    A B H M\n''') == '5.00000000000000000000'\nassert solution('''\n    10 11 1 1\n''') == '11.00000000000000000000'\nassert solution('''\n    0 0 0 1\n''') == '0.00000000000000000000'\nassert solution('''\n    10 2 0 0\n''') == '10.00000000000000000000'\nassert solution('''\n    4 4 0 0\n''') == '4.00000000000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('8 8 4 1') == '10.0000000000000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.0\"\nassert solution(\"4 3 7 1\") == \"10.0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 2 3 4 5') == '1.00000000000000000000'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 9 0') == '5.0'\nassert solution('3 5 9 2') == '8.0'\nassert solution('5 5 9 2') == '11.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '5.0000000000'\nassert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 4 6 0') == '3.99999998665'\nassert solution('3 4 5 0') == '4.0000000000'\nassert solution('3 4 0 0') == '3.99999998665'\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"1 1 1 1\") == \"2.00000000000000\"\nassert solution(\"1 2 3 4\") == \"6.00000000000000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 9 0') == '5.000000000'\nassert solution('5 5 9 0') == '5.0'\nassert solution('5 5 9 1') == '5.0'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''\n3 1\n1 1 1\n''') == '6'\nassert solution('''\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1 4 5 60 4\\n') == '8'\nassert solution('3 1\\n1 1 1\\n') == '6'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '8'\n\nassert solution(input) == '97'\n\n\n\nsolution.py",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n1 1 1''') == '6'\n\nassert solution('''4 2\n1 1 1 1''') == '8'\n\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3''') == '97'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n3 2'\n\nassert solution('1 0\\n1000000') == '0\\n0'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2 4\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\"\nassert solution(\"1\\n10000000\\n\") == \"0\\n0\"",
        "num_ids_2": 53,
        "num_ids_4": 72
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n1 0\n1000000\n\n\"\"\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('2 -2 3 1 2') == '4'\nassert solution('1 3') == '3'\nassert solution('4 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '6'\nassert solution('5 4') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 -2 3 1 2') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\nassert solution('1000000') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 4\\n'\n    '2 -2 3 1 2\\n'\n    '1 3\\n'\n    '4 5\\n'\n    '2 5\\n'\n    '1 3\\n'\n) == '6\\n'\n\nassert solution(\n    '1 0\\n'\n    '1000000\\n'\n) == '0\\n'\n\nassert solution(\n    '1 0\\n'\n    '10000000\\n'\n) == '0\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\n2. Write a function that takes an array of strings as an argument and return a sorted array of strings. The strings in the input array are not necessarily distinct. The input array can contain repeated elements.\n\nThe function should return an array of strings sorted in lexicographical order.\n\nYou are given an array of strings. The strings are not necessarily distinct, and may contain repeated elements. The strings may be sorted in non-alphabetical order.\n\nFor example, the following strings are sorted:\n\n\"dab\", \"abc\"\n\"efg\", \"fhi\"\n\"hi\", \"efg\"\n\"dge\", \"dgh\"\n\"fgh\", \"efg\"\n\"efg\", \"efg\"\nYou may not use an in-built sorting function or language-specific functions for this problem.\n\nInput\nThe first line of input contains an integer $n$ denoting the number of strings. The following $n$ lines contains a string, each string being a non-empty string. All strings are given in lowercase.\n\n\nOutput\nPrint $n$ lines, one line per a string, each string being sorted.\n\nConstraints\n1 <= n <= 100\nEach string contains only lowercase Latin letters.\nThe input array will not be empty.\nThe string will not be empty.\n\n\nSample Input 1\n3\na\nb\nc\nSample Output 1\na\nb\nc\nSample Input 2\n5\naa\nbb\ncc\ndd\nee\nSample Output 2\naa\nbb\ncc\ndd\nee\n\n\n--Input Format---\nThe first line contains an integer $n$. The next $n$ lines contain a string. The strings are not necessarily distinct.\n\n--Output Format---\nPrint $n$ lines, one line per a string, each string being sorted in lexicographical order.\n\n--Constraints---\n1 <= $n$ <= 100\nEach string contains only lowercase Latin letters.\nThe input array will not be empty.\nThe string will not be empty.\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n\n3. Write a function that takes an array of integers, and returns the length of the longest subarray.\n\nFor example, the following function will return 3, because the longest subarray is {5, 7, 2} with length 3.\n\n[5, 7, 2, 1, 4, 8, 3]\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\na\n\"\"\") == \"No\"\nassert solution(\"\"\"\nb\n\"\"\") == \"No\"\nassert solution(\"\"\"\na\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nac\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nabcdefghijklmnopqrstuvwxyz\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n'.join(['fced', 'xyz', 'r', 'dabcef', 'az', 'aa', 'bad', 'babc'])) == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 0\n1000000\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\") == \"6\"\nassert solution(\"5 4\\n3 5\\n3 4\\n2 4\\n2 5\") == \"7\"\nassert solution(\"1 0\\n1000000\") == \"0\"\n",
        "num_ids_2": 50,
        "num_ids_4": 65
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n4 1\\n'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2\\n'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '6 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"2 -2 3 1 2\\n\"\n    \"1 3\\n\"\n    \"4 5\\n\"\n    \"2 5\\n\"\n    \"1 3\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"5 4\\n\"\n    \"2 -2 3 1 4\\n\"\n    \"3 5\\n\"\n    \"3 4\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n) == \"7\\n\"\n\nassert solution(\n    \"1 0\\n\"\n    \"1000000\\n\"\n) == \"0\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 -2 3 1 2') == '6'\nassert solution('5 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7'\nassert solution('1 0\\n1000000') == '0'\n",
        "num_ids_2": 46,
        "num_ids_4": 61
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1000000\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"7 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('2 -2 3 1 2') == '4'\nassert solution('1 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '6'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0\\n') == '0'\nassert solution('5 4\\n') == '6'\nassert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '7'",
        "num_ids_2": 26,
        "num_ids_4": 63
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution() == 'LLRL'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2 1 5 4 3\"\n    ) == \"4\\n\"\n\nassert solution(\n    \"7\\n\"\n    \"1 3 5 6 7 4 2\"\n    ) == \"7\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"1 2 3\"\n    ) == \"3\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"1 2 4 3\"\n    ) == \"4\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"5\") == \"RLRR\"\nassert solution(\"2\") == \"RLR\"\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"LLL\"\nassert solution(\"4\") == \"LLRL\"\nassert solution(\"7\") == \"LLRL\"\nassert solution(\"5\") == \"LLRR\"\nassert solution(\"6\") == \"LLRR\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == '7'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''4\n1 2 4 3''') == '4'\n\nfrom math import inf\nfrom collections import defaultdict\n\nn = int(input())\n\narr = list(map(int, input().split()))\n\nleft_to_right = 0\nright_to_left = 0\n\nmax_len = 0\n\nd = defaultdict(list)\n\nfor i in range(n):\n    d[arr[i]].append(i)\n\nfor i in range(n):\n    if len(d[arr[i]]) > max_len:\n        max_len = len(d[arr[i]])\n        left_to_right = d[arr[i]][-1] + 1\n        right_to_left = d[arr[i]][0] - 1\n\nprint(max_len)\nprint('L' if left_to_right < right_to_left else 'R')\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"4\\nLLRL\"\nassert solution(sys.stdin.read()) == \"7\\nLLRLLLL\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5 3 4\\n\") == \"4\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"7\\n6 5 4 3 2 4 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('7') == '2'\nassert solution('9') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"4\"\nassert solution('2') == \"2\"\nassert solution('7') == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '2'\nassert solution('2') == '2'\nassert solution('5') == '4'\nassert solution('6') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 5 3 4') == '4'\nassert solution('2\\n1 2') == '2'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) in range(1, 1000)\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nlengths = {}\nfor i in range(1, n):\n    j = i-1\n    while j>=0 and a[j]>a[i]:\n        j -= 1\n    if j==i-1:\n        lengths[i] = 0\n        continue\n    if j>=0:\n        lengths[i] = j+1\n    else:\n        lengths[i] = 0\n\nprint(max(lengths.values()))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution(\"\") == \"0\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"5\\n1 2 5 3 4\") == \"4\"\nassert solution(\"10\\n5 7 4 3 2 1\") == \"5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 49
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 5 3 4') == \"4\", \"3rd example\"\nassert solution('2') == \"2\", \"1st example\"\nassert solution('7 6 5 4 3 2 4 3') == \"2\", \"2nd example\"",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\nassert solution('5 3') == '0'\nassert solution('5 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution_2() == \"2\"\nprint(\"Congratulations! Your solution works flawlessly!\")",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 3\n1 2 2 4 5\"\"\") == \"1\"\nassert solution(\"\"\"5 3\n1 2 3 4 5\"\"\") == \"2\"\nassert solution(\"\"\"5 3\n1 2 3 4 5\"\"\") == \"0\"\nassert solution(\"\"\"5 3\n1 2 3 3 3\"\"\") == \"0\"\nassert solution(\"\"\"5 3\n1 2 3 4 5\"\"\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"5 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 3\n1 2 3 3 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 3\n1 2 3 4 5\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n\nassert solution() == \"2\"\n\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\", \"Test 1 Failed\"\nassert solution(\"1\") == \"1\", \"Test 2 Failed\"\nassert solution(\"8 0 4\") == \"4\", \"Test 3 Failed\"\nassert solution(\"1\") == \"1\", \"Test 4 Failed\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\\n\") == \"4\"\nassert solution(\"8 1 2\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3 4\") == \"4\",'sample test 1'\nassert solution(\"100 11 6\") == \"1\",'sample test 2'\nassert solution(\"5 2 4\") == \"1\",'sample test 3'\nassert solution(\"1 4 3\") == \"4\",'sample test 4'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"12345678\") == \"0\"\nassert solution(\"12345678 90\") == \"0\"\nassert solution(\"12345678 90 9 9 9 9\") == \"5\"\nassert solution(\"1234567890\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3 4\\n') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"5 10 5\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n8\\n8 2 12 6 4 24 16 3\\n1\\n2\\n\") == \"48\", \"test 1 failed\"\nassert solution(\"2\\n10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n1\\n2\\n\") == \"1\", \"test 2 failed\"\nprint(solution(input()))\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n3\n1 2 3 5 7 13 17 19 23 27\n8\n4\n1 2 4 5 7 13 17 19 23 27\n''') == '4'\n\nassert solution('''\n1\n3\n1 1 2\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3\n    1 2 1\n    2\n    2\n    ''') == '1'\nassert solution('''\n    2\n    1\n    ''') == '1'\nassert solution('''\n    2\n    1\n    ''') == '-1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n16 18 4 6 4 3\n5\n4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n12 2 1 4 6 8 10\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5\n16 4 6 8 3\n5\n1 2\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\n8 2 4 6 1\n5\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n10 12 20 30\\n10\\n') == '10'\nassert solution('3\\n10 12 20 30\\n10\\n') == '10'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n8 2 12 6 4 24 16 3') == '48'\nassert solution('2\\n1 2 3') == '1'\nassert solution('2\\n8 1 2 3 4') == '3'\nassert solution('2\\n8 3 3 3') == '-1'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4'\nassert solution('''\n8\n8 2 12 6 4 24 16 3\n2\n1\n''') == '4'\nassert solution('''\n5\n3 2 3 3 4\n2\n2\n''') == '4'\nassert solution('''\n5\n3 2 3 3 4\n1\n3\n''') == '4'\nassert solution('''\n5\n3 2 3 3 4\n2\n5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n3\n3\n3\n6\"\"\") == \"4\"\nassert solution(\"\"\"1\n5\n1\n2\n3\n3\n4\n5\"\"\") == \"4\"\nassert solution(\"\"\"1\n4\n5\n5\n5\n4\n1\n2\"\"\") == \"1\"\nassert solution(\"\"\"1\n6\n1\n2\n3\n3\n4\n5\"\"\") == \"1\"\nassert solution(\"\"\"1\n2\n1\n1\n2\n3\"\"\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n2\n\"\"\") == \"4\", \"First example\"\nassert solution(\"\"\"\n2\n3\n\"\"\") == \"6\", \"Second example\"\nassert solution(\"\"\"\n5\n1\n\"\"\") == \"-1\", \"Third example\"\nassert solution(\"\"\"\n3\n1 2 4\n\"\"\") == \"1\", \"Four\"\nassert solution(\"\"\"\n4\n1 1 3 5\n\"\"\") == \"1\", \"Fifth\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3') == '48'\nassert solution('1\\n1\\n') == '1'\nassert solution('3\\n8 6') == '1'\nassert solution('3\\n4 5\\n8 2\\n7') == '-1'\nassert solution('2\\n12\\n9 7\\n7 2\\n4 8') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('6') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n6 6 6 6 6\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\nassert solution('''\n5\n4 4 4 4 4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''5\n2 4 2 4 4\n''') == '2'\nassert solution('''5\n6 6 6 6 6\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '''3\n5 6 1 \n'''\n\nassert solution('''\n5\n2 4 2 4 4\n''') == '''2\n2 4 \n'''\n\nassert solution('''\n5\n6 6 6 6 6\n''') == '''1\n6 \n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n6 6 6 6 6\n''') == '3\\n6 6 1\\n'\nassert solution('''5\n2 4 2 4 4\n''') == '2\\n4 2 1\\n'\nassert solution('''5\n1 5 5 1 6 1\n''') == '3\\n5 6 1\\n'\nassert solution('''5\n6 6 6 6 6\n''') == '1\\n6 6 1\\n'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 5 1 6 1\") == \"3\\n5 6 1\"\nassert solution(\"5\\n2 4 2 4 4\") == \"2\\n4\"\nassert solution(\"5\\n6 6 6 6 6\") == \"1\"",
        "num_ids_2": 43,
        "num_ids_4": 60
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6 6 6 6 6\\n') == '1\\n6\\n'\nassert solution('6\\n2 4 2 4 4\\n') == '2\\n4\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '1\\n1\\n'",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '6'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"42\") == \"44\"\nassert solution(\"99\") == \"103\"\nassert solution(\"432\") == \"435\"\nassert solution(\"237\") == \"237\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '435'\nassert solution(sys.stdin.read()) == '435'\nassert solution(sys.stdin.read()) == '435'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '4'\nassert solution('1') == '1'\nassert solution('4') == '5'\nassert solution('3') == '5'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n''') == '4'\nassert solution('''3\n''') == '4'\nassert solution('''99\n''') == '103'\nassert solution('''99\n''') == '103'\nassert solution('''3\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abac\") == \"abac\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abac\") == \"aac\", \"abac\"\nassert solution(\"abc\") == \"aab\", \"abc\"\nassert solution(\"aba\") == \"aba\", \"aba\"\nassert solution(\"codeforces\") == \"codeforces\", \"codeforces\"\nassert solution(\"ecoosdcefr\") == \"ecoosdcefr\", \"ecoosdcefr\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"2\"\n\nstdin = \"\"\"\n1\n2\n3\n\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"a\"\nassert solution(\"2\") == \"ba\"\nassert solution(\"2\") == \"bb\"\n\nprint(\"All tests passed\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\n''') == \"b\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\n''') == \"b\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\n''') == \"c\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == ''\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abac') == 'aac'\nassert solution('abc') == 'aba'\nassert solution('abba') == 'abba'\nassert solution('ecoosdcefr') == 'ecoosdcefr'",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\", \"First Testcase\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\", \"Second Testcase\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\", \"Third Testcase\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nabac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\\n') == 'aac'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\nassert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\naba\\n3\\n1 0 1\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\nassert solution(\"abac\\n3\\n2 1 0\\nabc\\n1\\n0\\nabba\\n3\\n1 0 1\\necosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"aac\"\n",
        "num_ids_2": 122,
        "num_ids_4": 183
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'a'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"a\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'b'\nassert solution('6') == 'zz'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows:\n\n- the dogs numbered 1,2,\\cdots,26 were respectively given the names a, b,..., z;\n- the dogs numbered 27,28,29,\\cdots,701,702  were respectively given the names aa, ab, ac,..., zy, zz;\n- the dogs numbered 703,704,705,\\cdots,18277,18278  were respectively given the names aaa, aab, aac,..., zzy, zzz;\n- the dogs numbered 18279,18280,18281,\\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac,..., zzy, zzzz;\n- the dogs numbered 475255,475256,\\cdots  were respectively given the names aaaaa, aaaab,...;\n\nTo sum it up, the dogs numbered 1, 2, \\cdots were respectively given the following names:\n\na, b,..., z, aa, ab,..., az, ba, bb,..., bz,..., za, zb,..., zz, aaa, aab,..., aaz, aba, abb,..., abz,..., zzz, aaaa,...\nWhat is the name for the dog numbered N?\n''') == 'b'\n\nassert solution('''\n2\n\nWhat is the name for the dog numbered N?\n''') == 'aaaa'\n\nassert solution('''\n1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows:\n\n- the dogs numbered 1,2,\\cdots,26 were respectively given the names a, b,..., z;\n- the dogs numbered 27,28,29,\\cdots,701,702  were respectively given the names aa, ab, ac,..., zy, zz;\n- the dogs numbered 703,704,705,\\cdots,18277,18278  were respectively given the names aaa, aab, aac,..., zzy, zzz;\n- the dogs numbered 18279,18280,18281,\\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac,..., zzy, zzzz;\n- the dogs numbered 475255,475256,\\cdots  were respectively given the names aaaaa, aaaab,...;\n\nTo sum it up, the dogs numbered 1, 2, \\cdots were respectively given the following names:\n\na, b,..., z, aa, ab,..., az, ba, bb,..., bz,..., za, zb,..., zz, aaa, aab,..., aaz, aba, abb,..., abz,..., zzz, aaaa,...\nWhat is the name for the dog numbered N?\n''') == 'z'\n\nassert solution('''\n5\n\nWhat is the name for the dog numbered N?\n''') == 'z'\n\nassert solution('''\n-1\n\nWhat is the name for the dog numbered N?\n''') == 'zzz'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'b'\nassert solution('1') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"bb\"\nassert solution(\"3\") == \"c\"\nassert solution(\"4\") == \"ccc\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1000000000000001 dogs suddenly appeared under the roof of Roger's house, all of which he decided to keep. The dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows:\n- the dogs numbered 1,2,\\cdots,26 were respectively given the names a, b,..., z;\n- the dogs numbered 27,28,29,\\cdots,701,702  were respectively given the names aa, ab, ac,..., zy, zz;\n- the dogs numbered 703,704,705,\\cdots,18277,18278  were respectively given the names aaa, aab, aac,..., zzy, zzz;\n- the dogs numbered 18279,18280,18281,\\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac,..., zzy, zzzz;\n- the dogs numbered 475255,475256,\\cdots  were respectively given the names aaaaa, aaaab,...;\n- and so on.\nTo sum it up, the dogs numbered 1, 2, \\cdots were respectively given the following names:\na, b,..., z, aa, ab,..., az, ba, bb,..., bz,..., za, zb,..., zz, aaa, aab,..., aaz, aba, abb,..., abz,..., zzz, aaaa,...\n''','stdin') == 'bbbb'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aab'\nassert solution('4') == 'aab'\nassert solution('5') == 'aab'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"13\"\nassert solution(\"6\") == \"11\"\nassert solution(\"10\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\nto be or not to be\n''') == '12'\n\nassert solution('''\n5\na ab a a b ab a a b c\n''') == '13'\n\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nto be or not to be\n''') == '12'\nassert solution('''10\na ab a a b ab a a b c\n''') == '13'\nassert solution('''6\naa bb aa aa bb bb\n''') == '11'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nto be or not to be\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"\n\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 62
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_value_1) == output_value_1\nassert solution(input_value_2) == output_value_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nto be or not to be\n''') == '12'\nassert solution('''\naa bb aa aa bb bb\n''') == '11'\nassert solution('''\nAB aa AB bb\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\", \"Simple tests\"\nassert solution(\"5\") == \"1\", \"Simple tests\"\nprint(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nto be or not to be\n''') == '12'\nassert solution('''\n10\na ab a a b ab a a b c\n''') == '13'\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\nto be or not to be\n''') == \"12\"\nassert solution('''\n6\naa bb aa aa bb bb\n''') == \"11\"\nassert solution('''\n6\nto be or not to be\n''') == \"10\"\nassert solution('''\n10\nto be or not to be\n''') == \"10\"\nassert solution('''\n10\naa bb aa aa bb bb\n''') == \"13\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('6') == '12'\nassert solution('10') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1\n1 1 1 1 1\n''') == \"1\"\nassert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == \"20\"\nassert solution('''4 2\n1 2000 2000 2\n''') == \"4000\"\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n8 3\n5 4 2 6 5 1 9 2\n\"\"\") == \"20\"\nassert solution(\"\"\"\n5 1\n1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 2\n1 2000 2000 2\n\"\"\") == \"4000\"\nassert solution(\"\"\"\n8 3\n5 4 2 6 5 1 9 2\n\"\"\") == \"2000\"\nassert solution(\"\"\"\n5 1\n1 1 1 1 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"20\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"4000\"\nassert solution(\"5 100\") == \"100000\"\nassert solution(\"6 8\") == \"200000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n\n\"\"\"\n\nimport sys\nimport re\n\nsys.stdin = open('input.txt')\n\nn = int(input())\n\nlist_of_numbers = list(map(int, input().split()))\n\nsubsegment_sum = 0\n\nfor i in range(n):\n    if subsegment_sum < 0:\n        subsegment_sum = 0\n        continue\n    subsegment_sum += list_of_numbers[i]\n    if subsegment_sum == 0:\n        continue\n    if subsegment_sum == 0:\n        return str(i)\nprint(len(list_of_numbers))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('8') == '3'\n\n\n\n------SOLUTION BY MOUHAMMED A.S------\n\nimport unittest",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 70
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 -5 3 2\\n\") == \"1\"\nassert solution(\"5 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\"\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\") == \"0\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"5\\n5\") == \"10\"\nassert solution(\"2\\n1000000000\") == \"1000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '100'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution('1\\n2') == '2'\nassert solution('5\\n2') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''1 100''') == '2'\nassert solution('''2 2''') == '1'\nassert solution('''5 5''') == '10'\nassert solution('''2 1000000000''') == '2000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\nprint('all test cases passed')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\nassert solution('''\n1\n1000000\n1000000000\n''') == '2000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n5\n2 1\n5 3\n2 5''') == '0'\nassert solution('''5\n1\n2\n5\n3\n4''') == '2'\nassert solution('''10\n1\n2\n5\n3\n4\n6\n7\n8\n9\n10''') == '11'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n100''') == '0'\nassert solution('''2\n1\n3\n2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"-7\") == \"None\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"None\"\nassert solution(\"2\") == \"None\"\nassert solution(\"3\") == \"None\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == '4'\nassert solution('100') == 'None'\nassert solution('7') == 'None'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"103\") == \"10\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\\n\") == \"12\"\nassert solution(\"10\\n\") == -1\nassert solution(\"101\\n\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '4'\nassert solution('5') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"101\"\n) == \"4\"\nassert solution(\n    \"101\"\n) == \"None\"\nassert solution(\n    \"1\"\n) == \"None\"\nassert solution(\n    \"2\"\n) == \"None\"\nassert solution(\n    \"4\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n\n''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n\n''') == '48'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '4'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\n\nassert solution('15 8') == '48'\n\n\"\"\"\n\n\"\"\"\n\nn, m = list(map(int, stdin.split()))\narr = list(map(int, stdin.split()))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n5 8\n2 3 1 1 2\n'''\n) == \"4\"\nassert solution(\n'''\n5 16\n5 5 5 5 5\n'''\n) == \"2\"\nassert solution(\n'''\n5 26\n5 5 5 5 5\n'''\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 8\\n\"\n    \"2 3 1 1 2\\n\"\n) == \"4\"\n\nassert solution(\n    \"5 16\\n\"\n    \"5 5 5 5 5\\n\"\n) == \"2\"\n\nassert solution(\n    \"5 26\\n\"\n    \"5 5 5 5 5\\n\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == \"4\", solution.__doc__\nassert solution(example_input_2) == \"2\", solution.__doc__\nassert solution(example_input_3) == \"1\", solution.__doc__\nassert solution(example_input_4) == \"2\", solution.__doc__\n\nsolution(my_input)\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"4\", \"easy\"\nassert solution(\"7 10\") == \"2\", \"easy\"\nassert solution(\"5 16\") == \"2\", \"easy\"\nassert solution(\"5 26\") == \"1\", \"easy\"\nassert solution(\"5 15\") == \"2\", \"easy\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 1 2\\n\") == \"4\"\nassert solution(\"5 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == \"4\"\nassert solution('5 16\\n5 5 5 5 5') == \"1\"\nassert solution('5 26\\n5 5 5 5 5') == \"2\"\nassert solution('5 26\\n5 5 5 5 5') == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n5 15\n5 5 5 5 5\n''') == '2'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''\n5 10\n1 3 4 2 1 4 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == \"4\"\n\nassert solution('''\n5 16\n5 5 5 5 5\n''') == \"1\"\n\nassert solution('''\n5 26\n5 5 5 5 5\n''') == \"-1\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n24 21 14 10\n\n''') == '3'\n\nassert solution('''2\n500 500\n\n''') == '0'\n\nassert solution('''5\n1 3 6 9 12\n\n''') == '1'\n\nassert solution('''6\n1 2 4 8 16 32\n\n''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n24 21 14 10\n\n3\n14 5 1\n\n1\n500 500\n\n1\n500 500\n''') == '1'\nassert solution('''5\n1 3 6 9 12\n\n4\n14 5 1\n\n2\n500 500\n\n5\n1 3 6 9 12\n''') == '1'\nassert solution('''5\n1 3 6 9 12\n\n4\n14 5 1\n\n3\n500 500\n''') == '0'\nassert solution('''5\n1 3 6 9 12\n\n4\n14 5 1\n\n3\n500 500\n''') == '0'\nassert solution('''5\n1 3 6 9 12\n\n4\n14 5 1\n\n2\n100 100\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n') == '3'\nassert solution('5\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n\"\n    \"24 21 14 10\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"2\\n\"\n    \"500 500\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"14 5 1\\n\"\n) == \"-1\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"1 3 6 9 12\\n\"\n) == \"1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4\\n2\\n1\") == \"1\"\nassert solution(\"2\\n7\\n5\\n6\") == \"1\"\nassert solution(\"2\\n8\\n3\\n3\") == \"2\"\nassert solution(\"3\\n1\\n2\\n3\") == \"-1\"\nassert solution(\"2\\n2\\n1\\n2\") == \"1\"\nprint('Congratulations! Your solution is correct.')\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n5\") == \"0\"\nassert solution(\"3\\n1\") == \"1\"\nassert solution(\"5\\n2\") == \"0\"\nassert solution(\"4\\n25 21 14 10\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '3'\nassert solution('2') == '0'\nassert solution('3') == '-1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n24 21 14 10\\n\") == \"3\"\nassert solution(\"2\\n500 500\\n\") == \"0\"\nassert solution(\"3\\n1 3 6 9 12\\n\") == \"1\"\nassert solution(\"4\\n1 3 6 9 12\\n\") == \"2\"",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '-1'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\\n2\\n\"\nassert solution(\"5 2\") == \"1\\n2\\n\"\nassert solution(\"6 1\") == \"2\\n\"\nassert solution(\"4 4\") == \"4\\n\"\n\n---Output---",
        "num_ids_2": 32,
        "num_ids_4": 58
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nprint(\"All tests passed.\")\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n''') == '5'\n\nassert solution('''\n6 1\n36 4 1 25 9 16\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 1') == '1'\nassert solution('4 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == \"5\"\nassert solution('6 1\\n36 4 1 25 9 16\\n') == \"2\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\nassert solution('4 4\\n1 10 100 1000\\n') == '4'\nassert solution('50 50\\n1 100 100 1000 1000 100 1000\\n') == '50'\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '6'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 10 7 8') == '8'\nassert solution('5 10 7 8 9') == '8'\nassert solution('5 10 7 8 9 10') == '8'\nassert solution('5 10 7 8 9 10 10') == '8'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('2 2 5') == '-1'\nassert solution('1 1 1') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 1 2') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == -1, \"test fail\"\nassert solution('') == -1\nassert solution('1') == 1\nassert solution('2') == -1\nassert solution('3') == 1\n",
        "num_ids_2": 23,
        "num_ids_4": 40
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 10 7') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '8'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 10 7\n8 10 3 6''') == '8'\nassert solution('''6 5 6\n8 10 3 6''') == '8'\nassert solution('''6 5 7\n8 10 3 6''') == '10'\nassert solution('''7 3 7\n8 10 3 6''') == '10'\nassert solution('''8 3 7\n8 10 3 6''') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"10 10 7\") == \"10\"\nassert solution(\"5 10 7\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n10 10 3 6\\n\") == \"-1\"\nassert solution(\"2\\n4 4 4\\n\") == \"2\"\n\n\"\"\"\nimport math\n\nn, k, m = list(map(int, input().split()))\n\nscores = list(map(int, input().split()))\n\nfor i in range(len(scores)):\n    scores[i] = scores[i] / n\n    if scores[i] >= m:\n        break\n\nprint(sum(scores[:i]) / i if i else -1)\n",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7 1\") == \"0\"\nassert solution(\"5 10 7 0\") == \"-1\"\nassert solution(\"5 10 7 0 1\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'\n\nassert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3 4\n3\n1\n3\n2''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\nassert solution('''6 3 4\n3\n1\n3\n2\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"No\\nNo\\nYes\\nYes\\nYes\\nYes\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'Yes\\nYes\\nYes'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\") == \"No\"\n\n=====================================================\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('''6 3 4\n3\n1\n2\n3\n2\n\n''') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\\n0101\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('3 3') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\\n1 1\\n0 1\\n\") == \"YES\\n00\\n10\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n\n''') == \"YES\"\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == \"YES\"\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\"\nassert solution(\"4 4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"NO\"\n",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\n\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n2 2\n1 1\n0 1\n\"\"\") == \"YES\"\nassert solution(r\"\"\"\n3 3\n0 0 0\n1 0 1\n1 1 0\n\"\"\") == \"YES\"\nassert solution(r\"\"\"\n3 3\n0 0 0\n0 0 0\n1 1 1\n\"\"\") == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES'\nassert solution('4 4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n') == 'NO'",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123') == \"Yes\"\nassert solution('12345') == \"No\"\nassert solution('123456') == \"Yes\"\nassert solution('1234567') == \"No\"\nassert solution('12345678') == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == 'Yes'\nassert solution('7') == 'No'\nassert solution('10') == 'Yes'\nassert solution('100') == 'No'\nassert solution('1001') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('375') == 'Yes'\nassert solution('376') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\"\nprint(solution(input))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\"\nprint(solution(stdin))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('373') == \"Yes\"\nassert solution('121') == \"No\"\nassert solution('436') == \"Yes\"\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example) == \"Yes\"\nassert solution(user) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == \"5\"\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == \"3\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''5 2 1\n0 0 0 1 1 0\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2 1\\n1 0 0 1 0 1\") == '3'\nassert solution(\"6 2 1\\n1 0 0 1 0 1 0\") == '3'\nassert solution(\"6 2 1\\n1 0 0 1 0 1 1 0\") == '4'\nassert solution(\"6 2 1\\n1 0 0 1 0 1 1 1\") == '5'\nassert solution(\"6 2 1\\n0 1 0 1 0 1 1\") == '6'\n",
        "num_ids_2": 41,
        "num_ids_4": 85
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == 5\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == 3\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution(stdin=\"5 2 1\\n1 0 0 1 0\\n\") == '5'\nassert solution(stdin=\"6 2 1\\n1 0 0 1 0 1\\n\") == '3'\n\n\n\n\"\"\"\n\nimport math\nfrom collections import deque\n\nn, b, a = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nn_seg = math.ceil(n / a)",
        "num_ids_2": 32,
        "num_ids_4": 57
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"Wrong!\"\nassert solution(\"2+2\") == \"-46\", \"Wrong!\"\nassert solution(\"112-37\") == \"375\", \"Wrong!\"\nassert solution(\"4-9-3\") == \"1\", \"Wrong!\"\nassert solution(\"5-11+3-2\") == \"2\", \"Wrong!\"\n",
        "num_ids_2": 46,
        "num_ids_4": 80
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\n\nsolution(\"112-37\")\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n\nstdin = \"\"\"\n1+5*6-4\n\"\"\".strip()\n\nprint(solution(stdin))\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n\n\n\"\"\"\n\nstdin = list(map(int, input().split()))",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(5) == '-46'\nassert solution(8) == '-46'\nassert solution(11) == '-46'\nassert solution(14) == '-46'\nassert solution(24) == '-46'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n2 3\n3 2\n1 2\n2 3''') == \"YES\"\nassert solution('''10 4\n2 1\n1 3\n4 2\n3 4\n4 3\n3 2\n2 4\n4 1\n1 4\n3 1''') == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"7 2\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'YES\\n3 1\\n1 3\\n3 2\\n2 3\\n'\nassert solution('10 4') == 'YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n'\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_1) == \"YES\\n3 1\\n1 3\\n3 2\\n2 3\\n2 3\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(input_2) == \"YES\\n2 1\\n1 3\\n3 2\\n4 2\\n4 3\\n3 2\\n2 4\\n4 1\"\nassert solution(input_3) == \"YES\\n2 1\\n1 3\\n3 2\\n4 2\\n4 3\\n3 2\\n2 4\\n4 1\"\n",
        "num_ids_2": 92,
        "num_ids_4": 136
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"13 4\") == \"NO\"\nassert solution(\"1000000000 3\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\nassert solution(\"11 1\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"20 20\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"10 5\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n1 1\\n1 3\\n3 2\\n2 3\\n\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\\n\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18', 'easy'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1', 'easy'\nassert solution('''4 3 1\n1 100 1 1\n''') == '100', 'easy'\n\nassert solution('''5 2 3\n1 1 3 10 1\n''') == '18', 'easy'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1', 'easy'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('4 3 1') == '100'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5 1 3\n1 100 1 1\n''') == '-1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\n\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input) == example_output\nassert solution(input) == output\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 1') == '100'\nassert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\\n5 1 3 10 1\") == \"18\"\nassert solution(\"6 1 5\\n10 30 30 70 10 10\") == \"100\"\nassert solution(\"3 3 1\\n1 100 1 1\") == \"100\"\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n00100\n''') == '3'\nassert solution('''\n6 1\n000000\n''') == '4'\nassert solution('''\n12 6\n000010000100\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution(\"12 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''4 7\n00101''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\nassert solution(\"4 1\\n0011\") == \"4\"\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"azzel\") == \"apple\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\n\n\"\"\"\n\nfrom collections import Counter\n\ns = list(map(str,input().split()))\nt = list(map(str,input().split()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'apple', \"Wrong!\"\nassert solution('apple') == 'azzel', \"Wrong!\"\nassert solution('azzel') == 'apple', \"Wrong!\"\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n\n------Submission------\n\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nzzz\na\n''') == 'Yes'\nassert solution('''\nzzz\na\n''') == 'No'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\nazzel\napple\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\nzzzzzzzzzzzz\napple\n\"\"\") == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'apple', \"Not correct\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"azzel\") == \"apple\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'apple'\n\nassert solution('apple') == 'apple'\nassert solution('aaaaa') == 'aaaaa'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '5'\nassert solution('5 3') == '3'\nassert solution('10 2') == '2'\nassert solution('10 3') == '3'\n\n----------------------------------------\n\nQ3.2\n\nWrite a program to determine the first number of the sequence of integer numbers which sum to the given number. For example, if the given number is 17, then all the possible solutions would be:\n\n
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2\n2\n2\n2\n''') == '2'\nassert solution('''\n8\n1\n5\n1\n2\n3\n3\n4\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\") == \"10\"\nassert solution(\"5 5 3\") == \"10\"\nassert solution(\"4 5 2\") == \"10\"\nassert solution(\"9 8 3\") == \"10\"\nassert solution(\"10 10 2\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n2 3\\n1 2\\n\") == \"1\"\nassert solution(\"3 5\\n5 5\\n5 3\\n\") == \"1\"\nassert solution(\"3 5\\n6 5\\n4 6\\n\") == \"0\"\nassert solution(\"20 11\\n11 11\\n12 12\\n\") == \"0\"\nassert solution(\"20 11\\n12 11\\n12 12\\n\") == \"0\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\n1 1 1 0 0 0\n1\n2 1 0 0 0\n2\n3 1 1 1 0\n3\n4 1 1 1 1\n4\n5 1 1 1 1\n5\n6 1 1 1 1\n6\n''') == '1.0'\nassert solution('''5\n1 1 1 1 1\n1\n2 1 0 0 0\n2\n3 1 1 1 1\n3\n4 1 1 1 1\n4\n5 1 1 1 1\n5\n6 1 1 1 1\n6\n''') == '1.0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1 100\") == \"1\"\nassert solution(\"1 200\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n5\\n5\\n\") == \"YES\"\nassert solution(\"5\\n2\\n5\\n5\\n\") == \"YES\"\nassert solution(\"5\\n5\\n5\\n5\\n\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n3\\n\") == \"NO\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4 3 4\\n1 2 3 4\\n4 5 4 6\\n4 5 2 5\") == \"1\\n\"\nassert solution(\"5\\n7 1 2 2 1\\n2 4 4 4 4\\n3 5 5 5 5\\n4 6 6 6 6\\n5 7 7 7 7\") == \"2\\n\"\nassert solution(\"4\\n5 3 4\\n1 2 3 4\\n4 5 2 5\\n5 6 5 6\\n6 7 6 7\\n7 8 7 8\") == \"3\\n\"\nassert solution(\"5\\n9 7 4 4\\n1 2 3 4 5\\n4 6 7 7 8\\n7 5 8 6 9\\n8 6 5 7 9\\n8 7 5 6 9\\n7 6 5 4 3\") == \"1\\n\"\nassert solution(\"5\\n9 7 4 4\\n1 2 3 4 5\\n4 6 7 7 8\\n7 5 8 6 9\\n8 6 5 7 9\\n8 7 5 6 9\\n7 6 5 4 3\\n6 8 7 8 9\") == \"0\\n\"\n",
        "num_ids_2": 82,
        "num_ids_4": 189
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"5 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '3'\nassert solution('5 2') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '1'\nassert solution('5 800') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('5 5\\n9 9\\n20 10\\n25 10\\n27 10\\n') == '3'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 700\n3 500\n5 800\n''') == '3'\nassert solution('''3 100\n2 200\n3 300\n''') == '3'\nassert solution('''2 689\n3 200\n5 600\n7 300\n7 500\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 25
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 100\n3 500\n5 800''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"10 10000\") == \"5\"\nassert solution(\"2 200\") == \"2\"\nassert solution(\"10 200\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 700\n3 500\n5 800\n\"\"\") == \"3\"\nassert solution(\"\"\"10 40000\n3 70000\n5 90000\n\"\"\") == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 2 2 2\") == \"2\"\nassert solution(\"3 4 5\") == \"3\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"4 4 4\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '2'\nassert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n5 5 4 5 5 5 6\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n8\n4 8 8 7 8 4 4 5\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n9\n2 3 4 2 2 3 2 2 4\n\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\nassert solution('''\n10\n5 5 4 5 5 5 6 6 6 6 7\n''') == '0'\nassert solution('''\n11\n4 9 4 4 4 4 4 4 4 5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('5 2 3') == '18'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"18\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\") == \"18\"\nassert solution(\"10 1 3 10 1\") == \"101\"\nassert solution(\"10 2 3 10 1\") == \"100\"\nassert solution(\"10 3 2 10 1\") == \"100\"\nassert solution(\"10 4 2 10 1\") == \"101\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''6 4 2\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n\nOutput\n18''') == '18', \"Easy\"\nassert solution('''6 1 5\n10 30 30 70 10 10\n\nOutput\n-1''') == '-1', \"Easy\"\nassert solution('''4 3 1\n1 100 1 1\n\nOutput\n100''') == '100', \"Easy\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 3 1\") == \"100\"",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'\nassert solution('''4 3 1\n1 100 1 1''') == '100'\nassert solution('''6 2 5\n2 20 4 10 3''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == '6'\nassert solution('6 2 3') == '6'\nassert solution('4 3 1') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'Yes'\nassert solution('7') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes'\nassert solution('20') == 'No'\nassert solution('30') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Yes'\nassert solution('100') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('11') == 'Yes'\nassert solution('111') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"100\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"20\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2 2 6'\nassert solution('5') == '0 0 0'\nassert solution('3') == '1 1 1'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2 2 3\"\nassert solution(\"2\") == \"2 2 1\"\nassert solution(\"1\") == \"1 1 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == \"2 2 6\"\n\n'''\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2 2 6'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('2 1 5') == '2 2 5'\nassert solution('1 2 5') == '1 1 5'\nassert solution('3 2 5') == '3 1 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2 2 6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 6 7\") == \"5 6 7\"\nassert solution(\"4\\n5 6 7\") == \"5 6 7\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"5\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n4 1 5\") == \"2 2 5\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n\"\"\"\n) == \"2 2 6\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 2 5\n1 2 5\n3 2 5\n''') == '3 2 6'\n\nassert solution('''\n3\n1 1 1\n1 2 2\n1 3 3\n''') == '1 1 1'\n\nassert solution('''\n5\n0 1 5\n0 2 5\n0 3 5\n1 2 5\n1 3 5\n''') == '0 0 6'\n\nassert solution('''\n2\n2 1 5\n1 2 5\n''') == '2 2 5'\n\nassert solution('''\n2\n3 1 5\n1 2 5\n''') == '3 1 5'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoderh') == '1'\nassert solution('redcoderz') == '2'\nassert solution('redcodern') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"bc\") == \"2\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"abcdab\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoderredo') == '2'\nassert solution('redcoderredoor') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('redcoder') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"aaa\") == \"0\"\nassert solution(\"abcd\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoder') == '2'\nassert solution('redcoder') == '3'\nassert solution('redcoder') == '4'\nassert solution('redcoder') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abcde') == '1'\nassert solution('abbcde') == '2'\nassert solution('abcdee') == '2'\nassert solution('abcdee') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"\n\nassert solution(\"2\") == \"Yes\"\n\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'Yes'\nassert solution('15') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('10') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'Yes'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n5''') == 'No'\nassert solution('''10\n20''') == 'Yes'\nassert solution('''1\n20''') == 'Yes'\nassert solution('''1\n9''') == 'No'\nassert solution('''1\n4''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n10\n6\n15\n''') == 'Yes'\nassert solution('''17\n16\n19\n''') == 'No'\nassert solution('''17\n16\n18\n''') == 'No'\nassert solution('''5\n3\n10\n6\n15\n''') == 'Yes'\nassert solution('''10\n3\n10\n6\n15\n''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"15\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 9 7 5') == '5'\nassert solution('1') == '1'\nassert solution('4') == '0'\nassert solution('12') == '0'\nassert solution('10') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\nassert solution('1\\n4 4 9 7 5') == '1'\nassert solution('2\\n4 4 9 7 5') == '1'\nassert solution('3\\n4 4 9 7 5') == '1'\nassert solution('4\\n4 4 9 7 5') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4\\n9 7 5') == '5'\nassert solution('4\\n4\\n9 7 5') == '1'\nassert solution('100\\n5\\n100 5\\n2 2 5\\n3 3 5\\n3 4 5\\n4 4 5\\n4 5 5') == '35'",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 4 9 7 5\\n') == '5'\nassert solution('5\\n6 3 5 2 4\\n') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"\nassert solution(\"5\\n3 4 9 7 5\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 4, 9, 7, 5]) == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\nassert solution('8\\n3 7 4 2 6 1 5') == '14'\nassert solution('20\\n1 1 3 1 5 1 3 3 2 2 4 2 4 2 3 5 5 5 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8",
        "num_ids_2": 36,
        "num_ids_4": 1706
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"\nassert solution(\"6\\n1 3 5 2 3\") == \"6\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 2') == '-1'\nassert solution('1 1') == '1'\nassert solution('2 10') == '-1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 3\") == \"2 3\"\nassert solution(\"-1 2\") == \"-1 2\"\nassert solution(\"2 -1\") == \"2 -1\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 2') == '-1'\nassert solution('2 7') == '-1'\nassert solution('3 4') == '6'\nassert solution('9 8') == '36'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"12 11\") == \"3\"\nassert solution(\"12 2\") == \"3\"\nassert solution(\"3 9\") == \"36\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10'\n\n'''\n\na, b = map(int, input().split())\nprint((a * b) if (a * b) < 20 else -1)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '-1'\nassert solution('2 3') == '-1'\nassert solution('1 5') == '10'\nassert solution('5 8') == '50'\nassert solution('9 5') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"2 5\\n10 12 1 2 13\\n\") == \"6\"\nassert solution(\"2 5\\n10 12 1 2 14\\n\") == \"7\"\nassert solution(\"2 5\\n1 2 3 4 5\\n\") == \"2\"\nassert solution(\"2 5\\n4 5 2 1 3\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"8 8\") == \"11\"\nassert solution(\"2 10\") == \"5\"\nassert solution(\"9 12\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"2 3\\n1 2 1 2\\n\") == \"0\"\nassert solution(\"3 3\\n1 1 2 3\\n\") == \"1\"\nassert solution(\"3 2\\n1 1 2 3\\n\") == \"2\"\nassert solution(\"4 3\\n1 1 2 3\\n\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"2 10\\n10 12 1 2 14\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 12 1 2 14') == '5'\n\"\"\"\n\nN, M = map(int, stdin.strip().split())\n\nX = sorted(list(map(int, stdin.strip().split())))\n\ndp = [[float('inf') for _ in range(N+1)] for _ in range(M+1)]\n\ndp[0][0] = 0\nfor i in range(1, M+1):\n    for j in range(1, N+1):\n        dp[i][j] = min(dp[i][j], dp[i-1][j-1] + abs(X[i-1] - X[j-1]))\n\nprint(dp[-1][-1])",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('2 6\\n5 2 4 6 8 9 10\\n7 8 9 10 12 13 14') == '4'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 0') == '1'\nassert solution('10 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"3 6\\n1 1 1 1 1 1\\n5 6 5 6 5\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == \"2\"\nassert solution(\"4 6 3\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\"\nassert solution(\"5 6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"2\"\n",
        "num_ids_2": 61,
        "num_ids_4": 99
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n1 4\n4 3\n''') == '1110'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('5 6 2') == '1'\nassert solution('3 7 3') == '1110'\nprint('Tests Passed')\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 3') == '1110'\nassert solution('5 6 2') == '110110'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\n\nassert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n\n''') == 'NO'\nassert solution('''\n2\n10 10\n\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5 5 3\n''') == 'YES'\nassert solution('''\n3\n10 10\n''') == 'YES'\nassert solution('''\n2\n10 10\n''') == 'NO'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 3\") == \"YES\", solution(\"4 5 3\")\nassert solution(\"3\") == \"YES\", solution(\"3\")\nassert solution(\"2\") == \"NO\", solution(\"2\")\n",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 1 2 5\n\n''') == 'YES'\nassert solution('''3\n4 5 3\n\n''') == 'YES'\nassert solution('''2\n10 10\n\n''') == 'YES'\nassert solution('''3\n1 2 3\n\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n4 5 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n1 2 3\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\nassert solution('''\n10 4\n-3 -6 5 4''') == '-1'\nassert solution('''\n10 5\n-4 -2 5 4\n-3 5 3 2\n3 1 0 2\n2 5 -1 -1\n2 -4 2 2\n-3 -4 1 1\n-1 4 -3 -1\n-2 -4 -2 -2\n1 0 1 1\n-3 0 -2 -1\n''') == '4999999999996'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\nassert solution('''\n1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1000 6') == '9'\nassert solution('1000000000 5') == '4999999999996'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000000000000 5') == '4999999999996'\nassert solution('1000000000000 1000') == '-1'\nassert solution('10 4') == '-1'",
        "num_ids_2": 31,
        "num_ids_4": 43
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\"\nassert solution(\"10 4\") == \"-1\"",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n2 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4\\n') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0\\n') == '4999999999996'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 6') == \"9\"\nassert solution('1000000000000 5') == \"4999999999996\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n12345\n\"\"\") == \"12345\"\n\nassert solution(\"\"\"\n2\n12345\n\"\"\") == \"12345\"\n\nassert solution(\"\"\"\n10\nhello\n\"\"\") == \"hello\"\n\nassert solution(\"\"\"\n5\nhello\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n4\nhe\n\"\"\") == \"he\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nZZZAA\") == \"ZZ\"\nassert solution(\"7\\nABACABA\") == \"AB\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\nABACABA\n''') == 'AB'\nassert solution('''\n5\nZZZAA\n''') == 'ZZ'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nABACABA\") == \"AB\"\nassert solution(\"3\\nZZZAA\") == \"ZZ\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"A\"\nassert solution(\"2\") == \"B\"\nassert solution(\"3\") == \"A\"\nassert solution(\"4\") == \"AA\"\nassert solution(\"5\") == \"AB\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ABCABC') == 'ABC'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"AB\"\nassert solution(input()) == \"ZZ\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"AB\"\nassert solution(input_t) == \"ZZ\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'\nassert solution('7\\nABACABA') == 'AB'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('west') == 'here'\nassert solution('codeforces') == 'es'\nassert solution('b') == 'es'\nassert solution('test') == 'est'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('codeforces') == 'est'\nassert solution('b') == 'b'\nassert solution('test') == 'test'\n\"\"\"\nimport sys\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"codeforces\") == \"yes\"\nassert solution(\"west\") == \"west\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('west') == 'here'\nassert solution('test') == 'here'\nassert solution('b') == 'b'\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"codeforces\") == \"ecodefforces\"\nassert solution(\"west\") == \"west\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('codeforces') == \"2\"\nassert solution('test') == \"7\"\nassert solution('yes') == \"1\"\nassert solution('b') == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"test\") == 2\nassert solution(\"west\") == 2\nassert solution(\"codeforces\") == 9\nassert solution(\"testyes\") == 7\nassert solution(\"b\") == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test) == 2\nassert solution(west) == 9\nassert solution(codeforces) == 7\n",
        "num_ids_2": 16,
        "num_ids_4": 27
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('test') == 2\nassert solution('west') == 9\nassert solution('b') == 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('test') == 'here'\nassert solution('west') == 'here'\nassert solution('codeforces') == 'es'\nassert solution('yes') == 'yes'\nassert solution('b') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"3 10\") == \"3\"\nassert solution(\"5 0\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 7 11\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('4 5 6 7 8 9 10') == '7'\nassert solution
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"10 5\") == \"9\"\nassert solution(\"5 9\") == \"7\"\nassert solution(\"10 10\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 7 11\n\n''') == '2'\nassert solution('''4 4\n2 5 1 4\n\n''') == '1'\n\nassert solution('''5 5\n2 5 1 3 4\n\n''') == '2'\nassert solution('''6 6\n1 2 1 2 3\n\n''') == '3'\n\nassert solution('''7 7\n1 1 1 2 2 3\n\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2 3') == '4'\nassert solution('3 2 1') == '0'\nassert solution('1 1 1 1') == '4'\nassert solution
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\n\"\"\"\nimport sys\nimport os\nsys.path.append(os.path.dirname(sys.path[0]))\nimport itertools",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('akas') == 'Yes'\nassert solution('akak') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes','sample test case'\nassert solution('akasaka') == 'No', 'another sample test case'\nassert solution('hakahakahak') == 'No', 'another sample test case'\nassert solution('akasakaakak') == 'Yes', 'another sample test case'\nassert solution('akasakaakak') == 'No', 'another sample test case'\n",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('madam') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n\nprint(solution(\"akasaka\"))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('tacocat') == 'No'\nassert solution('cat') == 'Yes'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abba\") == \"No\"\nassert solution(\"bab\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"babad\") == \"No\"\nassert solution(\"cbbd\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"akasak\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('takato') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1.2\") == \"1\"\nassert solution(\"0.1\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198 0.10\") == \"216\"\nassert solution(\"3 4.10\") == \"12\"\nassert solution(\"3 4.10 0.10\") == \"12\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '217'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution(\"0\") == None\nassert solution(\"0.1\") == None\nassert solution(\"10.1\") == None\nassert solution(\"1.1\") == None\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('10 0.5') == '9.5'\nassert solution('0.1 0.5') == '0.2'\nassert solution('0.1 0.1') == '0'\nassert solution('0.4 0.2') == '2'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"100 5.13\") == \"10\"\nassert solution(\"10 2.33\") == \"2\"\nassert solution(\"-5.4 5.1\") == \"0\"\nassert solution(\"3.1 5.1\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2.1\") == \"2\"\nassert solution(\"1.1\") == \"1\"\nassert solution(\"0.1\") == \"0\"\nassert solution(\"0.00001\") == \"0\"\nassert solution(\"1.00000001\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''198 1.10''') == '217'\nassert solution('''198 1.1''') == '216'\nassert solution('''17 1.12''') == '17'\nassert solution('''18 0.01''') == '18'\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPROBLEM 1323 (Medium)\n\nThe number, 197, is called a circular prime because all rotations of the digits: 197, 971, and 719, are themselves prime.\n\nThere are thirteen such primes below 100: 2, 3, 5, 7, 11, 13, 17, 31, 37, 71, 73, 79, and 97.\n\nHow many circular primes are there below one million?\n\n-----SOLUTION-----\n\nimport math",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1.1\") == \"1 1\"\nassert solution(\"10 1.1\") == \"10 1\"\nassert solution(\"100 100.1\") == \"100 100\"\nassert solution(\"-100 -1.1\") == \"-100 -1\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n8\n''') == '4'\nassert solution('''\n3\n2\n3\n''') == '0'\nassert solution('''\n4\n1\n2\n3\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '2'\nassert solution('''\n3\n1\n2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3'\nprint(solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547'))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n2''') == '1'\nassert solution('''4\n1\n2\n3''') == '3'\nassert solution('''6\n1\n2''') == '0'\nassert solution('''7\n1\n2\n3''') == '0'\nassert solution('''8\n1\n2\n3''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n5\n7''') == '3'\nassert solution('''10\n100\n10000\n2\n5\n7''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == \"3\"\n\nassert solution('''\n6\n7\n1\n2\n3\n999999999\n381621773\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n1\n1\n1\n1''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"1\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"2\"\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('9 9 1') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution(\"5 4 5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '0'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"\nprint(solution(input()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '3'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 4 1\") == \"4\"\nassert solution(\"6 1 1 4 4 4\") == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 2 4 1') == '4'\nassert solution('6\\n1 1 1 4 4 4') == '5'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '5'\nassert solution('10') == '9'\nassert solution('0') == '0'\nassert solution('-2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3 2 4 1\n''') == '4'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INP) == OUT",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'\nassert solution('4\\n1 1 1 4 4 4\\n') == '4'\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('3 3') == '000002000001'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''2 3\n1 32\n2 63\n1 12\n'''\n) == '000001000002\\n000002000001\\n000001000001\\n'\nassert solution(\n'''1 3\n1 32\n2 63\n1 12\n'''\n) == '000001000002\\n000002000001\\n000001000001\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2,3]) == '000001000002'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 2\") == \"000002000001\"\nassert solution(\"1 12\") == \"000001000001\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001\\n'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"2 2\") == \"000001000001\"\n\nprint(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('2 4') == '000002000001'\nassert solution('2 5') == '000001000001'\nassert solution('3 3') == '000001000002'\nassert solution('3 4') == '000002000001'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"3 4\") == \"000001000001\"\nassert solution(\"4 5\") == \"000001000001\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '000001000002'\n\nassert solution('1 32') == '000002000001'\n\nassert solution('2 63') == '000001000001'\n\nassert solution('1 12') == '000001000001'\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 10 8 40\\n\") == \"2\"\nassert solution(\"5\\n2 10 8 40\\n\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 5\\n\") == \"1\"\nassert solution(\"6\\n2 3 4 5 6 7\\n\") == \"5\"\nassert solution(\"3\\n2 3 4 5\\n\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n\n----------------------------------------------------------------------\n\n1021. Guess The Number\n\nThe number N is given in the following format: N = {N1, N2, N3,..., NN}.\nWrite a program to find out the number whose binary representation contains most zeroes.\n\n-----Constraints-----\n - 1 \\leq N \\leq 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nOutput the most common N bit\n\n----Hints----\n1. Use count() to find the number of N bit that contain the most 0's.\n2. find the number with most 0's\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\n2\n\nThe most common number whose binary representation contains most 0's is 2, so we return 2.\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 10 8 40\\n\") == \"2\"\nassert solution(\"100\\n1 1 100 100\\n\") == \"1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\nassert solution('2\\n7 8 10 20 30 40 50') == '30'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 1 4 5\") == \"2\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 2 5 3\") == \"4\"\nassert solution(\"4 4 4 5\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'\nprint(\"all tests passed\")\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__.,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(__+___+__-___):-___>__.,_____<__.') == 'false'\n",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\\n\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\\n\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\\n\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 140
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n",
        "num_ids_2": 50,
        "num_ids_4": 99
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0101\"\nassert solution(\"?(?(_-?_+_-?___):-___>__.\\n\") == \"false\"",
        "num_ids_2": 54,
        "num_ids_4": 155
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n?(_-_/___*__):-___>__.\n\n''') == '0010'\nassert solution('''\n?(__-_+_/_____):-__>__,_____<__.\n\n''') == 'false'\nassert solution('''\n?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n\n''') == '0250341'\nassert solution('''\n?(__+___+__-___):-___>__.\n\n''') == '0101'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0101\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n\n\n\"\"\"\n\nimport re\nimport sys",
        "num_ids_2": 54,
        "num_ids_4": 155
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nassert solution(\"?(__+___+__-___):-___>__,_____<__.\\n\") == \"false\"",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == \"3\"\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"5\"\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nassert solution(\"3 4 0\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == \"3\"\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == \"3\"\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"5\"\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\"\n\nassert solution('''\n3 4 2000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\"\n\nassert solution('''\n4 4 20\n1 2 1 2 1\n2 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\n\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nrocesfedoc\n''') == 'codeforces'\nassert solution('''\n16\nplmaetwoxesisiht\n''') == 'thisisexampletwo'\nassert solution('''\n1\nz\n''') == 'z'\nassert solution('''\n2\nzxvb\n''') == 'zxvb'\nassert solution('''\n100\nxddznc\n''') == 'xddznc'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''plmaetwoxesisiht''') == 'thisisexampletwo'\nassert solution('''z''') == 'z'\nassert solution('''hi''') == 'hi'\nassert solution('''o''') == 'o'",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"hello world!\") == \"olleh wrld!\"\nassert solution(\"codeforces\") == \"rocefcs\"\nassert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\nassert solution(\"thisisexampletwo\") == \"thisisexampletwo\"\n",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"4\") == \"ppp\"\nassert solution(\"16\") == \"plmaetwoxesisiht\"\n",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'z'\nassert solution('zz') == 'z'\nassert solution('zzzzzzzzz') == 'z'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('./test/test_input.txt', 'codeforces') == 'codeforces'\nassert solution('./test/test_input.txt', 'plmaetwoxesisiht') == 'thisisexampletwo'\n\n\n\"\"\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'\n\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == 'codeforces'\nprint(solution.__doc__, \":\", solution(stdin))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"codeforces\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"0 5\") == \"0\"\nassert solution(\"5 0\") == \"5\"\nassert solution(\"10 10\") == \"20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '19'\nassert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('1') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"5 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 + 2 * 3') == '++>+++><[<->-]<'\nassert solution('1 + 2 + 3') == '++>+++><[<->-]<'\nassert solution('1 + (2 * 3)') == '++>+++><[<->-]<'\nassert solution('1 + 2 * 3 + 4 * 5 + 6') == '++>+++><[<->-]<'\nassert solution('1 + 2 + 3 * 4 + 5') == '++>+++><[<->-]<'\n",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n3+3\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1+2+3\") == \"++>+++><[<->-]<\", \"1+2+3\"\nassert solution(\"7-8\") == \"<[<->-]<\", \"7-8\"\nassert solution(\"7+8\") == \"<+>[<->+]<\", \"7+8\"\nassert solution(\"9+7\") == \"<+>[<->-]<\", \"9+7\"\nassert solution(\"4+5\") == \"<->[<->+]<\", \"4+5\"\n\n\"\"\"",
        "num_ids_2": 52,
        "num_ids_4": 98
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"<[<->-]<\"\n\nstdin = \"\"\nstdin += \"9-7\"\nstdin += \"\\n\"\nstdin += \"++>\"\nassert solution(stdin) == \"<[<->-]<\"\n\nstdin = \"\"\nstdin += \"9-7\"\nstdin += \"\\n\"\nstdin += \"+++>\"\nassert solution(stdin) == \"<[<->-]<\"\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\", solution(\"2+3\")\nassert solution(\"9-7\") == \"+++++++++>\", solution(\"9-7\")\n\"\"\"\n\nfrom typing import List\n\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        memory, memory_limit, commands = [], 0x10000, stdin.split()\n        program_size = len(memory)\n        operators = {'+': 2, '-': 2, '<': 2, '>': 2}\n\n        for command in commands:\n            if len(command) == 1:\n                memory.append(int(command))\n            elif command[1] in operators:\n                memory.append(int(command[0]))\n                memory.append(operators[command[1]])\n            else:\n                memory.append(int(command[0]))\n                memory.append(int(command[2]))\n            memory_limit += 1\n\n        for i in range(len(memory)):\n            memory[i] += memory_limit\n\n        program_size = len(memory) - program_size\n\n        while program_size:\n            if memory[program_size] == 0:\n                program_size -= 1\n            else:\n                memory[program_size - 1] += memory[program_size]\n                memory[program_size] = 0\n                program_size -= 1\n\n        return memory\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n\"\"\"\n\n\nfrom collections import deque\n\ninput = '2+3'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\", \"2+3 failed\"\nassert solution(\"9-7\") == \"+++++++++>\", \"9-7 failed\"\n\n'''\n\n\n\nstdin = \"2+3\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '++++++++>'\nassert solution('17+3') == '<[<->-]<'\n",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2+3') == '++>', \"First example\"\nassert solution('9-7') == '+++++++++>', \"Second example\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n20\\n38\\n56\") == \"2\"\nassert solution(\"2132\\n506\\n999999999999999999\\n1000000000000000000\") == \"8\"\n\n\n\n\"\"\"\nimport sys",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1\n2\n5\n''') == '2'\nassert solution('''\n5\n1\n2\n3\n4\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1\n3\n20\n38\n''') == '2'\nassert solution('''\n4\n2\n3\n20\n38\n''') == '8'\nassert solution('''\n5\n1\n3\n20\n38\n56\n''') == '2'\nassert solution('''\n5\n2\n3\n20\n38\n56\n''') == '0'\nassert solution('''\n4\n2\n3\n20\n38\n''') == '8'\n'''\n    pass\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n\n\n\"\"\"\n\nimport sys\nimport os\n\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom utils import utils\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1\n3\n2\n''') == '2'\n\nassert solution('''\n6\n1\n3\n2\n5\n7\n8\n''') == '7'\n\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '88'\n\nassert solution('''\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '93'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('20') == '5'\nassert solution('38') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"10000\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"5\"\nassert solution(\"25\") == \"8\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '0'\nassert solution('123') == '1'\nassert solution('1234') == '1'\nassert solution('12345') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('-1') == '0'\nassert solution('8') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n20\n''') == '4'\nassert solution('''\n50\n''') == '1'\nassert solution('''\n90\n''') == '0'\nassert solution('''\n300\n''') == '0'\nassert solution('''\n-90\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"101\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"1\\n\"\nassert solution(\"5\\n\") == \"4\\n\"\nassert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"7\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '4'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1\n\"\"\"\n) == '4'\n\nassert solution(\n\"\"\"\n5\n\"\"\"\n) == '4'\n\nassert solution(\n\"\"\"\n10\n\"\"\"\n) == '6'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"01001\") == \"1\"\nassert solution(\"01011101\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"1\"\nassert solution(\"100\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"01\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 1\nassert solution(\"00\") == 1\nassert solution(\"0011\") == 2\nassert solution(\"0111\") == 3\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''000''') == '1'\nassert solution('''0000''') == '2'\nassert solution('''0011''') == '2'\nassert solution('''1111''') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '1'\nassert solution('0') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('000') == 1\n\nassert solution('001') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"000\") == \"1\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == 1\nassert solution('1') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n6 7 9 10 31\\n') == 'APPROVED'\nassert solution('6\\n7 8 10 9\\n') == 'DENIED'\nassert solution('7\\n9 5 10 5\\n') == 'APPROVED'\nprint('All tests passed!')\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n2 4 6 10\n\"\"\") == \"APPROVED\"\nassert solution(\"\"\"3\n1 1 2 2\n\"\"\") == \"DENIED\"\nassert solution(\"\"\"9\n1 5 7 2 2\n\"\"\") == \"APPROVED\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"DENIED\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10\n6\n7\n9\n10\n31\n''') == 'APPROVED'\nassert solution('''5\n6\n7\n9\n10\n31\n''') == 'DENIED'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('3') == 'DENIED'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'APPROVED'\nassert solution(input()) == 'DENIED'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"APPROVED\"\nassert solution(\"4\") == \"DENIED\"\n\nsolution(\"5\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"DENIED\"\nassert solution(\"10\") == \"APPROVED\"\nassert solution(\"10\") == \"APPROVED\"\nassert solution(\"3\") == \"APPROVED\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"4\") == \"DENIED\"\nassert solution(\"7\") == \"APPROVED\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"1\\n2 3\") == \"DENIED\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"APPROVED\"\nassert solution(\"50\") == \"DENIED\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RLRUDR\") == \"No\"\nassert solution(\"RDUDLUDR\") == \"Yes\"\nassert solution(\"RURDDUDR\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RDDUDU\") == \"No\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''RUDLUDR''') == 'Yes'\nassert solution('''RRRD''') == 'No'\nassert solution('''RUULD''') == 'No'\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        R, D, U, L = \"R\", \"D\", \"U\", \"L\"\n        dic = {\"R\": R, \"D\": D, \"U\": U, \"L\": L}\n        # Every character in an odd position (1-st, 3-rd, 5-th, 7-th) is R, U, or D.\n        odds = list(filter(lambda x: x in R+U+D, stdin))\n        # Every character in an even position (2-nd, 4-th, 6-th) is L, U, or D.\n        evens = list(filter(lambda x: x in L+U+D, stdin))\n        # If all of the characters in an odd position are R, U, or D, the string is easily playable.\n        if all(x in R+U+D for x in odds) and all(x in L+U+D for x in evens):\n            return \"Yes\"\n        return \"No\"\n\ns = Solution()\nassert s.solution('''RUDLUDR''') == \"Yes\"\nassert s.solution('''RRRD''') == \"No\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n\n---another version\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUDRLD\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UDLDLRD\") == \"No\"\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '7'\nassert solution('1') == '6'\nassert solution('5') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1\") == \"0\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"inf\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"7\"\n'''\n\nimport math\nfrom itertools import permutations",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''5\n3\n2\n4\n3\n5''') == '10'\nassert solution('''5\n3\n2\n4\n3\n5''') == '12'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"3\\n1\\n2\\n4\\n3\\n5\") == \"3\"\nassert solution(\"2\\n4\\n3\\n5\\n1\\n6\") == \"4\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\nassert solution(\"5\\n3\\n2\\n4\\n3\\n5\\n\") == \"7\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('5\\n2\\n4\\n3\\n5\\n') == '9'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n''') == '2'\n\nassert solution('''\n10\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '2'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '2'\nassert solution('5') == '2'\nassert solution('9') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n''') == '2'\nassert solution('''\n2\n''') == '2'\n\n'''\n'''\n'''\n'''\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '2'\n\n--------------------------------------------------------------------------------------------------------------------\n\nhttps://cs.nthu.edu.tw/~jianch/courses/NTHU/2019F/NTHU_CS_2019F_Spring_Thesis_2015_Chuang.pdf\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n5\n8\n9\"\"\") == \"2\"\nassert solution(\"\"\"4\n3\n0\n5\"\"\") == \"2\"\nassert solution(\"\"\"4\n4\n0\n5\"\"\") == \"1\"\nassert solution(\"\"\"2\n3\n0\n5\"\"\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\n\"\"\"\n\nfrom itertools import permutations\n\nnum = int(input())\nprint(len(list(permutations([i for i in range(10)]))), end=\"\")\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"8\\n\"\n    \"20\\n\"\n) == \"23\"\nassert solution(\n    \"5\\n\"\n    \"7\\n\"\n) == \"7\"\nassert solution(\n    \"2\\n\"\n    \"3\\n\"\n) == \"5\"\nassert solution(\n    \"3\\n\"\n    \"5\\n\"\n) == \"5\"\nassert solution(\n    \"4\\n\"\n    \"8\\n\"\n) == \"8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '5'\nassert solution('12') == '13'\nassert solution('10') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20') == '23'\nassert solution('1') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('7') == '7'\nassert solution('100') == '101'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '23'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '4'\nassert solution('8') == '13'\nassert solution('12') == '13'\nassert solution('14') == '15'\nassert solution('20') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20\") == \"23\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '11'\nassert solution('100') == '101'\nassert solution('10000') == '10001'\nassert solution('10000000') == '100000001'\nassert solution('400000000') == '400000001'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"4\\n4 3 1 3 2\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 2 3 1\") == \"1\"\nassert solution(\"3\\n4 1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n3 1 3\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 3 2\n''') == '1'\nassert solution('''\n5\n1 2 1 2 1\n''') == '2'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n10\n1 2 1 2 1 2 1 1 1\n''') == '2'\nassert solution('''\n5\n1 2 1 2 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n3 1 3 2 5') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 53
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"15\\n1 2 2 3 3 4 4 5 4 6 6 7 7 7 7 7 7 7 8 8 9 10 10 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12 12 12 12 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13",
        "num_ids_2": 34,
        "num_ids_4": 1732
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('3 3 4 4') == '24'\nassert solution('1 2 3 4') == '10'\n\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 100 90 80') == \"23\"\nassert solution('5 100 90 80 98 40 30 21 80') == \"23\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"23\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80 10 50 100 70 100 80 50 80 100') == '28'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 81\") == \"24\"\nassert solution(\"5 100 90 80 81 82\") == \"24\"\nassert solution(\"5 100 90 80 81 82 83\") == \"24\"\nassert solution(\"5 100 90 80 81 82 83 84\") == \"24\"\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 100 90 80') == '23'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 10 20 30\n60\n20\n20\n''') == '45'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\n\n\"\"\"\n\nn = int(stdin.readline())\ns = stdin.readline().rstrip()\n\nfor i in range(n):\n    for j in range(len(s)):\n        if s[j].isupper():\n            s = s[:j] + s[j].lower() + s[j+1:]\n            break\n        elif s[j].islower():\n            s = s[:j] + s[j].upper() + s[j+1:]\n            break\n\nprint(s)",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\", \"ABCXYZ\") == \"CDEZAB\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"ABCXYZ\"\n) == \"CDEZAB\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'AZBAZ'\nassert solution('5') == 'DACABA'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"CDEZAB\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2', 'ABCXYZ') == 'CDEZAB'\nassert solution('1', 'ABCXYZ') == 'ABCXYZ'\nassert solution('5', 'ABCXYZ') == 'ZYXBCA'\nassert solution('4', 'ABCXYZ') == 'CYXBAZ'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\nassert solution('100\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'YMNBACDFGKJIHGFHCLUQRTSVWXZ'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nprint(solution(\"2\\nABCXYZ\"))\nprint(solution(\"1\\nABCDEFGHIJK\"))\nprint(solution(\"0\\nABCDEFGHIJK\"))\nprint(solution(\"1\\nA\"))\nprint(solution(\"0\\nA\"))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'CDEZAB'\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input().strip()) == input().strip()\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n3\n''') == '3'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n5 2 3 2\n\"\"\") == \"3 4 2\"\nassert solution(\"\"\"\n1\n2750131 199999\n\"\"\") == \"199999\"\nassert solution(\"\"\"\n2\n1 2 3\n\"\"\") == \"1 2 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 5 2 3 2 4') == '3 4 2'\nassert solution('1\\n2750131 199999') == '199999'\nassert solution('1\\n3 5 2 3 2 4') == '3 4 2'",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('1') == '199999'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3 4 2\"\nassert solution(\"1\") == \"199999\"\nassert solution(\"2\") == \"199999\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3 4 2\"\n\nassert solution(input_from_devices=False) == \"3 4 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('1') == '199999'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('5') == '4 2 1 3'\nassert solution('1') == '1'\nassert solution('7') == '7'\nassert solution('4') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Input') == 'Output'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3 4 2'\nassert solution() == '199999'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(0).read()) == '111111112222222222'\nassert solution(open(1).read()) == '21111222222222222'\nassert solution(open(2).read()) == '11211222222222222'\nassert solution(open(3).read()) == '1111222222222222'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"11111\"\nassert solution(f) == \"21112\"\nassert solution(e) == \"1121122\"\nprint(\"Congratulations, the tests passed!\")\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\n",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n2 4 5 3 1\n''') == '11111'\nassert solution('''5 1\n2 1 3 5 4\n''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6\n''') == '1121122'\nassert solution('''4 1\n2 4 5 3 1\n''') == '21121112'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n2 4 5 3 1''') == '11111'\nassert solution('''5 1\n2 1 3 5 4''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6''') == '1121122'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 2\\n2 4 5 3 1\"\n) == \"11111\"\n\nassert solution(\n    \"5 1\\n2 1 3 5 4\"\n) == \"22111\"\n\nassert solution(\n    \"7 1\\n7 2 1 3 5 4 6\"\n) == \"1121122\"\n\nassert solution(\n    \"5 1\\n2 4 5 3 1\"\n) == \"21112\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"21112\"\nassert solution(\"5 1\\n3 5 3 1\") == \"211112\"\nassert solution(\"4 1\\n2 4 5 3 1\") == \"2111112\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"11111\"\nassert solution(\"5 1\") == \"21112\"\nassert solution(\"5 1\") == \"1121122\"\n\n\"\"\"\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\n2 4 5 3 1\n''') == '11111'\n\nassert solution('''\n5 1\n2 1 3 5 4\n''') == '22111'\n\nassert solution('''\n7 1\n7 2 1 3 5 4 6\n''') == '1121122'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n2 4 5 3 1\n''') == \"11111\"\n\nassert solution('''\n5 1\n2 1 3 5 4\n''') == \"22111\"\n\nassert solution('''\n7 1\n7 2 1 3 5 4 6\n''') == \"1121122\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('100') == '2'\nassert solution('1 3 3 7') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 1 2 3\n''') == '2'\nassert solution('''\n2\n100 1\n''') == '2'\nassert solution('''\n4\n1 3 3 7\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 1 2 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2\n100 1\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n1\n1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n10\n
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '4'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '4'\nassert solutionn\n'''",
        "num_ids_2": 20,
        "num_ids_4": 52
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example) == answer\nassert (solution(input) == answer)\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''4\n100 1\n''') == '4'\nassert solution('''3\n1 2 3\n''') == '1'\nassert solution('''2\n100 1\n''') == '0'\nassert solution('''1\n1\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    5\n    1 2 1 2 3\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    3\n    10 20 10\n    \"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '1'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('4') == '0'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('16') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n4 7 1 5 4 9\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n1\n16\n''') == '0'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n\nassert solution([4, 7, 1, 4, 9]) == '0'\n\nassert solution([1, 1, 1, 1023]) == '1'\n\nassert solution([16]) == '1'\n\nassert solution([4, 4, 4, 4, 4]) == '0'",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4 6 5') == '1'\nassert solution('6\\n1 2 3 4 5') == '0'\nassert solution('5\\n1 1 1 1023') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n') == '1'\nassert solution('5\\n') == '0'\nassert solution('4\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('1011') == '4'\nassert solution('10101') == '4'\nassert solution('10100') == '3'\nassert solution('1111') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0011') == '4'\nassert solution('0101') == '1'\nassert solution('0110') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0011') == '4'\n\"\"\"\n\n\"\"\"\nSolution using bit manipulation\n\"\"\"\n\nimport collections",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1101') == '4'\nassert solution
        "num_ids_2": 1766,
        "num_ids_4": 1766
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10101\") == \"4\"\nassert solution(\"1010110101101\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"11000\") == \"4\"\nassert solution(\"11\") == \"1\"\nassert solution(\"01\") == \"1\"\nassert solution(\"00\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"1111\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('3 3') == '3'\nassert solution('8 10') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '2'\nassert solution('''4 1\n1 2\n2 3\n3 4\n4 5''') == '4'\n''')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"10 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('3 4\\n1 2\\n2 3') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3\\n2 4') == '2'\nassert solution('4 2\\n1 3\\n2 4') == '2'\nassert solution('4 2\\n1 3\\n3 4') == '1'\nassert solution('4 2\\n1 3\\n3 4') == '1'\nassert solution('4 2\\n1 3\\n3 4') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 3\n2 4''') == '2'\nassert solution('''5 2\n2 4\n3 5''') == '1'\nassert solution('''4 2\n1 2\n3 4\n3 5''') == '1'\nassert solution('''5 2\n1 5\n2 4\n3 5''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('8\\n1 2 2 1 1 2 3 3') == '3'\nassert solution('6\\n2 3 4 5 2 1') == '3'\n\"\"\"\nfrom typing import List",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1') == '2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1'\n\n------SOLUTION BY ROHIT TALKED----",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 5\\n') == '3'\nassert solution('3\\n1 2 3\\n') == '1'\nassert solution('10\\n1 2 3 5\\n') == '3'\nassert solution('10\\n2 3 4 5\\n') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('7') == '2'\nassert solution('10') == '3'\nassert solution('100') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\n\n'''\n\nimport sys\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2 1\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution(\"5 5\") == '2'\nassert solution(\"4 10\") == '2'\nassert solution(\"2 4 1 2\") == '4'\nassert solution(\"4 10\") == '0'",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'\nassert solution('4 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 5\n-1 1\n''') == '4'\n\nassert solution('''\n2 10\n2 4 1 2\n''') == '2'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"2 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\n\"\"\"\n\nimport math\n\nn, w = list(map(int, input().split()))\n\npassengers = list(map(int, input().split()))\n\nways = 0\n\nfor i in range(n-1):\n    if (passengers[i] + passengers[i+1]) > w:\n        passengers[i+1] = w - passengers[i]\n    if (passengers[i] + passengers[i+1]) == w:\n        ways += 1\n\nprint(ways)",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8 \nassert solution('''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000 \n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9 3 6 12 4 8\"\nassert solution(input()) == \"126 42 84 28\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"100000000000\"\nassert solution(\"6\") == \"90000000\"\nassert solution(\"4\") == \"126\"\nassert solution(\"8\") == \"30000000\"\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8\"\nassert solution(\"4\\n42 28 84 126\") == \"126 42 84 28\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n\nprint(solution(input()))\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"5 4 3\"\nassert solution(\"2 3 4\") == \"4 3 2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '9 3 6 12 4 8'\nassert solution(sys.stdin.read()) == '126 42 84 28'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9 3 6 12 4 8\"\nprint(\"Hurray! All good.\")",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '''3\n    5\n    7\n    10\n    12\n    '''\n) == '3\\n7 3 5\\n'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n3 5 4 7 10 12\n''') == '3\n7\n3 5\nInput\n5\n-1 2 5 8 11\n\nOutput\n1\n8\n''')\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1\n8\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''4\n-4 1 7 -2\n''') == '3'\nassert solution('''4\n1 2 -4 -2\n''') == '1'\nassert solution('''3\n-1 2 4\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1 3 5'\nassert solution('10') == '3 5 7 10'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"2\\n[7, 3, 5]\"\nassert solution(input_2) == \"1\\n8\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1 3 5\"\nassert solution(\"10\") == \"8 9 10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"8\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"10\"\nassert solution(\"8\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 4 7 10 12') == '3'\nassert solution('5 -1 2 5 8 11') == '1'\n\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n3 5 4 7 10 12') == '3 5 7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 3\n''') == '0 2'\nassert solution('''\n2 3 3\n''') == '0 2'\nassert solution('''\n6 3 3\n''') == '1 3'\nassert solution('''\n8 3 3\n''') == '1 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '0 2'\nassert solution('1 2 2') == '0 0'\nassert solution('1 3 3') == '0 2'\n\"\"\"\n\nA, B, K = list(map(int, input().split()))",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('4 3 5') == '1 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 3\n''') == '0 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 3, 3]) == \"0 2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '0 2'\nassert solution('2 3 4') == '1 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"5 1 3\") == \"1 3\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"2\") == \"0 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"1\") == \"0\"\n\"\"\"\n\nX = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '3'\nassert solution('103') == '3'\nassert solution('1011') == '4'\nassert solution('1234') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('103') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"103\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('101') == '3'\nassert solution('102') == '2'\nassert solution('103') == '1'\nassert solution('104') == '0'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('103') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('103') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n''') == '9'\nassert solution('''10\n''') == '3'\nassert solution('''12\n''') == '3'\nassert solution('''3\n''') == '3'\nassert solution('''20\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '10'\nassert solution('5') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n\"\n    \"2\"\n) == \"9\"\nassert solution(\n    \"1\\n\"\n    \"3\"\n) == \"6\"\nassert solution(\n    \"1\\n\"\n    \"4\"\n) == \"9\"\nassert solution(\n    \"3\\n\"\n    \"1\\n\"\n    \"2\"\n) == \"12\"\nassert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"4\"\n) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '0'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"1+1+1+1+1+1+1+2=9\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"20\") == \"3628800\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1\n''') == '9'\nassert solution('''2\n3\n1\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\nassert solution('5') == '9'\nassert solution('1') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10'\nassert solution('3 1 2') == '10'\nassert solution('3 4 6') == '10'\nassert solution('4 5 6') == '10'\nassert solution('5 6') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('4\\n3 4 6') == '6'\nassert solution('4\\n5 5 4') == '10'\nassert solution('5\\n5 5 5') == '10'\nassert solution('4\\n5 5 5') == '10'\n\"\"\"\nn = int(input())\na = list(map(int, input().split()))\nmax_sum = 0\nfor i in range(1,n):\n    max_sum += (a[i-1] % a[i]) + (a[i-1] % a[i+1])\nprint(max_sum)\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"10\", \"Sample case\"\nassert solution(\"2\") == \"9\", \"Sample case\"\nassert solution(\"1\") == \"1\", \"Sample case\"\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '10'\n\nsolution('')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 4 6\\n') == '10'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3\n    3 4 6\n    '''\n) == '10'\n\nassert solution(\n    '''\n    5\n    5 4 6 3 2\n    '''\n) == '10'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '1'\nassert solution('5') == '10'\nassert solution('2') == '1'\nassert solution('4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('10\\n3 4 6') == '10'\nassert solution('1\\n3 4 6') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\nassert solution('10 2') == 'Yes'\nassert solution('10 6') == 'Yes'\nassert solution('10 4') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3\n1 2\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == 'Yes'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('6') == 'No'\nassert solution('4') == 'No'\nassert solution('3') == 'No'\nassert solution('3') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\"\nimport sys\nfrom typing import List, Dict\nfrom collections import defaultdict",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(trivial_solution) == 'Yes'\nassert solution(read_input()) == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4 1\\n5 2\\n6 3\\n') == \"Yes\"\nassert solution('5\\n1 1\\n1 1\\n1 1\\n1 1\\n') == \"No\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\nassert solution('''5\n1 2\n2 2\n1 2\n2 1\n''') == 'No'\nassert solution('''5\n1 2\n2 2\n1 2\n2 1\n''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n10\n\"\"\") == \"\"\"\n10\n\"\"\", \"The function solution should return the correct result for each of the cases above.\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('4') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2''') == '4'\nassert solution('''1''') == '2'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\", \"TEST 1\"\nassert solution(\"12\") == \"16\", \"TEST 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n''') == \"4\"\nassert solution('''\n    1\n''') == \"1\"\nassert solution('''\n    4\n''') == \"0\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1', \"You failed the first test\"\nassert solution('2') == '4', \"You failed the second test\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n8 5 1') == 'Yes'\nassert solution('5\\n3 7 1 3 5') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 8 5 1''') == 'Yes'\nassert solution('''5\n1 8 5 4 3\n''') == 'No'\nassert solution('''6\n1 5 7 1 2 1\n''') == 'No'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 8 5 1\\n') == 'Yes'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 8 5 1\\n\") == 'Yes'\nassert solution(\"6\\n3 2 4 1\\n\") == 'No'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 4 5 1\") == \"Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"2\\n5 2 8\") == \"No\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 6 5 4') == 'Yes'\n\nassert solution('4\\n3 8 5 1') == 'No'\n\nassert solution('5\\n3 8 5 4') == 'No'\n\n'''\nimport sys\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('5\\n2 2 2 2 2') == 'Yes'\nassert solution('5\\n3 7 2 1') == 'No'\nassert solution('5\\n3 5 2 1') == 'No'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 5 1\") == \"Yes\"\nassert solution(\"4 6 5 1\") == \"No\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 3\") == \"702\"\nassert solution(\"3 2\") == \"705\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"0 0\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '702'\nassert solution('4 2') == '-1'\nassert solution('2 1') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '702'\nassert solution('2 2') == '-1'\nassert solution('3 3') == '702'\n\nInput\n - N and M are integers, s1, c1 and s2, c2, s3, c3, s4, c4 are digits, separated by a single space.\nOutput\n - Return an integer, which is the smallest such integer that satisfies the following conditions:\n - The integer has exactly N digits in base ten. (We assume 0 to be a 1-digit integer. For other integers, leading zeros are not allowed.)\n - The s_i-th digit from the left is c_i. \\left(i = 1, 2, \\cdots, M\\right)\n\nSample Input 1\n3 3\n1 7\n3 2\n1 7\n\nSample Output 1\n702\n\nSample Input 2\n2 2\n0 1\n1 0\n\nSample Output 2\n-1\n\"\"\"\n\nimport unittest",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '702'\nassert solution('4 4') == '-1'\nassert solution('5 5') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '702'\nassert solution('4 5') == '-1'\nassert solution('5 4') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 7\n3 2\n1 7''') == '702'\n\nassert solution('''2 4\n0 0\n5 5\n0 0''') == '-1'\n\nassert solution('''5 5\n1 2\n5 5\n0 0\n1 7\n0 0''') == '702'\n\nassert solution('''1 2\n3 0\n2 2\n5 2\n5 2''') == '-1'\n\nassert solution('''3 2\n1 7\n3 2\n1 7''') == '702'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 7\") == \"702\", \"Sample Test 1\"\nassert solution(\"5 5\\n1 7\") == \"702\", \"Sample Test 2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '702', \"Wrong!\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('2 1\\n3 2\\n1 7') == '-1'\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '9'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n1 1 2''') == '9'\nassert solution('''3 2\n1 1 2\n1 3 2\n2 1 1''') == '12'\nassert solution('''5 3\n1 2 2 1 3 1''') == '9'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '9'\nassert solution('5 2') == '10'\nassert solution('10 2') == '36'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n''') == '9'\nassert solution('''\n5 3\n''') == '0'\nassert solution('''\n5 1\n''') == '9'\nassert solution('''\n5 10\n''') == '8'\nassert solution('''\n10 10\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"9\"\nassert solution(\"10 20\") == \"90\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"9 9\") == \"18\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('-9') == '1011'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"4\") == \"11\"\nassert solution(\"6\") == \"110\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('-9') == '1011'\nassert solution('-10') == '1010'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-9') == '1011'\nassert solution('-10') == '-10'\nassert solution('-11') == '-11'\nassert solution('-12') == '-12'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"1010\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"-2\") == \"0\"\nassert solution(\"-3\") == \"001\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"1011\"\nassert solution(\"-9\") == \"1011\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"-10\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-1234\") == \"101010\"\nassert solution(\"-999999999\") == \"11101110110\"\n",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'\nassert solution('3') == '111'\nassert solution('-8') == '-011'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-10\") == \"1101\"\nassert solution(\"-11\") == \"11101\"\nassert solution(\"-12\") == \"111111\"\nassert solution(\"-13\") == \"11111\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n-5''') == '-1'\nassert solution('''4\n5\n6\n-10''') == '-11'\n\ninput = input()",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"4 9\") == \"24\"\nassert solution(\"2 4\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\n3 5\n2 1\n\n\"\"\") == \"12\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 5\n4 9\n2 4\n''') == '12'\nassert solution('''\n2 5\n2 4\n''') == '12'\n\n---------------------------------------------------------------",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"2 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 5]) == \"12\"\nassert solution([2, 5]) == \"12\"\nassert solution([2, 5, 2]) == \"4\"\nassert solution([4, 9]) == \"12\"\nassert solution([2, 4]) == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"4 9\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\\n\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"2 5\") == \"12\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('20') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('10\\n10 4 8 7 3') == '1'\nassert solution('7\\n7 4 8 7 3') == '1'\n\n---Output---\n1\n\n---Sample Input---\n7\n0 0 0 0 0 0 0\n\n---Sample Output---\n0",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('10 4 8 7 3') == '2'\nassert solution('1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10\n10 4 8 7 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n10 4 8 7 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n10 8 7\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('5 2') == '2'\nassert solution('2 5') == '1'\nassert solution('2 2') == '1'\nassert solution('1 5') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10 4 8 7 3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"0\"\nassert solution(\"5 10 4 8 7 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n10 4 8 7 3\n''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5\n''') == \"1\"\nassert solution('''\n5 3\n1 2 3 4 5\n''') == \"2\"\nassert solution('''\n5 3\n1 2 3 3 3\n''') == \"0\"\nassert solution('''\n5 3\n1 2 3 3 4\n''') == \"3\"\nassert solution('''\n5 3\n1 2 3 3 4\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(input) == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 3\n1 2 3 3 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 2 4 5\n''') == '1'\n\nassert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\n\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\n\nassert solution('''\n1000000000 1 2 3 4 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution(\"5 3\\n1 2 2 4 5\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"7 5\") == \"4\"\nassert solution(\"6 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 5\n1 2 2 4 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 5\n3 3 2 1 1 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6 5\n1 2 2 4 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7 5\n3 3 2 1 1 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n8 5\n3 3 2 1 1 1 3\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 2 2 4 2 3') == '4'\nassert solution('7\\n3 3 2 1 1 1 3') == '4'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6 5\n1 2 2 4 2 3\"\"\") == \"3\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5\\n1 2 2 4 2 3') == '3'\nassert solution('7 5\\n3 3 2 1 1 1 3') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '2','sample test'\nassert solution('3 2') == '1','sample test'\nassert solution('6 5') == '3','sample test'\nassert solution('6 10') == '4','sample test'\nassert solution('13 9') == '10','sample test'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'\nassert solution('4\\n1 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '1000\\n9\\n1000\\n42000000000000'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"1000\"\n\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"10\"\n\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"9\"\n\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"42000000000000\"\n\nassert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == \"42000000000000\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '10'\nassert solution('10 1 3') == '9'\nassert solution('7 3 2') == '1000'\nassert solution('1 100 1') == '42000000000000'\nprint('All tests passed!')",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\n\nassert solution('''\n1\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '9'\n\nassert solution('''\n3\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '1000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '10'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('7') == '1000'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1\n1 1000\n1 1000000000''') == '1000'\n\n\nprint(solution('''\n\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\nassert solution() == \"9\"\nassert solution() == \"1000\"\nassert solution() == \"42000000000000\"",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\") == \"4\"\nassert solution(\"2\\n3 1 1\") == \"3\"\nassert solution(\"2\\n1 1 2\") == \"4\"\nassert solution(\"2\\n1 1 3\") == \"3\"\nassert solution(\"2\\n3 3 1\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(\"3\\n4 2 3\\n1 1 2\\n5 3 4\\n1 2 3\\n1 4 3\\n5 2 4\") == \"4\\n3\\n5\\n1\"\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"10 10\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6') == '2'\nassert solution('3 6') == '2'\nassert solution('4 6') == '1'\nassert solution('5 6') == '1'\nassert solution('2 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"10 20 30 40 50 60 70 80 90 100\") == \"9\"\nassert solution(\"1000 100000 10000000 100000000 1000000000 10000000000 1000000000000\") == \"51\"\nassert solution(\"1000000000 1000000000000000 1000000000000000 100000000000000000000000000000000000000000000\") == \"50\"\n",
        "num_ids_2": 22,
        "num_ids_4": 64
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \"2\"\nassert solution(\"5 6\") == \"1\"\nassert solution(\"5 10\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3,6]) == '2'\nassert solution([5,7,2,3,4,5]) == '3'\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1', \"Wrong!\"\nassert solution('2 3') == '2', \"Wrong!\"\nassert solution('3 4') == '2', \"Wrong!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1') == '2'\nassert solution('1') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n3 4 5\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 2]) == 2\nassert solution([10, 3]) == 1\nassert solution([1, 1]) == 0",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n3 4 5') == '2'\nassert solution('6 6\\n3 4 5 3 4 5') == '4'\nassert solution('7 7\\n3 4 5 3 4 5') == '3'\nassert solution('8 8\\n3 4 5 3 4 5') == '3'\nassert solution('10 10\\n3 4 5 3 4 5') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('6') == 'Yes'\nassert solution('7') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nengima') == 'No'\nassert solution('5\\nabcd\\ne\\na\\nb\\n') == 'Yes'\nassert solution('5\\nabcd\\ne\\na\\nb\\n') == 'No'\nassert solution('5\\nabcd\\ne\\na\\nb\\n') == 'Yes'\nassert solution('5\\nabcd\\ne\\na\\nb\\n') == 'Yes'\n",
        "num_ids_2": 47,
        "num_ids_4": 91
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\nhoge\nenglish\nhoge\nenigma\n\n\"\"\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == 'No'\nassert solution('1\\n') == 'Yes'\nassert solution('2\\n') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n\n### MY SOLUTION\nn = int(input())\ntakahashi = []\nfor i in range(n):\n    takahashi.append(input().split(\" \"))\n    \nfor i in range(len(takahashi)):\n    if \"\".join(takahashi[i])!= takahashi[i][0] * len(takahashi[i][0]):\n        print(\"No\")\n        exit()\n    else:\n        for j in range(1, len(takahashi[i])):\n            if takahashi[i][j][0]!= takahashi[i][j-1][-1]:\n                print(\"No\")\n                exit()\nprint(\"Yes\")\n\n### PREVIOUS SAMPLE\nn = int(input())\ntakahashi = []\nfor i in range(n):\n    takahashi.append(input().split())\n\nfor i in range(len(takahashi)):\n    if takahashi[i][0]!= takahashi[i][0] * len(takahashi[i][0]):\n        print(\"No\")\n        exit()\n    else:\n        for j in range(1, len(takahashi[i])):\n            if takahashi[i][j][0]!= takahashi[i][j-1][-1]:\n                print(\"No\")\n                exit()\nprint(\"Yes\")\n\n### SUGGESTED SOLUTION\nn = int(input())\ntakahashi = []\nfor i in range(n):\n    takahashi.append(input().split())\n\nfor i in range(len(takahashi)):\n    if takahashi[i][0]!= takahashi[i][0] * len(takahashi[i][0]):\n        print(\"No\")\n        exit()\n    else:\n        for j in range(1, len(takahashi[i])):\n            if takahashi[i][j][0]!= takahashi[i][j-1][-1]:\n                print(\"No\")\n                exit()\nprint(\"Yes\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"No\"\nassert solution(\"2 1 2 2\") == \"Yes\"\nassert solution(\"2 1 2 2 2\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nhoge\\nenigma\\n') == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '2 3\\n') == '6'\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '6'\nassert solution('2 3') == '6'\nassert solution('3 3') == '6'\nassert solution('4 3') == '3'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 1') == '1'\nassert solution('3 5') == '9'\nassert solution('5 8') == '15'\nassert solution('3 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 5') == '7'\nassert solution('100 100') == '104'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 3]) == 6\n\"\"\"\n\nfrom collections import defaultdict\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('10 3') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abc') == 'abc'\nassert solution('abcd') == 'xabcd'\nassert solution('sardine') == 'xxxxxxx'\nassert solution('one') == 'xone'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\n-------Task-------\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('test') == 'test'\nassert solution('aardvark') == 'aardvark'\nassert solution('taco cat') == 'taco cat'\nassert solution('zzzzz') == 'zzzzz'\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abcdefg\") == \"abcdefg\"\nassert solution(\"zzzzzzzzzzz\") == \"zzzzzzzzzzz\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nprint(\"Solution is correct.\")\n\"\"\"\n\nS = input()\nS = S.replace('a', 'x')\nS = S.replace('b', 'y')\nS = S.replace('c', 'z')\nprint(S)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('1\\n1') == 'No'\nassert solution('5\\n1 2 1 1 3') == 'Yes'\n",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 1\n''') == 'Yes'\nassert solution('''5\n1 2 1 3 2\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 1 1 3\n''') == 'Yes'\nassert solution('''\n10\n2 1 1 1 3 5 8 5 3 1\n''') == 'No'\nassert solution('''\n10\n1 1 1 2 2 1 1 3 3 1\n''') == 'Yes'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 1 1\n\n''') == 'No'\n\nassert solution('''5\n1 2 3 2 3\n\n''') == 'Yes'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"2\\n1 2 3\") == \"No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '0'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 -10\") == \"1\", \"Wrong result\"\nassert solution(\"1 2 3\") == \"0\", \"Wrong result\"\nassert solution(\"3 2 1\") == \"1\", \"Wrong result\"\nassert solution(\"1 2 2\") == \"0\", \"Wrong result\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('2 3 -10') == '1'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(\"\")) == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"4 3 1 2\") == \"3\"\nassert solution(\"6 3 -10 -20 -20 -10\") == \"2\"\nassert solution(\"2 1 1 2\") == \"0\"\nassert solution(\"2 1 1 1\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"-1 -2 -3\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('5 1 1 1 1 1 1 1 1 1 1 1') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1000\"\nassert solution(\"1\") == \"1001\"\n\n------------------------------------------------------------------------------------------------\n\nA simple program to find the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nThe idea is that we know that if we write a string of five characters, and we want to write the largest palindrome product possible,\nwe can write an even number of strings which each have a palindrome product.\nWe can also write two strings and the product of those palindromes is equal to the palindrome product of the first string.\nTherefore, we can write an even number of strings which each have a palindrome product.\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the largest palindrome product possible in a string of five characters\nis: \" \" * 2 + \"1\" * 3 + \" \" * 2 + \"9\" * 2\n\nWrite a program that takes in a string of characters and computes the largest palindrome product possible.\nFor example, the",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('9') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1900''') == '100'\nassert solution('''1999''') == '100'\nassert solution('''1349''') == '100'\nassert solution('''7996''') == '100'\nassert solution('''7999''') == '100'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1900') == '100'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1900') == '100'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == '2'\nassert solution('20') == '2'\nassert solution('1250') == '1'\nassert solution('1211') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"2\"\nassert solution(\"123\") == \"3\"\nassert solution(\"1234\") == \"4\"\nassert solution(\"12346789\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1000') == '1'\nassert solution('100') == '100'\nassert solution('10000') == '100'\nassert solution('50') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n3\n2\n4\n''') == '9'\nassert solution('''2\n5\n3\n4\n''') == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n5 2\n4 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n5\n5 3\n2 1\n3 4\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n1 2 3 2 3 2 3 2 1 1\n1 1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n10 9\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '8'\nassert solution('5') == '8'\nassert solution('6') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"18\"\nassert solution(\"3\") == \"24\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1\n3\n2\n\"\"\") == \"9\"\nassert solution(\"\"\"\n5\n1\n5\n1\n5\n4\n4\n\"\"\") == \"14\"\nassert solution(\"\"\"\n4\n1\n4\n4\n3\n2\n\"\"\") == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2\") == \"9\"\nassert solution(\"2 3 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2\") == \"9\", \"Wrong\"\nassert solution(\"2 4\") == \"6\", \"Wrong\"\nassert solution(\"3 1 5 2\") == \"7\", \"Wrong\"",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 10 20\n8 15 13\n16 22''') == 'No War'\nassert solution('''3 2 10 20\n8 15 13\n16 22''') == 'War'\nassert solution('''3 1 10 20\n8 15 13\n16 22''') == 'War'\nassert solution('''3 1 10 20\n8 16 13\n16 22''') == 'War'\nassert solution('''3 1 10 20\n8 12 13\n16 22''') == 'War'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 10 20\n8 15 13\n16 22\n''') == 'War'\nassert solution('''\n3 2 10 20\n8 15 13\n16 22\n''') == 'No War'\nassert solution('''\n3 2 10 20\n8 15 13\n16 22\n''') == 'War'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"2 3 4\") == \"War\"\nassert solution(\"2 3 4\") == \"No War\"\nassert solution(\"2 3 4\") == \"No War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"War\"\n\"\"\"\n\nfrom typing import List\nimport sys",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 1 2') == 'No War'\nassert solution('5 5 6 6') == 'War'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\n\n-----------------------------------------------------------\nProblem - 17 -\n\nWrite a Python program to print the multiplication table of a number.\n\nSample Output:\nMultiplication Table\n\n2 4 6 8 12 16\n8 4 2 12 16\n4 8 10 12 16\n6 12 18 24\n12 18 36 48\n16 24 48 64\n18 24 48 72\n24 48 72 96\n\n-----------------------------------------------------------\nProblem - 18 -\n\nWrite a Python program to print the sum of the first n positive integers.\n\nSample Output:\nPositive Integers\n\n10\n15\n20\n25\n30\n35\n40\n45\n50\n55\n60\n65\n70\n75\n80\n85\n90\n95\n100\n\n-----------------------------------------------------------\nProblem - 19 -\n\nWrite a Python program to print the even numbers from a given list.\n\nSample Output:\nEven numbers\n\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n\n-----------------------------------------------------------\nProblem - 20 -\n\nWrite a Python program to print the given string in the lowercase, uppercase and titlecase.\n\nSample Output:\nSample Input    Expected Output\n\"Hello World\"    \"hello world\"\n\"Python Exercises\"    \"python exercises\"\n\"Mixed Case\"    \"mixed case\"\n\"UPPER CASE\"    \"upper case\"\n\"Capitalize\"    \"capitalize\"\n\n-----------------------------------------------------------\nProblem - 21 -\n\nWrite a Python program to print the even numbers in a given list.\n\nSample Output:\nEven numbers\n\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n\n-----------------------------------------------------------\nProblem - 22 -\n\nWrite a Python program to remove duplicates from list.\n\nSample Output:\nSample Input    Expected Output\n[1, 2, 2, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 2, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 3, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 3, 3, 3, 4]    [1, 2, 3, 4]\n\n-----------------------------------------------------------\nProblem - 23 -\n\nWrite a Python program to remove duplicates from list.\n\nSample Output:\nSample Input    Expected Output\n[1, 2, 2, 2, 3, 4, 5]    [1, 2, 3, 4, 5]\n[1, 2, 2, 2, 2, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 2, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 3, 3, 4]    [1, 2, 3, 4]\n[1, 2, 2, 2, 3, 3, 3, 4]    [1, 2, 3, 4]\n\n-----------------------------------------------------------\nProblem - 24 -\n\nWrite a Python program to convert a list of integers into a string and vice versa.\n\nSample Output:\nSample Input    Expected Output\n[1, 2, 3]    \"[1, 2, 3]\"\n[1, 2, 3]    \"[1, 2, 3]\"\n[1, 2, 3]    \"[1, 2, 3]\"\n[1, 2, 3]    \"[1, 2, 3]\"\n[1, 2, 3]    \"[1, 2, 3]\"\n\n-----------------------------------------------------------\nProblem - 25 -\n\nWrite a Python program to find the intersection of two given arrays.\n\nSample Input    Expected Output\n[1, 2, 2, 3, 3, 3]    [3]\n[1, 2, 2, 2, 2, 3]    [2, 3]\n[1, 1, 2, 2]    [2]\n\n-----------------------------------------------------------\nProblem - 26 -\n\nWrite a Python program to find the length of the intersection of two given arrays.\n\nSample Input    Expected Output\n[1, 2, 2, 3, 3, 3]    3\n[1, 2, 2, 2, 2, 3]    5\n[1, 1, 2, 2]    3\n\n-----------------------------------------------------------\nProblem - 27 -\n\nWrite a Python program to find the union and intersection of two given arrays.\n\nSample Input    Expected Output\n[1, 2, 2, 3, 3, 3]    [1, 2, 3, 3]\n[1, 2, 2, 2, 2, 3]    [1, 2, 2, 3, 3, 3]\n[1, 1, 2, 2]    [1, 2, 2, 2]\n\n-----------------------------------------------------------\nProblem - 28 -\n\nWrite a Python program to create a histogram from a given list of integers.\n\nSample Output    Expected Output\nSample Input    Expected Output\n[1, 2, 2, 3]    [1]\n[1, 2, 2, 2]    [1, 2]\n[1, 2, 2, 2]    [1, 2, 2]\n[1, 2, 2, 2]    [1, 2, 2, 2]\n[1, 2, 2, 2]    [1, 2, 2, 2]\n\n-----------------------------------------------------------\nProblem - 29 -\n\nWrite a Python program to print the first and last colors from the following list.\n\ncolors = [\"red\", \"blue\", \"green\", \"black\", \"white\"]\n\nSample Output    Expected Output\n['red', 'blue', 'green']    ['red', 'green', 'blue']\n['red', 'blue', 'green']    ['red', 'green', 'blue']\n['red', 'blue', 'green']    ['red', 'green', 'blue']\n['red', 'blue', 'green']    ['red', 'green', 'blue']\n['red', 'blue', 'green']    ['red', 'green', 'blue']\n\n-----------------------------------------------------------\nProblem - 30 -\n\nWrite a Python program to print the examination schedule. (extract the date from exam_st_date).\n\nexam_st_date = (11, 12, 2014)\n\nSample Output    Expected Output\n11:31:00 AM\n12:00:00 PM\n12:30:00 PM\n1:00:00 PM\n2:00:00 PM\n2:30:00 PM\n3:00:00 PM\n3:30:00 PM\n4:00:00 PM\n4:30:00 PM\n5:",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"10 10 10 10\") == \"No War\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n5\\n1\\n\") == \"2\"\nassert solution(\"2\\n5\\n2\\n\") == \"2\"\nassert solution(\"2\\n5\\n3\\n\") == \"2\"\nassert solution(\"3\\n2\\n5\\n\") == \"3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"2\"\n\nstdin = \"1\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n4\\n5\\n\") == \"4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n5\\n') == '6'\nassert solution('4\\n1\\n2\\n') == '5'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '5'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 36,
        "num_ids_4": 60
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '7'\nassert solution('4') == '9'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"4\\n12\\n24\") == \"24\"\nassert solution(\"5\\n28\\n33\") == \"21\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"9\"\nassert solution(\"6\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"0\"\nassert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 2 3 4\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('5 9 3 6') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"0\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['1\\n', '2\\n', '3\\n']) == '0'\nassert solution(['1\\n', '2\\n', '3\\n', '4\\n']) == '0'\nassert solution(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n']) == '0'\nassert solution(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n', '6\\n']) == '0'\nassert solution(['1\\n', '2\\n', '3\\n', '4\\n', '5\\n', '6\\n', '7\\n']) == '0'\n",
        "num_ids_2": 53,
        "num_ids_4": 126
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 2\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '1'\nassert solution('1') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('5\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    3 3\n    3 2 1\n    1 2 3\n    4 5 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n    4 3\n    1 6 3 4\n    5 10 7 8\n    9 2 11 12\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n3 2 1\n1 2 3\n4 5 6\"\"\") == \"6\"\nassert solution(\"\"\"4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\"\"\") == \"2\"\nassert solution(\"\"\"3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\"\"\") == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\nassert solution('3 3') == '6'\nassert solution('4 3') == '2'\nassert solution('3 4') == '0'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''\n4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '0'\nassert solution('''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 2 1\\n1 2 3\\n4 5 6\") == \"6\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"2\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3\\n4 5 6\\n') == '6'\nassert solution('4 3\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '2'\nassert solution('3 4\\n1 6 3 4\\n5 10 7 8\\n9 2 11 12\\n') == '0'\n\n\"\"\"\n",
        "num_ids_2": 59,
        "num_ids_4": 90
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"5\"\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"5\"\nassert solution(input, True) == \"99\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"2\") == \"99\"\nassert solution(\"1 100\") == \"99\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 100\n''') == '99'\nassert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '99'\nassert solution('6') == '199'\nassert solution('2') == '100'\nassert solution('6') == '999'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 20 20 20\\n\") == \"2\"\nassert solution(\"6\\n1 100\\n\") == \"99\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 100\n\n''') == '99'\nprint(\"All tests passed\")\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '3'\nassert solution('''\n3\n0 0 0\n''') == '0'\nassert solution('''\n4\n1 0 1 1 0\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '3'\nassert solution('''\n7\n1 0 1 1 1 0 1\n''') == '3'\nassert solution('''\n3\n0 0 0\n''') == '0'\nassert solution('''\n5\n1 0 1 0 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 0 1 0 1\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\") == \"0\"\nassert solution(\"3\\n0 0 0\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"3\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\nassert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('13') == '2'\nassert solution('123') == '3'\nassert solution('15') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('12345') == '12345'\nassert solution('1234567890') == '1234567890'",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == '1'\nassert solution(7) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"6\") == \"0\"\nassert solution(\"8\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"16\") == \"0\"\nassert solution(\"50\") == \"2\"\nassert solution(\"1000000\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('5') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == 3\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == 4\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\nassert solution('''\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'\nassert solution('''\n1\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"3\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == \"4\"\nassert solution('9') == \"3\"\nassert solution('1') == \"1\"\nassert solution('4') == \"3\"\nassert solution('2') == \"1\"\n\n'''\n\n\n'''\n  \uc815\ub82c\ud574\ubc84\ub824\uc11c \uac00\ub2a5\ud55c \uc560\ub4e4\uc758 \uc218\uc5f4\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774\ub2e4. \uadf8\ub7f0\ub370 \uc774\uac83\uc740 \uc26c\uc6b4\ub370, \uc774\ucc98\ub7fc \ubc30\uc5f4\uc5d0 \ud3ec\ud568\ub418\uc5b4 \uc788\ub294 \ubaa8\ub4e0 \uc560\ub4e4\uc744 \uc77d\uc5b4 \ub4e4\uc784\uc744 \uc54c\uace0 \uc788\ub2e4.\n\n\ub098\ub294 \uc815\ub82c\uc774 \uac00\ub2a5\ud558\ub2e4. \uadf8\ub9ac\uace0 \uadf8 \uc815\ub82c\uc744 \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ub9cc\ub4e4\uc5b4\uc57c \ud558\ub294 \ubc30\uc5f4\uc744 \uc0dd\uac01\ud558\uace0 \uc0dd\uac01\ud574\ub098\uac00\uba70, \uc644\uc804 \ud0d0\uc0c9\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4. \uadf8 \uacfc\uc815\uc5d0\uc11c \ud0d0\uc0c9\uc744 \ub9ce\uc774 \ud558\uba74 \ub418\uae30 \ub54c\ubb38\uc774\ub2e4.\n\n\ubc30\uc5f4\uc5d0 \uc788\ub294 \uac12\uc744 \uc77d\uc5b4\uc11c \uadf8 \uac12\uc774 \uc18d\ud574 \uc788\ub294 \uc560\ub4e4\uc744 \uc120\uc815\ud558\uace0, \uc120\uc815\ub41c \uc560\ub4e4\uc744 \ubc30\uc5f4\uc5d0 \ub123\ub294\ub2e4. \n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n' 'parmesan hard\\n' 'emmental hard\\n' 'edam hard\\n' 'colby hard\\n' 'gruyere hard\\n' 'asiago hard') == '4'\nassert solution('3\\n' 'brie soft\\n' 'camembert soft\\n' 'feta soft\\n') == '3'\n'''\n\nn = int(input())\n\ncheese_types = {}\n\nfor _ in range(n):\n    cheese_types[input()] ='soft' if input() =='soft' else 'hard'\n\nprint(len(cheese_types))\nfor cheese, type in cheese_types.items():\n    print(cheese, type)\n\n'''",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nsweiss hard') == '3'\n\nassert solution('6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n') == '4'\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8\\nbra\\n)\nassert solution('9\\nbra\\n)\nassert solution('10\\nbra\\n)\nassert solution('11\\nbra\\n)",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nbrie\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft') == '3'\nassert solution('5\\nparmesan\\nhard\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft\\nsoft') == '4'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    6\n    parmesan hard\n    emmental hard\n    edam hard\n    colby hard\n    gruyere hard\n    asiago hard\n    ''') == '4'\n''')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"brie soft\\ncamebarmy soft\\nfeta soft\\ngouda soft\"\nassert solution(\"6\") == \"parmesan hard\\nemmental hard\\nceddar hard\\ngougere hard\\ngruyere hard\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n2 5 1 5 3 4 3\\n') == '0 0 0 1 0 2 4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 1\n3 4 5\n\n''') == '1 0 0 2'\nassert solution('''\n4\n0 1 2 1\n3 2 1 1\n\n''') == '0 0 0 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2', \"First example\"\nassert solution('7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4', \"Second example\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 1 2 1\n3 2 1 1\n\"\"\") == \"\"\"1 0 0 2 \n\"\"\", \"\"\"solution(\"\"\" + repr(stdin) + \"\"\")\"\"\", \"\"\"solution(input())\"\"\", \"\"\"solution.__doc__\"\"\", \"\"\"solution.__name__\"\"\", \"\"\"solution.__module__\"\"\", \"\"\"solution.__qualname__\"\"\", \"\"\"solution.__defaults__\"\"\", \"\"\"solution.__kwdefaults__\"\"\", \"\"\"solution.__annotations__\"\"\", \"\"\"solution.__bases__\"\"\", \"\"\"solution.__dict__\"\"\", \"\"\"solution.__closure__\"\"\", \"\"\"solution.__globals__\"\"\", \"\"\"solution.__kwdefaults__\"\"\", \"\"\"solution.__module__\"\"\", \"\"\"solution.__name__\"\"\", \"\"\"solution.__qualname__\"\"\", \"\"\"solution.__doc__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__name__\"\"\", \"\"\"solution.__doc__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"\", \"\"\"solution.__package__\"\"\", \"\"\"solution.__file__\"\"\", \"\"\"solution.__path__\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2', \"3 2 1 1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4\n0 1 2 1\n3 2 1 1\n\n\"\"\") == \"1 0 0 2\"\n\nassert solution(\n\"\"\"\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n\n\"\"\") == \"0 0 0 1 0 2 4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 0 2 3 0'\nassert solution('7') == '0 0 0 1 0 2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3\n3\n''') == '1 0 0 2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 2 1\\n3 2 1 1\\n\") == \"1 0 0 2\"\nassert solution(\"5\\n2 5 1 5 3 4 3\\n\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n1\n0\n''') == '0', 'Wrong!'\nassert solution('''1\n0\n1\n0\n''') == '1', 'Wrong!'\nassert solution('''1\n1\n0\n0\n''') == '0', 'Wrong!'\nassert solution('''1\n0\n1\n0\n''') == '0', 'Wrong!'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00110011\") == \"0\"\nassert solution(\"01010101\") == \"1\"\nassert solution(\"11111111\") == \"1\"\nassert solution(\"11011111\") == \"0\"\nassert solution(\"11111111\") == \"1\"\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n0\\n1') == '1'\nassert solution('0\\n1\\n1\\n0') == '0'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"0\"\ninput = input()\nassert solution(input) == \"1\"\ninput = input()\nassert solution(input) == \"1\"\ninput = input()\nassert solution(input) == \"0\"\ninput = input()\nassert solution(input) == \"0\"\ninput = input()\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''0\n1\n1\n0\n''') == '0'\n\n\n'''",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 15 80') == \"Yes\"\nassert solution('1 1 1') == \"Yes\"\nassert solution('1 1 2') == \"No\"\nassert solution('10 10 10') == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"1 1 2\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 15 80') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 10 10\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 60 80\") == \"No\"\nassert solution(\"1000 0 80\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 3\") == \"Yes\"\nassert solution(\"2 5 100\") == \"No\"\nassert solution(\"100 5 6\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1 2 3') == 'No'\n\"\"\"\n\nd, t, s = [int(x) for x in input().split()]\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('10 100 80') == 'Yes'\nassert solution('20 70 80') == 'No'\nassert solution('20 50 80') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"3 8 10\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"10 20 10\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 92,
        "num_ids_4": 138
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n79') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n75') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n74') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n76') == 'No'\n",
        "num_ids_2": 59,
        "num_ids_4": 121
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42\\n42 42 42') == 'Yes'\nassert solution('60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60\\n60 60 60') == 'Yes'\n\nimport sys\n",
        "num_ids_2": 108,
        "num_ids_4": 170
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''41 2\n5 6\n''') == '30', \"Wrong!\"\nassert solution('''41 2\n5 7\n''') == '30', \"Wrong!\"\nassert solution('''41 2\n5 7\n''') == '-1', \"Wrong!\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"30\"\nassert solution(\"1 2\") == \"30\"\nassert solution(\"1 1\") == \"30\"\nassert solution(\"1 1\") == \"30\"\nassert solution(\"1 10\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\nassert solution(\"8 5\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '30'\nassert solution('10 1') == '-1'\nassert solution('20 8') == '30'\nassert solution('100 3') == '30'\nassert solution('8 5') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '30'\nassert solution('41 2') == '30'\nassert solution('-1') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\nassert solution('''41 1\n5 1\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '30'\nassert solution('41 2') == '30'\nassert solution('41 2') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '-1'\nassert solution('41 2') == '30'\nassert solution('31 2') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('41 2') == '30'\nassert solution('1 2') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 5') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 3') == '5'\nassert solution('1 6') == '6'\nassert solution('2 6') == '6'\nassert solution('2 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"0 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('0 1') == '1'\nassert solution('1 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 5\") == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '5'\nassert solution('2 5') == '4'\nassert solution('3 5') == '3'\nassert solution('4 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"3 0\") == \"3\"\nassert solution(\"4 0\") == \"4\"\nassert solution(\"5 0\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 5\\n\") == \"5\"\nassert solution(\"1 3\\n\") == \"1\"\nassert solution(\"0 1\\n\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('20') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"4\\n3 2 1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '2'\nassert solution('5\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\n'''\n\nimport sys\nimport math\n\nn = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 6 8\n''') == '2'\nassert solution('''4\n2 2 2 2\n''') == '2'\nassert solution('''5\n1 1 1 1\n''') == '1'\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''13\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\\n7 6 8\") == \"2\"\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\nassert solution(\"6\\n3 5 4 1 2 3\") == \"3 5 1 2 4\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3\\n4 5 6') == '1 2 4 5 3 6'\nassert solution('10\\n3 4 5 2 6 1 1 2') == '1 2 3 4 5 6 1 2 1'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 3 1\n''') == '3 1 2'\nassert solution('''\n4\n1 2 4\n''') == '1 2 4 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '3 1 2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\n\"\"\"\n\nimport sys",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n\n\"\"\"\nn = int(input())\n\nstdin = input()\nnums = stdin.split()\n\nnums.sort(reverse=True)\nprint(' '.join(map(str, nums)))",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3 1\n''') == '3 1 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 3 1\") == \"2 1 3\"\nassert solution(\"3 2 1\") == \"2 1 3\"",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3 1 2'\nassert solution('3') == '2 1 3'\n\n-----------------------------------------------------\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 7 100\n''') == '9'\nprint(solution('''10 7 100\n'''))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 0 100\") == \"0\"\nassert solution(\"10 7 99\") == \"0\"\nassert solution(\"10 7 100000\") == \"0\"\nassert solution(\"10 7 1000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('100 10 1000') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 8 32') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 0 3 1') == '0'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 9 100') == '9'\nassert solution('10 9 100 12345') == '12345'\nassert solution('10 9 100 12345678') == '12345678'\nassert solution('10 9 100 123456789') == '123456789'\n",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([10, 7, 100]) == \"9\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 7 100') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([10, 7, 100]) == '9'\nassert solution([10, 7, 12345]) == '123485'\nassert solution([10, 7, 12345]) == '123485'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 2",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 150\\n150 140 100 200\\n') == '2'\nassert solution('1 1\\n') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == \"2\"\nassert solution('1 2 3 4 5 6') == \"5\"\nassert solution('1 2 3 4 5 6 7 8') == \"7\"\nassert solution('1 2 3 4 5 6 7 8 9') == \"9\"\nassert solution('1 2 3 4 5 6 7 8 9 10') == \"10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"5 6\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '2'\nassert solution('4\\n10\\n12\\n20\\n') == '2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 1') == '2'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5\\n5 4 2 1\\n') == 'Yes'\nassert solution('6 2\\n5 4 2 1\\n') == 'No'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 1\n5 4 2 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4 1\n10 3 2 1\n\"\"\") == \"No\"\nassert solution(\"\"\"\n4 1\n1 2 3 4 5\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n10 1\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"5 1\") == \"No\"\n\n\"\"\"\n\nfrom itertools import permutations",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\nassert solution(\"6 4\\n8 6 2 1 3 5 1\\n\") == \"No\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('3 1') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([[5, 4, 2, 1], 3]) == \"Yes\"\nassert solution([[5, 4, 2, 1], 5]) == \"No\"\nassert solution([[5, 4, 2, 1], 5, 2]) == \"Yes\"\nassert solution([[5, 4, 2, 1], 5, 2, 5]) == \"Yes\"\nassert solution([[5, 4, 2, 1], 5, 2, 5, 2]) == \"No\"\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == 'Yes'\nassert solution('4 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n..#\n###\n''') == '5'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\nassert solution('''\n10 10 3\n...#..#..\n.##....##.\n##....#.#.\n.##....##.\n.##....#..\n''') == '15'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''5 3 2\n..#\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 3 2\"\n    \"..#\"\n    \"###\"\n) == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 2\n..#\n###''') == \"5\"\nassert solution('''4 4 3\n####\n##..\n###''') == \"5\"\nassert solution('''10 10 3\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3 2\n..#\n###\n''') == '5'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"0 0\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 20') == '2'\nassert solution('2020 2040') == '2'\nassert solution('1 1') == '1'\nassert solution('2 3') == '1'\nassert solution('20 20') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\"\"\"\n\nimport math\n\nL, R = map(int, input().split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\"\"\"\n\nl, r = map(int, stdin.split())\n\nprint((l * r) % 2019)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 20') == '1'\nassert solution('1 2 3 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"AC\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'WA'\nassert solution('AtCoder') == 'AC'\nassert solution('AbCdEfGhIjKlMnOpQrStUvWxYz') == 'AC'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'WA'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 76
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"AC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'AC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'AC', 'WA'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ATCODEBA') == 'AC', 'WA'\nassert solution('ATCABAA') == 'AC', 'WA'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtcoDe\") == \"WA\"\nassert solution(\"atcoDe\") == \"AC\"\nassert solution(\"AtcoDe123\") == \"WA\"\nassert solution(\"AtCoder123\") == \"WA\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ATCODER\") == \"AC\"\nassert solution(\"AATCODEB\") == \"WA\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz') == 'AC'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"LOL\") == \"WA\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1214') == '2'\nassert solution('1324') == '13332244444'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1214') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1324') == '3'\nassert solution('1223') == '1'\nassert solution('1312') == '1'\nassert solution('1214') == '2'\nassert solution('1213') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1324') == '1333224444', 'Test 1 failed'\nassert solution('1324') == '133333333322224444444444444444', 'Test 2 failed'\nassert solution('123456789') == '123456789', 'Test 3 failed'\nassert solution('1234') == '1234', 'Test 4 failed'\nassert solution('1221') == '21', 'Test 5 failed'\nprint('All Tests Pass')\n",
        "num_ids_2": 46,
        "num_ids_4": 84
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"121222\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"123\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1214') == '2'\nassert solution('123123') == '3'\nassert solution('0123456789') == '1'\nassert solution('554555555555') == '5'\nassert solution('111111111111') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1324') == '3'\nassert solution('123456789101112131415161718') == '9'\nassert solution('1324') == '3'\nassert solution('1234') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1324\") == \"1333224444\"\nassert solution(\"1324\") == \"1333333333222244444444444444\"",
        "num_ids_2": 22,
        "num_ids_4": 57
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1324') == '3'\nassert solution('1214') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('5\\n5 4 3 2 1') == 'NO'\n\"\"\"\nfrom itertools import permutations\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('5 1 3 2 4') == 'NO'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\", \"Should be YES\"\nassert solution(\"5 2 4 3 1\") == \"NO\", \"Should be NO\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n5 2 3 4 1\n''') == 'YES'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\nassert solution('4\\n5 1 2 3') == 'NO'\nassert solution('4\\n5 3 1 2') == 'NO'\nassert solution('3\\n5 2 4 1') == 'YES'\nassert solution('5\\n1 2 3 4') == 'NO'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('100 3 1 2') == 'NO'\nassert solution('10 1 2 3 4') == 'YES'\nassert solution('5 1 2 3 4') == 'NO'\nassert solution('10 1 2 3 4 5') == 'YES'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3 4 1') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\nn = int(input())\np = list(map(int, input().split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == 'YES', solution('1 2 3 4 5')\nassert solution('2 1 3 4 5') == 'NO', solution('2 1 3 4 5')",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_1) == '2'\nassert solution(example_input_2) == '33'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    ''') == '1'\nassert solution('''\n    6\n    ''') == '1'\nassert solution('''\n    201920181\n    ''') == '4'\nassert solution('''\n    6\n    ''') == '4'\nassert solution('''\n    1000000000000000000000000000000000\n    ''') == '33'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2|0|1|9|201|81\") == \"4\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3121') == '2'\nassert solution('201920181') == '4'\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1442
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input) == '2'\nassert solution(input) == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"3\"\nassert solution(\"8\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(\"\")) == \"0\"\nassert solution(input(\"\\n\")) == \"0\"\nassert solution(input(\"\")) == \"0\"\nassert solution(input(\"\")) == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution([13, 37, 39, 0, 0, 0, 0]) == \"0\"\nassert solution([1, 2, -1, -6, -12, 6]) == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 53
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"3\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3\\n\") == \"0\"\nassert solution(\"5\\n1 2 -1\\n-6 -12 6\\n\") == \"3\"\n",
        "num_ids_2": 35,
        "num_ids_4": 80
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 4 7 11 3\\n') == '2\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"3\") == 1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '0'\nassert solution('''4\n0 0 0 0\n1 2 3\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2'\nassert solution(input_1) == '0'\nassert solution(input_2) == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '0'\n\nassert solution('''\n4\n0 0 0 0\n1 2 3 4\n''') == '3'\n\nprint('Time: {:.3f}s'.format(time() - start_time))\nprint('max_zeroes: {}'.format(max_zeroes))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\n10\ncodeforces\ndodivthree\n\n''') == '5'\n\nassert solution('''\n\n7\nabaca?b\nzabbbcc\n\n''') == '6 5'\n\nassert solution('''\n\n9\nbambarbia\nhellocode\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n'\n                'abaca?b') == '5'\nassert solution('10\\n'\n                'codeforces') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n?b??\nzzzz\n''') == '10'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"5\"\nassert solution(\"9\") == \"0\"\nassert solution(\"11\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\ncatcodeforces\ncodetest\ncodetest\ncodetest\ncodetest\ncodetest\ncodetest\ncodetest\n''') == '5'\nassert solution('''\n9\nbambarbia\nhellocode\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\ncodeforces\ndodivthree\n''') == '5'\nassert solution('''\n7\nabaca?b\nzabbbcc\n''') == '6 5'\nassert solution('''\n9\nbambarbia\nhellocode\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\nassert solution('5') == '5'\nassert solution('7') == '6'\nassert solution('6') == '6'\nassert solution('2') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 57
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution('5\\n1 1 1 1 1\\n') == '4'\nassert solution('7\\n4 1 2 2 1 5 3\\n') == '3'\nassert solution('8\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 78
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"3 4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 58
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 1 2 1\n''') == '3'\nassert solution('''2\n1 1\n''') == '2'\nassert solution('''6\n0 1 1 1 1 1\n''') == '5'\nassert solution('''1\n0\n''') == '0'\nassert solution('''12\n0 1 1 1 1 1 1 1\n''') == '11'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '3 4'\nassert solution('4') == '4 4'\nassert solution('7') == '3 4'\nassert solution('5') == '4 4'\nassert solution('10') == '2 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"3 4 4 4 4 4\"",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4'\nassert solution('7\\n4 1 2 2 1 5 3') == '3 7'",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution(\"11\") == \"4\"\nassert solution(\"7\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([6, 11, 1, 2, 1, 10, 12, 11, 7]) == 7\nassert solution([6, 4, 10, 12, 11, 7]) == 12\nassert solution([5, 2]) == 0\n",
        "num_ids_2": 42,
        "num_ids_4": 52
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n3 7 19 3 3''') == '0'\nassert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n2 78 4 10\n''') == '7'\nassert solution('''\n6 11\n45 1 10 12 11 7\n''') == '7'\nassert solution('''\n5 2\n3 7 19 3 3\n''') == '0'\nassert solution('''\n6 4\n2 78 4 10\n''') == '12'\nassert solution('''\n5 3\n2 4 6 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 11\n45 1 10 12 11 7\n''') == '7'\n\nassert solution('''\n4 2\n2 78 4 10\n''') == '12'\n\nassert solution('''\n5 2\n3 7 19 3 3\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([6, 11], [45, 1, 10, 12, 11, 7]) == 7\nassert solution([4, 2], [2, 78, 4, 10, 7]) == 12\nassert solution([5, 2], [3, 7, 19, 3, 3]) == 0\n\n'''\n",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'\n\n\"\"\"\n\nimport itertools\nimport math",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 6]) == 7\nassert solution([4, 2]) == 0\nassert solution([5, 2]) == 0",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"3\") == \"9\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\n\n\"\"\"\nimport sys\n\nstdin_lines = []\nwhile True:\n    stdin_lines.append(sys.stdin.readline())\n    if len(stdin_lines[-1]) == 0:\n        break\n\nn = int(stdin_lines[0][0])\na = list(map(int, stdin_lines[1].split()))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"8\") == \"7\"\nassert solution(\"3\") == \"6\"\nassert solution(\"6\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 9\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 5\\n') == '9'\nassert solution('3\\n1 2 5\\n') == '7'\nassert solution('3\\n1 2 3\\n') == '5'\nassert solution('3\\n2 2 4\\n') == '5'\nassert solution('2\\n2 2 3\\n') == '5'\n\nstdin = '3\\n2 5\\n'\nprint(solution(stdin))\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '9'\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 5') == '9'\nassert solution('3\\n-1 -2 -3') == '5'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n5''') == '9'\nassert solution('''3\n2 5''') == '9'\nassert solution('''3\n-1 -2 -3''') == '-1'\nassert solution('''5\n2 5''') == '9'\nassert solution('''2\n-2 -3''') == '-2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 5\\n\") == \"9\"\nassert solution(\"3\\n-1 -2 -3\\n\") == \"5\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == '110'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\\n1 2 2 10\") == \"110\"\nassert solution(\"1 2 3\\n1 2 2 10\") == \"110\"\nassert solution(\"5 5 5\\n1 2 2 10\\n3 4 3\\n3 4 3 100\") == \"110\"\nassert solution(\"5 5 5\\n1 2 2 10\\n3 4 3\\n3 4 3 100\\n2 3 2 10\") == \"110\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 100
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('2 3 2 10') == '110'\nassert solution('1 3 3 100') == '110'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 3\n1 2 2 3\n1 2 2 2\n1 2 2 2\n1 2 2 2\n1 2 2 2\n''') == '110'\nassert solution('''\n10 10 3\n1 2 2 2 2 2 2 3 3 2\n1 2 2 2 2 2 2 2 3 3 2\n1 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3\n1 2 2 2 2 2 2 2 2 2 2 3",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 5') == '120'\nassert solution('3 4 3') == '110'\nassert solution('8 4 2') == '90'\nassert solution('3 10 4') == '100'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('10 3 3') == '120'\nassert solution('5 3 3') == '110'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('5 5 2 3') == '123'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\") == \"110\"\nassert solution(\"7 2 4\") == \"0\"\nassert solution(\"10 20 30 40 50 60 70 80 90 100 200 300 400 500\") == \"18181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818",
        "num_ids_2": 24,
        "num_ids_4": 1567
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 1 1 3\") == \"5\"\nassert solution(\"2 5 1 2 3\") == \"5\"\nassert solution(\"1 5 1 2 3\") == \"5\"\nassert solution(\"1 1 1 3\") == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nassert solution('5\\n1 4 6 3') == '4'\nassert solution('6\\n1 4 6 3') == '3'\nassert solution('1\\n1 4 6 3') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4 6 3') == '5'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4 6 3') == '5'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 6 3\") == \"5\"\nassert solution(\"3\\n1 2 5\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('2 3 4') == '3'\nassert solution('100') == '99'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nassert solution('5\\n5 5 5 5 5') == '0'\nassert solution('2\\n2') == '0'\n",
        "num_ids_2": 33,
        "num_ids_4": 46
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 2 3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0\\n1 0\\n0 1\") == \"2.27614\"\n\nMore tests in Sample Tests\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1''') == '2.2761423749'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2.2761423\"\nassert solution(\"10\") == \"10.0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"4\") == \"2.27988750012\"\nassert solution(\"5\") == \"2.279525176636\"\nassert solution(\"10\") == \"2.285057\"\nassert solution(\"11\") == \"2.289223592651\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2.2761423749'\nassert solution('10') == '3.421267438'\nassert solution('3') == '2.2761423749'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n0 0\n1 0\n0 1\"\"\") == \"2.2761423749\"\nprint(solution(\"\"\"3\n0 0\n1 0\n0 1\"\"\"))\nprint(solution(\"\"\"0\n1\n0 1\"\"))\nprint(solution(\"\"\"2\n0 0\n1 0\n0 1\"\"\"))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.00000...'\nassert solution('2') == '2.00000...'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''4\n1 1\n1 1\n0 0\n0 0\n''') == '2.2761423749'\nassert solution('''5\n0 0\n0 0\n1 0\n1 0\n0 0\n0 0\n''') == '2.2761423749'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1.414\"\nassert solution(\"4\") == \"2.71\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"2.2761423749\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"12 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12 4') == '4'\nassert solution('10 10') == '10'\nassert solution('8 9') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12 4') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution(\"1 2\") == '1'\nassert solution(\"2 4\") == '4'\nassert solution(\"1 4\") == '3'\nassert solution(\"4 1\") == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '12 4') == '4'\nassert solution(\n    '22 10') == '22'\nassert solution(\n    '15 12') == '13'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"100 100\") == \"100\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 4') == 4\nassert solution('1 1') == 1\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n10 10\n''') == '4'\n\nassert solution('''1 5\n1 5\n''') == '5'\n\nassert solution('''1 7\n1 7\n''') == '2'\n\nassert solution('''1 17\n2 17\n''') == '11'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''12 4\n''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10000') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"10000\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n10\n1''') == '2'\nassert solution('''10\n20\n1''') == '10'\nassert solution('''100\n200\n1''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10000') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('100') == '1'\nassert solution('10000') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('5') == '2'\nassert solution('50000') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\nprint(\"Yay! All test cases are passed\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '3'\nassert solution('100000') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('5\\n2 3 4') == '0'\nassert solution('1\\n10\\n10') == '0'\n",
        "num_ids_2": 37,
        "num_ids_4": 62
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''1\n''') == '1'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1 2 3\") == \"3\"\nassert solution(\"1 3 2\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"1\", \"Wrong answer\"\nassert solution(\"3 3 2\") == \"1\", \"Wrong answer\"\nassert solution(\"5 4 3\") == \"0\", \"Wrong answer\"\n\n-------------------------------------------------------------------------------------------------------",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == '1'\nassert solution(\"4 4\\n3 2 1 4\\n2 3 1 3\\n4 1 2 1\\n2 2 2 3\") == '3'\nassert solution(\"2 5\\n4 1 2 4\\n3 4 3 4\\n5 3 2 2\") == '4'\nassert solution(\"2 7\\n4 1 5 3\\n5 6 1 5\") == '4'\n",
        "num_ids_2": 62,
        "num_ids_4": 114
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"3 1 2\") == \"1\"\nassert solution(\"3 1 2 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"1 1 2\\n2 1 2\\n3 1 1\\n4 1 1\\n5 1 1\\n\") == \"5\"\nassert solution(\"1 1 3\\n2 2 3\\n3 1 2\\n4 1 1\\n5 1 1\\n\") == \"6\"\nassert solution(\"3 3 2\\n4 2 3\\n4 3 2\\n\") == \"3\"\n",
        "num_ids_2": 61,
        "num_ids_4": 119
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2 3\") == \"2\"\nassert solution(\"2 3 2\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"0.5\"\nassert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"0.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"0.5\"\nassert solution(\"3\") == \"0.166666666667\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"0.5000000000\"\nassert solution(\"5\\n\") == \"0.166666666667\"\nassert solution(\"10\\n\") == \"0.0\"\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '0.5'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '0.5000000000'\n\"\"\"\n\nimport math\n\nn = int(input())\n\nodd = 0\np = 1\n\nfor i in range(2, n+1):\n    if i % 2 == 1:\n        odd += 1\n    p *= i\n\nreturn str(math.floor(p/math.factorial(odd)))\n\n\"\"\"\nThe formula is given by:\np = 2^(n-1)\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n''') == '0.5000000000'\nassert solution('''4\n''') == '0.5000000000'\nassert solution('''3\n''') == '0.5000000000'\nassert solution('''2\n''') == '0.5000000000'\nassert solution('''1\n''') == '0.5000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n''') == '0.50000000000000004'\nassert solution('''4\n''') == '0.50000000000000004'\nassert solution('''3\n''') == '0.50000000000000004'\nassert solution('''4\n''') == '0.50000000000000004'\nassert solution('''4\n''') == '0.50000000000000004'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('5') == '0.5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '0.5'\n\n\"\"\"\n\nn=int(input())\nodd=0\nfor i in range(1,n+1):\n    if(i%2!=0):\n        odd=odd+1\nprint(\"{:.6f}\".format(odd/n))\n\n\n\"\"\"\nExplanation\n\nInstead of testing the rest of the integers between 1 and N (as mentioned above), you can actually test the middle of the range.\nYou would do this by finding the integer where the probability of picking it is the same as in the range of 1 and N.\n\nSo, let's say you are lucky. The probability is the same as in the range of 1 and N (e.g. 4/4 = 1). However, if you do this, you are not lucky.\nSo if your program outputs the answer, it will be lower than the answer from the judge.\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '0.5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '1'\n",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n2 1\\n1') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1') == '1'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n1 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n1 0 1') == '1'\n",
        "num_ids_2": 47,
        "num_ids_4": 110
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n\") == \"2\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\nassert solution(\"3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\") == \"2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\n1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n\n\"\"\"\n\nN = int(input())\n\nA = list(map(int, input().split()))\n\ncount_honest = 0\ncount_unkind = 0\n\nfor i in range(len(A)):\n    if i == 0:\n        if A[i] == 1:\n            count_honest = 1\n        else:\n            count_unkind = 1\n    else:\n        if A[i] == 1:\n            if A[i-1] == 1:\n                count_honest += 1\n            else:\n                count_unkind += 1\n        else:\n            if A[i-1] == 1:\n                count_honest += 1\n            else:\n                count_unkind += 1\n\nprint(count_honest)",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''5\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '3'\nassert solution('''6\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '4'\nassert solution('''8\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '3'\nassert solution('''6\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == 'nikoand...', 'Solution failed'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '', 'First solution'\nassert solution('8') == '', 'Second solution'\nassert solution('1234567890') == '', 'Third solution'\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asdf\") == \"asdf\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\n\nprint(\"All tests passed.\")\n",
        "num_ids_2": 19,
        "num_ids_4": 71
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"nikosolstice\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'nikoand...'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == 'nikoand'\nassert solution('8') == 'nikoand...'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '', 'Sample Test Failed'\nassert solution('a') == 'a', 'Sample Test Failed'\nassert solution('ab') == '', 'Sample Test Failed'\nassert solution('abcd') == '', 'Sample Test Failed'\nassert solution('a'*15) == '', 'Sample Test Failed'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"123\", \"Test 1 failed\"\nassert solution(\"pwke\") == \"pwke\", \"Test 2 failed\"\nassert solution(\"nikoandsolstice\") == \"nikoand...\", \"Test 3 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('an') == 'a'\nassert solution('apple') == 'apples'\nassert solution('apples') == 'apples'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apples') == 'apples'\nassert solution('app') == 'app'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('lemon') == 'lemons'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('apple') == 'apples'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"apple\") == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('apple') == 'apples'\nassert solution('apple ends with e') == 'apples'\nassert solution('a') == 'a'\n",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('chocolate') == 'chocolates'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3 2\\n2\\n1 3\\n1') == '1'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''\n5 5\n1 1\n2 1\n3 2\n4 2\n5 3\n''') == '1'\nassert solution('''\n1 2\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 5') == '2'\nassert solution('10 20') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 1 1') == '3'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 4') == '1'\nassert solution('4 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 3\") == \"10\"\nassert solution(\"20 10\") == \"20\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\n\") == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\naaa''') == '1'\nassert solution('''5\naaa''') == '2'\nassert solution('''3\naaa''') == '2'\nassert solution('''9\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5'\nassert solution('12') == '6'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('100') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nababababca\") == \"5\"\nassert solution(\"10\\nababababaca\") == \"10\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\nababbbbaaca') == '5'\nassert solution('5\\nababa') == '2'\nassert solution('5\\nababa') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 45
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\\nababbbbaaca\") == \"5\"\nprint(solution(input()))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''3\n3 3 3''') == '3'\nassert solution('''3\n2 4 4''') == '2'\nassert solution('''1\n3 3''') == '0'\nassert solution('''2\n1 2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''3\n5 2 4\n''') == '3'\nassert solution('''6\n2 4 7 8 9 10\n''') == '6'\nassert solution('''3\n5 2 4\n''') == '3'\n\n'''\n\nimport math\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\nassert solution(\"3\\n10 20 50\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution(\"2\\n5 2 4\") == \"3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"8\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 -3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"3 1 -1\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('0 1 1 3') == '3'\nassert solution('1 2 2 3') == '5'\nassert solution('2 0 2 -1') == '3'\nassert solution('0 0 0 0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1 3\") == \"2\"\nassert solution(\"3 1 1 3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'\nassert solution('1 1 1 2') == '1'\nassert solution('2 1 1 2') == '1'\nassert solution('1 1 1 2') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('2 1 1 3') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"8 3 7\") == \"11\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 8') == 'Yes'\nassert solution('4 3') == 'No'\nassert solution('5 6') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 5') == 'No'\nassert solution('2 10') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4''') == 'Yes'\nassert solution('''3\n4''') == 'No'\nassert solution('''2\n3''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('5 5') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 8\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('3 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 8') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"\n\nN, M = map(int, input().split())\ngraph = [[0 for _ in range(N)] for _ in range(N)]\n\nfor _ in range(M):\n    a, b = map(int, input().split())\n    graph[a - 1][b - 1] = 1\n    graph[b - 1][a - 1] = 1\n\nvisited = [False for _ in range(N)]\npaths = 0\n\nfor i in range(N):\n    if not visited[i]:\n        paths += 1\n        visited = visit(graph, i, visited, N)\n\nprint(paths)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 3]) == \"2\"\nassert solution([3, 2]) == \"1\"\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n5 5\n1 2\n1 4\n1 5\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''\n6 6\n1 2\n1 4\n1 5\n1 6\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n''') == '3'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 5') == '3'\nassert solution('4 6') == '0'\n\"\"\"\n\nclass Graph:\n    def __init__(self, nodes):\n        self.nodes = nodes\n        self.adj_list = [[] for i in range(self.nodes)]\n\n    def insert_edge(self, src, dest):\n        self.adj_list[src].append(dest)\n        self.adj_list[dest].append(src)\n\n    def print_graph(self):\n        for i in range(self.nodes):\n            print('[', end = '')\n            for j in range(self.nodes):\n                print(self.adj_list[i].count(j), end ='')\n            print(']', end = '')\n        print()\n\n    def get_nodes(self):\n        return self.nodes",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\n\"\"\"\nimport sys\nimport collections\nsys.setrecursionlimit(100000)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\nassert solution(input(input())) == '2'\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"6 6\") == \"4\"\nassert solution(\"8 8\") == \"5\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''3 4\n1 2\n1 3\n1 4\n2 4\n''') == '4'\n\nassert solution('''4 5\n1 3\n2 4\n3 5\n''') == '0'\n\nassert solution('''2 5\n1 2\n1 3\n1 5\n''') == '5'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 2, 1, 0]) == 7\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n3\n2\n1\n''') == '6'\nassert solution('''5 2\n5\n2\n3\n4\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"18\"\nassert solution(\"5 2\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\n2 5 4 3''') == '13'\nassert solution('''4 5\n3 4 4 3 3''') == '14'\nassert solution('''10 2\n1 5 8 3 4 2 9 7''') == '27'\nassert solution('''10 0\n2 5 8 3 4 2 9 7''') == '0'\nassert solution('''1 0\n1 0''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"10 8\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 2') == '5'\nassert solution('4 3') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"20 2\") == \"10\"\nassert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '18'\nassert solution('100 3') == '60'\nassert solution('5 1') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'\nassert solution('10 1') == '1'\nassert solution('12 3') == '5'\nassert solution('1 5') == '1'\n\n\"\"\"\n\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(0).read().strip()) == '60'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_stdin) == answer, answer",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n8\n5\n4''') == '12'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"60\"\nassert solution(\"15\") == \"8640\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"98526\"\n\"\"\"\nfrom math import sqrt\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '60'\nassert solution('1') == '1'\nassert solution('1000000') == '1000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('5') == 'Buzz'\nassert solution('15') == '60'\nassert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '60'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15') == '60'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '60'\nassert solution('15') == '60'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"15\\n\") == \"60\"\nassert solution(\"100\\n\") == \"3125\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([6, 5]) == \"8\"\nassert solution([4, 7, 10, 6, 5]) == \"8\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 7 10 6 5\") == \"8\"\nassert solution(\"100 100\") == \"99\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n4 7 10 6 5') == '8'\nassert solution('4 5\\n4 7 10 6 5') == '7'\nassert solution('10 5\\n4 7 10 6 5') == '10'\nassert solution('100 5\\n4 7 10 6 5') == '99'\nassert solution('-5 5\\n4 7 10 6 5') == '-6'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '8'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"10\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 7 10 6 5') == '8'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5\\n4 7 10 6 5') == '8'\nassert solution('5 5\\n4 7 10 6 5') == '8'\nassert solution('9 1\\n7 1 4') == '0'\nassert solution('8 1\\n9 1 4') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n\") == \"8\"\nassert solution(\"4 7 10 6 5\\n\") == \"8\"\nassert solution(\"10\\n\") == \"5\"\nassert solution(\"0\\n\") == \"0\"\nassert solution(\"10 10\\n\") == \"10\"",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"2\\n3\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\nassert solution('10 10') == '31'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('1 2 3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\nprint('everything is fine')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6', f'expected 6, got {solution(\"7 4\\n3 7 5 1 10 3 20\")}'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1', f'expected -1, got {solution(\"7 2\\n3 7 5 1 10 3 20\")}'",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\nassert solution(\"7 2\\n3 1 3 1 1 1 1 1 1\") == \"10\"\n",
        "num_ids_2": 40,
        "num_ids_4": 62
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '6'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1'\nassert solution('7 3\\n3 7 5 1 10 3 20') == '6'\nassert solution('7 2\\n2 5 6 1 10 3 20') == '-1'\nassert solution('7 5\\n2 5 6 1 10 3 20') == '6'\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('2 5') == '-1'\nassert solution('6 4') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 4\\n\"\n    \"3 7 5 1 10 3 20\"\n) == \"6\"\nassert solution(\n    \"7 2\\n\"\n    \"3 7 5 1 10 3 20\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '7 4\\n3 7 5 1 10 3 20') == '6'\nassert solution(\n    '7 2\\n3 7 5 1 10 3 20') == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n\n'''\n\nimport sys\n\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3\\n2 3 1'\n\nassert solution('''\n2 3\n***.\n***.\n''') == '-1'\n\nassert solution('''\n2 2\n*.*\n\n''') == '1\\n3 1'\n\nassert solution('''\n1 1\n*\n\n''') == '1\\n1 1'\n\nassert solution('''\n3 3\n*.*\n*.*\n\n''') == '1\\n2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '6 8\\n'\n    '....*...\\n'\n    '...**...\\n'\n    '..*****.\\n'\n    '...**...\\n'\n    '....*...\\n'\n    '........\\n'\n) == '3\\n'\n\nassert solution(\n    '5 5\\n'\n    '.*...\\n'\n    '***..\\n'\n    '*.*..\\n'\n    '***..\\n'\n    '.....\\n'\n) == '3\\n'\n\nassert solution(\n    '5 5\\n'\n    '*.*.\\n'\n) == '-1\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '3 4 1'\nassert solution('5 5') == '-1'\n\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n.....\n*..*\n*..*\n*..*\n\n''') == '3 4 1', 'First example'\n\nassert solution('''\n6 6\n.....\n*....\n*.....\n*....\n*....\n*....\n\n''') == '1 1 2', 'Second example'\n\nassert solution('''\n10 10\n.........\n..........\n..........\n.........\n.........\n.........\n.........\n.........\n..........\n..........\n..........\n''') == '0 0 1', 'Third example'\n\nassert solution('''\n5 5\n.*...\n**..\n.*..\n***.\n*.*.\n''') == '0 0 1', 'Fourth example'\n\nassert solution('''\n5 5\n.**.\n*.*.\n.**.\n*.*.\n''') == '1 1 2', 'Fifth example'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == \"3 4 1\"\n\nassert solution('''\n5 5\n.**.\n*..*\n...*\n.....\n''') == \"2 2 1\"\n\nassert solution('''\n3 3\n*.*\n***\n.*.\n''') == \"-1\"\n\nassert solution('''\n5 5\n*.*\n***\n*..*\n*.*\n''') == \"-1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 8\") == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\"\nassert solution(\"5 5\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\"\n",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('3 3') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\n''') == '3\\n3 4 1\\n3 5 2'\n\nassert solution('''5 5\n.*...\n****.\n.****\n..**.\n.....\n\n''') == '3\\n2 2 1\\n3 3 1\\n3 4 1\\n'\n\nassert solution('''5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '-1'\n\nassert solution('''3 3\n*.*\n***.\n*.*\n\n''') == '3\\n2 2 1\\n3 3 1\\n'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('good\\n') == 'good'\nassert solution('aaa\\n') == 'aaa'\nassert solution('abcd\\n') == 'abc'\nassert solution('qwert\\n') == 'qwert'\nassert solution('aaa\\n') == 'a'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('good') == 'good'\nassert solution('aaaa') == 'a'\nassert solution('abbc') == 'b'\nassert solution('aaaaa') == 'a'\nassert solution('bad') == 'bad'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution('') == \"\"\nassert solution('aa') == \"1\"\nassert solution('aaa') == \"0\"\nassert solution('aaab') == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '', \"Empty\"\nassert solution('good') == '', \"Nothing\"\nassert solution('abc') == 'a', \"First\"\nassert solution('bad') == '', \"Not good\"\nassert solution('aa') == 'a', \"Second\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\ngood\\n\") == \"0\"\nassert solution(\"3\\naaa\\n\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('good') == 'good'\nassert solution('string') =='string'\nassert solution('aaa') == 'aaa'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\ngood') == '0'\nassert solution('3\\naaa') == '3'\nassert solution('3\\nabc') == '1'\n\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\"\n\nassert solution(\n    \"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"\n\nassert solution(\n    \"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\"\n\nassert solution(\n    \"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"NO\"\n\nassert solution(\n    \"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\") == \"YES\"\nassert solution(\"4 1\") == \"101\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n10 2\n1 4\n2 1\n1 5\n2 3\n1 6\n3 2\n1 7\n2 8\n3 9\n4 6\n5 9\n6 7\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n\"\"\"\n\nfrom typing import List, Tuple, Optional\n\nfrom test_framework import generic_test\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == 'YES'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5''') == '2'\nassert solution('''1 7\n1 7\n\n''') == '0'\nassert solution('''2\n1\n\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_str) == '2\\n3 4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"5 5\\n2 2\\n1 2\\n5 5\\n\") == \"3 4\"\nassert solution(\"2\\n4\\n2\\n\") == \"0\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n\") == \"0\"\nassert solution(\"4\\n5\\n5\\n5\\n\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''\n1 7\n1 7\n''') == '0'\nassert solution('''\n1 100\n1 100\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '2'\nassert solution('''\n1 2\n2 2\n''') == '2'\nassert solution('''\n1 7\n1 7\n''') == '0'\nassert solution('''\n1 5\n1 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 2') == '2'\nassert solution('1 7\\n1 7') == '0'\nassert solution('1 7\\n3 4\\n1 2\\n4 6') == '3 4 \n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2\n5 5''') == '2'\nassert solution('''1 7\n1 7''') == '0'\nassert solution('''1 1\n3 3''') == '3'\n\nassert solution('''2 4\n1 3\n3 4''') == '4'\n\nassert solution('''3 4\n4 5\n5 3''') == '3'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 3') == '2', solution('1 2 1 3')\nassert solution('1 4 4 4') == '4', solution('1 4 4 4')\nassert solution('1 5 5 5') == '5', solution('1 5 5 5')\nassert solution('100 99 100 99') == '100', solution('100 99 100 99')",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''5 8 3 2''') == '5'\nassert solution('''4 3 2 3''') == '5'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 9 2 3''') == '2'\nassert solution('''2 5 5 5''') == '2'\nassert solution('''1 2 5 7''') == '4'\nassert solution('''2 5 5 5''') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 9, 2, 3]) == '2'\nassert solution([7, 9, 2, 3]) == '2'\nassert solution([12, 10, 2, 3]) == '2'\nassert solution([14, 9, 2, 3]) == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('5 10 2 3') == '5'\nassert solution('15 10 2 3') == '3'\nassert solution('5 9 2 3') == '7'\nassert solution('15 9 2 3') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 9 2 3\") == '2'\nassert solution(\"20 5 9 6\") == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6 7') == '2', \"test 1 failed\"\nassert solution('5 9 3') == '1', \"test 2 failed\"\nassert solution('1 1 1 1') == '3', \"test 3 failed\"\nassert solution('2 2 2 3') == '1', \"test 4 failed\"\nassert solution('1 2 3 4') == '5', \"test 5 failed\"",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 9 2 3') == '2'\nassert solution('1 1 2 3') == '3'\nassert solution('1 5 7 9') == '5 and 7 satisfy the condition.'\n",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 0 0 1\") == \"1\"\nassert solution(\"3 2 1 2\") == \"1\"\nassert solution(\"1 1 2 2\") == \"3\"\nassert solution(\"6 2 2 3\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123456789\") == \"Yes\"\n\n'''\n\nimport sys",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"123456\") == \"No\"\nassert solution(\"123456\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"123\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('0') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234567890\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"2345\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456') == 'No'\nassert solution('1234567891') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('10') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"123456789\"\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '4'\nassert solution('1') == '4'\nassert solution('127') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"100\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''127\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('127\\n') == '4'\nassert solution('-1\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '4'\nassert solution('127\\n') == '4'\n\"\"\"\n\nx = int(input())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"127\") == \"4\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('127') == '4'\nassert solution('777') == '5'\nassert solution('111') == '3'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"64\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '4'\nassert solution('100') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('kyoto') == 'tokyo', \"Error with solution\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"peter\") == \"No\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"a\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes', 'Error'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('kyoto') == 'tokyo'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'Yes'\nassert solution('not') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('aabc') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('kyoto') == 'Yes', 'Should return Yes'\nassert solution('tokyo') == 'Yes', 'Should return Yes'\nassert solution('canada') == 'No', 'Should return No'\n\n------solution------\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\nassert solution(\"abcd\") == \"Yes\"\nassert solution(\"efgh\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abcd\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcabababc\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"b\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '1'\nassert solution('aac') == '2'\nassert solution('abcac') == '2'\nassert solution('abcabc') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(\"cabacc\\nabc\\n\")) == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('4 8 2') == '4'\nassert solution('2 4 8') == '2'\nassert solution('3 2 5') == '3'\nassert solution('5 5 2') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([int(x) for x in stdin.split()]) == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 12 2') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6 2\") == \"2\"\nassert solution(\"1 10 3\") == \"3\"\nassert solution(\"4 8 2\") == \"2\"\nassert solution(\"4 7 2\") == \"2\"\nassert solution(\"6 8 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"8 12 2\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 1\") == \"5\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == \"2\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == \"3\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == \"4\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == \"5\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == \"6\"\n",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('5 8 2') == '2'\nassert solution('16 12 8') == '8'\nassert solution('18 2 8') == '2'\nassert solution('15 2 8') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1024') == '2020'\nassert solution('40') == '40'\nassert solution('40') == '40'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"20\"\nassert solution(\"20\") == \"2020\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"2020\"\nassert solution(\"500\") == \"2000\"\nassert solution(\"5\") == \"10\"\nassert solution(\"10\") == \"20\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1024') == '2020'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('1024') == '2020'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''500\n100\n50\n10\n5\n1''') == \"2020\"\nassert solution('''10\n10\n5\n1\n1''') == \"1000\"\nassert solution('''1\n1\n1\n1\n1''') == \"1\"\nassert solution('''2\n3\n1\n2''') == \"2\"\nassert solution('''10\n5\n5\n5''') == \"10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1000\n500\n100\n500\n100\n100\n50\n5''') == '2020'\nassert solution('''1\n2\n3\n4\n5\n6''') == '4320'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1024') == '2020'\nassert solution('100') == '100'\nassert solution('9999') == '1000'\nassert solution('9') == '1'\nassert solution('20') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1024') == '2020'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5'\n\"\"\"\nimport math\nn = int(stdin.readline())\npoints = [int(i) for i in stdin.readline().split()]\nstamina = 0\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4\\n') == '5'\nassert solution('2 4\\n') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 4 5') == '5'\nassert solution('2 4 3') == '4'\nassert solution('4 3 2') == '5'\nassert solution('2 5 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 1\n''') == '1'\nassert solution('''2\n1 3 1\n''') == '5'\nassert solution('''4\n1 2 4 1\n''') == '7'\nassert solution('''6\n5 3 2 1 2 4\n''') == '5'\nassert solution('''6\n1 2 3 4 5 6\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 10') == '5'\nassert solution('100 10') == '101'\nassert solution('1 2') == '1'\nassert solution('5 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10') == '3'\nassert solution('4 10') == '4'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 4\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n2 4\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3 10\n\"\"\"\n) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['1', '2']) == '1', \"Wrong answer\"\nassert solution(['2', '1']) == '2', \"Wrong answer\"\nassert solution(['3', '4']) == '3', \"Wrong answer\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 100\") == \"1\"\nassert solution(\"1 50\") == \"1\"\nassert solution(\"100 20\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10') == '3'\n\"\"\"\n\nA, B = map(int, input().split())\nprint(min(A, B - 2))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"10 10\") == \"3\"\nassert solution(\"100 100\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 10') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nCSR\n''') == '2'\nassert solution('''\nCSR\nSSS\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"S\") == \"2\"\nassert solution(\"CSS\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''CSS\nCSR''') == '2'\nassert solution('''SSS\nSSR''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SSR\") == \"2\"\nassert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n\nassert solution('CS') == '1'\nassert solution('C') == '1'\nassert solution('CSR') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"CSS\\nCSR\\n\"\n) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('3\\n1 2 5\\n') == '1'\nassert solution('2\\n3 5 1\\n') == '1'\nassert solution('6\\n2 4 1 5 3\\n') == '5'\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '1'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '2'\nassert solution('10\\n') == '2'\nassert solution('20\\n') == '3'\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\n\narray = list(map(int, input().split()))\n\narray.sort()\n\nfirst = array.index(array[0])\nsecond = array.index(array[1])",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('4\\n1 3 2 5') == '1'\nassert solution('6\\n1 2 4 3 5 6') == '4'\nassert solution('8\\n1 2 3 5 6 7 4') == '0'\nassert solution('9\\n1 2 3 4 5 6 7 8') == '7'\n",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == None\nassert solution('') == None\nassert solution('1') == None\nassert solution('4') == None\nassert solution('5') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n1 3 5 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"5\n1 3 5 4 2\n1 2 1 5 4 3 2 3 2 4\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n1 3 5 4 2\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2 4\n1 2 1 5 4 3 2 3 2",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62''') == '5.410'\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\nOutput\n5.480''') == '5.620'\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92''') == '6.720'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\"\"\") == \"5.410\"\nassert solution(\"\"\"\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\"\"\") == \"5.620\"\nassert solution(\"\"\"\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\"\"\") == \"5.480\"\nassert solution(\"\"\"\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\"\"\") == \"6.040\"\nassert solution(\"\"\"\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\"\"\") == \"6.720\"\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '6.720'\nassert solution('8') == '6.440'\nassert solution('5') == '5.440'\nassert solution('7') == '6.720'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('8') == '6.020'\nassert solution('5') == '6.720'\n\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.480\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('7') == '6.720'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n-2.13 1.06\n-1.13 2.02\n-2.16 1.46\n-2.13 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''\n7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n''') == '6.720'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('8') == '5.420'\nassert solution('7') == '5.720'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '5.480'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.620'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 22
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5.480\"\nassert solution(\"8\") == \"5.620\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"4\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"5 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 15\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"-1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"5 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 27\\n5 5 5 5 5\") == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 8\n2 3 1 1 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n5 16\n5 5 5 5 5\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n5 26\n5 5 5 5 5\n\"\"\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 26') == '1'\nassert solution('5 16') == '2'\nassert solution('5 15') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('5 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1\n''') == '1 1'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1\n''') == '1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == [\"1\", \"1\", \"1\"]\nassert solution(\"7 3\") == [\"1\", \"2\", \"3\"]\nassert solution(\"10 4\") == [\"7\", \"3\", \"1\", \"3\"]\nassert solution(\"15 2\") == [\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"]\nassert solution(\"1 2 3\") == [\"1\", \"2\", \"3\"]\n",
        "num_ids_2": 31,
        "num_ids_4": 86
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"7 3 1 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n5\n1 2 1 3 2\n\n\"\"\") == \"1 2 1 3\"\nassert solution(\n\"\"\"\n10\n3\n1 3 1 3 10 3 7 7 12 3\n\n\"\"\") == \"7 3 1 3\"\nassert solution(\n\"\"\"\n15\n5\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1\n\n\"\"\") == \"1 1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 3\n1 2 3 2 4 3 1\n''') == \"1 2 3\"\nassert solution('''\n15 4\n1 3 1 3 10 3 7 7 12 3\n''') == \"7 3 1 3\"\nassert solution('''\n20 4\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '1 2 3'\nassert solution(sys.stdin.read()) == '1 1'\nassert solution(sys.stdin.read()) == '1 1'\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 3\"\n) == \"1 2 3\"\n\nassert solution(\n    \"10 4\"\n) == \"7 3 1 3\"\n\nassert solution(\n    \"15 2\"\n) == \"1 1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 1\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2 3'\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 22
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 2 3 4\") == \"5\"\nassert solution(\"2 4\\n10 8\\n5 3\\n4 3\") == \"3\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3\\n') == '5'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '0'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4\\n') == '3'\n",
        "num_ids_2": 37,
        "num_ids_4": 99
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"6 1\") == \"0\"\nassert solution(\"2 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"6 1\") == \"3\"\n\n\n--- Day 9: Encoding Error ---\n\nYou run a Physics class test and get $n$ questions. The test checks if the numbers of questions for a given course are consecutive integers.\n\nFor example, if you get all of the questions for maths with a test that gives you $30$, you have to answer $30 - 29 = 1$ questions and get a score of $2$.\n\nYou get all of the questions for chemistry with a test that gives you $100$, which you get a score of $1$.\n\nThe teacher gives you a second test with $3$ questions each; the first gives you $20$, the second $10$, and the third $5$.\n\nThese tests will always give you the correct final score if you submit to the class, but the tests don't say how many questions you have to answer (they just say whether you get an A, B, or C).\n\nYour task in this problem is to find out how many questions you have to answer to pass the tests. The first line of each test contains one integer $n$, the number of questions for that course.\n\nThe next $n$ lines contain integers $1 \\le a_{i} \\le 100$, where $i$ is the ith question.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$, the number of tests.\n\nThe next $n$ lines each contain one integer, the number of questions for that course.\n\n\n-----Output-----\n\nPrint a single integer $k$, where $k$ is the number of questions you have to answer to pass the tests.\n\n\n-----Examples-----\nInput\n2\n1\n10\n\nOutput\n9\n\nInput\n3\n1\n10\n2\n5\n\nOutput\n10\n\nInput\n2\n30\n30\n\nOutput\n1\n\nInput\n2\n30\n20\n\nOutput\n1\n\nInput\n3\n30\n20\n10\n\nOutput\n3\n\n\"\"\"\n\nimport collections",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nxxoxx\n''') == '0'\nassert solution('''6\nxxoxx\n''') == '1'\nassert solution('''10\nxxxxxxxxxx\n''') == '8'\nassert solution('''15\nxxxxxxxxxx\n''') == '8'\nassert solution('''20\nxxxxxxxxxx\n''') == '0'\n\nprint('Congratulations! All test cases are passed.')",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"xxxiii\") == \"1\"\nassert solution(\"xxoxx\") == \"0\"\nassert solution(\"xxxxxx\") == \"2\"\nassert solution(\"xxxzz\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 1\n\nassert solution(input()) == 0\n\ninput = stdin.split(\"\\n\")\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"\nassert solution(\"11\") == \"0\"\n\nassert solution(\"13\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nxyzz''') == \"xyzz\"\nassert solution('''6\nxxxxxx''') == \"xxxxxx\"\nassert solution('''10\nxxxooo''') == \"xxxooo\"\nassert solution('''13\nxxxxxxn''') == \"xxxxxxn\"\nassert solution('''21\nxnxnnnn''') == \"xnxnnnn\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(6) == 1\nassert solution(5) == 0\nassert solution(10) == 8\nassert solution(100) == 0\n\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('10') == '8'\n\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1', \"Wrong answer\"\nassert solution('2') == '0', \"Wrong answer\"\nassert solution('3') == '1', \"Wrong answer\"\nassert solution('5') == '0', \"Wrong answer\"\nassert solution('6') == '1', \"Wrong answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == str(0)\n\nassert solution(input) == str(1)\n\nassert solution(input) == str(2)\n\nassert solution(input) == str(4)\n\nassert solution(input) == str(6)",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '48'\nassert solution('4') == '48'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"32\"\nassert solution(\"3\") == \"48\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(4) == \"48\"\nprint(\"Congratulations! Your code works correctly!\")\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '48'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '12'\nassert solution('5') == '48'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '8'\nassert solution('4') == '25'\nassert solution('5') == '28'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3\\n'\nassert solution('4') == '48\\n'\nassert solution('5') == '108\\n'\nassert solution('6') == '108\\n'\nassert solution('7') == '108\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '48'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '6'\nassert solution('4') == '24'\nassert solution('1') == '1'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"48\"\n\"\"\"\n\nradius = int(stdin.readline())\nprint(radius*radius*3*(radius+1)*0.5)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7') == 'unsafe'\nassert solution('1 1') =='safe'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('1 10') =='safe'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n''') == 'unsafe'\n\nassert solution('''5 1\n''') == 'unsafe'\n\nassert solution('''2 2\n''') =='safe'\n\nassert solution('''5 1\n''') == 'unsafe'\n\nassert solution('''5 4\n''') =='safe'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"unsafe\"\nassert solution(\"1 3\") == \"safe\"\nassert solution(\"1 1\") == \"unsafe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"unsafe\"\nassert solution(\"7 3\") == \"safe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 6\") == \"unsafe\"\nassert solution(\"10 2\") == \"safe\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10\") == \"unsafe\"\nassert solution(\"100 100\") == \"unsafe\"\nassert solution(\"50 50\") == \"safe\"\nassert solution(\"200 200\") == \"safe\"\n\n---------------------------------------------------",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"unsafe\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4') == \"unsafe\"\nassert solution('2 2') == \"safe\"\nassert solution('5 5') == \"unsafe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"1 1\") == \"safe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('3 1 4') == '5'\nassert solution('3 2 3') == '6'\nassert solution('10 20 30 40') == '80'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 4 5\"\n) == \"6\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 10 7''') == '17'\n\nstdin = '10 10 7'\nprint(solution(stdin))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"6\"\nassert solution(\"4 2 3\") == \"6\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('12 3 9') == '24'\n\n'''\n\n'''\nclass Solution:\n    def solve(self, a, b, c):\n        return int(a * b * c / 2)\n    \n    def solve(self, a, b, c):\n        return int(a * b * c / 2)\n\n\nsolution('3 4 5')\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6','sample test 1'\nassert solution('1 2 3') == '6','sample test 2'\nassert solution('5 7 8') == '50','sample test 3'\nassert solution('5 3 7') == '12.5','sample test 4'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5') == '6'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 2') == '4'\nassert solution('3 4 5') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 11 4') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 2, 5]) == \"3\"\nassert solution([1, 2, 3, 5]) == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 11 4\\n\") == \"4\\n\"\nassert solution(\"5 10 3\\n\") == \"8\\n\"\nassert solution(\"13 7 2\\n\") == \"7\\n\"\nassert solution(\"12 15 7\\n\") == \"15\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 11 4\n''') == '4'\nassert solution('''1 4 3\n''') == '0'\nassert solution('''2 3 10\n''') == '0'\nassert solution('''10 10 10\n''') == '0'\nassert solution('''100 100 100\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 11 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 4') == '4'\nassert solution('3 6 4') == '5'\nassert solution('2 9 9') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 10 1\") == \"0\"\nassert solution(\"2 10 10\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 1 10\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\n\"\"\"\nimport sys\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"10\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"0 0\") == \"0\"\n\n----------------------------------------------------------------------\nExercise 4.\n\nQ4.  Write 5 lines of code to test the correctness of solution:\nCompute A \\div B.\n\n-----Constraints-----\n - 1 \\leq A \\leq 100\n - 1 \\leq B \\leq 100\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the value A \\div B as an integer.\n\n-----Sample Input-----\n2 5\n\n-----Sample Output-----\n0.5\n\nWe have 2 \\div 5 = 0.5.\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('5 2') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 6\") == \"18\"\nassert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 2 3\n4 5 6\n7 8 9''') == '14'\nassert solution('''3 2\n3 2 3\n4 5 6\n7 8 9''') == '15'\nassert solution('''5 6\n6 6 6 6 6\n6 6 6 6 6\n6 6 6 6 6 6\n6 6 6 6 6 6 6''') == '36'\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"\nprint(\"You passed the test\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\n\nassert solution('1 2') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"4 6\") == \"20\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"6 4\") == \"12\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '10', \"Wrong answer\"\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '6'\nassert solution('2 1 3') == '2'\nassert solution('3 2 4') == '8'\n\n\"\"\"\n\nA,B,T = list(map(int,input().split()))\ntime = 0\nfor i in range(1,B+1):\n    time += (A+i-1)*i\n    if time > T+0.5:\n        break\n    time += (A+i)\n    if time > T+0.5:\n        break\n    time += (A)\n    if time > T+0.5:\n        break\n    time += A\nprint(time)\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '5'\nassert solution('4 5 6') == '5'\nassert solution('3 5 7') == '10'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 5 7\"\"\") == \"10\"\nassert solution(\"\"\"1 1 2\"\"\") == \"1\"\nassert solution(\"\"\"2 2 5\"\"\") == \"2\"\nassert solution(\"\"\"2 2 3\"\"\") == \"2\"\nassert solution(\"\"\"1 2 5\"\"\") == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('5 6 7') == '10'\n\n\"\"\"\n\nimport math\n\nA, B, T = list(map(int, input().split()))\n\nT = T + 0.5\n\nprint(math.ceil(T / A) * B)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"3 5 4\") == \"9\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"10\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('4 5 7') == '10'\nassert solution('2 4 7') == '10'\nassert solution('1 2 7') == '10'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"2\"\nassert solution(\"10 5 7\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n500 600') == 'OK'\nassert solution('7\\n500 600') == 'NG'\nassert solution('20\\n500 600') == 'NG'\nassert solution('4\\n500 600') == 'NG'\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"6\\n500 600\") == \"NG\"\nassert solution(\"3\\n500 600\") == \"NG\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n500 600\\n') == 'OK'\nassert solution('4\\n300 300\\n') == 'NG'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == \"OK\"\nassert solution('10') == \"NG\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"OK\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"OK\"\n\nassert solution(\"1\") == \"NG\"\n\nassert solution(\"2\") == \"NG\"\n\nassert solution(\"3\") == \"NG\"\n\nassert solution(\"4\") == \"NG\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n500 600\n''') == 'OK'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'OK'\n\nassert solution('8') == 'NG'\n\nassert solution('4') == 'NG'\n\nassert solution('15') == 'OK'\n\nassert solution('1') == 'NG'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\"\nassert solution(\"8\\n500 600\\n\") == \"NG\"\nassert solution(\"9\\n500 600\\n\") == \"OK\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"6 1\") == \"1.3333333333\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1.3333333333'\nassert solution('5 3') == '1.3333333333'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"1.5\"\nassert solution(\"3\") == \"2.0\"\nassert solution(\"4\") == \"1.5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"2.5\"\nassert solution(\"4 3\") == \"2.3333333333\"\nassert solution(\"4 3\") == \"2.3333333333\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n3\n''') == '2.6666666667'\nassert solution('''5 4\n2\n''') == '4.66666666667'\nassert solution('''10 9\n5\n''') == '10.0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '2.6666'\nassert solution('6 8') == '3.3333'\nassert solution('8 2') == '2.6666'\nassert solution('20 8') == '9.6667'\nassert solution('20 8') == '9.6667'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 3\n''') == '2.66666767'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"1 1\") == \"1.0\"\n\"\"\"\n\nt, x = map(int, input().split())\nprint(t*x/3)",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1.9999999999999\"\nassert solution(\"6 3\") == \"3.3333333333333\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('0 0') == '0.0'\nassert solution('5 0') == '5.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('9 9 3') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 4 3') == '1'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 3\n''') == '1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 4 3\n''') == '1'\nassert solution('''1 2 3\n''') == '3'\nassert solution('''2 4 5\n''') == '4'\nassert solution('''3 1 2\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 0 0') == '0'\nassert solution('10 0 0') == '0'\nassert solution('20 0 0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('10 1 2') == '2'\nassert solution('2 5 6') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"10 5 3\") == \"5\"\nassert solution(\"10 5 2\") == \"2\"\nassert solution(\"10 10 10\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('1 2 3') == '2'\nassert solution('5 3 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''4\n1 4 5 2\n4 1 5 2\n5 4 1 2\n2 1 4 5\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 2\\n3 1 2') == '3'\nassert solution('5\\n1 3 2 4 5\\n3 1 2 4 5') == '4'\nassert solution('5\\n1 3 2 4 5\\n3 1 2 4 5') == '3'\n\n'''\n",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == '3'\nassert solution(\"5\") == '6'\nassert solution(\"3\") == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2\\n3 1 2\\n\") == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 2\\n3 1 2\") == \"3\"\nassert solution(\"3\\n1 3 2\\n3 1 2\\n4 5 6\") == \"4\"\nassert solution(\"5\\n1 4 3 2 5\\n5 4 3 2 1\\n1 4 3 2 5\\n5 4 3 2 1\\n4 3 2 1 5\") == \"5\"\nassert solution(\"3\\n1 2 3 4\\n5 2 3 4 1\\n2 3 4 1 5\") == \"4\"\nassert solution(\"3\\n1 2 3 4\\n5 2 3 4 1\\n3 4 1 2 5\") == \"5\"\n",
        "num_ids_2": 45,
        "num_ids_4": 120
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('ATCODER') == 3\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"\") == \"\"\nassert solution(\"ATCODERAC\") == \"AC\"\nassert solution(\"ATCODERABC\") == \"ABC\"\nassert solution(\"ATCODERACCT\") == \"ACCT\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ACGTATC') == 'ATC'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'AT'\nprint(solution('ATCODER'))\nprint(solution('TTTAAAGGGGTTT'))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ATCODER') == 'ATC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"AT\"\nassert solution(\"GCAGATC\") == \"AT\"\nassert solution(\"GGAC\") == \"GT\"\nassert solution(\"TTTTTTTT\") == \"TT\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == 3\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n\nThe problem can be solved by finding all the substrings of ATCODER and then finding the longest substring that contains ACGT.\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"10\") == \"0\"\nassert solution(\"19\") == \"9\"\nassert solution(\"21\") == \"1\"\nassert solution(\"22\") == \"0\"\n\nThe input will be space-delimited integers on one line with no leading zeros. The output must be a single integer.\n\"\"\"\n\nn = input()",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\nassert solution('21') == '2'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '9'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"22\") == \"0\"\nassert solution(\"9\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '9'\nassert solution('11') == '9'\nassert solution('123') == '3'\nassert solution('1234') == '3'\nassert solution('12345') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"100\") == \"101\"\nassert solution(\"101\") == \"102\"\nassert solution(\"1000\") == \"1001\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11') == '9'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('cake') == 'cak'\nassert solution('codewars') == 'codw'\nassert solution('gatsby') == 'gatsby'\nassert solution('code') == 'cdoe'\n",
        "num_ids_2": 19,
        "num_ids_4": 46
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''cupofcoffee\ncupofhottea\n''') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\n\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdin.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n## 3) Missing Number\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('cupofcoffee') == '4'\nassert solution('cupofhottea') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('2 4') == '-1 -2 -3 -4'\nassert solution('1 1') == '-1 -1'\nassert solution('1 2') == '-1 -2'\nassert solution('1 3') == '-1 -3'\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 1\") == \"1 1\"\nassert solution(\n    \"2 2\") == \"1 2\"\nassert solution(\n    \"3 3\") == \"1 2 3\"\nassert solution(\n    \"4 4\") == \"1 2 3 4\"\nassert solution(\n    \"5 5\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 7') == '5 6 7 8 9'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"2 2\") == \"1 1\"\nassert solution(\"3 4\") == \"1 1 2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 6') == '5 6 7 8 9'\nassert solution('1 4') == '1 4 7 8 9'\nassert solution('2 5') == '1 2 3 4 5 6 7 8 9'\nassert solution('2 3') == '1 2 3 4 5 6 7 8 9'\nassert solution('2 2') == '1 2 3 4 5 6 7 8 9'\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"5 8\") == \"6 7 8 9\"\nassert solution(\"7\") == \"7\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 49
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2\n3 4\n4 5\n''') == '1 2 3 4 5'\n\nassert solution('''2 3\n4 5\n3 6\n''') == '3 4 5 6'\n\nassert solution('''1 5\n4 6\n3 7\n''') == '1 4 5 3 7'\n\nassert solution('''1 7\n4 6\n3 5\n''') == '1 4 6 3 5'\n\nassert solution('''2 5\n4 6\n3 7\n''') == '2 4 6 7 3'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 7') == \"5 6 7 8 9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2\") == \"1 2\"\nassert solution(\"3 4\\n1 2\") == \"1 2\"\nassert solution(\"1 2\\n1 2\") == \"1 2\"\nassert solution(\"3 4\\n2 3\") == \"1 2\"\nassert solution(\"3 4\\n1 2\") == \"1 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"Yes\"\nassert solution(\"-10\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'Yes'\nassert solution('25') == 'No'\nassert solution('10') == 'Yes'\nassert solution('-25') == 'No'\nassert solution('30') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"15\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes', \"Should be Yes\"\nassert solution('20') == 'No', \"Should be No\"\nassert solution('-50') == 'No', \"Should be No\"\nassert solution('-40') == 'Yes', \"Should be Yes\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"30\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"-10\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"25\") == \"Yes\", \"Should be No\"\n\nprint(\"Done!\")\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('25') == 'Yes', \"Test 1 Failed\"\nassert solution('30') == 'Yes', \"Test 2 Failed\"\nassert solution('35') == 'No', \"Test 3 Failed\"\nassert solution('40') == 'No', \"Test 4 Failed\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"-2\") == \"No\"\nassert solution(\"15\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'\nassert solution('30') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"3 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 2]) == '1'\nassert solution([5, 5]) == '1'\nassert solution([-2, 8]) == '2'\nassert solution([1, 2]) == '0'\nassert solution([1, 5]) == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\n\nprint(solution(input()))\n\"\"\"\n\nn, d = [int(i) for i in input().split()]\n\nx = list()\nfor i in range(n):\n    x.append([int(i) for i in input().split()])",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '1'\nassert solution('3 2 3') == '1'\nassert solution('5 5') == '2'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 1\n10 5\n-1 -1\n-20 -20\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 1\n-10 5\n-1 -1\n-20 -20\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2\n1 2\n5 5\n-2 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 1\n10 5\n-1 -1\n-20 -20\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 2') == '1'\nassert solution('4 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"-2 8\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 2], ['1 2', '5 5', '-2 8']) == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('5 5') == '1'\nassert solution('-2 8') == '1'\n\n'''\n\nfrom math import sqrt",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\nassert solution('1223') == 'Bad'\n\nstdin = input()\nsolution(stdin)",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"Bad\"\nassert solution(\"11\") == \"Bad\"\nassert solution(\"1111\") == \"Bad\"\nassert solution(\"1212\") == \"Good\"\nassert solution(\"12113\") == \"Good\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"4517\") == \"Good\"\nassert solution(\"3777\") == \"Bad\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234') == 'Good'\nassert solution('1122') == 'Good'\nassert solution('5678') == 'Good'\nassert solution('9999') == 'Good'\nassert solution('99999') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"123456\") == \"Good\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Bad\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Good\"\nassert solution(\"22\") == \"Good\"\nassert solution(\"111\") == \"Good\"\nassert solution(\"1237\") == \"Bad\"\nassert solution(\"1232\") == \"Bad\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Good'\nassert solution('5543') == 'Bad'\nassert solution('7617') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3776\") == \"Bad\", \"Should be False\"\nassert solution(\"3089\") == \"Good\", \"Should be True\"\nassert solution(\"4256\") == \"Good\", \"Should be True\"\nassert solution(\"1234\") == \"Bad\", \"Should be False\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == 'Good'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3.5'\nassert solution(input()) == '3.50001'\nassert solution(input()) == '3.49999'\nassert solution(input()) == '3.499998'\nassert solution(input()) == '3.499999'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3.5'\nassert solution('2 2') == '2.25'\nassert solution('2 3 4') == '3.5'\nassert solution('2 4 3') == '3.5'\nassert solution('2 3 2') == '3.0'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3.50001\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '1'\nassert solution('5') == '3.50001'",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"3.5\"\nprint(solution(\"1\\n2\\n3\\n4\"))\n\n\nimport sys",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3.50000000000001'\nassert solution(input()) == '3.499999999999999'\nassert solution(input()) == '3.499999999999999'",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3 4\n''') == '3.5'\nassert solution('''\n3\n2 1\n''') == '2.5'\nassert solution('''\n3\n1 3\n''') == '2.5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"1.5\"\nassert solution(\"3\") == \"1.5\"\nassert solution(\"4\") == \"2.0\"\nassert solution(\"5\") == \"2.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"3.5\"\nassert solution(\"2\\n1\\n\") == \"3.5\"\nassert solution(\"2\\n3\\n\") == \"4\"\nassert solution(\"3\\n1\\n\") == \"3.5\"\nassert solution(\"3\\n2\\n\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"3.5\"\nassert solution(\"4\") == \"4.0\"\nassert solution(\"5\") == \"5.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == '14'\nassert solution('3 1 2 3') == '14'\nassert solution('3 2 1') == '13'\nassert solution('3 3 3 3') == '30'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 1, 2]) == 14\nassert solution([3, 1, 2, 3]) == 10\nassert solution([3, 1, 2, 3, 3]) == 16\nassert solution([3, 1, 2, 3, 3, 3]) == 20\nassert solution([3, 1, 2, 3, 3, 3, 3]) == 21\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '14'\n\n--- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---\n\n--- Day 2: Corruption Checksum ---\n\nDetermine the correct value for the security checksum. For example, given the following list:\n\n[9,2,4,0,5,1,2,5,0]\n\nThe correct value for the checksum is 5.\n\n--- Part Two ---\n\nThe Elves in accounting just need you to fix your expense report (your puzzle input); apparently, something isn't quite adding up.\n\nSpecifically, they need you to find the two entries that sum to 2020 and then multiply those two numbers together.\n\nFor example, suppose your expense report contained the following:\n\n1721\n979\n366\n299\n675\n1456\n\n... in this list. (Of course, the list has many more entries. Good luck!)\n\nThe first number is 1721. The second is 299. Multiplying these together produces 1721 * 299 = 514579, so the correct answer is 514579.\n\nWhat is the product of the three entries that sum to 2020?\n\n---- Notes ----\n\nYour expense report doesn't contain any numbers with three digits (for example, it contains one line of\n737 1 234 5 6 9 16 2 1 739). The list of these numbers could just be broken up into a series of 2-digit\nlists:\n\n[1721, 979, 366, 299, 675, 1456]\n\n-- This is not the solution for Part 2 --\n\nHowever, if you take any of the numbers and break them down into digits, you could make the sum become\nthe same as the product. For example, 675 would be split into 6 and 5. So the product of those three\nnumbers is 6 * 5 * 5 = 125, which equals 675.\n\nIn this example, the three numbers that sum to 2020 are 1721, 299, 675. Multiplying them together\nproduces the answer, 241861950.\n\n-- This is not the solution for Part 2 --\n\nAlso, the Elves would like you to find three numbers whose product is closest to a given value.\nTo help them find that answer, you'd like them to narrow down the list of numbers to try in order to\nfind the closest match. (They would like you to find the three numbers whose product is closest to\n28, which is 59 \u00d7 9 \u00d7 9.) In the example above, the three numbers that sum to 2020 are 1721, 299, and 675.\n\nBy finding these three numbers and multiplying them together, you can get the closest answer of 59 \u00d7 9 \u00d7 9 =\n28696.\n\nWhat is the smallest positive number that is evenly divisible by all of the numbers from 1 to 1000\ninclusive?\n\"\"\"\nfrom typing import List\nimport unittest\n\nfrom utils import read_input",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"4\") == \"24\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3 1 2\n2 5 4\n3 6\n\"\"\") == \"14\"\nassert solution(\"\"\"\n4\n3 1 2 3\n2 5 4\n3 6 7\n\"\"\") == \"14\"\nassert solution(\"\"\"\n3\n3 1 2\n2 5 4\n3 6\n\"\"\") == \"14\"\nassert solution(\"\"\"\n3\n3 1 2\n2 5 4\n3 6\n\"\"\") == \"14\"\nassert solution(\"\"\"\n3\n3 1 2\n2 5 4\n3 6\n\"\"\") == \"14\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '14'\nassert solution('4') == '13'\nassert solution('5') == '12'\nassert solution('6') == '11'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n4\n3 1 5\n3 2 4\n4 6\n3 7\n''') == '23'\nassert solution('''\n1\n1 1\n1 2\n''') == '3'\nassert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n4\n3 1 5\n3 2 4\n4 6\n3 7\n''') == '23'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == 14\nassert solution(\"3\") == 14\nassert solution(\"4\") == 20\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"18\"\nassert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"20\"\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '14'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\nZABCDBABCQ') == '2'\nassert solution('10\\nABBCCDDAABBC') == '1'\nassert solution('10\\nZZZZZZZZZZZZ') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nabc\nabc\nabc''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ABC\") == 1\nassert solution(\"ABCD\") == 2\nassert solution(\"ABCDEFGHIJ\") == 4\nassert solution(\"ABCDEFGHIJKLMNOP\") == 4\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"5\\nABCDBCABCD\") == \"3\"\nassert solution(\"10\\nZABCDBABCQ\") == \"1\"\nassert solution(\"1\\nABCDEFGHIJK\") == \"1\"\nprint('all tests passed!')\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4'\nassert solution('3\\n4\\n1\\n2') == '2'\nassert solution('4\\n5\\n1\\n2') == '2'\nassert solution('4\\n5\\n1\\n2') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nZABCDBABCQ\n''') == \"2\"\nprint(solution('''3\nZABCDBABCQ\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('ABCD') == '1'\nassert solution('ABCDBCD') == '2'\nassert solution('ABCDABC') == '2'\nassert solution('ABCDBCBC') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n\"\"\"\n\nimport re",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\nfrom itertools import combinations\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 MASHIKE RUMOI OBIRA HOROKANAI') == '2'\n\n'''\n\nimport math\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == '2'\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\"\"\"\n\nimport itertools\nimport itertools\nimport string",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"5 6\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\n\"\"\"\n\nn, m = [int(x) for x in input().split()]\nprint(\"Yes\" if n + m == n * m else \"No\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('5 4') == 'No'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 4\") == \"Yes\"\nassert solution(\"10 7\") == \"No\"\nassert solution(\"10 9\") == \"No\"\nassert solution(\"10 9\") == \"No\"\n\"\"\"\nimport sys\nsys.stdin = open(\"input.txt\", \"rt\")\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"10 3\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"Yes\", \"Test Case 1\"\nassert solution(\"1 1 1\") == \"Yes\", \"Test Case 2\"\nassert solution(\"1 1 1 1\") == \"Yes\", \"Test Case 3\"\nassert solution(\"1 2 1\") == \"No\", \"Test Case 4\"\nassert solution(\"1 1\") == \"No\", \"Test Case 5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes', 'Test 1 failed'\nassert solution('2') == 'No', 'Test 2 failed'\nassert solution('3') == 'Yes', 'Test 3 failed'\n\ninput_str = input().split()\nn, m = int(input_str[0]), int(input_str[1])\nfor i in range(n):\n    result = solution(input())\n    print(result)\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2,3,2,3,2]) == \"Yes\"\nassert solution([1,3,2,3,2]) == \"Yes\"\nassert solution([1,1,3,3,2]) == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('aaa') == 'No'\nassert solution('fry') == 'Yes'\nassert solution('sip') == 'Yes'\nassert solution('bri') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sss') == 'No'\nassert solution('sssgs') == 'Yes'\nassert solution('dia') == 'No'\nassert solution('ssss') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipp') == 'No'\n\"\"\"\n\n\"\"\"\nSippuu is coffee-like.\n\nInput: sippuu\n\nThe 3-rd and 4-th characters are equal, and the 5-th and 6-th characters are also equal.\n\nOutput: Yes\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sippuu\") == \"Yes\", \"Failed\"\nassert solution(\"sippuu\") == \"Yes\", \"Failed\"\nassert solution(\"sippuu\") == \"No\", \"Failed\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n\nassert solution(\"tacocat\") == \"No\"\n\nassert solution(\"cat\") == \"Yes\"\n\nassert solution(\"cats\") == \"No\"\n\nassert solution(\"sip\") == \"Yes\"",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"coffee\") == \"No\"\nassert solution(\"coffee\") == \"No\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sipp\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipuu') == 'No'\nassert solution('sippu') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipui') == 'No'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4'\nassert solution('1 2 3\\n1 2 4\\n2 3 5') == '3'\nassert solution('1 2 3\\n1 2 5\\n2 3 5') == '3'\n",
        "num_ids_2": 45,
        "num_ids_4": 67
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n0 0\n1 1\n''') == '1'\nassert solution('''5\n0 0\n1 2\n2 1\n3 3\n4 5\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\nassert solution(\"3 10\\n5 2\\n5 1\\n3 4\\n\") == \"10\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 60\\n7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('3 60\\n7 60\\n1 80\\n4 50\\n') == 'TLE'\nassert solution('3 60\\n7 60\\n1 80\\n4 50\\n') == 'TLE'\n",
        "num_ids_2": 51,
        "num_ids_4": 77
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('3 3\\n3 5\\n2 5\\n1 10\\n') == '1'\n\"\"\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1''') == '2'\nassert solution('''1 1 2''') == '2'\nassert solution('''1 1 5''') == '5'\nassert solution('''1 2 3''') == '3'\nassert solution('''1 2 3 2''') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\n\nstdin = \"\"\nN, T = input().split()\nN = int(N)\nT = int(T)\ntest = []\nfor i in range(N):\n    test.append([int(input()), i + 1])\ntest = sorted(test, key=lambda x: x[0])\n\nprint(test[-1][1])\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50\n''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('3 4 5') == '15'\nassert solution('12 0 1') == '12'\nassert solution('4 5 1') == '20'\nassert solution('4 5 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 10\") == \"8\"\nassert solution(\"2 2 5\") == \"10\"\nassert solution(\"5 5 5\") == \"10\"\nassert solution(\"10 10 10\") == \"25\"\nassert solution(\"10 20 10\") == \"20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('4 2 10') == '9'\nassert solution('10 5 10') == '15'\nassert solution('1 2 10') == '10'\nassert solution('1 5 10') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 9') == '8'\nassert solution('1 2 3') == '3'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"10 9 5\") == \"15\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"8\"\nassert solution(\"4 2 9\") == \"8\"\nassert solution(\"8 2 9\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\") == \"6\"\nassert solution(\"2 3 4\") == \"8\"\nassert solution(\"4 5 8\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2') == '2'\nassert solution('2 2 2') == '2'\nassert solution('3 3 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"4 2 8\") == \"8\"\nassert solution(\"4 2 7\") == \"7\"\nassert solution(\"4 2 6\") == \"6\"\nassert solution(\"4 2 5\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 7\") == \"15\"\nassert solution(\"5 4 10\") == \"25\"\nassert solution(\"3 2 6\") == \"13\"\nassert solution(\"10 4 2\") == \"10\"\nassert solution(\"7 3 5\") == \"21\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nacornistnt\\npeanutbomb\\n') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1000000000\") == \"10000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\\n\") == \"1\"\nassert solution(\"2\\nab\\nac\\n\") == \"0\"\nassert solution(\"1\\nac\\n\") == \"1\"\nassert solution(\"5\\nab\\nab\\ncd\\nabc\\n\") == \"5\"",
        "num_ids_2": 46,
        "num_ids_4": 85
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n4\nacornistnt\npeanutbomb\nconstraint\ntest\n''') == '3'\nassert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '1'\n\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == '8'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"1\"\nassert solution(\"123\") == \"1\"\nassert solution(\"123456\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '1'\nassert solution(\"10 2\") == '1 1 1 1 1 1 1 1'\nassert solution(\"10 2\") == '1 1 1 1 1 1 1 1'\nassert solution(\"3 1\") == '1 1 1'\nassert solution(\"3 1\") == '1 1 1'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2') == '2'\nassert solution('10 2') == '1 2 3 4 5 6 7 8 9'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 2\n3 1\n1 4\n1 2\n4 5\n3 6\n5 2''') == '1 2 1 1 2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n4 5\n3 6\n5 2''') == '1 2 1 1 2'\nassert solution('''10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '1 1 1 1 1 2 2 2 2 2 2 1 1 1 2 1 3 1 2 3 1 1 1 2 2 1 2 1 1 1 1 1 1 1 1 1 2 3 2 3 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 3 2 1 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\"\n) == \"2\"\nassert solution(\n    \"10 2\\n3 1\\n1 4\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\"\n) == \"3\"\nassert solution(\n    \"100 2\\n2 3\\n1 2\\n1 4\\n1 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n1 2\\n1 4\\n1 3\\n2 5\\n2 6\\",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2\\n1 4\\n4 3\\n3 5\\n3 6\\n5 2\\n') == '2\\n1 2 1 1 2'\nassert solution('4 2\\n3 1\\n1 4\\n1 2\\n') == '1'\nassert solution('10 2\\n10 3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n2 7\\n3 8\\n3 9\\n') == '3'",
        "num_ids_2": 65,
        "num_ids_4": 114
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n100 4\n20 30\n50 50\n20 40\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1 2 1 1 2'\n\nassert solution('''\n6 2\n3 1\n1 4\n1 2\n''') == '1 2 1 1 2 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2 4\"\nassert solution(\"9\") == \"3 6\"\nassert solution(\"7\") == \"3 6\"\n\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 4\"\nassert solution() == \"3 6\"\nassert solution() == \"3 8\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 2 4\n''') == '2 4'\nassert solution('''5\n1 1 2 3 4\n''') == '4 6'\nassert solution('''7\n2 4 3 7 1 4 3\n''') == '3 6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 2 2\n''') == \"2 2\"\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n''') == \"3 8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2 4\"\nassert solution(\"9\") == \"3 8\"\nassert solution(\"7\") == \"3 6\"\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3 4\"\nassert solution(\"4\") == \"2 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 4'\n\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\") == \"3 6\"",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 4'\nassert solution('8') == '6 8'\nassert solution('4') == '4 4'\nassert solution('9') == '3 6'\nassert solution('7') == '3 6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('3') == '3 2 4 1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2 4 1 3 5'\nassert solution('3') == '2 1 3 5'\nassert solution('1') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('5 2 3') == '3 1 2 5 4'\n\nprint(solution('''4\n2 3\n4 5\n5 1\n4 2'''))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('3') == '3 2 4 1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('1') == '3 1 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5', \"The circle doesn't seem to be ordered\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 3\n1 4\n3 4\n1 2\n\"\"\") == \"3 4 1 1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n1 4\n2 4\n1 5\n2 3''') == '3 2 4 1 5', f'Should be {3, 2, 4, 1, 5}'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 10 17 12 15 2\") == \"3\"\nassert solution(\"10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\") == \"1\"\nassert solution(\"6\\n1 1000 10000 10 100 1000000000\") == \"1\"\n",
        "num_ids_2": 52,
        "num_ids_4": 71
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\nassert solution('''\n''') == '0'\nassert solution('''\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '2'\n\nassert solution('''\n10\n1 1000 10000 10 100 1000000000\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1'\nassert solution('10') == '1'\nassert solution('6') == '3'\n\"\"\"\n\nfrom collections import Counter\n\nn = int(input())\ns = list(map(int, input().split()))\n\ncount = Counter()\n\nfor i in s:\n    count[i] += 1\n\nmax_count = 0\nfor k,v in count.items():\n    if (v - max_count) < 5:\n        continue\n    max_count = v\n\nprint(max_count)\n\n\"\"\"\n\nfrom collections import Counter\n\nn = int(input())\ns = list(map(int, input().split()))\n\ncount = Counter()\n\nfor i in s:\n    count[i] += 1\n\nmax_count = 0\nfor k,v in count.items():\n    if (v - max_count) < 5:\n        continue\n    max_count = v\n\nprint(max_count)\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n10\n
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\") == \"4\"\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n20 5 7 3\") == \"0\"\nassert solution(\"2\\n12 3 4 2\\n20 6 8 3\\n16 8 9 3\\n15 9 10 4\\n10 10 9 3\") == \"-1\"\n",
        "num_ids_2": 80,
        "num_ids_4": 120
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\n\n'''\n\nimport sys\nimport re\nimport math\nfrom decimal import Decimal",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2') == '5'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n10\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('''\n5 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n0\n''') == '1'\nassert solution('''\n1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3') == '4\\n-1\\n5\\n2\\n1'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '-1'\nassert solution('3') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution() == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == '4'\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\") == '2'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"15 5 3 2\") == \"5\"\nassert solution(\"15 5 4 3\") == \"2\"\nassert solution(\"15 5 2 1\") == \"0\"\nassert solution(\"16 7 5 2\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\naa?bb?c\n''') == '1'\nassert solution('''\n9\n???????\n''') == '2835'\nassert solution('''\n5\na???c\n''') == '46'\nassert solution('''\n7\nac?b?c\n''') == '24'\n\n'''\nWrite your code so that it works for any string size.\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('9') == '0'\nassert solution('5') == '46'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\nac?b?c\n''') == '24'\nassert solution('''7\n???????\n''') == '2835'\nassert solution('''5\na???c\n''') == '46'\nassert solution('''4\nacbbbaaa\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s1) == \"24\"\nassert solution(s2) == \"2835\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''9\naaaaaaa''') == '4'\nassert solution('''8\naabaaaaa''') == '7'\nassert solution('''5\naaaaaa''') == '1'\nassert solution('''5\naababab''') == '3'\nassert solution('''6\nabcbc''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\nac?b?c\n''') == '24'\nassert solution('''7\n???????\n''') == '2835'\nassert solution('''5\na???c\n''') == '46'\n\nprint(solution(stdin))",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"24\"\nassert solution(input(True)) == \"2835\"\nassert solution(input(False)) == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '2835'\nassert solution('5') == '46'\nassert solution('6') == '24'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\nac?b?c''') == '24'\n\nassert solution('''7\n???????''') == '2835'\n\nassert solution('''5\na???c''') == '46'\n\nassert solution('''5\naa???c''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 0\") == \"5\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"4 0\") == \"16\"\nassert solution(\"5 4\") == \"18\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\nassert solution('5 4') == '18'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 0\n1 3 3 7\n2 3 5\n2 1 1\n''') == '16'\n\nassert solution('''\n4 0\n1 3 3 7\n2 3 5\n2 1 1\n''') == '18'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"4 0\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '16'\n\nassert solution() == '18'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"14\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '45'\nassert solution('''10 1 1\n0 9\n1 5\n''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '14'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '14'\nassert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\nassert solution('10 1 1') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"14\"\nassert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\"\"\") == \"14\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n0 5\n\"\"\") == \"45\"\n\nassert solution(\"\"\"\n10 1 1\n0 9\n1 5\n\"\"\") == \"-1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 4\") == \"14\"\nassert solution(\"1 1 1\") == \"-1\"\nassert solution(\"2 1 1\") == \"45\"\n\n\n-----Hints-----\n\n* If you don't know the answer (the answer for the first example), try to find it out by yourself.\n* Solution 1, 2 and 3 are already written for you.\n* In Solution 1, you'll need to write the code of stdin.splitlines(). Use split to get the input.\n* In Solution 3, you'll need to write the code of stdin.readline().\n\n\"\"\"\n\nfrom math import inf",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 2 4\\n3 7\") == \"14\"\nassert solution(\"10 1 1\\n0 9\") == \"45\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 1 1') == '45', 'First example'\nassert solution('10 2 4') == '14', 'Second example'\nassert solution('10 2 3') == '-1', 'Third example'",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"1 5 7\") == \"Yes\"\nassert solution(\"4 2 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == \"Yes\"\nassert solution('5 7 5') == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1\") == \"Yes\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 59
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 7 5''') == 'Yes'\nassert solution('''1 1 1''') == 'No'\nassert solution('''1 2 1''') == 'No'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Should return Yes\"\nassert solution(\"10 10 5\") == \"No\", \"Should return No\"\nassert solution(\"2 3 4\") == \"Yes\", \"Should return Yes\"\nassert solution(\"5 7 3\") == \"No\", \"Should return No\"\nassert solution(\"5 7 4\") == \"Yes\", \"Should return Yes\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'Yes'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('7 7 7') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == 'Yes'\nassert solution('5 3 2') == 'No'\nassert solution('8 8 8') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 5\") == \"1\"\nassert solution(\"2 2 3\") == \"0\"\nassert solution(\"3 5 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 5') == '2'\nassert solution('3 3 4') == '1'\nassert solution('1 1 1') == '0'\nassert solution('5 5 5') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 4\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n12 5\\n1000 2000') == '1'\nassert solution('1\\n7 4\\n0 0 0 0') == '0'\nassert solution('1\\n6 4\\n-60 -40 -40 -20') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n1000 2000\") == \"1\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n5\n12\n1\n''') == '0'\nassert solution('''\n2\n10\n20\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\n\nprint(solution())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2\n12 5\n1000 2000\n''') == '1'\n\n'''\n\n#####################################################################################################################\n#####################################################################################################################\n\n25. Write a program that will calculate the number of trailing zeros in a factorial of a given number.\nThe function accepts the number as a parameter and returns the number of trailing zeros in the factorial of that number.\n\nExample:\n\nSuppose the following input is supplied to the program:\n8\n\nThen, the output should be:\n0\n\nHints:\nIn case of input data being supplied to the question, it should be assumed to be a console input.\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n1 1000\\n1000 2000\\n') == '1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('10 1') == '2'\nassert solution('15 1') == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2,1]) == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n\") == \"1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 1]) == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 1') == '1'\nassert solution('4 5') == '2'\nassert solution('7 4') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '0'\nassert solution('4 5') == '2'\nassert solution('7 6') == '3'\nassert solution('10 9') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 2') == '2'\nassert solution('2 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2'\nassert solution('10 5') == '3'\nassert solution('10 10') == '0'\nassert solution('10 6') == '0'\nassert solution('10 100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"2\", \"test 1\"\nassert solution(\"5 4 2\") == \"1\", \"test 2\"\nassert solution(\"10 5 1\") == \"0\", \"test 3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACG\") == \"3\"\nassert solution(\"ACACTACG\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8\n''') == '2'\n\nassert solution('''8 2\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n''') == '3'\n\nassert solution('''8 2\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n''') == '2'\n\nassert solution('''8 1\nAC\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3\\nACACTACG') == '2'\nassert solution('8 3\\nACACTACG') == '3'\nassert solution('2 3\\nACACTACG') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ACACTACG\") == \"2\"\nassert solution(\"ACACTACGAC\") == \"2\"\nassert solution(\"ACACACACAC\") == \"0\"\nassert solution(\"ACACACACACAC\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\nassert solution('''5 4\n50 100 80 120 80\n''') == '260'\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 4') == '210'\nassert solution('5 5') == '210'\nassert solution('5 5') == '210'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\"\nassert solution(\"4 3\\n5 10 20 30 40\\n\") == \"50\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '21'\nassert solution('5 3') == '105'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n50 100 80 120 80\n''') == '210', 'First'\nassert solution('''4 4\n50 100 80 120 80\n''') == '210', 'Second'\nassert solution('''3 3\n100 200 200 200 200\n''') == '200', 'Third'\nassert solution('''3 3\n100 200 200 200 200\n''') == '200', 'Fourth'\nassert solution('''3 3\n100 200 200 200 200\n''') == '200', 'Fifth'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == \"210\"\nassert solution(\"4 4\\n20 40 20 20\\n\") == \"80\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\nassert solution('''5 5\n50 100 80 120 80\n''') == '210'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 3') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\\n\") == \"4\"\nassert solution(\"1 2 3 4\\n\") == \"8\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 2 4') == '6'\nassert solution('1 3 5') == '8'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 6') == '6'\nassert solution('1 3 4') == '4'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"4 4 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 5 1\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 2\") == \"10\"\nassert solution(\"-1 -2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '10'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 5') == '10'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"-1 5\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0', \"Wrong!\"\nassert solution('1 1') == '10', \"Wrong!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('0 1') == '1'\nassert solution('5 6') == '0'\nassert solution('1 1') == '10'\nassert solution('6 6') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"-1 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(X, A) == 0\n\n=====\n\nX and A are integers between 0 and 9 (inclusive).\nIf X is less than A, print 0; if X is not less than A, print 10.\n\n-----Constraints-----\n - 0 \\leq X, A \\leq 9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nX A\n\n-----Output-----\nIf X is less than A, print 0; if X is not less than A, print 10.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 8\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"9 8\") == \"0\"\nassert solution(\"10 4\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4') == '1'\nassert solution('6 5') == '1'\nassert solution('8 5') == '1'\nassert solution('9 5') == '1'\nassert solution('3 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 5') == '1'\nassert solution('1 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('7\\n4') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"10 11\") == \"2\"\nassert solution(\"10 11 00\") == \"2\"\nassert solution(\"10 11 00 00\") == \"2\"\nassert solution(\"10 11 00 00 00\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4') == '1'\nassert solution('1 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"1\", \"test 1\"\nassert solution(\"7 4\") == \"1\", \"test 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"5 3\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"8 8\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"10 5\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 'win'\n\n2.    Write a function to count the number of valid IPv4 addresses in a given IP range.\n\nGiven are three integers,,, and, in the range.\n\nIP addresses are composed of four parts, and each part is. For example,.\n\nEach of the four parts is a contiguous block of one or more numbers (in the range ) between.\n\nThe function should return the number of valid IPv4 addresses in the range.\n\nFor example,. The following addresses are valid:\n\n.\n.\n.\n.\n.\n.\n.\n.\nThe following addresses are invalid:\n\n.\n.\n.\n.\n.\n.\n\nInvalid address should be ignored in the count.",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"4 2 8\") == \"bust\"\nassert solution(\"7 1 9\") == \"win\"\nassert solution(\"8 3 9\") == \"bust\"\nassert solution(\"3 9 8\") == \"bust\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 6 9') == 'bust'\nassert solution('5 5 9') == 'bust'\nassert solution('5 1 5') == 'win'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 9') == 'win'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 7 9\n'''\n) == 'win'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == 'win', 'Sample Test Failed'\nassert solution('1 2 3') == 'bust', 'Sample Test Failed'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 9\\n') == 'win'\nassert solution('1 2 3\\n') == 'bust'\nassert solution('1 2 3\\n') == 'win'\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 9') == 'bust'\nassert solution('3 5 7') == 'win'\nassert solution('1 2 3') == 'win'\nassert solution('12 3') == 'win'\nassert solution('5 2 1') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('1 2 3') == 'bust'\nassert solution('5 7 9 8') == 'win'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '10'\nassert solution('3') == '6'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '6'\nassert solution('4') == '8'\nassert solution('5') == '11'\nassert solution('6') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '6'\nassert solution('6') == '6'\nassert solution('2') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"7 2\") == \"3\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"2\"\nassert solution(\"12 1\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == '2'\nassert solution(\"10 10\") == '5'\nassert solution(\"2 1\") == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '0'\nassert solution('3 4') == '1'\nassert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('3 5') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 2\"\n) == \"2\"\n\nassert solution(\n    \"4 6\"\n) == \"2\"\n\nassert solution(\n    \"5 10\"\n) == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'one'\nassert solution('11') == 'one eleven'\nassert solution('12') == 'two twelve'\nassert solution('99') == 'nin nine ninety nine'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == 'pon'\nassert solution('26') == 'bon'\nassert solution('27') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == 'pon'\nassert solution('12') == 'hon'\nassert solution('00') == 'zero'\nassert solution('00') == 'zero'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"bon\", \"Sample test 1 failed\"\nassert solution(\"16\") == \"pon\", \"Sample test 2 failed\"\nassert solution(\"12345\") == \"bon\", \"Sample test 3 failed\"\nassert solution(\"9999\") == \"hon\", \"Sample test 4 failed\"\nassert solution(\"1234567\") == \"bon\", \"Sample test 5 failed\"\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '16') == 'pon'\n\nassert solution(\n    '1') == '1'\n\nassert solution(\n    '4') == 'hon'\n\nassert solution(\n    '10') == 'hon'\n\nassert solution(\n    '100') == 'hon'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n16\n\"\"\"\n) == \"pon\"\n\nassert solution(\n\"\"\"\n35\n\"\"\"\n) == \"bon\"\n\nassert solution(\n\"\"\"\n18\n\"\"\"\n) == \"hon\"\n\nassert solution(\n\"\"\"\n19\n\"\"\"\n) == \"pon\"\n\nassert solution(\n\"\"\"\n30\n\"\"\"\n) == \"bon\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"19\") == \"bon\"\nassert solution(\"7\") == \"pon\"\nassert solution(\"8\") == \"bon\"\nassert solution(\"12\") == \"bon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'hon'\nassert solution('4') == 'pon'\nassert solution('7') == 'bon'\nassert solution('15') == 'bon'\nassert solution('23') == 'hon'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n3 4 5\n\n\"\"\") == \"11\"\nassert solution(\"\"\"\n2\n3 4 5\n\n\"\"\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '11'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '11'\nassert solution('1') == '3'\n\n-- Approach 2 --\n\nFrom scratch, we don't have to implement the program by hand.\nInstead, we can assume that the base case has been reached when the N <= 3 and use it as a guideline for the recursive case.\n\nLet the base case be the case when N <= 3. This is done using the Python 'and' conditional operator and we call it 'And'.\nFor the other cases, we can use the 'or' operator to express a new case. This is called 'Or'.\n\n------Time Complexity------\nThe time complexity of the function is O(N^2).\n\n------Space Complexity------\nThe space complexity of the function is O(N^2).\nThis is because we need to call the function again.\n\n---Solution---",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '11'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"6\") == \"18\"\nassert solution(\"10\") == \"42\"\nassert solution(\"25\") == \"86\"\nassert solution(\"100\") == \"3192\"\n\n-----Sample Input 2-----\n9\n5 1 4 3 2\n\n-----Sample Output 2-----\n99\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 1 2\") == \"11\"\nassert solution(\"3\\n3 1 2\") == \"8\"\nassert solution(\"4\\n2 1 3 2\") == \"13\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"11\"\nassert solution('10') == \"55\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n4\n3\n''') == '4 3'\nprint(solution('''3\n1\n4\n3\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4\\n3\\n4'\nassert solution('4') == '4\\n3\\n4'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('3') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 4, 3]) == 4\nassert solution([1, 3, 4]) == 4\nassert solution([2, 5, 1, 3]) == 5\nassert solution([5, 1, 2, 3]) == 5\nassert solution([5, 1, 3, 4]) == 5\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nassert solution(\"2\\n1\\n4\\n3\") == \"4\\n3\\n4\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '3'\nassert solution('1') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('5\\n5\\n3\\n1\\n2') == '5\\n5\\n3\\n1\\n2'\nassert solution('1\\n2\\n3\\n4') == '4\\n3\\n4\\n1'\n",
        "num_ids_2": 59,
        "num_ids_4": 87
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4 3 4'\nassert solution('5') == '4 3 3 3'\nassert solution('6') == '3 3 3 3 3'\nassert solution('7') == '3 3 3 3 3 3'\nassert solution('8') == '3 3 3 3 3 3 3'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n''') == '9'\nassert solution('''20 10\n''') == '19'\nassert solution('''5 5\n''') == '9'\nassert solution('''2 3\n''') == '3'\nassert solution('''1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '9'\nassert solution('10 1') == '10'\nassert solution('1 10') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n''') == '9'\nassert solution('''5 5\n''') == '9'\nassert solution('''5 5\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n''') == '9'\nassert solution('''1\n''') == '1'\nassert solution('''6\n5\n3\n''') == '5'\nassert solution('''10\n8\n3\n''') == '10'\nassert solution('''5\n5\n''') == '9'",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 2\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 3]) == \"9\"\nassert solution([8, 3]) == \"6\"\nassert solution([10, 3]) == \"6\"\nassert solution([5, 4]) == \"8\"\nassert solution([10, 4]) == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"5 5\") == \"1\"\n\"\"\"\nfrom typing import List, Any\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"40\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"10 10\") == \"50\"\nassert solution(\"20 10\") == \"70\"\nassert solution(\"30 -10 20 50\") == \"40\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"5 3\") == \"40\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n-30 -10 10 20 50''') == '40'\nassert solution('''5 1\n-30 -10 10 20 50''') == '59'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 5\n-30 -10 10 20 50\n''') == '40'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '40'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"40\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"40\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n-30 -10 10 20 50''') == '40'\nassert solution('''5 4\n-30 -10 10 20 50''') == '40'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50\\n') == '40'\nassert solution('20 5\\n-30 -10 10 20 50\\n') == '40'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '40'\nassert solution('12 3') == '60'\nassert solution('25 3') == '35'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 13\\n\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 13') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 13') == '2'\nassert solution('4 1') == '1'\n\"\"\"\na, b = list(map(int, input().split()))\n\nprint(a+b-2)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '2'\nassert solution('1 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 8') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 8\") == \"2\"\nassert solution(\"10 0\") == \"10\"\nassert solution(\"2 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 6\n5\n3\n2\n1\n1\n''') == '3'\nassert solution('''2 5\n3\n1\n1\n''') == '1'\nassert solution('''8 5\n1\n3\n2\n2\n1\n4\n5\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('''\n4 3\n1 2\n3 4\n5 6\n''') == '1'\nassert solution('''\n4 3\n1 2\n3 4\n5 6\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 13\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 4') == '3'\nassert solution('2 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n\") == \"3\"\nassert solution(\"1 2\\n\") == \"1\"\nassert solution(\"5 5\\n\") == \"0\"\nassert solution(\"2 2\\n\") == \"0\"\nassert solution(\"4 1\\n\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4') == '3'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 4') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 4') == '3'\nassert solution('20 2') == '5'\nassert solution('100 30') == '8'\nassert solution('100 1') == '100'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"10 1\") == \"2\"\nassert solution(\"5 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4') == '3'\nassert solution('100 2') == '1'\nassert solution('10 3') == '2'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 75 25 100') == '50'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 0 0 0') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 75 25 100') == '50'\nprint(solution('0 75 25 100'))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('1 0 5 10') == '5'\nassert solution('1 100 100 100') == '100'\nassert solution('1 0 50 50') == '50'\nassert solution('1 100 100 0') == '100'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"10 10 10 10\") == \"20\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 100\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"5 3 2 4\") == \"7\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"7 5 5 5\") == \"23\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 75 25 100') == '50'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"3 5 10\") == \"1\"\nassert solution(\"5 5 5 5\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 75 25 100\n''') == '50'\nprint('Solution: ', solution('''\n0 75 25 100\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1', \"Wrong\"\nassert solution('18') == '2', \"Wrong\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('105') == '1'\nassert solution('1000') == '1'\n\n-----------------------------------------------------------------------------------------------------------------------\nWrite a function which will multiply two vectors\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\", \"Sample case failed\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('105') == '1'\nassert solution('100') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('1000') == '0'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('105') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1'\nassert solution(3) == '1'\nassert solution(4) == '1'\nassert solution(5) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"105\") == \"1\"\nassert solution(\"104\") == \"0\"\nassert solution(\"1000\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([7, 3]) == 1\nassert solution([9, 1]) == 0\nassert solution([2, 3]) == 1\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 3\n''') == '1'\nassert solution('''\n10 2\n''') == '2'\nassert solution('''\n10 2\n''') == '1'\nassert solution('''\n10 2\n''') == '1'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1'\nassert solution('15 13') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1'\nassert solution('2 5') == '4'\nassert solution('8 8') == '0'\nassert solution('10 10') == '0'\nassert solution('15 15') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1\", \"Should be 1\"\nassert solution(\"10 10\") == \"0\", \"Should be 0\"\nassert solution(\"5 3\") == \"1\", \"Should be 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"11\") == \"11\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '10'\nassert solution('16') == '16'\nassert solution('111') == '111'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('111') == '111'\nassert solution('4') == '4'\nassert solution('1234') == '1234'\nassert solution('111') == '111'\nassert solution('123') == '123'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('111') == '111'\nassert solution('212') == '212'\nassert solution('333') == '333'\nassert solution('444') == '444'\nassert solution('555') == '555'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('111') == '111'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\nassert solution('101') == '111'\nassert solution('111') == '111'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    200\n    ''') == '200'\nassert solution('''\n    200\n    ''') == '200'\nassert solution('''\n    300\n    ''') == '300'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\nassert solution('111') == '111'\nassert solution('111') == '111'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 5 7 3') == '5'\nassert solution('1 2 5 3') == '6'\nassert solution('1 0 0 1 2') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 10 3') == '6'\nassert solution('1 8 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"-1 0 0\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 6 4\") == \"6\"\nassert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '5'\nassert solution('5 6 3') == '5'\nassert solution('5 4 3') == '4'\nassert solution('2 3 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('12') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"13\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"40\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('9') == '6'\nassert solution('10') == '7'\nassert solution('9') == '7'\nassert solution('11') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('1 2 3 4') == 'Yes'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 3 4 5 6 7 8') == 'No'\nassert solution('5 5 5 5 5') == 'Yes'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == 'Yes'\nassert solution('1 2 1 1') == 'No'\nassert solution('10 9 10 10') == 'No'\nassert solution('5 7 7 7') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"Yes\", solution(\"1 1 1 1\")\nassert solution(\"10 9 10 10\") == \"No\", solution(\"10 9 10 10\")\nassert solution(\"1\") == \"Yes\", solution(\"1\")\nassert solution(\"\") == \"Yes\", solution(\"\")\nassert solution(\"\") == \"Yes\", solution(\"\")\n",
        "num_ids_2": 40,
        "num_ids_4": 66
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 4 5\") == \"Yes\"\nassert solution(\"5 6 6 7\") == \"No\"\nassert solution(\"4 5 6 6\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3\") == \"No\"\nassert solution(\"2 2 2 2\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"3 6 4 5\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'No'\nassert solution('3 4 5 6') == 'Yes'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6 5 6\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'\nassert solution('10 2 5') == '10'\nassert solution('6 3 4') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('10\\n10 2 5\\n6 3 4') == '5'\nassert solution('10\\n10 2 5\\n6 3 4') == '5'\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 2 5\n6 3 4\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"10\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n10 2 5\n6 3 4\n''') == '5'\nassert solution('''10\n10 2 5\n6 3 4\n''') == '5'\nassert solution('''10\n10 2 5\n6 3 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"###\\n###\\n.##\"\nassert solution(\"4 4\") == \"###\\n###\\n.##\\n###\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '###\\n###\\n.##\\n'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '####'\nassert solution('2 2') == '###'\nassert solution('3 3') == '###'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '###'\nassert solution('3 4') == '####'\nassert solution('5 5') == '#####'\nassert solution('5 6') == '#####'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"###\\n###\\n.##\\n\"\nassert solution(\"1\\n#.#\") == \"###\\n###\\n.##\\n\"\n\"\"\"\n\nimport sys\n\nclass Solution:\n    def __init__(self):\n        pass\n\n    def solve(self, stdin):\n        pass",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"###\"\nassert solution(\"5 5\") == \"###\"\nassert solution(\"10 10\") == \"###\"\nassert solution(\"2 2\") == \"###\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n##.#\\n##.#\\n###\\n\") == \"###\"\nassert solution(\"4 4\\n##.#\\n##.#\\n###\\n\") == \"###\"\nassert solution(\"4 3\\n##.#\\n##.#\\n###\\n\") == \"###\"\nassert solution(\"4 4\\n###\\n##.#\\n###\\n\") == \"###\"\n",
        "num_ids_2": 48,
        "num_ids_4": 95
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n##.#\\n...#\") == \"###\"\nassert solution(\"5 5\\n#####\\n.##.##\\n.##.##\\n.##.##\\n#..#..\\n#####\") == \"#..#..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n###\n###\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5''') == '20.0'\nassert solution('''8\n3''') == '19.645234375'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '6.28318530717958623200'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '0.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"12.8284271247461903\"\nassert solution(\"10\") == \"28.27433388224159\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '12.0'\nassert solution('1') == '3.0'\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '12.8284271247461903'\nassert solution('10') == '12.8284271247461903'\n\"\"\"\nfrom math import pi\nR = int(input())\nprint(2*pi*R)",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '6.28318530717958623200'\nassert solution('1') == '6.28318530717958623200'\nassert solution('5') == '12.566370614359172'\n",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\n\nassert solution(\"3\") == \"0.1\"\n\nassert solution(\"0\") == \"0.0\"\n\nassert solution(\"-1\") == \"0.1\"\n\nassert solution(\"-5\") == \"0.1\"",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '12.57142857142857142857'\nassert solution('3') == '42.2'\nassert solution('4') == '0'\nassert solution('5') == '3.1415926535897932'\n\"\"\"\nimport math",
        "num_ids_2": 39,
        "num_ids_4": 61
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ZZZZZZ') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AAAA') == 'No'\nassert solution('AASA') == 'Yes'\nassert solution('AAAAA') == 'Yes'\nassert solution('AAAAAA') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('ASSA') == 'Yes'\nassert solution('AA') == 'Yes'\nassert solution('AAB') == 'Yes'\nassert solution('ABB') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ASSA') == 'Yes'\n\"\"\"\n\ns = input()\n\na = []\nfor i in range(len(s)):\n    if s.count(s[i]) > 1:\n        a.append(s[i])\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('BSA') == 'No'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'No'\nassert solution('ASSA') == 'Yes'\nassert solution('ABBA') == 'No'\nassert solution('AAAAAAAAAA') == 'Yes'\nassert solution('CAAB') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\n\nassert solution(\"ABCDEF\") == \"No\"\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ASSA') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ASSA') == 'Yes'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\nassert solution('-13 3') == '-10'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 7') == '17'\nassert solution('-1 -1') == '-2'\nassert solution('5 -5') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-13 3\") == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-13 -3') == '-16'\nassert solution('-13 -3 12') == '-39'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-13 3\") == \"-10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-100 3') == '-97'\nassert solution('-100 100') == '-99'\nassert solution('1 0') == '1'\nassert solution('1 1') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4\n-10\n\n5 5\n-10\n''') == '-10'\nassert solution('''5 3\n-10\n\n5 5\n-10\n''') == '-10'\nassert solution('''1 1\n-10\n\n1 1\n-10\n''') == '-10'\nassert solution('''5 2\n-10\n\n-10\n-10\n\n10\n10\n-10\n\n1\n-10\n\n-10\n-10\n-10\n-10\n\n-10\n-10\n-10\n-10\n''') == '-10'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-21 12') == '-34'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('-1 1') == '1'\nassert solution('-3 3') == '2'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == '3'\nprint('Hurray! You are correct.')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n6 5 6 8\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_nums) == output_str\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"10\\n10 10 10 10 10 10 10 10 10 10\") == \"10\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('4\\n5 5 6 6') == '2'\nassert solution('4\\n3 3 3 3') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 2 4\") == \"3\"\nassert solution(\"1\\n2 3 4\") == \"2\"\nassert solution(\"1\\n3 4 5\") == \"3\"\nassert solution(\"10\\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100",
        "num_ids_2": 30,
        "num_ids_4": 1722
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n5\n1 2 1 2 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 1 2 1''') == '3 2 1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9 10'\nassert solution('''5\n1 2 3 1 2 3 4''') == '4 3 2'\nassert solution('''5\n1 2 3 1 2 3 4''') == '2 2 1'\nassert solution('''6\n1 1 1 1 1 1 1''') == '2 1 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3 1 2 3 4\\n') == '2 4'\nassert solution('4\\n1 1 1 1\\n') == '4'\nassert solution('5\\n1 2 1 2 1\\n') == '3'\n",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '1'\nassert solution('6\\n1 1 1 1 1 1\\n') == '2'\nassert solution('7\\n1 2 3 1 2 3 4\\n') == '2'\nassert solution('4\\n1 1 1 1\\n') == '1'\nassert solution('4\\n1 2 1 2\\n') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"1, 2, 3\"\nassert solution('4') == \"1, 2, 1, 2\"\nassert solution('5') == \"1, 2, 1, 2, 3\"",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"7\\n1 1 1 1 1 2 3\") == \"2\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1\") == \"3\"\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1\\n3\\n'\nassert solution('6\\n1 2 3 4 5 1') == '1\\n3\\n'\nassert solution('7\\n1 2 3 4 5 1 2') == '1\\n3\\n'\nassert solution('8\\n1 2 3 4 5 1 2 1') == '1\\n3\\n'\nassert solution('9\\n1 2 3 4 5 1 2 1 2') == '1\\n3\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 94
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\nassert solution(\n\"\"\"\n5\n1 2 1 2 1\n\"\"\"\n) == \"1 2 1 2 1\"\nassert solution(\n\"\"\"\n2\n1 1\n\"\"\"\n) == \"1 1\"\nassert solution(\n\"\"\"\n3\n1 1 1\n\"\"\"\n) == \"1 1 1\"\nassert solution(\n\"\"\"\n3\n1 2 3\n\"\"\"\n) == \"1 2 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 2 3 1 2 3 4\\n\"\n) == \"2\"\n\nassert solution(\n    \"4\\n\"\n    \"1 1 1 1\\n\"\n) == \"4\"\n\nassert solution(\n    \"5\\n\"\n    \"1 2 1 2 1\\n\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == '1\\n2'\nassert solution('2\\n6') == '1\\n2'\nassert solution('3\\n7') == '1\\n2'\nassert solution('4\\n9') == '1\\n2'\nassert solution('5\\n10') == '1\\n2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n5\n8\n5\n1\n2\n''') == '1'\nassert solution('''\n3\n4\n3\n1\n2\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n6\\n7\\n21') == '1'\nassert solution('2\\n3\\n6\\n7\\n21') == '2'\nassert solution('3\\n3\\n6\\n7\\n21') == '1'\nassert solution('4\\n3\\n6\\n7\\n21') == '7'\nassert solution('5\\n3\\n6\\n7\\n21') == '4'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == '1'\nassert solution(\"6\") == '2'\nassert solution(\"7\") == '1'\nassert solution(\"21\") == '7'\nassert solution(\"28\") == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n2\n1\n7\n4\n333333333\n333333328\n''') == '2'\nassert solution('''\n7\n1\n1\n7\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n7\n1\n2\n7\n4\n333333333\n333333328\n''') == '7'\nassert solution('''\n7\n2\n1\n7\n4\n333333333\n333333328\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '2'\nassert solution('7') == '1'\nassert solution('21') == '7'\nassert solution('28') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\n\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '2'\n\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '1'\n\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '7'\n\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"2\\n3\") == \"2\"\nassert solution(\"3\\n4\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '1'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '1'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '7'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"50\"\nassert solution(input()) == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('512') == '512'\nassert solution('50') == '1'\nassert solution('1000000000') == '1'\nassert solution('100011010') == '10001100'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 1 2 2 2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 7 5 1 5') == '2\\n5 5'\n",
        "num_ids_2": 47,
        "num_ids_4": 68
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5 2 1 1 2 3'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2 5 5 1'\nassert solution('''\n3\n5 1 4\n''') == '2 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n3 5 1 2 2 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n3 7 5 1 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n5 1 4\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n3\n7 5 1 5\n''') == '2'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'\nassert solution('''\n5\n2 3 5 1 2 2\n''') == '2'\nassert solution('''\n4\n3 5 1 5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n7\n3 7 5 1 5\n''') == '7'\nassert solution('''\n3\n5 1 4\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1\\n') == '5\\n2 1 1 2 3\\n'\nassert solution('5\\n3 7 5 1 5\\n') == '2\\n5 5\\n'\nassert solution('3\\n5 1 4\\n') == '2\\n4 5\\n'",
        "num_ids_2": 55,
        "num_ids_4": 78
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '5\\n2 1 1 2 3'\nassert solution('3\\n5 1 4') == '2\\n4 5 \n",
        "num_ids_2": 50,
        "num_ids_4": 69
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"5\"\n\nassert solution(\"2 8 10 10 11\") == \"2\"\nassert solution(\"2 2 3 4 5\") == \"4\"\n\nassert solution(\"4 4\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"-1\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '2'\nassert solution('3 4') == '-1'\nassert solution('4 5') == '1'\nassert solution('4 10') == '0'\n\nstdin = \"\"\"\n5 6\n1 2\n2 3\n2 4\n3 4\n4 5\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nassert solution(\"10 8\") == \"2\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nassert solution(\"4 21\") == \"2\"\n\n\n\n----\n\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"tleelte\"\nassert solution(input()) == \"qwerty\"\nassert solution(input()) == \"vvvvvv\"\nassert solution(input()) == \"abcde\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5 3\n7 6 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''5 5 2\n7 6 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''5 5 3\n7 6 1\n6 6 1\n5 2 2\n''') == 'qwerty'\nassert solution('''5 5 3\n7 6 1\n6 6 1\n5 2 2\n''') == 'qwerty'\nassert solution('''5 5 3\n7 6 1\n6 6 1\n5 2 2\n''') == 'vvvvvv'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''\n1 2 3\n''') == '''\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'bb'\nassert solution('3') == 'bbb'\nassert solution('4') == 'abcccdeeffggghhiijjklmnopqrstuvwxyz'\n\nassert solution('5') == 'abcdeeffggghhiijjklmnopqrstuvwxyz'\n",
        "num_ids_2": 20,
        "num_ids_4": 60
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 3') == \"tleelte\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5 3') == 'tleelte'\nassert solution('6 6 1') == 'qwerty'\nassert solution('5 2 2') == 'vvvvvv'\nassert solution('2 3 1') == 'abcde'",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'tleelte'\nprint('solution() finished successfully!')\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\nassert solution('''\n3\n4 2 5\n7 6 1\n6 6 1\n5 2 2\n''') == \"qwerty\"\nassert solution('''\n2\n6 1 1\n6 6 1\n5 2 2\n''') == \"vvvvv\"\nassert solution('''\n3\n4 2 5\n7 6 1\n6 6 1\n5 2 2\n''') == \"abcde\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 7\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 12 6') == '12'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 12 6') == '12'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 1 5') == '5'\nassert solution('1 1 1') == '0'\nassert solution('3 5 4') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 6\") == \"12\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 1\\n\") == \"1\"\nassert solution(\"4 5\\n5 5\\n\") == \"1\"\nassert solution(\"4 5\\n5 5\\n\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"5 20 5\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '12'\nassert solution(input()) == '8'\nassert solution(input()) == '4'\nassert solution(input()) == '12'\nassert solution(input()) == '24'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([20, 12, 6]) == \"12\"\nassert solution([10, 3, 1]) == \"10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"1 3 7\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 2\nassert solution('10') == 10\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('12') == '2'\nassert solution('123') == '3'\nassert solution('1234') == '4'\nassert solution('12345') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('8') == '3'\n\nThe brute force approach would be to look at every possible number of groups and see if it works.\nWe can quickly find out how many groups we can make with a few people (2 or 3 people), so we can simply look at the case of just two people in a group and we can just work our way up.\nWe can also solve this problem in linear time by going through a Fibonacci sequence.\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n\") == \"2\"\nassert solution(\"6\\n\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('100') == '4'\nassert solution('1000') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INP) == '2'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '2'\nassert solution('10') == '3'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"1 3\"]) == \"3\"\nassert solution([\"2 5\"]) == \"5\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3'\nassert solution('1 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"50 50\") == \"0\"\nassert solution(\"0 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '3'\nassert solution('3 1') == '2'\nassert solution('5 5') == '3'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '3'\nassert solution('5 3') == '4'\nassert solution('5 3') == '4'\nassert solution('6 5') == '5'\nassert solution('5 6') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"10 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"5 4\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 12\n''') == '16'\n\nprint('Time elapsed:', time() - time_start)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"3\"\nassert solution(\"4\\n6\\n\") == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"10 20\") == \"10 20\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 12') == '16'\nassert solution('3 2') == '5'\nassert solution('7 8') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"5\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"3 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '5 1'\nassert solution('2 5') == '7'\nassert solution('9 10') == '19'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 2\") == \"2 1\"\nassert solution(\"1 3\") == \"3 1\"\nassert solution(\"1 4\") == \"4 1\"\nassert solution(\"2 1\") == \"2 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 3\"\nassert solution(\"3 4\") == \"1 2\"\nassert solution(\"4 5\") == \"2 3\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7\") == \"2\", \"Should return 2\"\nassert solution(\"1 5\") == \"6\", \"Should return 6\"\nassert solution(\"10 20\") == \"10\", \"Should return 10\"\nassert solution(\"3 5\") == \"8\", \"Should return 8\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '16'\n\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('chokudai') == 'Yes', \"First\"\nassert solution('chokudaiz') == 'No', \"Second\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"sababab\") == \"No\"\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"zchokudai\") == \"No\"\nassert solution(\"zchokudaiz\") == \"No\"\n\"\"\"\n\nS = input()\nT = input()\n\nS_len = len(S)\nT_len = len(T)",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin=\"chokudai\") == \"Yes\", \"Not correct\"\nassert solution(stdin=\"chokudaiz\") == \"Yes\", \"Not correct\"\nassert solution(stdin=\"chokudai2\") == \"No\", \"Not correct\"\nassert solution(stdin=\"chokudaiz2\") == \"No\", \"Not correct\"\n",
        "num_ids_2": 40,
        "num_ids_4": 82
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\n'''\n\nimport re",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"3 11\") == \"IMPOSSIBLE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"7 5\") == \"11\"\nassert solution(\"4 3\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '9'\nassert solution('2 1') == '9'\nassert solution('3 5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\nassert solution('3 4') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\") == \"9\"\nassert solution(\"5 5\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'IMPOSSIBLE'\nassert solution('2 16') == '9'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Impossible'\nassert solution('4 3') == '9'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 2') == 'Impossible'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 1') == 'IMPOSSIBLE'\nassert solution('4 8') == '6'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('117') == \"Yes\"\nassert solution('1214') == \"No\"\nassert solution('121466') == \"Yes\"\nassert solution('121469') == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('117') == 'Yes'\nassert solution('1234') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(117) == 'Yes'\nassert solution(999) == 'No'\nassert solution(0) == 'No'\nassert solution(100) == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1177') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == 'No'\nassert solution(2) == 'Yes'\nassert solution(3) == 'Yes'\nassert solution(4) == 'No'\nassert solution(5) == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('117') == \"Yes\"\nassert solution('111') == \"No\"\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('13') == \"No\"\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"100\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('9') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"13.6\") == \"No\"\nassert solution(\"12.99\") == \"Yes\"\nassert solution(\"1000\") == \"Yes\"\n\nNote: No need to import any modules/libraries\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 1 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 1 0\") == \"1 -1 0 0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 -1 0 0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 1 1\") == \"0 0 0 1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '-1 1 -1 0'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '-1 1 -1 0'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 0 1\n''') == '-1 1 -1 0'\nassert solution('''\n-1 1 -1 0\n''') == '(0,0),(0,1),(-1,1),(-1,0)'\nassert solution('''\n0 0 0 1\n''') == '(0,0),(0,1),(-1,1),(-1,0)'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"1 1 -1 0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 -1\") == \"-1 1 1 0\"\nassert solution(\"0 0 1 -1\") == \"-1 -1 1 0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2 4'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red red') == '1 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('red blue') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red yellow') == '1 3'\nassert solution('red blue yellow') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('red blue') == '2 4'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"red blue\\n\") == \"2 4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('red red') == '2 4'\nassert solution('red blue') == '2 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nab') == 'Yes'\nassert solution('2\\nab') == 'Yes'\nassert solution('3\\nab') == 'No'\nassert solution('4\\nab') == 'No'\nassert solution('5\\nab') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nabcabc\") == \"Yes\"\nassert solution(\"6\\nabcabc\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'Yes'\nassert solution('1') == 'No'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"8\\nabcabcabc\") == \"Yes\"\nassert solution(\"11\\nabcabcabcabcabc\") == \"Yes\"\nassert solution(\"16\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\") == \"Yes\"\nassert solution(\"1\\n\") == \"No\"\n",
        "num_ids_2": 29,
        "num_ids_4": 74
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nabc\\n') == 'Yes'\nassert solution('2\\nabcabc\\n') == 'Yes'\nassert solution('3\\nabcabcabc\\n') == 'No'",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"abcabc\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"abab\") == \"Yes\"\nassert solution(\"abcabc\") == \"Yes\"\nassert solution(\"abcabcabcabc\") == \"Yes\"\nassert solution(\"abcabcabcabcabcabc\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0.000000'\nassert solution('1') == '0.000000'\nassert solution('1 2') == '0.000000'\nassert solution('2 3 1 2') == '3.000000'\nassert solution('1 2 2') == '1.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3\n1 2\n''') == '0'\nassert solution(\n'''\n2\n2 1\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"1 1 2 2\") == \"0.5000000 0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('4 5 4 6') == '1.000000 0'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('1 2 1 2') == '1.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0', 'Sample Test 1'\nassert solution('2') == '0', 'Sample Test 2'\nassert solution('3') == '3.000000', 'Sample Test 3'\nassert solution('4') == '3.000000', 'Sample Test 4'\nassert solution('5') == '4.000000', 'Sample Test 5'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('1 2 3 4 5') == '1.000000 0'\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('1 1 1 2') == '1.000000 0'\nassert solution('1 1 2') == '1.000000 0'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('8 5 1 1') == '8.000000 0'\nassert solution('5 1 6 2') == '8.000000 0'\nassert solution('1 1 5 1') == '5.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"3 3 1 2\") == \"3.000000 0\"\nassert solution(\"3 1 3 2\") == \"3.000000 0\"\nassert solution(\"3 1 2 3\") == \"3.000000 0\"\nassert solution(\"10 10 5 5\") == \"3.000000 0\"\n\n'''\n\nfrom math import inf\nfrom math import sqrt\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('6\\nG W Y P Y W') == 'Four'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'Four'\nassert solution('5') == 'Three'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'Four'\nassert solution('12') == 'Three'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Three'\nassert solution('5') == 'Four'\nassert solution('6') == 'Four'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"6\\nG W Y P Y W\") == \"Four\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Three'\nassert solution('2') == 'Four'\nassert solution('3') == 'Four'\nassert solution('4') == 'Four'\nassert solution('5') == 'Four'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '6\\nG W Y P Y W'\n    ) == 'Four'\nassert solution(\n    '3\\nP W Y G'\n    ) == 'Three'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == 'Four'\nassert solution('1') == 'Three'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nBWBW\\n') == \"Four\"\nassert solution('6\\nBWBWB\\n') == \"Three\"\nassert solution('9\\nBWBWBW\\n') == \"Four\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\nG W Y P Y W''') == 'Four'\n\nassert solution('''4\nG W Y P''') == 'Three'\n\nassert solution('''2\nG G''') == 'Two'\n\nassert solution('''1\nG''') == 'One'\n\nassert solution('''1\nG''') == 'One'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\nassert solution() == \"2\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 1 3 4 2') == 6",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3') == 2\nassert solution('5 5 6') == 2",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution('''\n3 3 1 3 4 2\n2 3 1 3 4 2\n''') == \"2\"\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == \"2\"\nassert solution('''\n6 6 3\n2 3 1 3 4 2\n''') == \"6\"\n'''\nInput\n7 2\n2 3 1 3 4 2\n\nOutput\n0\n\nInput\n7 5\n1 2 6 10 3\n\nOutput\n5\n\nInput\n7 5\n1 2 6 10 3\n\nOutput\n4\n\nInput\n7 5\n1 2 6 10 3\n\nOutput\n4\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 2\\n2 3 1 3 4 2') == '6'\nassert solution('5 3 3\\n1 2 4 2 3') == '2'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 6\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''5\n2 3 4 1\n3 4 1 2\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '7'\nassert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''1\n1 2\n''') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n') == '0\\n'\nassert solution('5\\n') == '7\\n'\nassert solution('4\\n') == '7\\n'\n\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4 8 2 6 2\\n\"\n    \"4 5 4 1 3\\n\"\n) == \"7\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n8 4 2 6 2\\n') == '7'\nassert solution('5\\n4 8 2 6 2\\n') == '7'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2 2 3') == '1'\nassert solution('2 1 4 5 5') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '7'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 5 10\\n') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\n",
        "num_ids_2": 75,
        "num_ids_4": 132
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 1 3 5 9\"\nassert solution(input()) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\"\"\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_sample_01) == output_sample_01\nassert solution(input_sample_02) == output_sample_02\nassert solution(input_sample_03) == output_sample_03\n\ninput_file = 'input.txt'\n\nwith open(input_file) as f:\n    lines = f.read().splitlines()\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 1 3 5 9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution('''\n10\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''\n10\n1 2 4 5 10''') == '1 1 3 5 9'\n'''\nassert solution('''\n5\n1 2 4 5 10''') == '1 1 3 5 9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 1 3 5 9\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n''') == '2 1 3'\nassert solution('''5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 3 5 9\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test_input_1) == '1 1 3 5 9'\nassert solution(test_input_2) == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'\nprint(solution(input()))\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"17 15\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n1 2\n3 4\n5 4\n3 5\n\n''') == '1'\n\nassert solution('''\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"17 15\") == \"2\"\n\n\n\n\n------Input------\n\n8 4\n1 2\n3 4\n5 6\n7 8\n1 6\n7 3\n3 5\n4 5\n5 2\n\n------Output------\n\n2\n\n\n------Idea------\n\nThe idea is to use breadth-first search to detect all the vertices which are not in a cycle. Then we need to make a dictionary called connected_components. All the vertices in a connected component are connected with a node from that connected component. But it is possible that they are not connected. So we need to mark every node as unvisited and mark its whole cycle.\n\n------Example------\n\nLet G = {1: {2, 3}, 2: {1, 3, 4}, 3: {1, 2, 4, 5}, 4: {2, 3, 5}, 5: {3, 4}}\n\nThen the graph is connected, so we get a connected component containing all nodes 1, 2, 3, 4, 5\n\nLet G = {1: {2, 3}, 2: {1, 3, 4}, 3: {1, 2, 4, 5}, 4: {2, 3, 5}, 5: {3, 4}}\n\nThen the graph is disconnected, so we get two connected components containing nodes 1, 2, 3, 4, 5 and we mark the whole cycle as unvisited and mark the node as visited.\n\nAfter marking the whole cycle as unvisited, we have a dictionary called connected_components.\n\nWe use connected_components to connect each node with every other node which has been marked as unvisited.\n\nThe algorithm below is used to detect whether a cycle is present in the graph by checking for its size. If its size is greater than 2, we can't consider the graph as a connected component because it has at least two nodes in its cycle.\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2\n3 4\n5 4\n3 5''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"1\"\n\nassert solution([5, 4]) == \"1\"\n\nassert solution([17, 15]) == \"2\"\n\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 0 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n2\n1 1 2\n2 3\n1 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('5') == '4'\nassert solution('10') == '9'\nprint('AoC 2020 Day 11')\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_small) == \"1\"\nassert solution(example_input) == \"4\"\nassert solution(input) == str(solution(input))\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"0\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\"\nassert solution(\"5\\n1 1 2\\n2 3\\n3 4\\n4 5\\n1 5\") == \"0\"",
        "num_ids_2": 66,
        "num_ids_4": 112
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\"\nassert solution(\"3\\n1 1 2\\n2 3\\n1 3\") == \"0\"",
        "num_ids_2": 66,
        "num_ids_4": 89
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\naz\\nbf\"\n) == \"bc\", \"First example\"\nassert solution(\n    \"5\\nafogk\\nasdji\"\n) == \"alvuw\", \"Second example\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\nasd\nalvu\n\"\"\") == \"asd\"\nassert solution(\"\"\"\n2\naz\nbf\n\"\"\") == \"bf\"\nassert solution(\"\"\"\n5\nafogk\nasdji\n\n\"\"\") == \"alvuw\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'qoztvz'\nassert solution('6') == 'def'\nassert solution('10') == 'afogk'\nassert solution('25') == 'asdji'",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\nafogk\nasdji\n\"\"\") == \"qoztvz\"\nassert solution(\"\"\"\n6\nnijfvj\ntvqhwp\n\"\"\") == \"def\"\nassert solution(\"\"\"\n2\naz\nbf\n\"\"\") == \"bc\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"bc\"\nassert solution(\"5\") == \"qoztvz\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'qoztvz'\nassert solution('6') == 'def'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"asdji\"\nassert solution(input()) == \"qoztvz\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'qoztvz'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"abc\"\nassert solution(\"4\") == \"bdf\"\nassert solution(\"5\") == \"qhvk\"\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\naz\nbf\n''') == 'bc'\nassert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''\n6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\", \"Test #1\"\nassert solution(\"4 4\") == \"YES\", \"Test #2\"\nassert solution(\"5 4\") == \"NO\", \"Test #3\"\n\nassert solution(\"5 4\") == \"YES\", \"Test #4\"\n\nassert solution(\"4 4\") == \"YES\", \"Test #5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == 'YES'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"10 12 13\\n\"\n    \"12 14 16\\n\"\n    \"12 16 17\") == \"YES\"\nassert solution(\n    \"4 4\\n\"\n    \"20 10 40 30\\n\"\n    \"20 40 30 10\") == \"YES\"\nassert solution(\n    \"5 4\\n\"\n    \"15 13 15 15 12\") == \"NO\"\n\n\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'YES'\n\n\n'''\n\nn, k = list(map(int, input().split()))\n\nrating_list = list(map(int, input().split()))\n\nrating_set = set(rating_list)",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4\n''') == 'YES'\nassert solution('''5\n1 2 5 3 4\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''1\n''') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n1 2 3 4 5\n\n''') == 'YES'\n\nassert solution(\n'''\n5\n5 2 3 4 1\n\n''') == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\\\n5\n1 2 3 4 5 6\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n4\n0 1 2 4 5\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\\\n10\n3 1 4 5 2 7 3 8 2 9 0 10\n\"\"\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 4 0 2') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 1 3 6 8 2 9 0 10\") == \"YES\"\nassert solution(\"1\\n5 1 3 6 8 2 9 0 10\") == \"NO\"\nassert solution(\"1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\\nn",
        "num_ids_2": 42,
        "num_ids_4": 457
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n2 3 4\n''') == 'YES'\n\nassert solution('''\n4\n1 2 3 4\n3 4 1 2\n2 4 1 3\n1 3 4 2\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n8\n2 7 5 1 3 6 4 9 8\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n9\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n2\n3\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution() == \"0\"\nassert solution() == \"1134\"\nassert solution() == \"0\"",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('3') == '0'\nassert solution('2') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n2\n10 2 3 7\n100 51 51 51\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3'\nassert solution('5\\n1 2 5 1\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n100000000 1 1 1000000000') == '0'\nassert solution('5\\n1 2 5 1\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n100000000 2 1 1000000000') == '1134'\n",
        "num_ids_2": 78,
        "num_ids_4": 119
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example1) == '3'\nassert solution(example2) == '0'\nassert solution(example3) == '1134'\nassert solution(example4) == '0'\nassert solution(input) == '\\n'.join(map(str, result))\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3'\nassert solution('3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '0'\nassert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '1134'\n",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n5\n2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n8\n''') == '1260'\nassert solution('''\n20\n''') == '12164510040883200'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n8\n''') == '1260'\nassert solution('''\n20\n''') == '12164510040883200'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n\n''') == '1'\nassert solution('''4\n\n''') == '3'\nassert solution('''20\n\n''') == '12164510040883200'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n8\n''') == '1260'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\nzzz''') == 'zzz'\n\nassert solution('''15 9\nzzzzzzzzzzzzzzzzzzz''') == ''\n\nassert solution('''4 5\ntsttststttt''') == 'ttttttttttt'\n\nassert solution('''5 6\ntttttttttttttt''') == 'tttttttttttt'\n\nassert solution('''4 8\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\nu\n\n1 2\nu\n\n1 3\nu\n\n1 4\nu\n\n1 5\nu\n\n1 6\nu\n\n1 7\nu\n\n1 8\nu\n\n1 9\nu''') == 'u'\n\nassert solution('''2 1\na\n\n2 2\na\n\n2 3\na\n\n2 4\na\n\n2 5\na\n\n2 6\na\n\n2 7\na\n\n2 8\na\n\n2 9\na''') == ''\n\nassert solution('''3 1\na\n\n3 2\na\n\n3 3\na\n\n3 4\na\n\n3 5\na\n\n3 6\na\n\n3 7\na\n\n3 8\na\n\n3 9\na''') == 'a'\n\nassert solution('''4 1\na\n\n4 2\na\n\n4 3\na\n\n4 4\na\n\n4 5\na\n\n4 6\na\n\n4 7\na\n\n4 8\na\n\n4 9\na''') == ''\n\nassert solution('''5 1\na\n\n5 2\na\n\n5 3\na\n\n5 4\na\n\n5 5\na\n\n5 6\na\n\n5 7\na\n\n5 8\na\n\n5 9\na''') == 'a'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == ''\nassert solution('1 2 3') == '1 2 3'\nassert solution('2 2 2 2 2 2 2 2 2 2 2 2') == '2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "num_ids_2": 23,
        "num_ids_4": 1645
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n\n>>> solution('ac')\n'ac'\n>>> solution('ab')\n'ba'\n>>> solution('a')\n'a'\n>>> solution('uuuuuuuuuu')\n''')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\nab\n\n''') == ''\n\nassert solution('''\n1 1\nb\n\n''') == ''\n\nassert solution('''\n2 1\nabc\n\n''') == 'cbc'\n\nassert solution('''\n2 2\nabacb\n\n''') == ''\n\nassert solution('''\n1 2\ncd\n\n''') == 'c'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('1 1') == 'def'\n\"\"\"\n\n\"\"\"\n2. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u043c\u0435\u0441\u044f\u0446 \u0432 \u0432\u0438\u0434\u0435 \u0446\u0435\u043b\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 1 \u0434\u043e 12. \u0421\u043e\u043e\u0431\u0449\u0438\u0442\u044c \u043a \u043a\u0430\u043a\u043e\u043c\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0433\u043e\u0434\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043c\u0435\u0441\u044f\u0446 (\u0437\u0438\u043c\u0430, \u0432\u0435\u0441\u043d\u0430, \u043b\u0435\u0442\u043e, \u043e\u0441\u0435\u043d\u044c).\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0447\u0435\u0440\u0435\u0437 list \u0438 \u0447\u0435\u0440\u0435\u0437 dict.\n\"\"\"\n\n\"\"\"\n3. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u0445 \u0441\u0443\u043c\u043c\u0443.\n\"\"\"\n\n\"\"\"\n4. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430 a, b, c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0442\u0440\u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u044d\u0442\u0438\u0445 \u0447\u0438\u0441\u0435\u043b.\n\u041a\u0430\u0436\u0434\u043e\u0435 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u043e\u043c\u0435\u0449\u0430\u0442\u044c\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a.\n\"\"\"\n\n\"\"\"\n5. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u044f\u0446\u0430 (\u043e\u0442 1 \u0434\u043e 12). \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\n\"\"\"\n\n\"\"\"\n6. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u043d\u043e\u043c\u0435\u0440 \u043c\u0435\u0441\u044f\u0446\u0430 (\u043e\u0442 1 \u0434\u043e 12). \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043c\u0435\u0441\u044f\u0446\u0443.\n\u0421\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043a\u043b\u044e\u0447\u0438 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\n\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043c\u0435\u0441\u044f\u0446, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043d\u0430\u0434\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0433\u043e\u0434, \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0435\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n\"\"\"\n\n\"\"\"\n7. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u0443 \u0447\u0438\u0441\u0435\u043b, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 Enter \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0441\u0443\u043c\u043c\u0430 \u0447\u0438\u0441\u0435\u043b. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0432\u0432\u043e\u0434 \u0447\u0438\u0441\u0435\u043b, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0438 \u0441\u043d\u043e\u0432\u0430 \u043d\u0430\u0436\u0430\u0442\u044c Enter. \u0421\u0443\u043c\u043c\u0430 \u0432\u043d\u043e\u0432\u044c \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u043a \u0443\u0436\u0435 \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u043d\u043d\u043e\u0439 \u0441\u0443\u043c\u043c\u0435. \u041d\u043e \u0435\u0441\u043b\u0438 \u0432\u043c\u0435\u0441\u0442\u043e \u0447\u0438\u0441\u043b\u0430 \u0432\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f. \u0415\u0441\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u0432\u0432\u0435\u0434\u0435\u043d \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0447\u0438\u0441\u0435\u043b, \u0442\u043e \u0432\u043d\u0430\u0447\u0430\u043b\u0435 \u043d\u0443\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0443\u043c\u043c\u0443 \u044d\u0442\u0438\u0445 \u0447\u0438\u0441\u0435\u043b \u043a \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u0440\u0430\u043d\u0435\u0435 \u0441\u0443\u043c\u043c\u0435 \u0438 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443.\n\"\"\"\n\n\"\"\"\n8. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043c\u043d\u0435\u0439 \u0432 \u0445\u043e\u043b\u043e\u0434\u0438\u043b\u044c\u043d\u0438\u043a\u0435. \u0414\u043b\u044f \u0445\u043e\u043b\u043e\u0434\u0438\u043b\u044c\u043d\u0438\u043a\u0430 \u0441\u0442\u043e\u0438\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0439 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0431\u0443\u0442\u044b\u043b\u043e\u0447\u043d\u044b\u0439 \u043a\u0443\u0441\u043e\u043a \u0438\u0437 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0442\u0440\u0451\u0445 \u0447\u0438\u0441\u0435\u043b. \u0420\u0430\u0437\u043c\u0435",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('1 1') == ''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15 3\\ncccaabababaccbc') == 'cccbbabaccbc'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '\\n'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n1 2\n1 3\n1 2\n1 3\n1 3\n1 3\n2 4\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2 3\n2",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '18'\nassert solution(r'''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '18'\nassert solution(r'''\n5 7\n3 1\n1 5\n1 2\n1 6\n3 2\n4 1\n5 2\n''') == '18'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\nassert solution('2 10') == '8'\nassert solution('10 20') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\nassert solution('3 2') == '4'\nassert solution('3 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3''') == '8'\nassert solution('''5 3\n4 2\n3 5\n4 2\n2 5''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 2\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '20'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2 0 2 0\\n\"\n    \"2 4\\n\"\n    \"3 3\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    ) == \"8\"\n\nassert solution(\n    \"5 3\\n\"\n    \"4 2\\n\"\n    \"2 5\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    ) == \"20\"\n\nassert solution(\n    \"5 2\\n\"\n    \"4 2\\n\"\n    \"2 5\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    ) == \"20\"\n\nassert solution(\n    \"5 1\\n\"\n    \"2 3\\n\"\n    \"2 5\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    ) == \"20\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '1'\nassert solution('5 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n\n''') == '20'\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n*.*\n.*.\n*.*''') == '3 4 1'\n\nassert solution('''5 5\n.*.\n***\n*.*\n*.*\n*.*''') == '3 3 1'\n\nassert solution('''3 3\n*.*\n***\n*.*''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"3 3\") == \"2 2 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 5 2\"\nassert solution(\"3 3\") == \"3 4 1\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 8\n*.**\n.**.\n..*.*\n*.**\n*.**\n........\n\n''') == '3'\nassert solution('''\n5 5\n*.**\n***.\n.*.*\n*.**\n*.**\n\n''') == '-1'\nassert solution('''\n3 3\n*.*\n**\n*.\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\n\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == \"3\"\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == \"3\"\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == \"-1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 8\n***..\n**..\n*..*\n...*\n***.\n\n6 8\n.*..\n*.*.\n.*.*.\n.*.*.\n*.*.*\n*.*.*.\n\n''') == '2'\n\nassert solution('''\n3 3\n*.*\n.**\n*.*\n\n''') == '3'\n\nassert solution('''\n3 3\n*.*\n.**\n*.*\n\n''') == '-1'\n\nassert solution('''\n5 5\n*.*\n***\n**.*\n***.\n*.*.\n''') == '3'\n\nassert solution('''\n5 5\n.*.*\n**.*\n**.*\n*.*.\n.*.*.\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 8\\n\"\n    \".*..\\n\"\n    \".*..\\n\"\n    \"..**.\\n\"\n    \"..**.\\n\"\n    \".*..\\n\"\n    \"....\\n\"\n    ) == \"3\\n3 4 1\\n3 5 2\"\nassert solution(\n    \"5 5\\n\"\n    \"*.*\\n\"\n    \"**.\\n\"\n    \".*\\n\"\n    \"**.\\n\"\n    \"***\\n\"\n    \"*.*\\n\"\n    \"*.*\\n\"\n    \"*.*\\n\"\n    \"*.*\\n\"\n    ) == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 3\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\nassert solution('10') == 'No'\n\"\"\"\n\nn = int(stdin.readline())\nn = str(n)\nprint('Yes' if n == n[::-1] else 'No')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\nprint('Wow, all the test cases passed!')\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1234') == 'No'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"42\") == \"No\"\nassert solution(\"123321\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == 'Yes'\nassert solution('12') == 'No'\nassert solution('3534') == 'Yes'\nassert solution('1234') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == 'Yes'\nassert solution('100') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"575\") == \"Yes\", \"Wrong solution\"\nassert solution(\"11\") == \"No\", \"Wrong solution\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(5) == \"No\"\nassert solution(20) == \"Yes\"\nassert solution(25) == \"No\"\nassert solution(2080) == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('7 1') == 'Alice'\nassert solution('7 2') == 'Bob'\nassert solution('7 3') == 'Bob'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 6\\n\") == \"Alice\"\nassert solution(\"8 9\\n\") == \"Bob\"\nassert solution(\"8 9\\n\") == \"Draw\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Bob'\nassert solution('8 7') == 'Alice'\nassert solution('6 7') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == 'Alice'\n\nsolution(input) == Alice\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Alice'\nassert solution('2 1') == 'Bob'\nassert solution('2 3') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Alice'\nassert solution(input()) == 'Bob'\nassert solution(input()) == 'Draw'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"Bob\"\nassert solution(\"1 2\") == \"Draw\"\nassert solution(\"1 1\") == \"Alice\"\nassert solution(\"1 5\") == \"Alice\"\nassert solution(\"4 3\") == \"Bob\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 6\\n') == 'Alice'\nassert solution('13 2\\n') == 'Bob'\nassert solution('8 6\\n') == 'Draw'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == 'Alice'\nassert solution('1 1') == 'Alice'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Alice\"\nassert solution(\"5 2\") == \"Bob\"\nassert solution(\"2 6\") == \"Draw\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('this,is,a,test,case,') == 'this is a test case'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"happy newyear enjoy\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''happy,newyear,enjoy\n''') == 'happy newyear enjoy'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1 1\\n1 2\"\nassert solution(\"4 4\") == \"2 2\\n2 3\\n3 1\\n1 2\"\n\n\"\"\"\n\nimport sys\nimport math",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('4 5') == '4 3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('1 0') == '1'\nassert solution('1 -1') == '1'\nassert solution('1 -1 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"2 1\\n1 2\"\nassert solution(\"3 1\") == \"2 1\\n1 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('1 3') == '1'\nassert solution('1 2 2') == '2'\nassert solution('3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('1 2') == '1 1'\nassert solution('3 3') == '3 2'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2 1\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\") == \"2 1\"\nassert solution(\"5 5\\n5 0\\n0 0\\n-1 0\\n1 0\") == \"3 4\"\nassert solution(\"10 10\\n0 0\\n0 0\\n-1 0\\n1 0\") == \"1 9\"\n\"\"\"\n",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 14\n\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"14\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '14'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"21\"\n\n\"\"\"\n\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '14'\nprint(solution('2'))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '14'\nassert solution('3') == '15'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"21\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"1\"]) == \"1\"\nassert solution([\"2\"]) == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n#.#\\n\") == 'Yes'\nassert solution(\"3 2\\n#.#\\n.#.\\n#.\\n#.#\\n#.\\n#.#\\n\") == 'No'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\nassert solution(\"3 5\\n#.....#\\n#....#\\n#.#...#\\n##...##\\n#.###.#\\n\") == \"No\"\nassert solution(\"4 4\\n#.#.#\\n.##.\\n##.#\\n###.#\\n\") == \"Yes\"\nassert solution(\"4 4\\n#.##\\n##...\\n##...\\n###.#\\n\") == \"Yes\"\nassert solution(\"1 1\\n###\\n\") == \"No\"\n",
        "num_ids_2": 69,
        "num_ids_4": 130
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == 'Yes'\nassert solution('3 3\\n####\\n#.#\\n#.#\\n#.#\\n#.\\n') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == 'Yes'\nassert solution(\"3 3\\n.#.\\n.##\\n.#.\\n#.#\\n.##\\n.##\\n\") == 'No'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 5 5 3') == '5'\nassert solution('1 5 2 3') == '5'\nassert solution('1 5 2 2') == '2'\nassert solution('1 5 1 2') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2\") == \"53\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 3\") == \"12\"\nassert solution(\"1 2 5 4\") == \"14\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 4 2') == '4'\nassert solution('5 4 2') == '4'\nassert solution('1 2 2') == '2'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"2 2 2\") == \"2\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 4 2') == '4'\nassert solution('2 4 1') == '3'\nassert solution('3 4 1') == '3'\nassert solution('5 4 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 10 2') == '41'\nassert solution('1 2 1 4') == '12'\nassert solution('1 9 9') == '10'\nassert solution('1 9 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"53\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 6 8\") == \"7\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"3 6 7\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"4\") == \"3600\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\"\nassert solution(\"3\\n1\\n1\\n\") == \"1\"\nassert solution(\"4\\n1\\n1\\n\") == \"1\"\nassert solution(\"5\\n1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '15950'\nassert solution('5') == '15950'\nassert solution('10') == '15950'\nassert solution('100') == '15950'\nassert solution('10') == '15950'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"5\") == \"45\"\nassert solution(\"10\") == \"45\"\nassert solution(\"15\") == \"60\"\n\n'''\n\n\nimport sys\nsys.stdin = open('input.txt', 'r')\nn = int(input())\ns = sorted(list(map(int, input().split())))\ns = s[::-1]\n\ndp = []\nfor i in range(n):\n    tmp = s[i] * 2\n    if tmp in s:\n        dp.append(tmp)\n    else:\n        dp.append(s[i] * 2 + max(s[i:]) if s else 0)\nprint(sum(dp))",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4980\n7980\n6980\n''') == '15950', 'First'\nassert solution('''\n4\n12000\n12000\n12000\n''') == '12000', 'Second'\nassert solution('''\n3\n4980\n7980\n6980\n''') == '15950', 'Third'\nassert solution('''\n1\n100000\n100000\n100000\n''') == '110000', 'Fourth'\nassert solution('''\n1\n2000\n2000\n2000\n''') == '20000', 'Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4980\n7980\n6980\n''') == '15950.0'\n\nassert solution('''2\n100\n100\n''') == '200.0'\n\nassert solution('''2\n100\n100\n''') == '200.0'\n\nassert solution('''1\n100\n100\n''') == '100.0'\n\nassert solution('''1\n100\n100\n''') == '100.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"15950\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"15950\", \"Wrong Answer\"\nassert solution(\"2\") == \"15950.0\", \"Wrong Answer\"\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '15950'\nassert solution('1') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n100\\n95\\n1\\n') == '9950.0'\nassert solution('2\\n9500\\n9500\\n1\\n') == '9950.0'\nassert solution('3\\n4980\\n7980\\n6980\\n') == '15950.0'\n",
        "num_ids_2": 50,
        "num_ids_4": 77
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n\n'''\n",
        "num_ids_2": 41,
        "num_ids_4": 63
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n7\\n35\\n120\") == \"215\"\nassert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '57'\nassert solution('35') == '57'\nassert solution('120') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '215'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0\\n10\\n20\\n7\\n35\\n120\") == \"215\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nA\nB\nC\nD\nE\n''') == '215'\n\nassert solution('''\n20\n7\n35\n120\n''') == '215'\n\nassert solution('''\n29\n20\n7\n35\n120\n''') == '215'\n\nassert solution('''\n30\n20\n7\n35\n120\n''') == '215'\n\nassert solution('''\n50\n50\n7\n35\n120\n''') == '215'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"35\\n35\\n30\\n7\\n120\\n\") == \"215\"\nassert solution(\"120\\n120\\n120\\n120\\n120\\n\") == \"215\"\nassert solution(\"120\\n120\\n120\\n120\\n120\\n\") == \"215\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('27') == '215'\nassert solution('29') == '215'\nassert solution('20') == '29'\nassert solution('7') == '29'\nassert solution('35') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('29') == '215'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '0'\nassert solution('35') == '57'\nassert solution('120') == '180'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n10 30') == '7.5'\nprint('Solution: ', solution('2\\n10 30'))\nprint('Correct:  ', 7.5)\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n100\\n50\\n') == '0.5'\nassert solution('5\\n1 2 3 4\\n') == '-2.0'\nassert solution('3\\n1 2 3\\n') == '2.0'\nassert solution('3\\n1 2\\n') == '-1.0'\nassert solution('2\\n1 2\\n') == '1.0'\n",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n10 30\\n') == '7.50001'\nassert solution('2\\n10 30\\n') == '7.49999'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"2\\n20 20\") == \"5.0\"\nassert solution(\"2\\n10 30\") == \"7.5\"\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"1\\n10 30\") == \"7.5\"\nassert solution(\"5\\n10 30\") == \"7.5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '7.5'\nassert solution('4') == '7.50001'\nassert solution('6') == '7.49999'\nassert solution('10') == '7.5'\nassert solution('15') == '7.699957'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"10\") == \"7.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n3\n2\n4\n1\n5''') == '0.24246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246246",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 2') == '1'\nassert solution('4 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2'\nassert solution('5 3') == '2'\nassert solution('10 11') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('7 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 4\\n1\\n10\\n15\\n11\\n14') == '0'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n\") == \"2\"\nassert solution(\"2 3\\n\") == \"2\"\nassert solution(\"3 3\\n\") == \"1\"\nassert solution(\"10 10\\n\") == \"10\"\nassert solution(\"13 9\\n\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"2 5\") == \"4\"\nassert solution(\"3 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 9\") == \"1\"\nassert solution(\"5 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'B'\nprint('You passed the test!')\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('B') == 'A', \"Wrong\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('A') == 'A'\nassert solution('a') == 'a'\n'''\n\na = input()",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'a'\nassert solution(input()) == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'A'\nassert solution(input()) == 'a'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('B') == 'A'\nassert solution('b') == 'a'\nprint('\"solution()\" function is working correctly!')\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"B\") == \"A\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('B') == 'A'\nassert solution('C') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n''') == '6'\n\nassert solution('''\n2 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"10 10\") == \"18\"\nassert solution(\"2 2\") == \"6\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\nassert solution('3 5') == '9'\nassert solution('4 6') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 4\") == \"18\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n''') == '6'\n\nassert solution('''2 2\n''') == '6'\n\nassert solution('''2 2\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n0 0 2\n1 1 1''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 4') == '15'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0505') == 'MMYY'\nassert solution('1905') == 'AMBIGUOUS'\nassert solution('01') == 'NA'\nassert solution('05') == 'NA'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'AMBIGUOUS'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1905''') == 'YYMM', 'Wrong'\nassert solution('''19''') == 'AMBIGUOUS', 'Wrong'\nassert solution('''1905''') == 'AMBIGUOUS', 'Wrong'\nassert solution('''1905''') == 'AMBIGUOUS', 'Wrong'\nassert solution('''1905''') == 'NA', 'Wrong'",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'MMYY'\nassert solution('1905') == 'AMBIGUOUS'\nassert solution('19') == 'AMBIGUOUS'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('01') == 'YYYY'\nassert solution('5') == 'NA'\nassert solution('123') == 'NA'\nassert solution('12345') == 'NA'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"01\") == \"YYMM\"\nassert solution(\"0101\") == \"YYMM\"\nassert solution(\"010101\") == \"YYMM\"\nassert solution(\"01010101\") == \"YYMM\"\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"MMYY\"\nassert solution(\"19\") == \"AMBIGUOUS\"\nassert solution(\"19\") == \"NA\"\nassert solution(\"19\") == \"NA\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1905') == 'YYMM'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'AMBIGUOUS'\nassert solution('19') == 'NA'\nassert solution('19') == 'AMBIGUOUS'\nassert solution('01') == 'NA'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1905\n''') == 'YYMM'\nassert solution('''05\n''') == 'AMBIGUOUS'\nassert solution('''19\n''') == 'NA'\nassert solution('''1905\n''') == 'NA'\nassert solution('''1905\n''') == 'NA'\n",
        "num_ids_2": 15,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\"\n    ) == \"2\"\nassert solution(\n    \"5\"\n    ) == \"2\"\nassert solution(\n    \"2\"\n    ) == \"1\"\nassert solution(\n    \"0\"\n    ) == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('100') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('6') == '3'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\n\"\"\"\n\n\nfrom itertools import combinations, permutations\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"9 12\n\"\"\") == \"21\"\nassert solution(\"\"\"9 12\n\"\"\") == \"21\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"9 12\") == \"21\"\n\n'''\n\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([9, 12]) == \"21\"\nassert solution([9, 5]) == \"21\"\nassert solution([21, 5]) == \"21\"\n\nimport collections\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        # Read input\n        A, B = list(map(int, stdin.split()))\n        # Compute\n        start = max(0, A - 1 + (B - A))\n        start_hour = start % 12\n        start_min = start // 12\n        return \"%02d %02d\" % (start_hour, start_min)\n\nassert Solution().solution(\"9 12\") == \"21\"\nassert Solution().solution(\"9 5\") == \"21\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"21\"\nassert solution(input(\"\")) == \"21\"\nassert solution(input(\"\\n\")) == \"21\"\nassert solution(input(\"\\n\")) == \"21\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 12') == '21'\nassert solution('1 2') == '2'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin := '') == ''\nassert solution(stdin := '12') == '21'\nassert solution(stdin := '9 12') == '21'\nassert solution(stdin := '9 23') == '21'\n\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 55
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"9 12\n\"\"\") == \"21\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 12') == '21'\nassert solution('10 10') == '10'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '21'\n\"\"\"\n\nA, B = list(map(int, input().split()))\nprint(min(A + (B - A) % 24, A + (B - A) % 24 - 24))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2919\n''') == '3719'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4') == '10'\nassert solution('2 5') == '4'\nassert solution('3 6') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3719\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3719'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2919') == '3719'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 5') == '3'\nassert solution('3 4') == '4'\nassert solution('4 7') == '7'\nassert solution('5 7') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"3 5\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3719'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"10 20 30 40 50 60 70 80 90 100\") == \"4050\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 2') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''11 2\n''') == '4'\nassert solution('''1011 2\n''') == '4'\nassert solution('''1010 2\n''') == '2'\nassert solution('''0 2\n''') == '0'\nassert solution('''10 2\n''') == '1'\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 10\n''') == '1'\nassert solution('''11 2\n''') == '4'\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '3'\nassert solution('100 10') == '2'\nassert solution('1000 1111') == '4'\nassert solution('10000 1111') == '4'\nassert solution('100 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 2') == '4'\n\n---\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"4\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 11\") == \"4\"\n\n----Submission\nTest cases are very small, just need to test all possible combinations of the input.\n\n-----Solution\nfrom collections import Counter",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 2') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('20') == '3'\nassert solution('100') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"3\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"2\"\n\"\"\"\nn = int(stdin.readline())\ncount = 0\nfor i in range(1, n + 1):\n    for j in range(1, i + 1):\n        if j * (i + 1) < n:\n            print(f\"{j} {i}\")\n            count += 1\nprint(count)",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\n\nSample test case\nInput\n\n3\nOutput\n\n3\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('15') == '3'\nassert solution('1000000') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '6'\nassert solution('1') == '1'\nassert solution('100') == '100'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '3'\nassert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 2\") == \":(\\n\"\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nassert solution(\"10 2\") == \"Yay!\"\n\nassert solution(\"7 2\") == \"Yay!\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n4 1\n1 3\n1 4\n1 2\n1 5''') == 'Yay!'\nassert solution('''5 3\n3 4\n1 4\n2 4\n1 3\n2 3''') == 'Yay!'\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Yay!'\nassert solution('3 4') == 'Yay!'\nassert solution('5 6') == 'Yay!'\nassert solution('4 5') == 'Yay!'\nassert solution('8 3') == 'Yay!'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'Yay!'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n') == 'Yay!'\nassert solution('4 5\\n') == 'Nay!'\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n') == 'Yay!'\n\"\"\"\nfrom collections import defaultdict\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\nassert solution(\"3 5\") == \"Yay!\"\nassert solution(\"2 5\") == \"Yay!\"\nassert solution(\"2 7\") == \"Nay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\nassert solution(\"1 3\") == \"Yay!\"\nassert solution(\"1 4\") == \"Yay!\"\nassert solution(\"2 1\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234567876') == \"34\"\nassert solution('1234567897') == \"34\"\nassert solution('123456789') == \"35\"\nassert solution('123') == \"35\"\nassert solution('12') == \"34\"\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34'\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"12345678\") == \"36\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('76543210') == '10'\nassert solution('6780') == '8'\nassert solution('9678') == '8'\nassert solution('9678') == '8'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567891') == '70'\nassert solution('7431235') == '3'\nassert solution('5') == '4'\nassert solution('1201') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567\") == \"34\"\nassert solution(\"1234\") == \"34\"\nassert solution(\"123456787876\") == \"34\"\nassert solution(\"12345678787656\") == \"34\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567891234567876') == '34'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567879\") == \"735\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"1234567\") == \"34\"\nassert solution(\"123456789\") == \"34\"\nassert solution(\"12345678901\") == \"34\"\nassert solution(\"56789\") == \"34\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5 3'\nassert solution('2') == '1 7'\nassert solution('7') == '12 13'\nassert solution('6') == '2999999987 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 12, 6]) == '5 3'\nassert solution([2, 9]) == '1 7'\nassert solution([7]) == '12 13'\n",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 12 6\n\n''') == '5 3'\n\nassert solution('''\n6\n2 9\n\n''') == '1 7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"5 3\"\nassert solution(\"2\") == \"1 7\"\nassert solution(\"7\") == \"12 13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''2\n2 9\n''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n3 12 6\\n\"\n    ) == \"5 3\\n\"\nassert solution(\n    \"2\\n2 9\\n\"\n    ) == \"1 7\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 12 6\n\n''') == '5 3'\nassert solution('''2\n2 9\n\n''') == '1 7'\nassert solution('''7\n13 52 0 13 26 52\n\n''') == '12 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 2 1\n''') == '1 2'\nassert solution('''\n6\n3 2 1 4 2\n''') == '1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3 12 6\n\n''') == '5 3'\nassert solution('''7\n2 1000000000 4 6 8 4 2\n\n''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52\n\n''') == '12 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '5 3'\nassert solution('''\n2\n2 9\n''') == '1 7'\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution('''\n6\n13 52 0 13 26 52\n''') == '12 13'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1\n''') == '3'\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'\nassert solution('''\n10\n1 1 1 2 2 3 4 4 5 6 7 7 8 8 9 10\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3 1 4 1\\n') == '3'\nassert solution('5\\n1 1 1 2 2\\n') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('1 1 1 2 2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4\\n3 1 4 1\\n') == '3'\nassert solution(\n    '5\\n1 1 1 2 2\\n') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '3'\n\"\"\"\n\nn = int(input())\nl = list(map(int, input().split()))\nwhile n > 1:\n    n -= 1\n    l.sort(reverse=True)\n    if l[0] == 0:\n        print(n)\n        break\n    else:\n        l.pop(0)\nprint(0)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 2') == '2'\nassert solution('4 0') == '1'\nassert solution('3 2') == '2'\nassert solution('2 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 0\n1 3\n2 3''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"1 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('1 2\\n2 3\\n') == '4 2'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'\nassert solution('3 2\\n1 3\\n2 3\\n') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 68
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 2\n2 3\n\n''') == '2'\n\nassert solution('''3 2\n1 3\n2 3\n\n''') == '1'\n\nassert solution('''3 2\n1 2\n2 3\n\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == '2'\nassert solution('''3 0\n1 2\n2 3\n''') == '1'\nassert solution('''3 2\n1 2\n2 3\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(\"2 1\") == '2'\nassert solution(\"3 2\") == '2'\nassert solution(\"3 0\") == '1'\nassert solution(\"4 2\") == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\") == \"4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\nOutput\n11\n''') == '11'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n') == '11'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == '4'\nassert solution('8 4\\n4 1 1 2 2 3\\n5 2 2 2 2 1\\n6 4\\n6 1 2 4 3\\n7 2 4\\n7 1 3 4\\n') == '7'\n",
        "num_ids_2": 82,
        "num_ids_4": 133
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('6 4') == '4'\nassert solution('7 1 2 3 4 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 2\\n1 2\\n2 3') == '4'\nassert solution('7\\n4 1\\n1 2\\n1 4\\n2 3\\n2 5') == '5'\n\nstdin = \"\"\"\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('3 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'\nassert solution('''5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\n''') == '4'\nassert solution('''7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\n''') == '4'\nassert solution('''12 1\n1 1 3 2 1 4 5 1 2 2 2 3 5 1 2\n3 5\n6 5\n2 1\n4 3\n2 1\n4 1\n3 2\n4 3\n4 4\n5 1\n5 5\n6 4\n6 5\n6 6\n5 6\n7 5\n7 5\n6 4\n7 4\n6 2\n6 3\n6 5\n5 3\n5 4\n7 3\n5 4\n7 4\n7 4\n6 3\n6 5\n6 6\n5 6\n7 4\n6 5\n6 5\n6 6\n6 6\n6 6\n6 6\n6 5\n6 4\n6 5\n6 5\n6 6\n6 6\n6 6\n7 4\n7 4\n7 4\n5 3\n5 4\n7 5\n7 4\n6 4\n6 5\n6 5\n6 5\n6 6\n6 6\n6 6\n5 3\n5 4\n6 4\n6 5\n6 6\n5 6\n6 6\n6 6\n5 6\n6 6\n6 6\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4\n7 4",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n3 5\\n') == '11'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == '1 5\\n2 1\\n2 9999999994'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3\",\"6\",\"\"]) == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\"\nassert solution([\"2\",\"3\",\"\"]) == \"1 5\\n2 1\\n2 9999999994\\n\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n5 10000000000\n5 6 9999999999\n''') == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n', \"Example\"\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994\\n', \"Example\"",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n10 15 12\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\nprint('All tests passed!')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1 1\\n2 2'\nassert solution('2 3') == '1 5\\n2 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == \"1 1\\n1 9\\n2 2\"\nassert solution('2 3') == \"1 5\\n2 1\\n2 9999999994\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\", \"Test #1: Empty input\"\nassert solution(\"2 3\") == \"\", \"Test #2: Empty input\"\nassert solution(\"5 10000000000\") == \"\", \"Test #3: Empty input\"\nassert solution(\"3 1\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n\", \"Test #4: Case 1\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\\n\", \"Test #5: Case 2\"\nprint(\"All tests OK!\")\n",
        "num_ids_2": 34,
        "num_ids_4": 95
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s1) == str(ans1)\nassert solution(s2) == str(ans2)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 6 5 4\n\"\"\") == \"2 1 3\"\nassert solution(\"\"\"\n40 40 40 60\n\"\"\") == \"20 20 20\"\nassert solution(\"\"\"\n201 101 101 200\n\"\"\") == \"1 100 100\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 9\n''') == '7 9'\nassert solution('''\n3 4\n''') == '3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 1 4\n\"\"\"\n) == \"1 1 1\"\n\nassert solution(\n\"\"\"\n2 2 1\n\"\"\"\n) == \"1 1 1\"\n\nassert solution(\n\"\"\"\n2 1 2\n\"\"\"\n) == \"1 1 1\"\n\nassert solution(\n\"\"\"\n3 2 1\n\"\"\"\n) == \"1 1 1\"\n\nassert solution(\n\"\"\"\n3 2 2\n\"\"\"\n) == \"1 1 1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('1 101 101 200') == '100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n\n\n\"\"\"\n\nimport sys\nimport heapq",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n6\n5\n4\n''') == '2 1 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nR\nG\nR\n\n''') == \"RRRRRRRRRR\"\nassert solution('''\n3\nR\nG\nB\n\n''') == \"RRRRRRRRRR\"\nassert solution('''\n4\nR\nG\nR\n\n''') == \"RRRRRRRRRR\"\nassert solution('''\n5\nR\nG\nR\nG\nR\n\n''') == \"RRRRRRRRRR\"\nassert solution('''\n6\nR\nG\nR\nG\nG\n\n''') == \"RRRRRRRRRR\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9\nRBGRRBRGG\n''') == '2'\nassert solution('''\n8\nBBBGBRRR\n''') == '2'\nassert solution('''\n13\nBBRRRRGGGGGRR\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'BBGBRGRGR'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == 'BGRBGBGGRG'\nassert solution('9') == 'RBGRGBRGG'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == 'BGRBRBGBGBGRG'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == 'BRBGRBGBGBGRG'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\nRBGRRBBBBRG\n''') == '2'\nassert solution('''\n7\nRBBRGGGBBGB\n''') == '2'\nassert solution('''\n1\nBBRBBBGGGBG\n''') == '2'\nassert solution('''\n10\nBBBGBRRRGGGGR\n''') == '6'\nassert solution('''\n11\nBBBBBBRBGBBBR\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '8'\n    ) == '2'\nassert solution(\n    '13'\n    ) == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''5\n10 9 8 7\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n1 3 5 2 4 6''') == '2'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_lines) == stdout\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == \"4\"\nassert solution(example_input_2) == \"1\"\nassert solution(example_input_3) == \"2\"\nassert solution(example_input_4) == \"6\"\nassert solution(input_data) == \"4\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n3 3 4 7 5 6 8\\n') == '4\\n2 3 5 6'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2\\n1 4'\nassert solution('4\\n10 9 8 7\\n') == '1\\n1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6\\n1 2 3 7 8 9'",
        "num_ids_2": 51,
        "num_ids_4": 104
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('6') == '2'\nassert solution('7') == '5'\nassert solution('8') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('7') == '4'\nassert solution('10') == '1'\nassert solution('9') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n2 3 5 6\"\nassert solution() == \"1\\n1 2 3 7 8 9\"\nassert solution() == \"1\\n1 2 3 7 8 9\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 4') == 'No'\nassert solution('1 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"3 3\n\"\"\") == \"Yes\"\nassert solution(\"\"\"3 1\n\"\"\") == \"No\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"5 5\") == \"No\"\nassert solution(\"4 4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 0') == 'No'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n''') == 'Yes'\nassert solution('''\n3 3\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('3 1') == 'No'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1.5'\nassert solution('10 5') == '4.5'\nassert solution('1 5') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('81 58') == '110'\nassert solution('5 5') == '10'\nassert solution('9 5') == '19'\nassert solution('55 5') == '29'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"110\"\nassert solution(\"3 5\") == \"110\"\nassert solution(\"4 5\") == \"110\"\nassert solution(\"1 5\") == \"110\"\nassert solution(\"1 2\") == \"110\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('5 1') == '6'\n\nprint(solution())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10\") == \"5\"\nassert solution(\"21 6\") == \"8\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"100 0\") == \"0\"\nassert solution(\"1 100\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"89 58\") == \"80\"\nassert solution(\"81 0\") == \"81\"\nassert solution(\"89 0\") == \"89\"\nassert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('81 58') == '110'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == '8'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n\n''') == '8'\nassert solution('''3\n\n''') == '8'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '8'\n\nprint(solution(\"5\"))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\n\n\"\"\"\nimport math\n\nn = int(input())\n\nprint(math.factorial(n))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"8\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '8'\nassert solution('6') == '64'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8\"\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"11\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"11\") == \"NO\"\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('0') == 'NO'\nassert solution('100') == 'YES'\nassert solution('-1') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('6') == 'NO'\nassert solution('8') == 'YES'\nassert solution('9') == 'NO'\nassert solution('-1') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'NO'\n\"\"\"\nx = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('999') == 'ABC'\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert solution('999') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(0) == \"ABC\"\nassert solution(1) == \"ABC\"\nassert solution(2) == \"ABC\"\nassert solution(3) == \"ABC\"\nassert solution(4) == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('999') == 'ABC'\nassert solution('10000') == 'ABCD'\nassert solution('99999') == 'ABCDEF'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"10000\") == \"ABCD\"\nassert solution(\"1000000\") == \"ABCDEF\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"100\") == \"AB\"\nassert solution(\"01\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\n\n\n\"\"\"\n\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(1, N+1):\n    if i == 999:\n        print(\"ABC999\")\n    else:\n        print(chr(97 + (i % 10 - 1)) + chr(97 + (i // 10 % 10 - 1)))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\nassert solution('5') == 'AB'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'ABC'\nassert solution('999') == 'ABC'\nassert solution('1') == 'AB'\nassert solution('2') == 'BC'\nassert solution('3') == 'CD'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'ABC'\nassert solution('2') == 'ABD'\nassert solution('3') == 'ABE'\nassert solution('4') == 'ABF'\nassert solution('5') == 'ABG'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ABD\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('1\\n2\\n4\\n8\\n9\\n0') == 'Nay!'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1'\n) == 'Yay!'\nassert solution(\n    '2'\n) == 'Nay!'\nassert solution(\n    '4'\n) == 'Nay!'\nassert solution(\n    '8'\n) == 'Yay!'\nassert solution(\n    '9'\n) == 'Yay!'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n100\") == \"Not Yay!\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1\\n2\\n4\\n8\\n9\\n15\\n\"\n) == \"Yay!\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Nay!\"\nassert solution(\"4\") == \"Nay!\"\nassert solution(\"8\") == \"Nay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Yay!\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3200') == 'pink'\nassert solution('3200p') == 'pink'\nassert solution('3200p') == 'pink'\nassert solution('3200p') == 'pink'\nassert solution('3200p') == 'pink'\n\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'a', '1'\nassert solution('b') == 'b', '2'\nassert solution('c') == 'c', '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3200') == 'pink'\nassert solution('0123456789') == '123456789'\nassert solution('pink') == 'pink'\nassert solution('2') == '2'\nassert solution('3200') == 'pink'\n",
        "num_ids_2": 29,
        "num_ids_4": 51
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(3200) == 'pink'\nassert solution(5) =='red'\nassert solution(2) =='red'\nassert solution(3) =='red'\nassert solution(4) =='red'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'pink', 'Test #1 Failed'\nassert solution('3200') == 'pink', 'Test #2 Failed'\nassert solution('664') =='red', 'Test #3 Failed'\nassert solution('1000') =='red', 'Test #4 Failed'\nassert solution('44444') =='red', 'Test #5 Failed'\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3200') == 'pink', 'Wrong answer, please check'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3200') == 'pink'\nassert solution('42') =='red'\n\"\"\"\n\na = int(input())\ns = input()",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3200') == 'pink'\nassert solution('35000') =='red'\n\"\"\"\n\na = int(stdin.readline())\ns = stdin.readline()",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12\\ngreen') == 'green', f'Expected {repr(\"green\")} but got {repr(solution(\"12\\ngreen\"))}'\nassert solution('10\\nred') =='red', f'Expected {repr(\"red\")} but got {repr(solution(\"10\\nred\"))}'\nassert solution('1\\nta') == 'ta', f'Expected {repr(\"ta\")} but got {repr(solution(\"1\\nta\"))}'\nassert solution('3\\nblue') == 'blue', f'Expected {repr(\"blue\")} but got {repr(solution(\"3\\nblue\"))}'\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3200') == 'pink'\nassert solution('123') =='red'\nassert solution('123456') =='red'\nassert solution('1234567') =='red'\nassert solution('12345678') =='red'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1199') == 'ABC'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n''') == 'ARC'\nassert solution('''\n12\n''') == 'AGC'\nassert solution('''\n1199\n''') == 'ABC'\nassert solution('''\n5\n''') == 'ARC'\nassert solution('''\n2\n''') == 'AGC'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"ABC\"\nassert solution(\"1\") == \"ARC\"\nassert solution(\"2\") == \"AGC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1149') == 'ARC'\nassert solution('1121') == 'ARC'\nassert solution('1199') == 'ARC'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == 'ARC'\nassert solution('15') == 'AGC'\nassert solution('9') == 'ARC'\nassert solution('121') == 'ARC'\nassert solution('10') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'ABC'\nassert solution('2') == 'ARC'\nassert solution('3') == 'AGC'\nassert solution('4') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1211') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1199') == 'ARC'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'ARC'\nassert solution('12') == 'AGC'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC', \"Your function does not work!\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(5) == 'ARC'\nassert solution(1999) == 'AGC'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"112\") == \"1119\", \"test 1\"\nassert solution(\"99\") == \"999\", \"test 2\"\nassert solution(\"211\") == \"1191\", \"test 3\"\nassert solution(\"9\") == \"991\", \"test 4\"\nassert solution(\"11\") == \"119\", \"test 5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"123\") == \"111\"\nassert solution(\"121\") == \"9\"\nassert solution(\"221\") == \"21\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('119') == '991'\nassert solution('890') == '890'\nassert solution('999') == '991'\nassert solution('1111') == '1111'\nassert solution('111111') == '111111'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('119') == '991'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('9') == '1'\nassert solution('11') == '1'\nassert solution('99') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"99\") == \"991\"\nassert solution(\"11\") == \"9\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(991) == \"991\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"1\"\nassert solution(\"99\") == \"9\"\nassert solution(\"111\") == \"1\"\nassert solution(\"111\") == \"9\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'abac'\nassert solution('2') == 'ac'\nassert solution('3') == 'bcdaf'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nabbaac') == \"abac\"\nassert solution('4\\nac') == \"ac\"\nassert solution('4\\nbccddaaf') == \"bcdaf\"\n",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz''') == 'abac'\nassert solution('''\n3\nabbaac\nac\nbccddaaf''') == 'ac'\nassert solution('''\n2\nabbaac\nac''') == 'abac'\nassert solution('''\n1\nabbaac''') == 'abbaac'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bccddaaf\"",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'aba'\nassert solution('4') == 'abac'\nassert solution('4') == 'abac'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"a\"\nassert solution(\"2\") == \"ab\"\nassert solution(\"1\") == \"a\"\nassert solution(\"4\") == \"abac\"\nassert solution(\"5\") == \"zzzzzzzzzz\"\n\n\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nabac\") == \"abac\"\nassert solution(\"2\\naba\") == \"ab\"\nassert solution(\"3\\nabc\") == \"abc\"\nassert solution(\"4\\nabc\") == \"abc\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abac\") == \"abac\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"bccddaaf\") == \"bcdaf\"\nprint(solution(input()))",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nab\\ncc') == 'ac'\nassert solution('4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzz') == 'abac'\nassert solution('5\\nab\\ncd\\nabc\\nab') == 'abc'\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nac\nac''') == 'ac'\nassert solution('''4\nzzzzzzzzzz\nzzzzzzzzzz''') == 'zzzzzzzzzz'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"10 4\\n\") == \"5\"\nassert solution(\"13 9\\n\") == \"4\"\nassert solution(\"100 13\\n\") == \"333\"\nassert solution(\"123 456\\n\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '5'\nassert solution(input()) == '333'\nassert solution(input()) == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10 4\") == \"5\"\nassert solution(\"13 9\") == \"4\"\nassert solution(\"100 13\") == \"333\"\nassert solution(\"123 456\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4') == '2'\nassert solution('13 9') == '5'\nassert solution('100 13') == '333'\nassert solution('123 456') == '0'\nassert solution('92 46') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(t1) == \"2\\n5\\n4\"\nassert solution(t2) == \"1\\n0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n5\\n4\\n333\\n0\\n\"\nprint(solution(input()), end=\"\")\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"13 9\") == \"5\"\nassert solution(\"100 13\") == \"333\"\nassert solution(\"123 456\") == \"0\"\nassert solution(\"92 46\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n10 4\n13 9\n100 13\n''') == '0'\nassert solution('''\n5\n10 4\n13 9\n100 13\n''') == '333'\nassert solution('''\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == '333'\nassert solution('''2\n10 4\n13 9\n100 13\n123 456\n92 46''') == '5'\nassert solution('''1\n10 4\n13 9\n100 13\n123 456\n92 46''') == '0'\nassert solution('''4\n10 4\n13 9\n100 13\n123 456\n92 46''') == '1'\nassert solution('''5\n10 3\n5 11\n123 456\n112 34\n1 2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n7 5\n1 4 9 2 1 1 1\n''') == '1.923299523299523'\nassert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n5 1\n1 1\n2 2\n3 3\n4 4\n''') == '4.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n3 4 1 2 5\n''') == '2.666666666666667'\nassert solution('''\n5 3\n3 4 1 2 5\n''') == '2.666666666666667'\n'''\nWrite your code above the assert statement, and below the implementation.\nNote that we do not require you to understand the implementation (though you will have to anyway to pass the tests). All the code you write below will be the only code submitted.\n\nAlso note that the tests will use the standard input stream.\nNote that the input is handled in a way that is similar to the way the tests are handled in Code Jam.\nThis is the reason why the tests data is hardcoded into the function (instead of being passed as function arguments)\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''4 5\n3 1 1 1 2 1 1\n''') == '2.2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 1 1 2 2\n''') == \"2.666666666666667\"\nassert solution('''\n10 10\n3 3 3 4 4 4 4 5 5 5 5 5 5 5\n''') == \"9.0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1 2\") == \"2.666666666666667\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == '2.666666666666667'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '2.666666666666667'\nassert solution('10 5') == '3.5'\nassert solution('5 6') == '3.5'\nassert solution('4 10') == '5'\nassert solution('100 10') == '10.0'\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == \"2.666666666666667\"\nassert solution('''\n10 10\n10 10 10 10 10 10 10 10 10 10\n''') == \"1.000000000000002\"\nassert solution('''\n5 5\n3 4 1 2\n''') == \"3.0\"\nassert solution('''\n4 6\n3 4 5 5 1 2 3\n''') == \"3.0\"\nassert solution('''\n2 2\n1 2\n''') == \"1.0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 4 1 2') == '2.666666666666667'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nNO\\n'\n\n\n\n'''\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    \n    if sorted(a) == a:\n        print('YES')\n    else:\n        print('NO')\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 3\\n1 2 3 4\\n4 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"2 3\\n2 1 3\\n2 1 2 3 3\\n4 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"2 3\\n2 1 3\\n3 2\\n2 1 2 3 3\\n4 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\nassert solution(\"2 3\\n2 1 2\\n2 1 3 3\\n4 2\\n2 1 2 3 3\\n1 4\") == \"YES\"\nassert solution(\"2 3\\n2 1 3\\n3 2\\n2 1 2 3 3\\n4 2\\n2 1 2 3 3\\n1 4\") == \"NO\"\n",
        "num_ids_2": 75,
        "num_ids_4": 154
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n4 2\n4 1 2 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2 1\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"4 1 2 3\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('3 2 1') == 'NO'\nassert solution('1 2') == 'YES'\nassert solution('4 2') == 'YES'\nassert solution('4 2 1 3') == 'NO'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\\n1\\n\") == \"YES\"\nassert solution(\"2\\n1\\n2\\n\") == \"YES\"\nassert solution(\"3\\n2\\n1\\n\") == \"YES\"\nassert solution(\"4\\n3\\n2\\n1\\n\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 60
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\nassert solution(\"4 1 2 3\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"bab\"\nassert solution(\"10\") == \"oops\"\nassert solution(\"1\") == \"z\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"z\") == \"z\"\nassert solution(\"aba\") == \"aba\"\nassert solution(\"bab\") == \"baabbb\"\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"e\"\nassert solution(\"5\") == \"p\"\nassert solution(\"10\") == \"p\"\nassert solution(\"15\") == \"p\"\nassert solution(\"20\") == \"p\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"z\"\nprint('Done! (It took {:.6f} seconds)'.format(time.process_time() - start))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\nbaabbb\") == \"bab\"\nassert solution(\"10\\nooppppssss\") == \"oops\"\nassert solution(\"1\\nz\") == \"z\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 58
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\\n\\\nabc\"\n) == \"a\\nb\\nc\"\n\nassert solution(\n    \"2\\n\\\naba\"\n) == \"a\\naa\"\n\nassert solution(\n    \"3\\n\\\naaa\"\n) == \"a\\naaa\"\n\nassert solution(\n    \"4\\n\\\naaa\"\n) == \"a\\naaaa\"\n\nassert solution(\n    \"5\\n\\\naaa\"\n) == \"a\\naaaaa\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"2\") == \"z\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"a\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\nbab\n\n''') == 'bab'\nassert solution('''5\nbaa\n\n''') == 'baa'\nassert solution('''4\nbba\n\n''') == 'bba'\nassert solution('''3\nbaa\n\n''') == 'baa'\nassert solution('''2\nbab\n\n''') == 'bab'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"z\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example1) == \"1\"\nassert solution(example2) == \"0\"\nassert solution(example3) == \"1\"\nassert solution(example4) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n\n''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 10') == '1'\nassert solution('4 3') == '1'\nassert solution('3 3') == '0'\nassert solution('5 6') == '2'\nassert solution('8 9') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2 3\n2 4 2\n1 4 1\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n\n''') == '0'\nassert solution('''\n1 0\n\n''') == '0'\nassert solution('''\n3 3\n1 2 1\n2 3 3\n1 3 3\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '2'\nassert solution('8 10') == '1'\nassert solution('3 3') == '0'\nassert solution('1 0') == '0'\nassert solution('4 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 10') == '1'\nassert solution('4 3') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 5\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"GRB\"\nassert solution(s) == \"RGB\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\nR\n\n2\nR\n\n3\nR\n\n4\nR\n\n5\nR\n\n6\nR\n\n7\nR\n\n8\nR\n\n9\nR\n\n10\nR\n\n11\nR\n\n12\nR\n\n13\nR\n\n14\nR\n\n15\nR\n\n16\nR\n\n17\nR\n\n18\nR\n\n19\nR\n\n20\nR\n\n21\nR\n\n22\nR\n\n23\nR\n\n24\nR\n\n25\nR\n\n26\nR\n\n27\nR\n\n28\nR\n\n29\nR\n\n30\nR\n\n31\nR\n\n32\nR\n\n33\nR\n\n34\nR\n\n35\nR\n\n36\nR\n\n37\nR\n\n38\nR\n\n39\nR\n\n40\nR\n\n41\nR\n\n42\nR\n\n43\nR\n\n44\nR\n\n45\nR\n\n46\nR\n\n47\nR\n\n48\nR\n\n49\nR\n\n50\nR\n\n51\nR\n\n52\nR\n\n53\nR\n\n54\nR\n\n55\nR\n\n56\nR\n\n57\nR\n\n58\nR\n\n59\nR\n\n60\nR\n\n61\nR\n\n62\nR\n\n63\nR\n\n64\nR\n\n65\nR\n\n66\nR\n\n67\nR\n\n68\nR\n\n69\nR\n\n70\nR\n\n71\nR\n\n72\nR\n\n73\nR\n\n74\nR\n\n75\nR\n\n76\nR\n\n77\nR\n\n78\nR\n\n79\nR\n\n80\nR\n\n81\nR\n\n82\nR\n\n83\nR\n\n84\nR\n\n85\nR\n\n86\nR\n\n87\nR\n\n88\nR\n\n89\nR\n\n90\nR\n\n91\nR\n\n92\nR\n\n93\nR\n\n94\nR\n\n95\nR\n\n96\nR\n\n97\nR\n\n98\nR\n\n99\nR\n\n100\nR\n\n101\nR\n\n102\nR\n\n103\nR\n\n104\nR\n\n105\nR\n\n106\nR\n\n107\nR\n\n108\nR\n\n109\nR\n\n110\nR\n\n111\nR\n\n112\nR\n\n113\nR\n\n114\nR\n\n115\nR\n\n116\nR\n\n117\nR\n\n118\nR\n\n119\nR\n\n120\nR\n\n121\nR\n\n122\nR\n\n123\nR\n\n124\nR\n\n125\nR\n\n126\nR\n\n127\nR\n\n128\nR\n\n129\nR\n\n130\nR\n\n131\nR\n\n132\nR\n\n133\nR\n\n134\nR\n\n135\nR\n\n136\nR\n\n137\nR\n\n138\nR\n\n139\nR\n\n140\nR\n\n141\nR\n\n142\nR\n\n143\nR\n\n144\nR\n\n145\nR\n\n146\nR\n\n147\nR\n\n148\nR\n\n149\nR\n\n150\nR\n\n151\nR\n\n152\nR\n\n153\nR\n\n154\nR\n\n155\nR\n\n156\nR\n\n157\nR\n\n158\nR\n\n159\nR\n\n160\nR\n\n161\nR\n\n162\nR\n\n163\nR\n\n164\nR\n\n165\nR\n\n166\nR\n\n167\nR\n\n168\nR\n\n169\nR\n\n170\nR\n\n171\nR\n\n172\nR\n\n173\nR\n\n174\nR\n\n175\nR\n\n176\nR\n\n177\nR\n\n178\nR\n\n179\nR\n\n180\nR\n\n181\nR\n\n182\nR\n\n183\nR\n\n184\nR\n\n185\nR\n\n186\nR\n\n187\nR\n\n188\nR\n\n189\nR\n\n190\nR\n\n191\nR\n\n192\nR\n\n193\nR\n\n194\nR\n\n195\nR\n\n196\nR\n\n197\nR\n\n198\nR\n\n199\nR\n\n200\nR\n\n201\nR\n\n202\nR\n\n203\nR\n\n204\nR\n\n205\nR\n\n206\nR\n\n207\nR\n\n208\nR\n\n209\nR\n\n210\nR\n\n211\nR\n\n212\nR\n\n213\nR\n\n214\nR\n\n215\nR\n\n216\nR\n\n217\nR\n\n218\nR\n\n219\nR\n\n220\nR\n\n221\nR\n\n222\nR\n\n223\nR\n\n224\nR\n\n225\nR\n\n226\nR\n\n227\nR\n\n228\nR\n\n229\nR\n\n230\nR\n\n231\nR\n\n232\nR\n\n233\nR\n\n234\nR\n\n235\nR\n\n236\nR\n\n237\nR\n\n238\nR\n\n239\nR\n\n240\nR\n\n241\nR\n\n242\nR\n\n243\nR\n\n244\nR\n\n245\nR\n\n246\nR\n\n247\nR\n\n248\nR\n\n249\nR\n\n250\nR\n\n251\nR\n\n252\nR\n\n253\nR\n\n254\nR\n\n255\nR\n\n256\nR\n\n257\nR\n\n258\nR\n\n259\nR\n\n260\nR\n\n261\nR\n\n262\nR\n\n263\nR\n\n264\nR\n\n265\nR\n\n266\nR\n\n267\nR\n\n268\nR\n\n269\nR\n\n270\nR\n\n271\nR\n\n272\nR\n\n273\nR\n\n274\nR\n\n275\nR\n\n276\nR\n\n277\nR\n\n278\nR\n\n279\nR\n\n280\nR\n\n281\nR\n\n282\nR\n\n283\nR\n\n284\nR\n\n285\nR\n\n286\nR\n\n287\nR\n\n288\nR\n\n289\nR\n\n290\nR\n\n291\nR\n\n292\nR\n\n293\nR\n\n294\nR\n\n295\nR\n\n296\nR\n\n297\nR\n\n298\nR\n\n299\nR\n\n300\nR\n\n301\nR\n\n302\nR\n\n303\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1\\nGRB\\n'\nprint(solution(open(0).read()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nBRB') == '1'\nassert solution('7\\nRGBGRBB') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nRRR') == '1'\nassert solution('4\\nBBBB') == '0'\nassert solution('2\\nBB') == '1'\nassert solution('4\\nBBBB') == '0'\nassert solution('4\\nBBBB') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nGB\n''') == 'GB'\nassert solution('''\n5\nBBB\n''') == 'BBB'\nassert solution('''\n5\nRGBRGBRG\n''') == 'RGBRGBRG'\nassert solution('''\n5\nBGBB\n''') == 'BGBB'\nassert solution('''\n5\nRGBRRG\n''') == 'RGBRRG'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    RGRB\n    \"\"\") == \"4\"\n\nassert solution(\n    \"\"\"\n    5\n    BBBBBB\n    \"\"\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '48000.0'\nassert solution('2') == '48000.0'\nassert solution('2') == '48000.0'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\nassert solution('''\n1\n2\n''') == '2.000000'\nassert solution('''\n5\n0.00000000 3.00000000 5.00000000 1.00000000\n''') == '16.00000000'\nassert solution('''\n3\n-0.00000000 1.00000000 0.00000000\n''') == '0.00000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == '48000.0'\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == '48000.0'\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == '48000.0'",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '48000.0'\nassert solution('1') == '48000.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n0.00000001\\n0.000000001\\n') == '48000.0'\nassert solution('1\\n0.00000001\\n0.000000001\\n') == '48000.0'\n\"\"\"\n\nimport sys",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('5\\n1000000 JPY\\n0.010000000 BTC\\n1000000 JPY\\n0.000001 BTC\\n1000000 JPY\\n0.0000001 BTC') == '5000000.0'\nassert solution('5\\n1000000 JPY\\n0.00000001 BTC\\n1000000 JPY\\n0.000000001 BTC\\n1000000 JPY\\n0.0000000001 BTC') == '5000000.0'\nassert solution('5\\n1000000 JPY\\n0.00000001 BTC\\n1000000 JPY\\n0.000000001 BTC\\n1000000 JPY\\n0.0000000001 BTC') == '5000000.0'\nassert solution('5\\n1000000 JPY\\n0.00000001 BTC\\n1000000 JPY\\n0.000000001 BTC\\n1000000 JPY\\n0.0000000001 BTC') == '5000000.0'\n",
        "num_ids_2": 77,
        "num_ids_4": 181
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"5\\n1000000 JPY\\n1000000 BTC\\n10000000 JPY\\n10000 BTC\\n1000000 BTC\") == \"150000.0\"",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"1\") == \"38000.0\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"20 1\") == \"19\"\nassert solution(\"5 1\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"3\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"10 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '3'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '3'\nassert solution('6\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"3\"\nassert solution(\"2\\n3\") == \"1\"\nassert solution(\"3\\n1\") == \"2\"\nassert solution(\"4\\n2\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 5') == '3'\nassert solution('10 3') == '10'\nassert solution('10 0') == '10'\nassert solution('5 0') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 2') == '4'\nassert solution('10 3') == '7'\nassert solution('15 2') == '12'\n\nIf your solution is correct, you will receive 0 points and you can print\n\"OK\".\nIf your solution is not correct, you will receive 10 points and you must print\n\"Wrong Answer\".",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'icpc'\nassert solution('3') == 'icpc'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nabc\\ndef\\nghi\\n') == 'abcdeghi'\nassert solution('2\\nabc\\ndef\\nghi\\n') == 'cdefghi'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"icpc\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\nipcc\n''') == 'icpc'\nassert solution('''3\nipcc\n''') == 'icpc'\nassert solution('''7\nicpc\n''') == 'icpc'\nassert solution('''8\nicpc\n''') == 'icpc'\nassert solution('''10\nicpc\n''') == 'icpc'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'abc'\nassert solution('4') == 'bdf'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nip cc') == 'icpc'\nassert solution('1\\naa') == 'a'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n2\nip cc\n\"\"\") == \"icpc\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('abcdefgh') == 'abcdefgh'\nassert solution('abcdefghi') == 'abcdefgh'\n",
        "num_ids_2": 16,
        "num_ids_4": 45
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'bc'\nassert solution('3') == 'acdf'\nassert solution('4') == 'acdcba'\nassert solution('5') == 'abccba'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2\nip cc\n\"\"\") == \"icpc\", \"Wrong!\"\nassert solution(\"\"\"3\ntest\nsudy\npan\n\"\"\") == \"testsu\", \"Wrong!\"\nassert solution(\"\"\"3\ndost\nsudy\npan\n\"\"\") == \"dosstu\", \"Wrong!\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AAB') == 'Yes'\nassert solution('AABA') == 'Yes'\nassert solution('AABAB') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AAB') == 'Yes'\nassert solution('ABA') == 'No'\nassert solution('ABAB') == 'Yes'\nassert solution('ABBA') == 'Yes'\nassert solution('ABBABA') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''AB\n''') == 'No'\nassert solution('''ABA\n''') == 'Yes'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABBA') == 'No'\nassert solution('ABABA') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\nassert solution('ABD') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''ABA\n''') == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AB\") == \"Yes\"\nassert solution(\"BA\") == \"Yes\"\nassert solution(\"AA\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AABB') == 'Yes'\nassert solution('ABA') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABB\") == \"No\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRS') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RRR\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RRRR\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"RSS\") == \"1\"\nassert solution(\"SSR\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"1\"\nassert solution(\"RRRRRR\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RR\") == \"1\"\nassert solution(\"RR\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRSSS\") == \"1\"\nassert solution(\"SSRSSSSR\") == \"2\"\nassert solution(\"RRSRRSSSSSSSSSSRRRSR\") == \"3\"\nassert solution(\"RRSSSRSSRSSSSSSSSSSSSSSSSRRRRSSRRRRRRRSSSSRSSSSSSSSSSSSSSSSSSSSRRRRSSSSSSRRRRSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS",
        "num_ids_2": 23,
        "num_ids_4": 57
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"R\") == \"1\"\nassert solution(\"RS\") == \"1\"\nassert solution(\"RR\") == \"2\"\nassert solution(\"RRRRRR\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"R\") == \"1\"\nassert solution(\"RR\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nprint(solution(\"1 2 3\"))\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '1 2 3'\nassert solution('3 1 2') == '1 2 3'\nassert solution('2 1 3') == '3 1 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"5 4 3\") == \"3 5 4\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 5 2\") == \"2 3 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '3 1 2'\nprint(solution(input))\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 4 1\") == \"1 3 4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"4 3 2 1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1 2 3\n\"\"\") == \"\"\"\n3 1 2\n\"\"\".strip()\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n\") == \"3 1 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"-1 -2\") == \"0\"\nassert solution(\"10 -4\") == \"10\"\nassert solution(\"9 -4\") == \"25\"\nassert solution(\"18 -3\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10') == '100'\nassert solution('20 12') == '100'\nassert solution('15 6') == '50'\nassert solution('4 7') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"-1 -2\") == \"0\"\nassert solution(\"10 10\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(TEST_INPUT) == \"100\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"10 50\") == \"40\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('30 100') == '100'\nassert solution('40 100') == '200'\nassert solution('45 100') == '300'\nassert solution('50 100') == '100'\nassert solution('80 100') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 0\n''') == '1'\nassert solution('''\n2 0\n''') == '0'\nassert solution('''\n3 0\n''') == '1'\nassert solution('''\n4 0\n''') == '0'\nassert solution('''\n5 0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('30 100') == '100'\n\"\"\"\na, b = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15 10') == '15'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('30 100') == '100'\nassert solution('25 30') == '25'\nassert solution('30 25') == '25'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-++') == '2'\nassert solution('+--++') == '2'\nassert solution('-++--') == '2'\nassert solution('--++-') == '2'\nassert solution('+') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-++') == '2'\nassert solution('++-++-++') == '2'\nassert solution('+-++-++-++') == '3'\nassert solution('+-++-++-++-++') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\n\"\"\"\nimport sys\n\nfrom typing import List\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('+-++') == '2'\nassert solution('+--') == '1'\nassert solution('-++-') == '2'\nassert solution('---') == '1'\nassert solution('-+++') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('+-++') == '2'\nassert solution('-++-') == '2'\nassert solution('++-++') == '2'\nassert solution('++--') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == '2'\nassert solution(\"-+++\") == '2'\nassert solution(\"+++-\") == '1'\nassert solution(\"+-++\") == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == '2'\nprint('\"solution\" is working correctly!')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2020/02/29') == 'Heisei'\nassert solution('2020/02/28') == 'TBD'\nassert solution('2019/03/29') == 'Heisei'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'TBD'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30/09') == 'TBD'\nassert solution('2019/04/30/09/10') == 'TBD'\nassert solution('2019/04/30/09/10/12') == 'TBD'\n",
        "num_ids_2": 27,
        "num_ids_4": 63
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"TBD\"\nassert solution(\"2021/05/21\") == \"Heisei\"\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/05/30') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/30\") == \"TBD\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/28\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/29/\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/04/30\") == \"TBD\"\nassert solution(\"2023/04/30\") == \"TBD\"\nassert solution(\"2021/04/30\") == \"Heisei\"\nassert solution(\"2022/04/30\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Heisei'\nprint(solution(stdin))\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/28\") == \"TBD\"\nassert solution(\"2019/04/27\") == \"TBD\"\nassert solution(\"2019/04/26\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'\nassert solution('1337 1337 1337') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"4\"\nassert solution(\"4\\n4\\n2\\n4\\n2\") == \"8\"\nassert solution(\"10\\n2\\n1\\n1\\n1\\n2\\n2\\n1\\n2\\n1\\n2\") == \"9\"\nassert solution(\"9\\n3\\n3\\n3\\n3\") == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 100
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1337 1337 1337\") == \"3\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"\"",
        "num_ids_2": 25,
        "num_ids_4": 42
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\n",
        "num_ids_2": 61,
        "num_ids_4": 79
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"14\"\nassert solution(\"2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10",
        "num_ids_2": 1486,
        "num_ids_4": 1486
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n1 3 2'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\nassert solution('''8 4\n1 2 3 2 1 3 2 1''') == '4'\nassert solution('''100 100\n1 3 1 3 2 3 1 3''') == '13'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''7 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 2\n1 2 3 2 1 3 2\n\"\"\") == \"2 1 3 2\"\n\nassert solution(\"\"\"10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3 1 2\"\n\nassert solution(\"\"\"10 5\n1 2 3 2 1 3 2\n\"\"\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == stdin, (solution(), stdin)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 2 1 3 2\") == \"2 1 3 2\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"10 6\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2 1 3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 3\n2 4 8 2 4\n8\n5\n10\n11\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n11\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 3\n2 4 8 2 4\n8\n5\n10\n11\n\"\"\") == \"-1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('5\\n4\\n8\\n2\\n4\\n') == '2'\nassert solution('10\\n') == '-1'\n\n\n'''\nfrom math import log2\nfrom sys import stdin",
        "num_ids_2": 40,
        "num_ids_4": 53
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3 2'\nassert solution('''\n5\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"1\"\nassert solution(\"8\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"14\") == \"2\"\nassert solution(\"10\") == \"3\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"1\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"-1\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"3 2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 2 4\n2\n3\n''') == '1 -1 -1'\nassert solution('''\n3\n2 2 4\n4\n3\n''') == '1 -1 -1'\nassert solution('''\n3\n2 2 4\n4\n2\n''') == '3 -1 -1'\nassert solution('''\n3\n2 2 4\n4\n1\n''') == '2 -1 -1'\nassert solution('''\n3\n1 1 2\n5\n1\n''') == '3 -1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n8\\n') == '3\\n2'\nassert solution('1\\n2\\n4\\n8\\n') == '-1'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2\n4\n8\n\n4\n1\n2\n3\n''') == '3'\nassert solution('''\n2\n2\n4\n8\n\n4\n1\n2\n3\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"21\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 3\") == \"21\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n2 6 7\n''') == \"21\"\nassert solution('''\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\") == \"21\"\nassert solution(\"\"\"\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 2\n2 2\n2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2\n5\n4\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == str(solution_)\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n') == '0'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 3 2 8 5 5 8 2 2 8 5 2') == '21'\nassert solution('3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3') == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"21\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 2\n''') == '2'\n\nassert solution('''\n2\n4 6 6 6\n''') == '2'\n\nassert solution('''\n3\n2 8 10\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\nassert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"2 8 10\") == \"2 2 3\"\nassert solution(\"4 1 1 1\") == \"0\"\nassert solution(\"3 5 7 2\") == \"3 5 6 6 7 7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_small) == \"1\"\nassert solution(example_input) == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2 1 2'\nassert solution('2 8 10') == '2 3 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 4 9 8\") == \"2\"\nassert solution(\"2 5 5 5\") == \"0\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2 4 6 6 6\"\n) == \"2\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"2 4 6 6 6\"\n) == \"2\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"2 8 10\"\n) == \"2\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"1 1 1 1\"\n) == \"0\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('2') == '2'\nassert solution('1') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\n1 3 6 8 9 3 2 6 8 3\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10\n2 9 9 9 9 9 9 9 9 9\n\n\"\"\") == \"0\"\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution([2, 4, 6, 6, 6]) == '1 2 3'\nassert solution([2, 8, 10]) == '2 2 3'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n10101\n100010\n100010\n''') == '1'\n\nassert solution('''\n6 1\n10101\n100010\n100010\n100010\n100010\n''') == '1'\n\nassert solution('''\n5 1\n10001\n10001\n10001\n10001\n10001\n''') == '1'\n\nassert solution('''\n3 1\n10101\n10001\n10001\n''') == '0'\n\nassert solution('''\n6 1\n10101\n10001\n10001\n10001\n10001\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\"\n) == \"1\\n2\\n0\"\nassert solution(\n    \"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n0\"\n) == \"0\"\nassert solution(\n    \"6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\"\n) == \"1\\n2\\n1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '0'\nassert solution('5 1') == '1'\nassert solution('10101') == '2'\nassert solution('3 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 1\n    10101\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    6 1\n    100010\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    6 2\n    000000\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    6 3\n    000000\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    6 4\n    000000\n    \"\"\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n4 1\n001\n01100\n01010\n00110\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n10 6\n0010001\n11111111\n10011001\n01100100\n00100010\n00000000\n00100000\n00010001\n01000100\n10000100\n10011000\n10011000\n11111111\n00010000\n01100010\n01100100\n00100100\n00010001\n00010000\n10000100\n00001110\n00010001\n01000100\n00010000\n11111111\n00001100\n01100100\n00100010\n00100100\n11111111\n01000100\n00100100\n00010000\n01000100\n11000100\n01110000\n00100100\n01110000\n\"\"\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n2 2\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9''') == '3'\nassert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2\\n11 11') == '3'\nassert solution('5 1\\n29 30') == '4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n11 11\") == \"1\"\nassert solution(\"4 2\\n2 3\") == \"2\"\nassert solution(\"5 1\\n2 3\") == \"1 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '3'\nassert solution('6 1') == '1 4 5 6'\nassert solution('7 2') == '4'\nassert solution('7 1') == '4 6'\nassert solution('9 2') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n6 15 30\n4\n10 6 30 15''') == '31'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n3\\n10 20 30 50\\n3\\n3 4 6\"\n) == \"30\"\nassert solution(\n    \"10\\n5\\n10 20 30 50\\n3\\n3 4 6\"\n) == \"31\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"30\"\nassert solution(\"3\") == \"31\"\nassert solution(\"4\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"31\"\nassert solution(\"\"\"\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''\n1\n10\n10\n''') == '10'\n\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n\nassert solution('''\n4\n4\n4 5 6\n4 4 5 6\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''5\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\\n\") == \"30\\n31\\n10\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"1\\n1\"\nassert solution(\"2\\n4\") == \"2\\n1\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n2\n3\n''') == '2'\nassert solution('''4\n1\n10\n20\n''') == '1'\nassert solution('''1\n2\n3\n''') == '1'\nassert solution('''6\n1\n100\n200\n300\n400\n500\n''') == '2'\nassert solution('''42\n1\n100\n200\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\") == \"2\\n1\\n2\"\nassert solution(\"5\\n5\\n2 3 4 99 100\\n1\\n42\") == \"1\\n1\\n2\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n') == '2\\n1'\nassert solution('3\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n') == '2\\n1'\nassert solution('5\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n') == '1\\n1'\n",
        "num_ids_2": 85,
        "num_ids_4": 123
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4\\n1 2 3\\n2\") == \"2\"\nassert solution(\"3\\n4\\n1 3 2\\n2\") == \"1\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4\\n\"\n    \"4\\n\"\n    \"2 10 1 20\\n\"\n    \"2\\n\"\n    \"3 6\\n\"\n    \"5\\n\"\n    \"2 3 4 99 100\\n\"\n    \"1\\n\"\n    \"42\\n\"\n    ) == \"2\\n\"\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100''') == '1'\nassert solution('''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'NO'\nassert solution('''\n2 3 4\n2 1 2 1\n1 2 1 3\n3 1 3 2\n''') == 'YES'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\"\nassert solution('''\n1 3 5 8\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\"\nassert solution('''\n1 3 5 8\n1 2 3 6\n5 2 6 27\n3 3 5 7\n''') == \"NO\"\nassert solution('''\n2 3 5 8\n1 2 3 6\n5 2 6 27\n3 3 5 7\n''') == \"NO\"\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"2 2 4 1\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6') == 'YES'\nassert solution('3 3 5 18\\n3 3 5 18') == 'YES'\nassert solution('5 2 6 27\\n3 3 5 18') == 'YES'\nassert solution('1 2 3 4\\n1 2 3 6') == 'NO'\nassert solution('3 3 5 18\\n3 3 5 18') == 'NO'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\n\n\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n1 2 5 9\n5 1 2 5\n3 3 5 18\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1 3\n1 2\n5 2\n4 3''') == 'YES'\nassert solution('''2 1\n5 2\n1 3\n1 2''') == 'NO'\nassert solution('''2 4 2\n1 2\n4 2\n2 4''') == 'YES'\nassert solution('''2 4 4\n1 2\n3 3\n2 3''') == 'YES'\nassert solution('''2 5 2\n1 2\n5 2\n2 5''') == 'NO'\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == 'YES'\nassert solution('5 2 3') == 'NO'\nassert solution('5 2 3') == 'YES'\nassert solution('3 2 1') == 'YES'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n4 3 1 5 3\n''') == 'YES'\nassert solution('''\n5\n4 3 2 1 0\n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"4 3 1 5 3\") == \"YES\"\nassert solution(\"3 4 1 2\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 49
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 1 2 1\n''') == 'YES'\nassert solution('''\n1\n1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"4 3 1 5 3\") == \"YES\"\nassert solution(\"1 1 2 1 2\") == \"NO\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5 6 7\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"7 4 3 2 1 5 3\") == \"YES\"\nassert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"7 0 3 2 1 5 3\") == \"YES\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n3\n4\n5 4 3 1 \n''') == 'YES\\n2\\n3 7\\n5\\n7 4 3 2 1'\nassert solution('''7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n3\n4\n5 4 3 1 \n''') == 'YES\\n0\\n3\\n4\\n5 4 3 1'\nassert solution('''7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n3\n4\n5 4 3 1 \n''') == 'YES\\n0\\n3\\n4\\n5 4 3 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    1 2 1\n    2 1 1\n    3 0 0\n    '''\n) == '18'\nassert solution(\n    '''\n    5 2\n    6 0 0\n    9 0 0\n    1 0 1\n    2 1 1\n    5 1 0\n    '''\n) == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('5 5\\n4 1 1\\n4 1 1\\n4 1 1\\n2 1 1\\n4 1 1\\n') == '18'\n",
        "num_ids_2": 89,
        "num_ids_4": 166
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2 1 0\") == \"4\"\nassert solution(\"4 0 1\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n\") == \"8\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"-1\"\n",
        "num_ids_2": 91,
        "num_ids_4": 129
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '-1'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '-1'\n",
        "num_ids_2": 91,
        "num_ids_4": 167
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '8'\nassert solution('5 3') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\n\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"2\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"6\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"-1\"\nassert solution(\"4\\n5 1\\n1 6\\n4 2\") == \"7\"\nassert solution(\"4\\n5 1\\n1 6\\n4 2\") == \"7\"\n",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '6'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '7'\nassert solution('5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '-1'\n",
        "num_ids_2": 64,
        "num_ids_4": 97
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n10 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n10 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n6 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"\nassert solution(\"5\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\") == \"6\"\nassert solution(\"2\\n5 1\\n1 6\\n3 5\\n5 2 5\") == \"-1\"",
        "num_ids_2": 62,
        "num_ids_4": 89
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n2\n6\n4\n2\n1\n3\n5\n2\n5\n''') == '6'\nassert solution('''\n5\n1\n6\n4\n2\n3\n5\n2\n5\n''') == '-1'\nassert solution('''\n5\n1\n6\n4\n2\n3\n5\n2\n5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\nassert solution('''\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 8 15 16 23') == '5'\nassert solution('12') == '0'\nassert solution('15') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 8 15 16 23\n''') == '5'\nassert solution('''\n12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution(stdin=\"3\") == \"3\"\nassert solution(stdin=\"5\") == \"5\"\nassert solution(stdin=\"15\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('15') == '0'\nassert solution('6') == '1'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 8 15 16 23\") == \"5\"\nassert solution(\"4 8 4 8 15 16 8 16 23 15 16 42 23 42\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('15') == '0'\nassert solution('4 8 4 8 15 16 8 16 23 15 16 4 42 23 42') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '0'\nassert solution('15') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"13 42\") == \"92\"\nassert solution(\"18 4\") == \"87654322\"\nassert solution(\"1337 420\") == \"9150\"\nassert solution(\"123456789 1000000000\") == \"100500\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 5\") == \"0\"\nassert solution(\"1\\n10 7\") == \"2\"\nassert solution(\"1\\n5 5\") == \"3\"\nassert solution(\"2\\n10 6\") == \"2\"\nassert solution(\"1\\n100 5\") == \"92\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n5\n10 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '1'\nassert solution('''\n6\n12 30\n23 84\n7 44\n743 823\n784 987\n1234 837\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\nassert solution(\"1\\n10 10\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"9 999 999 999 999\") == \"7\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"13 42\") == \"92\"\nassert solution(\"18 4\") == \"87654322\"\nassert solution(\"1337 420\") == \"9150\"\nassert solution(\"100500 9000\") == \"92\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n1\n2\n5\n7\n\"\"\") == \"0\"\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n5 5\n''') == '0'\nassert solution('''\n6 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n4 6\n14 55\n16 13\n1319 7\n123 8\n239845 6\n''') == '6'\nassert solution('''\n1 2\n2 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5 5\\n13 42') == '0'\nassert solution('2\\n5 5\\n13 42') == '3'\nassert solution('3\\n5 5\\n13 42') == '2'\nassert solution('4\\n5 5\\n13 42') == '92'\nassert solution('5\\n5 5\\n13 42') == '87654322'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"0\"\nassert solution(\"13 42\") == \"3\"\nassert solution(\"18 4\") == \"2\"\nassert solution(\"1337 420\") == \"92\"\nassert solution(\"123456789 1000000000\") == \"9150\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339'\nassert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '0'\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12339\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n4\n10 5 15\n5 0 4\n2 5 12\n6 7 7\n126789\n1 1000000000\n15 45679\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 5 12345\n5 0 4\n10 5 15\n''') == '12339'\nassert solution('''\n1\n2 2 2\n''') == '0'\nassert solution('''\n1\n3 2 2\n''') == '0'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n3\n0 5\n10 8\n12\n''') == '12'\nprint('all tests passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0 999999999') == '0'\nassert solution('5 0 4') == '1'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '999999995'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"185\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"12339\"\nassert solution(\"7 5 12345\") == \"7\"\nassert solution(\"5 0 4\") == \"5\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"12339\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nprint(solution(''))\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\nassert solution(sys.stdin.read()) == \"8\"\nassert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"4\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"5 2\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\") == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '12345', \"Error\"\nassert solution('1 2 3 4 5') == '12345', \"Error\"\nassert solution('1 2 3 4 5') == '12345', \"Error\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"13\"\nassert solution(\"1 2 1\") == \"123\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1 1\\nABC') == 'aBC', \"Wrong answer\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\nAABC\") == \"abcd\"\nassert solution(\"5 2\\nAABC\") == \"acbd\"\nassert solution(\"5 3\\nAABC\") == \"abcd\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'aBC'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\nABC''') == 'ABC'\nassert solution('''2\nABCD''') == 'ABCD'\nassert solution('''3\nABCD''') == 'ABCD'\nassert solution('''4\nABCD''') == 'ABCD'\nassert solution('''5\nABCD''') == 'ABCD'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'abc'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 1\") == \"abcd\"\nassert solution(\"2 5 2\") == \"bb\"\nassert solution(\"2 5 3\") == \"bb\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"aBc\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3 4 6 1 5 2'\nassert solution('10') == '7 8 9 10 1 2 3 4 5 6 7 8 9'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('15') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'\n",
        "num_ids_2": 26,
        "num_ids_4": 69
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"3\"\nassert solution(\"8\") == \"3\"\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '1\\n3\\n4\\n6\\n5\\n2'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"3 4 6 1 5 2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '4'\nassert solution(input()) == '6'\nassert solution(input()) == '1'\nassert solution(input()) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"6\"\nassert solution(\"8\") == \"7\"\nassert solution(\"9\") == \"8\"\nassert solution(\"10\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nkhabarovsk 20\nmoscow 10''') == '3,1,4'\nassert solution('''4\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60''') == '3,1,4,5,2,6'\nassert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40''') == '3,1,4,5,2,6,7,8'\nassert solution('''8\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nkazan 50\nkazan 35''') == '3,1,4,5,2,6,7,8,9'\nassert solution('''10\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\nkazan 50\nkazan 35''') == '3,1,4,5,2,6,7,8,9,10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3\\n4\\n6\\n1\\n5\\n2'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 3') == 'No'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 500') == 'Yes'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('1 2') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('5 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 900\") == \"Yes\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 901\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('10') == 'No'\nassert solution('20') == 'Yes'\n\n---",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"1 0\") == \"No\"\nassert solution(\"3 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes', '\ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc5d0 \ub300\ud55c \uc815\ub2f5\uc774 \uc5c6\uc2b5\ub2c8\ub2e4.'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('4 10') == '0.142857142857'\nassert solution('8 10') == '0.142857142857'\nassert solution('1 100') == '0.714285714286'",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '0.145833333333'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nprint(solution(input()))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"0.145833333333\"\nassert solution(\"1 5\") == \"0.145833333333\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10\\n') == '0.145833333333'\nassert solution('10 3\\n') == '0.145833333333'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 10\n''') == '0.1458333333'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10') == '0.145833333333'\nprint('solution() done!')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SAT') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '1'\nassert solution('SUN') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"1\"\nassert solution(\"SUN\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('SAT') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SUN') == '1'\nassert solution('SAT') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '3'\nassert solution('THU') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 20\") == \"30\"\nassert solution(\"2 10 20\") == \"50\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '30 50 90 170 330 650 1290 2570 5130 10250'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 10 20''') == '30 50 90 170 330 650 1290 2570 5130 10250'''\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\nprint(solution(input()))\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('1 2 3') == '1\\n2\\n3\\n'",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '''30\n50\n90\n170\n330\n650\n1290\n2570\n5130\n10250'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3 1 4\") == \"5\"\nassert solution(\"3\\n2 3 2 1\") == \"4\"\nassert solution(\"3\\n4 1 2\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n2\n2\n3\n2\n3\n''') == '6'\nassert solution('''5\n3\n1\n2\n3\n2\n3\n''') == '5'\nassert solution('''6\n4\n1\n2\n3\n2\n3\n''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5\\n', solution('5\\n1 3 1 1 4\\n')\nassert solution('3\\n4 1 2\\n') == '4\\n', solution('3\\n4 1 2\\n')\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 1 1 4''') == '5'\nassert solution('''5\n1 3 2 1 4''') == '4'\nassert solution('''3\n4 1 2''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''\n3\n4 1 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('4') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n3\n4 1 2\n''') == '4'\nassert solution('''\n4\n2 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n3 2 1\\nYES\"\n\nassert solution('''\n4 1 4\n5 6 8\n4 3 9\n10 10 10\n1 1000000000 1000000000\n''') == \"YES\\n4 1 4\\nYES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 3\n100 100 100''') == 'YES\\n3 2 1'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES\\n3 2 1'\nassert solution('''2\n100 100 100\n100 100 100''') == 'NO'\nassert solution('''2\n100 100 100\n100 100 100''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2 3\n100 100 100''') == 'NO'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n\nfor line in stdin.splitlines():\n    x = int(line.split()[0])\n    y = int(line.split()[1])\n    z = int(line.split()[2])\n    if x > z and y > z and x > y:\n        print('YES')\n        a = x\n        b = y\n        c = z\n    elif x > z and y > z:\n        print('YES')\n        a = x\n        b = z\n        c = y\n    elif y > z and x > z and y > x:\n        print('YES')\n        a = y\n        b = z\n        c = x\n    elif y > z and x > z:\n        print('YES')\n        a = y\n        b = x\n        c = z\n    elif x > z and y > z:\n        print('YES')\n        a = x\n        b = z\n        c = y\n    elif x > y and y > z and x > z:\n        print('YES')\n        a = z\n        b = x\n        c = y\n    else:\n        print('NO')\n        a = b = c = -1\n    print(a, b, c)",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3 2 3\n100 100 100''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES'\nassert solution('''1\n1 1 1''') == 'NO'\nassert solution('''1\n1 1 1''') == 'YES'\nassert solution('''3\n1 1 1''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 3\n100 100 100''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'NO'\nassert solution('''5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == 'YES'",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n100 100 100\\n50 49 49\") == \"YES\"\nassert solution(\"1\\n100 100 100\\n10 30 20\\n1 1000000000 1000000000\") == \"YES\"\nassert solution(\"1\\n100 100 100\\n1 1000000000 1000000000\\n1 1000000000 1000000000\") == \"NO\"",
        "num_ids_2": 47,
        "num_ids_4": 76
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000') == 'YES\\n3 2 1\\nYES'\nassert solution('1\\n1\\n1\\n') == 'NO'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '1'\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '5'\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1''') == '5'\nassert solution('''5 3 3\n1 2 3 1 1''') == '5'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2 3\n5 2 1 4 2\n''') == '4'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '5'\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_1) == '4'\nassert solution(example_input_2) == '5'\nassert solution(example_input_3) == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '5'\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '4'\nassert solution('''\n5 3 5\n1 2 3 1 2\n''') == '2'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\nabacaba\na b\n\n5 3\nabacaba\na b\n\n5 3\nabacaba\na b\n\n5 3\nabacaba\na b\n''') == '12'\nprint('all test cases passed')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '12'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\\n\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\f a d\\n\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\b\\n\") == \"0\"\nassert solution(\"7 1\\naaaaaaa\\b\\n\") == \"0\"\n",
        "num_ids_2": 45,
        "num_ids_4": 83
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == '12'\nassert solution(s1) == '21'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\nabacaba\\nf a d\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaaaa\\nb\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 61
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2\\nabacaba\\na b\\n') == '12'\n\nassert solution('10 3\\nsadfaasdda\\f a d\\n') == '21'\n\nassert solution('7 1\\naaaaaa\\nb\\n') == '0'\n\n\n\"\"\"\n\n\nimport math\n",
        "num_ids_2": 45,
        "num_ids_4": 64
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\nf a d\") == \"21\"\nassert solution(\"7 1\\naaaaa\\nb\") == \"0\"",
        "num_ids_2": 42,
        "num_ids_4": 58
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '7 2\\n'\n    'abacaba\\na b'\n    ) == '12'\nassert solution(\n    '10 3\\n'\n   'sadfaasdda\\n'\n    'f a d'\n    ) == '21'\nassert solution(\n    '7 1\\n'\n    'aaaaaaa\\nb'\n    ) == '0'\nprint('Tests passed')\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('''\n3\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('''\n3\n2\n1 2 -1 -2\n-1\n-2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('''\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n1\n-1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'\n\nassert solution('''\n3\n2\n1 2 -1 -2\n-1\n-2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1\\n6\\n-2999999997'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n5\\n1 2 3 -1 -2') == '2'\nassert solution('4\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '6'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '-2999999997'\n",
        "num_ids_2": 52,
        "num_ids_4": 83
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2', 'test #1 failed'\nassert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6', 'test #2 failed'\nprint('all tests passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n3\n-1 -2 -3\n5\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''3\n1 2 3\n3\n-1 -2 -3\n5\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''3\n1 2 3\n3\n-1 -2 -3\n5\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-1'\nassert solution('''4\n-1\n-2\n-3\n4\n''') == '-1'\nassert solution('''4\n-1\n-2\n-3\n4\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 -1 -2\") == \"2\"\nassert solution(\"10\\n1 -1000000000 1 -1000000000 1 -1000000000\") == \"-2999999997\"\nassert solution(\"3\\n-1 -2 -3\") == \"2\"\nassert solution(\"4\\n-1 -2 -3\") == \"6\"\nassert solution(\"4\\n-1 -2 -3\") == \"6\"\n",
        "num_ids_2": 49,
        "num_ids_4": 85
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n-1 -2 -3\n3\n1 -1 -2\n6\n-1\n-2\n''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n\nassert solution('''5\n4\n-1 -2 -3\n-4 -5\n-6\n''') == '-2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''4\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n1 2 3 -1 -2''') == '2'\nassert solution('''4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '6'\nassert solution('''4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2999999997'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"4 1\\n1 2\\n1 3\"\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\"\nassert solution(\"8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\"\nassert solution(\"15 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n5 2\\n4 6\\n5 6\\n6 7\\n6 8\\n7 9\\n7 10\\n8 9\\n8 10\\n9 10\\n10 11\\n9 11\\n11 5\\n\") == \"11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 1\"\n\n\"\"\"",
        "num_ids_2": 92,
        "num_ids_4": 304
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1\\n1 2\\n1 3'",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4\\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n', 'First example'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1\\n1 2\\n1 3\\n', 'Second example'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n', 'Third example'\n\n'''",
        "num_ids_2": 104,
        "num_ids_4": 188
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2'\n\nassert solution('''\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '4 1'\n\nassert solution('''\n8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4 1'\n\nassert solution('''\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n1000000000000\n''') == '40'\n\nassert solution('''1\n1\n1000000000000\n''') == '0'\n\nassert solution('''2\n3\n3\n''') == '40'\n\nassert solution('''3\n5\n40\n41\n42\n43\n''') == '41664916690999888'\n\nassert solution('''4\n5\n50\n51\n53\n55\n''') == '41664916690999888'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n499993') == '0'\n\nstdin = '3\\n1\\n5\\n499993'\nprint(solution(stdin))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '40'\nassert solution('2') == '41664916690999888'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n5\n499993\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\n5\n499993\n''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n5\n499993\n\"\"\") == \"40\"\nassert solution(\"\"\"\n2\n5\n6\n\"\"\") == \"40\"\nassert solution(\"\"\"\n3\n5\n10\n\"\"\") == \"40\"\nassert solution(\"\"\"\n4\n5\n11\n\"\"\") == \"41\"\nassert solution(\"\"\"\n5\n5\n10\n\"\"\") == \"40\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n3\n''') == '0'\nassert solution('''\n1\n4\n16\n''') == '40'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n499993\") == \"40\"\n\nassert solution(\"3\\n4\\n4\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"40\"\nassert solution(\"6\") == \"41664931668999864\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '40'\nassert solution('3') == '41664916690999888'",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\\n\") == \"1 1 1 2 -1 1 1 3 1 1\"\nprint(solution(input()))\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('10\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('20\\n16 5 9 15 14 10 9 8 10 9 6 6') == '4 4 2 2 -1 4 4 4 4 4'",
        "num_ids_2": 64,
        "num_ids_4": 98
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '2 1 -1 2 1 3 1 1'\nassert solution('''\n4\n1 2 3 4\n''') == '1 1 2 2 3 1 1 1 2 2 3 1 1 2 2 3 2 2 3 1 1 2 2 3 1 1 1 1 1 1 1 2 3 1 2 3 1 1 2 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"1 1 1 2 -1 1 1 3 1 1\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1 1 2 3 4 5'\nassert solution('5\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1 1 1 2 -1\"\nassert solution(\"4\") == \"1 1 1 2 -1\"\nassert solution(\"6\") == \"1 1 1 2 -1\"\nassert solution(\"4 3 2\") == \"1 1 1 2 -1\"\nassert solution(\"4 3 1\") == \"1 1 1 2 1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == '1 1 1'\nassert solution(\"4\") == '1 1 1 2 1'\nassert solution(\"5\") == '1 1 1 2 1 3'\nassert solution(\"6\") == '1 1 1 2 1 3 1'\nassert solution(\"7\") == '1 1 1 2 1 3 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 2 2 3 3 1 1 -1 2 2 3 3 4 1 1 3 -1 2 3 2 -1 2 2 4 4 2 2 3 2 1 1 4 3 4 1 1 4 1 1 2 3 4 1 1 3 1 2 2 4 4 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1 1 4 3 2 2 2 3 2 1",
        "num_ids_2": 1620,
        "num_ids_4": 1620
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"32\") == \"YES\"\nassert solution(\"97\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"12345\") == \"YES\"\n\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\" * 2 + \"NO\" * 2 + \"YES\" * 2 + \"YES\" * 2 + \"YES\" * 2 + \"YES\" * 2 + \"YES\" * 2\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\n\nassert solution('''\n3\n14\n44\n10\n''') == 'NO'\n\nassert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\n\nassert solution('''\n3\n14\n44\n10\n''') == 'NO'\n\nassert solution('''\n1\n5\n1\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n64\n32\n97\n2\n12345''') == \"YES\"\nassert solution('''5\n64\n32\n97\n2\n12345''') == \"NO\"\nassert solution('''5\n64\n32\n97\n2\n1235''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"64\") == \"YES\"\nassert solution(\"32\") == \"YES\"\nassert solution(\"97\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'NO'\nassert solution('5') == 'YES'\nassert solution('4') == 'YES'\nassert solution('12345') == 'YES'\nassert solution('12') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\\\n2\n3\n4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n5\n5\n6\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\\\n5\n8\n8\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\\\n7\n256\n256\n256\n256\n256\n256\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\\\n40\n7\n7\n7\n7\n7\n7\n\"\"\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\nassert solution('''\n5\n32\n64\n2\n12345\n''') == 'YES'\nassert solution('''\n5\n32\n32\n2\n12345\n''') == 'NO'\nassert solution('''\n5\n32\n64\n2\n12345\n''') == 'YES'\nassert solution('''\n5\n32\n32\n2\n12345\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"abba\"\nassert solution(\"4\") == \"abba\"\nassert solution(\"6\") == \"ababab\"\nassert solution(\"1\") == \"ba\"\nassert solution(\"2\") == \"ababab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"aba\"\nassert solution(\"4\") == \"abba\"\nassert solution(\"5\") == \"abba\"\nassert solution(\"6\") == \"abbaa\"\nassert solution(\"7\") == \"abbaa\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == 'ba'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nbbbb\\n\") == \"abba\"\nassert solution(\"6\\nababab\\n\") == \"ba\"\nassert solution(\"2\\naa\\n\") == \"ba\"\nassert solution(\"3\\nbb\\n\") == \"bb\"\n",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'abba'\nassert solution('10') == 'ababab'\nassert solution('7') == 'ba'\nassert solution('10') == 'ba'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '0'\nassert solution('2') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nbbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ababab\"\nassert solution(\"2\\naa\") == \"ba\"\n",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nbbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ba\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"ababab\") == \"0\"\nassert solution(\"aa\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nabbbb') == 'abba'\nassert solution('6\\nababab') == 'ababab'\nassert solution('2\\naa') == 'ba'\nassert solution('2\\nbb') == 'ba'\n",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"15\"\nassert solution([5, 2, 1, 4, 3, 2, 3, 1, 4, 1]) == \"9\"\nassert solution([5, 2, 1, 4, 3, 2, 3, 1, 4, 1, 4, 2, 3]) == \"11\"\n\n'''\n\nfrom math import sqrt",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3') == '9'\nassert solution('8\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2') == '15'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n6\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == \"15\"\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"9\"\nassert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\") == \"15\"\n\n'''\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == '15'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '15'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"\nassert solution(\"10\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n4 3\\n1 1\\n4 4\\n5 2\\n0 2\\n\") == \"13\"\nassert solution(\"5\\n2 2\\n1 4\\n2 3\\n3 1\\n3 4\\n1 1\\n4 3\\n1 2\\n\") == \"15\"\n",
        "num_ids_2": 84,
        "num_ids_4": 128
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n1\\n3\") == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n1\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n') == '2'\nassert solution('2\\n3\\n') == '1'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '2'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n\na, b = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('6') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"4\") == \"3.0\"\nassert solution(\"20\") == \"6.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.8'\nassert solution('1') == '0.96'\nassert solution('5') == '1.142857142857'\nassert solution('6') == '1.454545454545'\nassert solution('10') == '1.1'\n",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1.000000000000'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.000000000000\"\nassert solution(\"1\") == \"0.999999999999\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1.0\"\nassert solution(\"1\") == \"1.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1.000000000000'\nassert solution('5') == '0.9999999999999'\nassert solution('10') == '1.000000000000'",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1.000000000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1.000000000000\"\nassert solution(\"5\") == \"1.000000000000\"\nassert solution(\"12\") == \"1.000000000000\"\nassert solution(\"15\") == \"1.000000000000\"\nassert solution(\"20\") == \"1.000000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n\n2\nA\nB''') == \"Hello World\"\nassert solution('''2\n\n1\n1\n1''') == \"2\"\nassert solution('''2\n\n2\n2\n2''') == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1+2'\nassert solution('2') == '3+4'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"5\"\n\"\"\"\nimport sys\nstdin = sys.stdin.readline",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '10'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Hello World\"\n\nassert solution(input()) == \"A+B\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Hello World'\nassert solution(input(2)) == '10 5'\nassert solution(input(1)) == '6'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Hello World'\n\n=====",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '9'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"4\\n4\") == \"4\"\nassert solution(\"9\\n9\") == \"9\"\nassert solution(\"4\\n3\") == \"3333\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2 1', 'Should return 2 1'\nassert solution('1 5') == '1 5', 'Should return 1 5'\nassert solution('1 10') == '1 10', 'Should return 1 10'\nassert solution('1 9') == '1 9', 'Should return 1 9'\nassert solution('8 3') == '3 8', 'Should return 3 8'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3333\"\nprint(solution(\"4 3\"))\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3333\"\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 3\") == \"123\"\nassert solution(\"1 2 3 4\") == \"1234\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 17,
        "num_ids_4": 43
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 3\"\n) == \"3333\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 2\n    3 2\n    ''') == '2'\n\nassert solution('''\n    1 2\n    3 4\n    ''') == '4'\n\nassert solution('''\n    1 2\n    4 3\n    ''') == '4'\n\nassert solution('''\n    1 2\n    3 4\n    ''') == '4'\n\nassert solution('''\n    1 2\n    3 4\n    ''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('4 3') == '3'\nassert solution('8 2') == '8'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('A') == 'B'\nassert solution('c') == 'd'\nassert solution('C') == 'D'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a\nb\nc''') == 'b'\nassert solution('''a\nc\nb''') == 'b'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'z'\nassert solution('z') == 'z'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('B') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"./sample_input.txt\") == \"b\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '', 'Input cannot be empty!'\nassert solution('a') == 'b', 'Input is not a string!'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"a\"\nassert solution(\"c\") == \"d\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Wrong answer, please check my solution\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oder atc') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('bob') == 'bob'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('abcdefgh') == 'abcdefgh'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oder\") == \"atcoder\"\nassert solution(\"atc\") == \"atcoder\"\nassert solution(\"attc\") == \"atcoder\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('oder atc') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"oder atc\"\n) == \"atcoder\"\nassert solution(\n    \"der atc\"\n) == \"atcder\"\nassert solution(\n    \"a t c o r e d\"\n) == \"atcozrd\"\nassert solution(\n    \"a c t e r e d\"\n) == \"atcezrd\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"oder\") == \"atcoder\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"aaab\") == \"aaaab\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\n\nassert solution('''\n5\n1 5 7 8 2\n''') == '0'\n\nassert solution('''\n4\n1 2 5 6\n''') == '0'\n\nassert solution('''\n5\n1 5 7 8 2\n''') == '0'\n\nassert solution('''\n6\n1000000 1000000\n''') == '1000000'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1000000\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nassert solution(\"5\\n1 5 7 8 2\") == \"0\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"1000000\"\n",
        "num_ids_2": 25,
        "num_ids_4": 44
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('1000000 1000000') == '1000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"0\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"1000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n1 5 7 8 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6\n5 1 2 4 6 3\n\"\"\") == \"1000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n1 5 7 8 2\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n6\n5 1 2 4 6 3\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n2\n1000000 1000000\n\"\"\"\n) == \"1000000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '0'\nassert solution('10') == '10'\nassert solution('25') == '0'\nassert solution('50') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('7 10 50 12 1 8') == '6'\nassert solution('1 1 100 99') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"",
        "num_ids_2": 37,
        "num_ids_4": 69
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4 2') == '7'\nassert solution('3 5 3 3') == '6'\nassert solution('5 5 5 5 5 5') == '1'\nassert solution('7 5 5 4 7 5 8 7 6') == '9'\nassert solution
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 2 1') == '6'\nassert solution('7 4 2 1') == '6'\nassert solution('10 5 10 7 10 5 10 10 10 10 10') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('7 1 1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('1 1 100 99') == '1'\n\nstdin = \"\"\"\n6 2 3 3\n7 10 50 12 1 8\n\"\"\"\n\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 1 2 3\") == \"0 1 2 3\"\n\nassert solution(\"2 2\\n1 2 1\") == \"0 0 1\"\n\nassert solution(\"4 2\\n0 2 0 6 10 12\") == \"3 2 0 7 10 14\"\n",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\n\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3') == '3'\nassert solution('4 2') == '0 1 2 3'\nassert solution('6 6') == '1'\nassert solution('10 10') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"0\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"10 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '3'\nassert solution('4 2') == '0 1 2 3'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"0 0\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"4 2\") == \"0 1 2 3\"\nprint(solution(input()))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution([3, 2, 0, 6, 10, 12]) == \"3 2 0 7 10 14\"\nassert solution([1, 2, 3, 4, 5]) == \"1 2 3 4 5\"\nassert solution([3, 1, 2]) == \"3 2 1\"\nassert solution([-1, 0, -2, -3, -4]) == \"-1 0 -2 -3 -4\"",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2 0 2 0\\n\"\n    \"2 4\"\n    ) == \"8\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'\nassert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\") == \"8\"\nassert solution(\"5 3\\n4 2\\n3 5\") == \"20\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 3\\n4 2\\n2 5\\n1 2\\n1 5\") == \"20\"\nassert solution(\"5 3\\n5 4\\n4 2\\n1 5\\n1 2\") == \"20\"",
        "num_ids_2": 69,
        "num_ids_4": 96
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '8'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n5 2\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n5 3\n4 2\n3 5\n4 2\n2 5\n\n\"\"\") == \"20\"\n\nassert solution(\"\"\"\n4 4\n1 2 3 1 2\n1 2 4 1 2\n1 3 3 1 2\n1 4 4 1 2\n\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n4 4\n2 2 2 1 1\n2 2 1 2 1\n1 1 1 1 2\n2 1 2 1 1\n\n\"\"\") == \"13\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input(\"\")) == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n1 1 10 10\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 1 1 1 1 1 1\") == \"NO\"\nassert solution(\"1\\n10000 10000 10000 10000\") == \"YES\"\n",
        "num_ids_2": 51,
        "num_ids_4": 90
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"YES\"\nassert solution(\"2\\n10 5 2 10 1 1 2 5\") == \"YES\"\nassert solution(\"2\\n1 1 1 1 1 1 1 1\") == \"NO\"\nassert solution(\"2\\n10000 10000 10000 10000\") == \"YES\"\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n\nassert solution('''\n1\n2\n2\n1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 15 18') == '3'\nassert solution('6 5 18') == '6'\nassert solution('6 5 7') == '5'\nassert solution('7 1 6') == '7'\nassert solution('6 5 3') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\n''') == '3'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n\n''') == '3'\nassert solution('''7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n\n''') == '9'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\nassert solution('7 15 18') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 3 4 2\\n\") == '3 1'\nassert solution(\"6\\n1 5 12 13 2 15\\n\") == '7 2'\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n\") == '7486 3'",
        "num_ids_2": 41,
        "num_ids_4": 71
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 1 3 4 2\"\n) == \"3 1\"\nassert solution(\n    \"6\"\n) == \"7486 3\"\nassert solution(\n    \"10\"\n) == \"7486 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 3 4 2\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\"\n",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '3 1'\n\ninput_ = input()\nn = int(input())\narray = list(map(int, input().split()))\n\nresult = 0\nmin_max = 10**9\nfor i in range(n):\n    if array[i] < min_max:\n        min_max = array[i]\n\nfor i in range(n):\n    if array[i]!= min_max:\n        result += min_max - array[i]\n\nprint(result, result // n)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n'\n    '1 1 3 4 2\\n'\n) == '3 1'\n\nassert solution(\n    '6\\n'\n    '1 5 12 13 2 15\\n'\n) == '7 2'\n\nassert solution(\n    '10\\n'\n    '1 2 5 129 185 581 1041 1909 1580 8150\\n'\n) == '7486 3'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 3 4 2\n''') == '3 1\n1 1 1 1 1 1 \n\nassert solution('''\n5\n1 1 3 4 2\n''') == '3 1\n1 1 1 1 1 1 \n\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3\n3 3 3 2 2 2 2 1 1 1 1 \n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution('''15\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n\n''') == '3 1'\n\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n''') == '7486 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 3 4 2') == '3 1'\nassert solution('6\\n1 5 12 13 2 15') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'\n",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000'\n\nassert solution('''\n5\n1000\n100\n100\n10\n''') == '1\\n1000\\n1\\n10\\n1\\n100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n7') == '1\\n2\\n3\\n4'\nassert solution('5\\n100') == '2\\n4\\n4\\n4\\n4'\nassert solution('5\\n987') == '1\\n2\\n3\\n4\\n4'\n",
        "num_ids_2": 47,
        "num_ids_4": 72
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n2\n10\n''') == '2'\nassert solution('''\n7\n9876\n10000\n10\n''') == '3'\nassert solution('''\n10\n''') == '1'\nassert solution('''\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n5009\n7\n9876\n10000\n10\n\"\"\") == \"\"\"\n2\n5000 9\n1\n7\n4\n800 70 6 9000 \n1\n10000 \n1\n10\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 6\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '4'\nassert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '4'\nassert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9\\n1\\n7\\n4\\n800 70 6 9000'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n2\n1000\n''') == '1'\nassert solution('''\n3\n1000\n1\n''') == '0'\nassert solution('''\n100\n''') == '1'\nassert solution('''\n500\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5009\n7\n9876\n10000\n10''') == '2'\nassert solution('''4\n4\n1\n3''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n    \"3\\n\"\n    \"2 3 1\\n\"\n    \"6\\n\"\n    \"4 6 2 1 5 3\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"4\\n\"\n    \"3 4 1 2\\n\"\n    \"5\\n\"\n    \"5 1 2 4 3\"\n) == \"1 1 1 1 1 1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\"\n\n\"4\\n3 4 1 2\") == \"3 3 3 2 1 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\") == \"2 2 2 2\"\n\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\") == \"3 3 3 2 1 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"2 2 2 2\"\n",
        "num_ids_2": 73,
        "num_ids_4": 180
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\".strip()\n\nassert solution(\"\"\"\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"\"\"1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n\"\"\".strip()\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3') == '3 3 3 2 1 3 1'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1 1\"\nassert solution(\"1\\n1\\n1\") == \"1 1 1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1 '\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '3 3 3 1 2 1 '\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1 1 1 1 1\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"3 3 3 2 1 3 3 3 1 2 2 1 2 2\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3') == '1 1 1 1 1 1'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1') == '3 3 3 1 3 2 2 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n') == '1 1 1 1 1 1'\n",
        "num_ids_2": 93,
        "num_ids_4": 142
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"1 1 1 1 1\"\nassert solution(\"5\") == \"3 3 3\"\nassert solution(\"4\") == \"2 2 2 2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2 2 2 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\n''') == '3 3 3 2 1 3 5 4 4 1 4'\nassert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\n''') == '1 3 3 2 1 3 5 4 4 1 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n2\\n1\"\nprint(solution())\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\n\nprint(solution('''4\n1 2 3 4\n2\n1 1\n3\n1 1\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\nassert solution('''3\n1 2 3\n4\n1 1 1\n''') == '2'\nassert solution('''2\n1 2\n3\n1 1 1\n''') == '1'\nassert solution('''1\n1\n2\n1 1 1\n''') == '2'\nassert solution('''4\n1 1 1 1\n2\n1 1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == \"2\"\nassert solution('2') == \"1\"\nassert solution('3') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3\\n2 3') == '3\\n3\\n3'\nassert solution('2\\n3\\n2') == '2\\n2\\n1'\nassert solution('4\\n4\\n3 2 1') == '4\\n3\\n2\\n1'",
        "num_ids_2": 45,
        "num_ids_4": 72
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n1 2 3\\n2\\n') == '3'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n3\\n1 2 3\\n4\\n') == '3'\nassert solution('2\\n2\\n2\\n') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n10 4 10 15\\n1 2\\n4 3') == '0 0 1 2'\nassert solution('2 1\\n10 4 10 15\\n4 6') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'\n\nstdin = '10 4'\nprint(solution(stdin))\nstdin = '5 4 1 5 4 3 7 1 2 5'\nprint(solution(stdin))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2!\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5!\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '0 0 1 2'\nassert solution('10 4') == '0 0 1 2'\nassert solution('4 6') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('2 3') == '2 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '0 0 1 2 3 4 5 6 7 8 9'\nassert solution('10 5') == '0 0 1 2 3 4 5 6 7 8 9 10'\nassert solution('10 6') == '0 0 1 2 3 4 5 6 7 8 9 10 11'\nassert solution('10 7') == '0 0 1 2 3 4 5 6 7 8 9 10 11 12'\n",
        "num_ids_2": 35,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 4\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'\n\n\n\"\"\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"2 2\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5 ",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 \n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"1 2 3\\n\"\n) == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"ab\"\nassert solution(\"1 3 2\") == \"ab\"\nassert solution(\"4 2 5 3\") == \"xwc\"\nassert solution(\"1 4 3 2\") == \"xwc\"\nassert solution(\"2 5 6 1\") == \"xwcb\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n1 2 3\n1 3 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n1 3 2\n1 2 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n1 2 3\n1 3 2\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    4 2\n    1 2 3\n    1 3 2\n    1 3 2\n    ''') == 'YES'\n''')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n1 3 2''') == \"YES\"\nassert solution('''1\n1 2\n1 3 2''') == \"NO\"\nassert solution('''1\n1 2\n1 3 3''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n\"\"\"\n\nfrom itertools import permutations\nn,k = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"2 2\", \"2 3\", \"1 3 2\") == \"NO\"\nassert solution(\"2 2\", \"1 3 2\") == \"YES\"\nassert solution(\"2 2\", \"1 3 2\", \"3 2 1\") == \"YES\"\nassert solution(\"3 2\", \"2 3 1\") == \"YES\"\n",
        "num_ids_2": 31,
        "num_ids_4": 68
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\n\n\"\"\"\n\n\nn = int(input())\na = input().split()\na = [int(i) for i in a]\nb = [i for i in range(1, n + 1)]\na = sorted(a)\nprint(sum([sum(a[:i]) * (sum(a[i:])) for i in range(1, n + 1)]))\n\nprint(' '.join(map(str, sorted(a))))\n",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n20 10 20\n\"\"\") == \"\"\"43\"\"\"\nassert solution(\"\"\"\n4\n10 10 10 10\n\"\"\") == \"\"\"64\"\"\"\nassert solution(\"\"\"\n6\n5 4 5 4 4 5\n\"\"\") == \"\"\"69\"\"\"\nassert solution(\"\"\"\n2\n1 4\n\"\"\") == \"\"\"3\"\"\"\nassert solution(\"\"\"\n1\n1 4\n\"\"\") == \"\"\"2\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"43\"\nassert solution(\"4\") == \"64\"\nassert solution(\"6\") == \"69\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'\nassert solution('2') == '3'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '64'\nassert solution('3') == '69'\nassert solution('4') == '74'\nassert solution('6') == '73'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n20 10 20\\n') == '43\\n1 3 2 \nassert solution('4\\n10 10 10 10 10\\n') == '69\\n6 1 3 5 2 4 \nassert solution('6\\n5 4 5 4 4 5\\n') == '69\\n6 1 3 5 2 4 ",
        "num_ids_2": 49,
        "num_ids_4": 77
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\n\nassert solution('''4\n10 10 10 10\n''') == '64'\n\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\n\nassert solution('''2\n1 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 10 20 10 20\"\n    ) == \"43\"\n\nassert solution(\n    \"4 10 10 10 10\"\n    ) == \"64\"\n\nassert solution(\n    \"6 5 4 5 4 5\"\n    ) == \"69\"\n\nassert solution(\n    \"2\"\n    ) == \"3\"\n\nassert solution(\n    \"1 4\"\n    ) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('5 3 4 2 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 2 4 1') == '2'\nassert solution('5\\n1 3 2 4 5') == '5'\nassert solution('6\\n1 3 2 4 5 6') == '3'\nassert solution('5\\n1 3 2 4 5 6') == '6'",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5, 4, 2, 1, 3]) == \"3\"\nassert solution([3, 2, 1]) == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n5 1 4\\n\") == \"3\"\nassert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"3\\n5 1 4 2\\n\") == \"1\"\nassert solution(\"2\\n1 2\\n\") == \"1\"\nassert solution(\"2\\n3\\n2 1\\n\") == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('20') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '3'\nassert solution('15') == '4'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 3\\n') == '1'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 2, 4, 1, 4, 2, 4]) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3 3 3 3\n''') == '1'\nassert solution('''6\n1 5 4 2 3 5\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('5\\n3 3 3 3 5') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3\") == \"1\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"3\\n3\") == \"1\"\nassert solution(\"5\\n3 3 3 3 3\") == \"1\"\nassert solution(\"3\\n2 2 2\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4') == '1'\nassert solution('6\\n1 2 1 3 1 3') == '2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '1'\nassert solution('10') == '9'\nassert solution('30') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(x_1) == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n0 2 3 4 5\n\"\"\") == \"1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5') == '5'\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0 2 3 4 5\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1', 'Should be 1'\nassert solution('1 2 3 4 5') == '1', 'Should be 1'\n\ninput = stdin.read()\nprint(solution(input))",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('2 4 6 8 0') == '2'\nassert solution('3 4 7 0') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 2 3 4 5\n''') == '1'\nassert solution('''\n1 2 3 4 5\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nprint(solution(input()))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\n\n---",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"10 10\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '3'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5\\n') == '0'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 10') == '0'\nassert solution('3 2') == '4'\nassert solution('2 2') == '0'\nassert solution('3 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\n') == '0'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 5') == '0'\nassert solution('2 3 4') == '0'\nassert solution('3 3') == '-1'\nassert solution('3 4') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"Yes\"\nassert solution(\"3\\n1 2 3\\n\") == \"No\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n10\n100''') == 'Yes'\nassert solution('''3\n1\n10\n100''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\"\n\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 10 100\n''') == 'Yes'\nassert solution('''4\n2 3 4 5\n''') == 'No'\nassert solution('''7\n7 6 3 7\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 1, 10, 100]) == \"Yes\"\nassert solution([3, 1, 10, 100]) == \"Yes\"\nassert solution([3, 1, 10, 100]) == \"Yes\"\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 10 100\n\n''') == 'Yes'\nassert solution('''6\n1 2 3 4 5 6\n\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n\n'''\n\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 10 100') == 'Yes'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Yes\"\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''yx\naxy''') == 'Yes'\nassert solution('''abc\nacb''') == 'No'\n\n\"\"\"\nimport sys\nfrom collections import Counter\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''yx\naxy\n''') == 'Yes'\nassert solution('''atcoder\natlas\n''') == 'No'\nassert solution('''atcoder\natlas\n''') == 'Yes'\nassert solution('''atcoder\natlas\n''') == 'Yes'",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''xy\naxy''') == 'Yes'\nassert solution('''yx\naxy''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\nassert solution('xya') == 'Yes'\nassert solution('axyb') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 5 1') == 'NO'\nassert solution('1 5 1') == 'YES'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 5 1''') == 'YES'\nassert solution('''4 5 1''') == 'NO'\nassert solution('''8 5 1''') == 'NO'\nassert solution('''3 5 1''') == 'NO'\nassert solution('''10 5 1''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"5 10 7\") == \"YES\"\nassert solution(\"7 5 1\") == \"NO\"\nassert solution(\"7 10 7\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"15 9 3\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 1') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 5 2\") == \"NO\"\nassert solution(\"7 5 3\") == \"NO\"\nassert solution(\"7 5 4\") == \"YES\"\nassert solution(\"7 5 5\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 2') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 5 1''') == 'YES'\nassert solution('''7 5 1''') == 'NO'\nassert solution('''7 5 1''') == 'YES'\nassert solution('''7 5 1''') == 'NO'\nassert solution('''7 5 1''') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 10') == 'NO'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\n\"\"\"\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"5 3\") == \"5\"\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 4') == '1'\nassert solution('12 4') == '3'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4 4'\n) == '4'\n\nassert solution(\n    '2 2'\n) == '1'\n\nassert solution(\n    '2 2'\n) == '1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n') == '1', 'Test 1 Failed'\nassert solution('1 2\\n') == '1', 'Test 2 Failed'\nassert solution('1 1\\n') == '1', 'Test 3 Failed'\nassert solution('3 4\\n') == '9', 'Test 4 Failed'\nassert solution('4 4\\n') == '27', 'Test 5 Failed'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '9'\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"3 3\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"7 4 1\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"10 20 2\") == \"1\"\nassert solution(\"30 50 2\") == \"1\"\nassert solution(\"13 20 4\") == \"2\"\nassert solution(\"13 20 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n\"\"\"\nfrom collections import deque\n\nX, Y, Z = map(int, input().split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 2\n1 5 5''') == '3'\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 1') == '3'\nassert solution('10 10 10') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 12 4') == '2'\nassert solution('4 5 3') == '2'\nassert solution('3 2 4') == '2'\nassert solution('8 4 2') == '2'\nassert solution('8 3 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13 3 1') == '3'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '2'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\n'''\n\nN = int(input())\npoints = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    points.append((a, b))\n    \n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '1'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 2, 3, 1, 4, 2]) == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0\") == \"1\", 'Wrong answer'\nassert solution(\"3 1\") == \"0\", 'Wrong answer'\nassert solution(\"1 3\") == \"2\", 'Wrong answer'\nassert solution(\"4 2\") == \"0\", 'Wrong answer'\nassert solution(\"0 4\") == \"5\", 'Wrong answer'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nassert solution('5\\n5 5\\n4 5\\n3 3\\n0 1\\n5 2\\n5 3\\n2 3\\n3 2\\n5 4') == '1'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('5') == '0'\nassert solution('4') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '7'\nassert solution('2 4') == '7'\n\"\"\"\n\nfrom math import log2, ceil\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n0 1\\n') == '7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 2 1 3\\n\"\n    \"0 0 0\") == \"1\"\n\nassert solution(\n    \"2 3 1 4\\n\"\n    \"0 0 0\") == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"7\"\nassert solution(\"1000000 10\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"7\"\nassert solution(\"10 10\") == \"40\"\nassert solution(\"5 4\") == \"20\"\n\n'''\n\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"7\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 4\n0 3\"\"\") == \"7\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n2 3 1 4 5\\n\") == \"7\"\nassert solution(\"6 5\\n0 3 1 4 5 6\\n\") == \"11\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"7\"\nassert solution(\"2 4\") == \"7\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"4 4\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"8\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '1'\nassert solution('10') == '0'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == \"1\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '0'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'\n\n'''\nInput\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\nOutput\n1\n1\n2\n\nInput\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\nOutput\n0\n2\n1\n\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '1'\nassert solution('10') == '0'\nassert solution('11') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n\"\"\") == \"1\"\nassert solution(\n    \"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n\"\"\") == \"0\"\nprint(solution(\n    \"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n\"\"\") == \"2\")\nprint(solution(\n    \"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n\"\"\") == \"1\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\"\"\"\n) == \"0\"\n\nprint(solution(input()))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n20\n50\n5\n10\n5\n''') == \"4\", \"First\"\nassert solution('''\n100\n300\n300\n500\n500\n300\n''') == \"2\", \"Second\"\nassert solution('''\n100\n300\n300\n500\n500\n500\n''') == \"3\", \"Third\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4', 'Wrong answer in test 5!'\nassert solution('10') == '6', 'Wrong answer in test 6!'\nassert solution('25') == '6', 'Wrong answer in test 7!'\nassert solution('30') == '6', 'Wrong answer in test 8!'\nassert solution('14') == '6', 'Wrong answer in test 9!'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000') == '6'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4') == '4'\nassert solution('1\\n2') == '-1'\nassert solution('1\\n4') == '6'\nassert solution('1\\n3') == '6'\nassert solution('1\\n5') == '-1'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n7\n13\n25\n\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n1\n10\n\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n5\n0\n10\n20\n\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n3\n20\n10\n\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\"\"\") == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"4\"\nassert solution(\"25\") == \"6\"\nassert solution(\"30\") == \"6\"\nassert solution(\"14\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n2\n2\n10 2\n2\n3\n\n\"\"\") == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\nYES\\nNO\\nYES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == 'YES'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''1\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'YES'\nassert solution('''1\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'NO'\nassert solution('''2\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('11') == 'YES'\nassert solution('1') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"YES\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"NO\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"NO\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n1 1 3') == 'YES'\nassert solution('2\\n2 1 3 4\\n2 1 2 1\\n2\\n2\\n100') == 'YES'\nassert solution('2\\n2 1 2 3\\n2 1 2 1\\n2\\n2\\n100') == 'NO'\nassert solution('2\\n2 1 2 3\\n2 1 2 1\\n2\\n2\\n100') == 'NO'\nassert solution('3\\n1 1\\n3\\n1 1\\n2\\n1\\n4\\n1\\n5\\n1\\n3\\n1\\n2\\n1\\n') == 'YES'\n",
        "num_ids_2": 49,
        "num_ids_4": 111
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n0 2\n0 0\n''') == 'NO'\nassert solution('''2\n2\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''3\n3\n0 0 0\n0 0 0\n''') == 'YES'\nassert solution('''4\n3\n0 1 2\n0 0 0\n0 0 0\n''') == 'YES'\nassert solution('''4\n4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nabacaba\\nbacabaa\") == \"0\"\nassert solution(\"5\\nzcabd\\dbacz\\n\") == \"4\"\n\nsolution(\"4\\nabacaba\\nbacabaa\\n\")\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\nabacaba\nbacabaa\n''') == 4\nassert solution('''5\nzcabd\ndbacz\n''') == 0\nprint('You passed all the tests!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('2\\nzcabd\\dbacz\\n') == '0'\n\nstdin = \"\"\"5\nzcabd\ndbacz\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == 4\nassert solution('5\\nzcabd\\dbacz') == 0\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == 4\nassert solution('5\\nzcabd\\dbacz') == 0",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nabcde\\nbca') == '4'\nassert solution('5\\nabd\\nadbc') == '0'\nassert solution('7\\nzcabd\\ndbacz') == '0'\nassert solution('8\\nabab\\naaab') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\dbacz') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\nabacaba\nbacabaa\n''') == '4'\nassert solution('''5\nzcabd\ndbacz\n''') == '0'\nassert solution('''8\nacb\nbca\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n3 3\n1 1 2\n1 2 2\n1 3 2\n''') == '0'\nassert solution('''\n4 3\n1 1 1\n1 2 1\n1 3 1\n''') == '1'\nassert solution('''\n10 5\n1 1000000000\n1 1000000000 1\n1 1 1000000000\n1 1 1000000000\n1 1000000000 1\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n1 1 1000000000\n''') == '2999999997'\nassert solution('''\n6 1 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n100 1 4''') == '8'\nassert solution('''1 10 5\n1 1000000000\n1 1 999999999''') == '198'\nassert solution('''1 1 999999999\n1 1 999999999''') == '2999999997'\nassert solution('''1 1 999999999\n1 1 999999999''') == '0'\nassert solution('''5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''6\n100 4 3\n200 2 1\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''6\n1 2 3\n100 1 4\n1 1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\nassert solution('''6\n1 10 5\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''6\n10 2 3\n100 1 4\n1 1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"8\"\nassert solution(\"5 2 3\") == \"8\"\nassert solution(\"1 10 5\") == \"198\"\nassert solution(\"1 1 1000000000\") == \"2999999997\"\nassert solution(\"1 1 999999999\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"8\"\nassert solution() == \"198\"\nassert solution() == \"2999999997\"\n",
        "num_ids_2": 16,
        "num_ids_4": 27
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == \"8\"\nassert solution('100 1 4') == \"198\"\nassert solution('1 10 5') == \"2999999997\"\nassert solution('1 1000000000 1 6') == \"0\"\nassert solution('1 1 1000000000 1 6') == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"2999999997\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"0\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8\"\nassert solution(\"5 2 3\") == \"198\"\nassert solution(\"100 1 4\") == \"2999999997\"\nassert solution(\"1 10 5\") == \"0\"\nassert solution(\"1 1000000000\") == \"1000000000\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 1000000000 1 6') == '2999999997'\nassert solution('1 1 999999999') == '0'\nassert solution('1 1 999999999') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n6\n7\n15\n1000000000\n2000000000\n11000000000\n30000000000\n\"\"\"\n) == \"27\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('6\\n13') == '27'\nassert solution('3620\\n10000') == '19683'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n5\n20\n1''') == '2'\nassert solution('''2\n3\n5\n1''') == '3'\nassert solution('''6\n18\n27\n261380\n133854\n12394936\n82704\n24677\n914159\n160928736''') == '914159'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution('''\n20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('6\\n13') == '27'\nassert solution('3620\\n10000') == '1350851717672992089'\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == \"3\"\n\nprint(\"All tests passed!\")",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('19683') == '6561'\nassert solution('1000000000000000000') == '19683'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"1,3,9,13,27,6561,19683,1350851717672992089\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"27\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1', '1'\nassert solution('2') == '2', '2'\nassert solution('3') == '3', '3'\nassert solution('4') == '3', '4'\nassert solution('5') == '5', '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"177177\"\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == \"999999999000000000\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"55\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"10\"\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"70\"\nassert solution(\"2\") == \"77\"\nassert solution(\"3\") == \"177177\"\nassert solution(\"4\") == \"999999999000000000\"\nassert solution(\"5\") == \"999999999\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\\n77\\n177177\\n999999999000000000\\n999999999\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10 8 5 3\") == \"70\"\nassert solution(\"12 8 8 7 2\") == \"77\"\nassert solution(\"12343 43 4543 39 123212\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"999999999999999999\"\n",
        "num_ids_2": 28,
        "num_ids_4": 69
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '70'\nassert solution('10 10 8 5 3') == '77'\nassert solution('12 8 8 7 2') == '177177'\nassert solution('1000000000 1000000000 1 1 1') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1000000000') == '999999999'\n",
        "num_ids_2": 24,
        "num_ids_4": 60
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77777'\nassert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77777777777'\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999'\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '5555555555'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000000 1000000000 1 1 1000000000\n1000000",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    10 10 8 5 3\n    12 8 8 7 2\n    12343 43 4543 39 123212\n    1000000000 1000000000 1 1 1\n    1000000000 1000000000 1 1 1000000000\n    10 11 2 1 5\n    10 11 9 1 10\n''') == '77'\nassert solution('''\n    100\n    1 100\n    1 1 100\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    100\n    ",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"77\"\nassert solution(\"1000000000\") == \"999999999000000000\"\nassert solution(\"10\") == \"55\"\n",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"1\"\nassert solution(\"9 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n10 10') == '1'\nassert solution('2 4\\n7 4') == '2'\nassert solution('9 3\\n') == '1'\nassert solution('2 5\\n') == '2'\nassert solution('2 9\\n') == '1'\nprint('\"Run\" is good. Coding is good, but runs in O(T).')\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n7 3\n7 6\n5 4\n2 4\n2 2\n''') == '2'\nassert solution('''\n5\n8 8\n4 4\n9 9\n5 5\n6 6\n7 6\n8 7\n3 8\n''') == '1'\nassert solution('''\n5\n7 7\n8 8\n9 9\n2 4\n3 5\n4 6\n5 7\n6 7\n7 8\n6 9\n2 2\n''') == '3'\nassert solution('''\n5\n2 2\n5 5\n6 6\n7 7\n3 8\n2 4\n3 9\n9 8\n4 7\n5 5\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\nassert solution('9 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution([3, 4]) == '0'\nassert solution([1, 1]) == '1'\nassert solution([1, 10]) == '2'\nassert solution([1, 9]) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '6'\nassert solution('6\\n777') == '8'\nassert solution('4\\n22') == '4'\nassert solution('4\\n9999') == '9'\nassert solution('4\\n1') == '1'\n\nprint(solution(input()))\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n22\n9999\n1\n777\n''') == '13'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n22\\n9999\") == \"13\"\nassert solution(\"4\\n2\\n1111\\n11\\n11\") == \"4\"\nassert solution(\"5\\n2\\n2\\n2\\n2\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nt\n22\n9999\n1\n777\n''') == '13'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('22') == '13'\nassert solution('9999') == '90'\nassert solution('1') == '1'\nassert solution('777') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    22\n    9999\n    1\n    777\n    ''') == '13'\nassert solution('''\n    3\n    22\n    2222\n    ''') == '90'\nassert solution('''\n    4\n    22\n    22222\n    ''') == '66'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n11\\n1111\") == \"13\"\nassert solution(\"2\\n22\\n22\") == \"90\"\nassert solution(\"1\\n777\") == \"1\"\nassert solution(\"2\\n666\\n9999\") == \"66\"\nassert solution(\"1\\n1111\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n111\\n1234\\n11\\n') == '13'\nassert solution('3\\n777\\n1234\\n11\\n') == '10'\n\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '13'\nassert solution(input()) == '90'\nassert solution(input()) == '1'\nassert solution(input()) == '66'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'YES 2 6'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES 4 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES\\n2 6'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES\\n1 2'",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('4') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1\\n') == 'YES\\n2 6\\n1 2\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n2\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''\n1\n5\n1 1 1 1 1\n2\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''\n2\n1 1\n1\n1\n''') == 'YES'\nassert solution('''\n2\n1 1\n1\n1\n''') == 'NO'\nassert solution('''\n2\n1 1\n1\n1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n2 3 1 3 2\\n6\\n1 1 2 2 2 1') == 'YES\\n2 6\\n1 2'\nassert solution('4\\n2\\n2 2\\n2\\n5\\n2 2 2\\n2\\n2 2\\n5\\n2 2') == 'NO'\nassert solution('5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5') == 'YES'\n",
        "num_ids_2": 81,
        "num_ids_4": 118
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n[4,2,3]\n1\n''') == 5\nassert solution('''\n[3,-1,0,2]\n3\n''') == 6\nassert solution('''\n[2,-3,-1,5,-4]\n2\n''') == 13\nassert solution('''\n[2,-3,-1,5,-4]\n2\n''') == 6\nassert solution('''\n[2,-3,-1,5,-4]\n2\n''') == 6\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([2,-3,-1,5,-4]) == 13",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2 3\n1\n''') == 5\nassert solution('''\n4 2 3\n1 2 3 4\n''') == 6\nassert solution('''\n2 -3 -1 0 2\n1\n''') == 5\nassert solution('''\n2 -3 -1 0 2\n1 2 3 4\n''') == 6\nassert solution('''\n3 -1 0 2\n1\n''') == 5\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([1,-2,-3,-4,-5]) == 5\nassert solution([-1,-2,-3,-4,-5]) == 5\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5'\nassert solution('''\n3 -1 0 2\n3\n''') == '6'\nassert solution('''\n2 -3 -1 0 2\n3\n''') == '13'\nassert solution('''\n2 3 4 -1 -2\n-1\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n4,2,3\n1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n3,-1,0,2\n1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n2,-3,-1,5,-4\n2\n\"\"\") == \"13\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4,2,3') == 5\nassert solution(\n    '3,-1,0,2') == 6\nassert solution(\n    '2,-3,-1,5,-4') == 13\nassert solution(\n    '1,3,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([2,-3,-1,5,-4]) == 13\nassert solution([2,-3,-1,5,-4]) == 13\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4,2,3\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\n\n'''\nfrom collections import deque\n\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        '''\n        DFS\n        use neg to fix first, then check the sum of A, if all items are neg, return A\n        '''\n        def dfs(idx):\n            if idx == len(A):\n                nonlocal ret\n                ret = max(ret, sum(A))\n                return\n            \n            dfs(idx + 1)\n            A[idx] = -A[idx]\n            dfs(idx + 1)\n            A[idx] = -A[idx]\n        \n        ret = 0\n        dfs(0)\n        # print(A)\n        return ret\n\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        '''\n        BFS\n        use neg to fix first, then check the sum of A, if all items are neg, return A\n        '''\n        def bfs(A):\n            queue = deque([[i, -A[i]] for i in range(len(A))])\n            ret = 0\n            while queue:\n                i, neg_i = queue.popleft()\n                if neg_i < 0:\n                    queue.append([i, -A[i]])\n                    continue\n                ret += A[i]\n            return ret\n        \n        ret = bfs(A)\n        # print(A)\n        return ret\n\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        '''\n        BFS\n        use neg to fix first, then check the sum of A, if all items are neg, return A\n        '''\n        # count the number of negative numbers\n        neg_num = 0\n        for i in A:\n            if i < 0:\n                neg_num += 1\n        \n        # count the number of K\n        count = 0\n        for i in range(len(A)):\n            if A[i] < 0 and count < K:\n                count += 1\n        \n        ret = 0\n        \n        for i in range(len(A)):\n            if A[i] < 0:\n                if neg_num < count:\n                    A[i] = -A[i]\n                    neg_num += 1\n                else:\n                    return ret\n            else:\n                ret += A[i]\n        \n        return ret\n\nS = Solution()\nA = [4,2,3]\nK = 1\nprint(S.largestSumAfterKNegations(A, K))\nA = [3,-1,0,2]\nK = 3\nprint(S.largestSumAfterKNegations(A, K))\nA = [2,-3,-1,5,-4]\nK = 2\nprint(S.largestSumAfterKNegations(A, K))\nA = [4,2,3,1,0]\nK = 3\nprint(S.largestSumAfterKNegations(A, K))",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2,-3,-1,5,-4') == 13\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 3 1\") == \"true\"\nassert solution(\"3 3 -1 1\") == \"false\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 28,
        "num_ids_4": 1715
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == \"true\"\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == \"false\"\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == \"true\"\n",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"true\"\nassert solution(\"0\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"false\"\n",
        "num_ids_2": 19,
        "num_ids_4": 63
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n0 2 1 -6 6 -7 9 1 2 0 1\n\"\"\") == 'true'\nassert solution(\n\"\"\"\n0 2 1 -6 6 -7 9 1 2 0 1\n\"\"\") == 'false'\nassert solution(\n\"\"\"\n3 3 6 5 -2 2 5 1 -9 4\n\"\"\") == 'true'\nassert solution(\n\"\"\"\n3 3 6 5 -2 2 5 1 -9 4\n\"\"\") == 'false'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0,2,1,-6,6,-7,9,1,2,0,1') == \"true\"\nassert solution('0,2,1,-6,6,7,9,-1,2,0,1') == \"false\"\nassert solution('3,3,6,5,-2,2,5,1,-9,4') == \"true\"\nassert solution('1,2,1,-6,6,7,9,-1,2,0,1') == \"false\"\nassert solution('-3,-3,6,5,-2,2,5,1,-9,4') == \"true\"\n\"\"\"\n",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('[0,2,1,-6,6,-7,9,1,2,0,1]') == 'true'\nassert solution('[0,2,1,-6,6,7,9,-1,2,0,1]') == 'false'\nassert solution('[3,3,6,5,-2,2,5,1,-9,4]') == 'true'\n\n'''",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'false'\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == 'true'\n",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"\n",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beat and vet'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n'\n                'beat\\n'\n                ':\\n'\n                'bet\\n'\n                'beet\\n'\n                ':\\n'\n                'vet\\n'\n                ':\\n'\n                'beet\\n') == 'beet and vet'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beet and vet\"\nprint(solution(input()))\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beet and vet'\nassert solution('4\\nXIX\\n'*10) == 'XIX'*10\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beat, vet, beet'\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"bet\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == 'beet and vet'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\nassert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n",
        "num_ids_2": 72,
        "num_ids_4": 144
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'beat and vet are written on two sheets each, while beat, bed, and bet are written on one vote each.'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '12'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"4\") == \"8\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '5'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"8\"\n\n\"\"\"\n\nfrom math import sqrt",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n1 1\n''') == '1'\nassert solution('''\n3\n2 5 6\n''') == '7'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '75'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '6'\nassert solution('4') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8'\nassert solution('1') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '8'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '8'\nassert solution('5') == '8'\nassert solution('7') == '8'\nassert solution('1') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234\\n150\\n100\\n\") == \"84\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '84'\nassert solution('100') == '84'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\nassert solution('12') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"84\"\nassert solution(\"100\") == \"84\"\n\"\"\"\nx = int(input())\na = int(input())\nb = int(input())\ns = x - a - b\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234') == '84'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234\") == \"84\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"8\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n\n''') == '8'\nassert solution('''\n1\n2\n\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n''') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '8'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"8\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"10 20\") == \"1572\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"IMPOSSIBLE\"\nassert solution('''3 2\n1 2\n2 3\n''') == \"POSSIBLE\"\nassert solution('''3 3\n1 2\n2 3\n''') == \"IMPOSSIBLE\"\nassert solution('''10 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == \"POSSIBLE\"\n",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''\n5 4\n1 4\n3 2\n4 5\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n6 4\n1 5\n3 6\n4 5\n2 6\n2 3\n''') == 'POSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''\n1 1\n1 2\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n5 2\n1 3\n2 4\n3 5\n4 6\n5 7\n''') == 'POSSIBLE'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'IMPOSSIBLE'\nassert solution('3 2\\n1 2\\n2 3') == 'POSSIBLE'\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3') == 'POSSIBLE'\nassert solution('2\\n5 3') == 'POSSIBLE'\nassert solution('3\\n4 5') == 'IMPOSSIBLE'",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('5 5') == 'POSSIBLE'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'atcoder') == 'acdr'\nassert solution(\n    'a') == 'a'\nassert solution(\n    '') == ''\nassert solution(\n    'AA') == 'AA'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"acdr\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"acdr\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'cdefghijklmnopqrstuvwxyzab'\n\"\"\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"acdr\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"rng gorilla apple\") == \"YES\"\nassert solution(\n    \"rng apple gorilla\") == \"YES\"\nassert solution(\n    \"rng apple\") == \"NO\"\nassert solution(\n    \"rng\") == \"NO\"\nassert solution(\n    \"\") == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"apple gorilla banana rng\") == \"YES\"\nassert solution(\"rng banana apple\") == \"YES\"\nassert solution(\"banana banana apple\") == \"YES\"\nassert solution(\"banana apple banana banana\") == \"YES\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''rng gorilla apple''') == 'YES'\nassert solution('''rng ra gea''') == 'NO'\n'''",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"ABC\") == \"NO\"\n\"\"\"\n\nstring = input().split()\n\nfor i in range(len(string)):\n    string[i] = string[i].upper()\n\nfor i in range(len(string)-1):\n    if string[i] == string[i+1][::-1]:\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"apple apple\") == \"YES\"\nassert solution(\"apple\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"a b a c\") == \"YES\"\nassert solution(\"a b b b a\") == \"NO\"\nassert solution(\"b c b d b\") == \"NO\"\nassert solution(\"\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('rng') == 'YES'\nassert solution('apple') == 'YES'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"ahir ahir\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'LESS'\nassert solution('3') == 'EQUAL'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"GREATER\"\nassert solution(\"3\\n2\") == \"LESS\"\nassert solution(\"1\\n1\") == \"EQUAL\"\nassert solution(\"8\\n5\") == \"GREATER\"\nassert solution(\"1\\n1\") == \"EQUAL\"\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'LESS'\nassert solution('2') == 'GREATER'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"LESS\"\nassert solution(\"12\") == \"LESS\"\nassert solution(\"8\") == \"EQUAL\"\n\"\"\"\n\na, b = map(int, input().split())\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'LESS'\nassert solution('1,2') == 'GREATER'\nassert solution('2,1') == 'LESS'\nassert solution('2,12') == 'GREATER'\nassert solution('12,2') == 'LESS'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('1234') == 'EQUAL'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3\\n') == 'LESS'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4') == \"LESS\"\nassert solution('5\\n12') == \"GREATER\"\nassert solution('0\\n0') == \"EQUAL\"",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'LESS'\nassert solution('10') == 'GREATER'\nassert solution('1') == 'EQUAL'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('0') == 'EQUAL'\nassert solution('-1') == 'EQUAL'\nassert solution('-2') == 'LESS'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\napple\norange\napple\n1\ngrape\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\norange\\ngrape\\n1\\ngrape\\n\") == \"2\"\nprint(solution(\"3\\napple\\norange\\ngrape\\n1\\ngrape\\n\"))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n\nsolution(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'C'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"T\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"C\") == \"T\"\nassert solution(\"G\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"A\", \"C\", \"G\", \"T\"]) == \"T\"\nassert solution([\"A\", \"C\", \"G\"]) == \"T\"\nassert solution([\"A\", \"C\", \"G\", \"T\"]) == \"T\"\nassert solution([\"A\", \"G\", \"T\"]) == \"T\"\nassert solution([\"A\", \"C\", \"G\", \"T\"]) == \"T\"\n",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '14'\n\"\"\"\n\nfrom math import log\n\nn = int(input())\n\ncandy = {}\n\nfor i in range(1, n + 1):\n    candy[i] = list(map(int, input().split()))\n\nx1, y1 = 1, 1\nx2, y2 = n, n\n\nres = -2**31\n\nfor _ in range(4):\n    if x1 > x2:\n        break\n\n    tmp = []\n\n    for i in range(x1, x2 + 1):\n        for j in range(y1, y2 + 1):\n            if (i, j) not in candy:\n                continue\n            tmp.append(candy[(i, j)])\n\n    tmp = sorted(tmp)\n    res = max(res, log(tmp[-1] + tmp[-2] + tmp[-3], 2))\n\n    x1 = x2\n    x2 = x1 + x2 - 1\n\n    y1 = y2\n    y2 = y1 + y2 - 1\n\n\nprint(res)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1''') == '14'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n2 3 4 5 6''') == '17'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n2 3 4 5 6\n3 4 5 6 7''') == '17'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n\nassert solution('''\n5\n5 4 3 2 1\n1 2 2 2 1\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"1\\n1\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 2 2 4 1\n1 2 2 2 1''') == '14'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '14'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 3\n2 3 4''') == '9'\nassert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n\n-----Sample Input-----\n9\n4 1 1\n4 3 3\n4 2 1\n1 4 4\n4 3 2\n3 2 4\n3 4 1\n1 2 3\n\n-----Sample Output-----\n14''') == '18'\nassert solution('''6\n2 5 6\n3 5 2\n4 3 6\n2 1 5\n3 2 1\n1 4 2\n\n-----Sample Input-----\n8\n2 4 4\n4 4 3\n4 3 2\n3 4 2\n3 2 2\n2 4 1\n4 3 1\n4 1 1\n\n-----Sample Output-----\n16''') == '15'\nassert solution('''5\n1 2 1\n1 4 4\n3 1 4\n4 4 1\n2 4 4\n\n-----Sample Input-----\n8\n1 2 1\n1 3 4\n3 4 1\n4 1 2\n3 2 1\n2 4 4\n4 3 1\n3 2 1\n\n-----Sample Output-----\n13''') == '11'\nassert solution('''7\n5 1 2\n2 1 2\n3 1 1\n1 2 2\n2 2 1\n2 1 2\n\n-----Sample Input-----\n8\n3 1 3\n3 2 2\n2 4 1\n3 1 4\n4 1 1\n2 4 4\n4 2 4\n3 1 4\n\n-----Sample Output-----\n11''') == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 2 4 1\") == '14'\nassert solution(\"3\\n3 2 2 4 1\") == '14'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 2 2\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    3 2\n    2 2 2\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 2 2') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2 2 2\\n') == '1'\nassert solution('2 3\\n1 2 1\\n') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 2 3') == '4'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('3 2') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"6 6\\n2 2 3 2 4 2\") == \"3\"\nassert solution(\"1 1\\n0\") == \"2\"\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 49
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '2'\nassert solution('6 7') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"2 2 2\\n3 3 3\\n1 1 1\\n\") == \"Yes\"\nassert solution(\"1 1 1\\n2 1 2\\n1 0 1\\n\") == \"No\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 0 1\n2 1 2\n1 0 1\"\"\") == \"Yes\"\nassert solution(\"\"\"2 0 1\n1 1 2\n1 0 1\"\"\") == \"No\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1\n''') == 'Yes'\n\nassert solution('''3 1 0\n3 0 0\n2 0 1\n''') == 'No'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes'\nassert solution('''2 2 2\n1 1 2\n1 2 1''') == 'No'\nassert solution('''0 0 0\n1 1 1\n1 1 1''') == 'Yes'\n\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nWrite a function that takes an integer n as input, and returns a pair of integers (a, b), such that a * b = n, using the following constraints:\n\n1 \u2264 a \u2264 10^3\n1 \u2264 b \u2264 10^3\na + b = n\n\n-----Constraints-----\n - n is an integer between 1 and 10^3 (inclusive).\n\n-----Input-----\nInput is given from Standard Input in the following format:\nn\n\n-----Output-----\nPrint two integers, each between 1 and 10^3 inclusive, such that a * b = n. If there is no solution, print No.\n\n-----Sample Input-----\n3\n\n-----Sample Output-----\n2 6\n\n>>> import sys\n>>> sys.setrecursionlimit(10**6)\n>>> solution('''2 1\n1 2\n1 2''')\n'No'\n\n>>> solution('''1 0 1\n1 2 1\n1 2 1''')\n'Yes'\n\n>>> solution('''5 7\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n7 16\n7 17\n7 18\n7 19\n7 20\n7 21\n7 22\n7 23\n7 24\n7 25\n7 26\n7 27\n7 28\n7 29\n7 30\n7 31\n7 32\n7 33\n7 34\n7 35\n7 36\n7 37\n7 38\n7 39\n7 40\n7 41\n7 42\n7 43\n7 44\n7 45\n7 46\n7 47\n7 48\n7 49\n7 50\n7 51\n7 52\n7 53\n7 54\n7 55\n7 56\n7 57\n7 58\n7 59\n7 60\n7 61\n7 62\n7 63\n7 64\n7 65\n7 66\n7 67\n7 68\n7 69\n7 70\n7 71\n7 72\n7 73\n7 74\n7 75\n7 76\n7 77\n7 78\n7 79\n7 80\n7 81\n7 82\n7 83\n7 84\n7 85\n7 86\n7 87\n7 88\n7 89\n7 90\n7 91\n7 92\n7 93\n7 94\n7 95\n7 96\n7 97\n7 98\n7 99\n7 100\n7 101\n7 102\n7 103\n7 104\n7 105\n7 106\n7 107\n7 108\n7 109\n7 110\n7 111\n7 112\n7 113\n7 114\n7 115\n7 116\n7 117\n7 118\n7 119\n7 120\n7 121\n7 122\n7 123\n7 124\n7 125\n7 126\n7 127\n7 128\n7 129\n7 130\n7 131\n7 132\n7 133\n7 134\n7 135\n7 136\n7 137\n7 138\n7 139\n7 140\n7 141\n7 142\n7 143\n7 144\n7 145\n7 146\n7 147\n7 148\n7 149\n7 150\n7 151\n7 152\n7 153\n7 154\n7 155\n7 156\n7 157\n7 158\n7 159\n7 160\n7 161\n7 162\n7 163\n7 164\n7 165\n7 166\n7 167\n7 168\n7 169\n7 170\n7 171\n7 172\n7 173\n7 174\n7 175\n7 176\n7 177\n7 178\n7 179\n7 180\n7 181\n7 182\n7 183\n7 184\n7 185\n7 186\n7 187\n7 188\n7 189\n7 190\n7 191\n7 192\n7 193\n7 194\n7 195\n7 196\n7 197\n7 198\n7 199\n7 200\n7 201\n7 202\n7 203\n7 204\n7 205\n7 206\n7 207\n7 208\n7 209\n7 210\n7 211\n7 212\n7 213\n7 214\n7 215\n7 216\n7 217\n7 218\n7 219\n7 220\n7 221\n7 222\n7 223\n7 224\n7 225\n7 226\n7 227\n7 228\n7 229\n7 230\n7 231\n7 232\n7 233\n7 234\n7 235\n7 236\n7 237\n7 238\n7 239\n7 240\n7 241\n7 242\n7 243\n7 244\n7 245\n7 246\n7 247\n7 248\n7 249\n7 250\n7 251\n7 252\n7 253\n7 254\n7 255\n7 256\n7 257\n7 258\n7 259\n7 260\n7 261\n7 262\n7 263\n7 264\n7 265\n7 266\n7 267\n7 268\n7 269\n7 270\n7 271\n7 272\n7 273\n7 274\n7 275\n7 276\n7 277\n7 278\n7 279\n7 280\n7 281\n7 282\n7 283\n7 284\n7 285\n7 286\n7 287\n7 288\n7 289\n7 290\n7 291\n7 292\n7 293\n7 294\n7 295\n7 296\n7 297\n7 298\n7 299\n7 300\n7 301\n7 302\n7 303\n7 304\n7 305\n7 306\n7 307\n7 308\n7 309\n7 310\n7 311\n7 312\n7 313\n7 314\n7 315\n7 316\n7 317\n7 318\n7 319\n7 320\n7 321\n7 322\n7 323\n7 324\n7 325\n7 326\n7 327\n7 328\n7 329\n7 330\n7 331\n7 332\n7 333\n7 334\n7 335\n7 336\n7 337\n7 338\n7 339\n7 340\n7 341\n7 342\n7 343\n7 344\n7 345\n7 346\n7 347\n7 348\n7 349\n7 350\n7 351\n7 352\n7 353\n7 354\n7 355\n7 356\n7 357\n7 358\n7 359\n7 360\n7 361\n7 362\n7 363\n7 364\n7 365\n7 366\n7 367\n7 368\n7 369\n7 370\n7 371\n7 372\n7 373\n7 374\n7 375\n7 376\n7 377\n7 378\n7 379\n7 380\n7 381\n7 382\n7 383\n7 384\n7 385\n7 386\n7 387\n7 388\n7 389\n7 390\n7 391\n7 392\n7 393\n7 394\n7 395\n7 396\n7 397\n7 398\n7 399\n7 400\n7 401\n7 402\n7 403\n7 404\n7 405\n7 406\n7 407\n7 408\n7 409\n7 410\n7 411\n7 412\n7 413\n7 414\n7 415\n7 416\n7 417\n7 418\n7 419\n7 420\n7 421\n7 422\n7 423\n7 424\n7 425\n7 426\n7 427\n7 428\n7 429\n7 430\n7 431\n7 432\n7 433\n7 434\n7 435\n7 436\n7 437\n7 438\n7 439\n7 440\n7 441\n7 442\n7 443\n7 444\n7 445\n7 446\n7 447\n7 448\n7 449\n7 450\n7 451\n7 452\n7 453\n7 4",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n0 1 2\\n0 0 1\") == \"No\"\nassert solution(\"1 0 1\\n0 0 1\\n1 1 2\") == \"Yes\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0 1') == 'Yes'\nassert solution('2 1 2') == 'No'\nassert solution('1 0 1') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\") == \"Yes\", \"Wrong\"\nassert solution(\"2 1 2\") == \"Yes\", \"Wrong\"\nassert solution(\"1 0 1\") == \"Yes\", \"Wrong\"\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 'Yes'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 'No'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == 'Yes'\nassert solution('1 0 1\\n1 0 1\\n1 0 1') == 'Yes'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"Yes\"\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'ARC', \"1st\"\nassert solution('ABC') == 'ARC', \"2nd\"\nassert solution('ARC') == 'ABC', \"3rd\"\nassert solution('ABCABC') == 'ARC', \"4th\"\nassert solution('ARCARC') == 'ARC', \"5th\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'ARC'\nprint('all test cases passed')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'ARC'\nassert solution('ABC') == 'ARC'\nassert solution('ABC') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5 5 7\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 8 2') == '3', \"Wrong answer\"\nassert solution('6 9 5') == '3', \"Wrong answer\"\nassert solution('3 2 6') == '3', \"Wrong answer\"\nassert solution('6 9 5') == '2', \"Wrong answer\"\nassert solution('8 8 5') == '0', \"Wrong answer\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 8 2''') == '3'\nassert solution('''4 7 2''') == '3'\nassert solution('''4 8 9''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"4 5 7\") == \"3\"\nassert solution(\"4 8 2\") == \"3\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 1') == '3'\nassert solution('15 30 3') == '2'\nassert solution('1 0 0') == '0'\nassert solution('12 10 1') == '3'\nassert solution('5 3 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 5\\n') == '2'\nassert solution('1 2 10\\n') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0\") == \"3\"\nassert solution(\"4 8 2\") == \"3\"\nassert solution(\"5 10 5\") == \"4\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8 2') == '3', 'Error'\nassert solution('4 8 3') == '2', 'Error'\nassert solution('1 0 2') == '2', 'Error'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 'Christmas'\nassert solution(input) == 'Christmas Eve Eve Eve Eve'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '25'\n) == 'Christmas'\nassert solution(\n    '23'\n) == 'Christmas Eve Eve Eve'\nassert solution(\n    '22'\n) == 'Christmas Eve Eve Eve Eve'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\nassert solution(\"21\") == \"Christmas Eve\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 30
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"25\") == \"Christmas\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n5''') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('''6\n5''') == 'Christmas Eve Eve Eve Eve Eve Eve Eve'\nassert solution('''3\n5''') == 'Christmas Eve Eve Eve'\nassert solution('''2\n5''') == 'Christmas Eve'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"25\") == \"Christmas\"\nassert solution(\"22\") == \"Christmas Eve Eve\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('25') == 'Christmas'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '4'\nassert solution('8') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"8\") == \"4\"\nassert solution(\"3\") == \"0\"\n\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    print(solution(str(n)))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('10') == '5'\nassert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '4'\n\n\"\"\"\n\nn=int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '4'\nassert solution('12') == '3'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '4'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('0') == '0'\n\n----------------------------------------------------------------------",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 4 5 5') == 'Yes'\nassert solution('1 1 1 1') == 'Yes'\nassert solution('1') == 'No'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('2 1 2 2') == 'No'\nassert solution('1 2 3 4 5') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4 5\") == \"Yes\", \"Should return Yes\"\nassert solution(\"1 3 4 5\") == \"No\", \"Should return No\"\nassert solution(\"3 1 2 4\") == \"Yes\", \"Should return Yes\"\nassert solution(\"3 1 2 4\") == \"No\", \"Should return No\"\nassert solution(\"3 1 2 4\") == \"Yes\", \"Should return Yes\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('6 7 9 10') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(3) == 'Yes'\nassert solution(4) == 'No'\nassert solution(5) == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 7 9 3\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 8 5\") == \"Yes\"\nassert solution(\"4 4 5 2\") == \"No\"\nassert solution(\"3 4 8 5\") == \"Yes\"\nassert solution(\"3 5 4 2\") == \"No\"\nassert solution(\"10 2 3 4\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('4 7 9 2') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('hello') == 'HELLO'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoder') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder a beginner contest') == 'ABC'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', 'Solution needs to be ABC'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('ATCODER BEGINNER CONTREST') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('A TCODER BEGINNER CONTREST') == 'ACB'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', 'Wrong answer!'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'ABC'\nassert solution('atcoder') == 'ABC'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''atcoder beginner contest''') == 'ABC', 'error'\nassert solution('''atcoder beginner contest''') == 'ABC', 'error'\nassert solution('''atcoder beginner contest''') == 'ABC', 'error'\nassert solution('''atcoder beginner contest''') == 'ABC', 'error'\nassert solution('''atcoder beginner contest''') == 'ABC', 'error'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('10 50 20') == 'No'\nassert solution('5 10 30') == 'Yes'\nassert solution('3 5 12') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20 10 10\") == \"No\"\nassert solution(\"20 5 10\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"3 1 2\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''50 100 120''') == 'Yes'\nassert solution('''20 10 40''') == 'No'\nassert solution('''1 1 1''') == 'Yes'\nassert solution('''0 0 0''') == 'No'\nprint('All test cases passed')",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('25 50 50') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('1 0 0') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('10 10 100') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"30 20 40\") == \"No\"\nassert solution(\"1 0\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"4 10\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3\") == \"5\"\nassert solution(\"4 8\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"5 3\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8') == '5'\nassert solution('4 7') == '1'\nassert solution('4 8') == '1'\nassert solution('4 10') == '0'\nassert solution('4 12') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 8\\n7 9 8 9\") == \"5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8\") == \"5\", \"Case 1\"\nassert solution(\"5 8\") == \"5\", \"Case 2\"\nassert solution(\"1 2\") == \"1\", \"Case 3\"\nassert solution(\"2 1\") == \"2\", \"Case 4\"\nassert solution(\"5 2\") == \"4\", \"Case 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 8') == '5'\nassert solution('4 8') == '5'\nassert solution('4 8') == '5'\nassert solution('4 8') == '5'\nassert solution('4 8') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"3 1 2\"\nassert solution(\"4\") == \"4 2 1 3\"\nassert solution(\"5\") == \"5 2 1 2 3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 4') == \"4 2 1 3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('4') == '4 2 1 3'\nassert solution('5') == '5 2 1 3 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 5 7\") == \"7 5 3 2\", \"Should be 7 5 3 2\"\nassert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\", \"Should be 4 2 1 3\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4 2 1 3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1 2 3 4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2 3 1\"\nassert solution(\"5\") == \"5 1 2 3 4\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\", \"Test Failed\"\nassert solution(\"3\\n1 2 3\") == \"1 2 3\", \"Test Failed\"\n\n'''",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 5 2\\n\") == \"Yes\"\nassert solution(\"6 5 3\\n1 5 2\\n\") == \"No\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n3 3 5') == 'Yes'\nassert solution('5 3\\n1 2 3 4') == 'No'\nassert solution('5 1\\n1 1 2 2') == 'Yes'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('20 3') == 'No'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('10 10') == 'Yes'\nassert solution('10 10 1') == 'No'\nassert solution('10 5') == 'No'\nassert solution('10 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3\n4 5 6\n''') == 'Yes'\nassert solution('''\n10 2\n2 3\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('10 3') == 'Yes'\nassert solution('10 5') == 'Yes'\nassert solution('5 5') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 3\") == \"Yes\", \"Should return Yes\"\nassert solution(\"10 2\") == \"No\", \"Should return No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 3\n4 5 6\n''') == 'Yes', 'First puzzle'\nassert solution('''10 4\n1 1 4 1\n''') == 'No', 'Second puzzle'\nassert solution('''10 3\n1 1 4 1\n''') == 'Yes', 'Third puzzle'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n4 5 6\") == \"Yes\"\nassert solution(\"3 2\\n1 2 3\") == \"No\"\nassert solution(\"5 3\\n3 1 2\") == \"Yes\"\nassert solution(\"6 3\\n1 2 1 3 4\") == \"Yes\"\nassert solution(\"7 3\\n1 2 2 3 1 1 2 4\") == \"Yes\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abababaa') == '1'\nassert solution('abaababa') == '4'\nassert solution('abaaba') == '2'\nassert solution('aba') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '10'\nassert solution('abaababa') == '12'\nassert solution('abaabab') == '9'\nassert solution('abaabaa') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == 4\nassert solution(\"abaabab\") == 3\nassert solution(\"abaaba\") == 2\nassert solution(\"aba\") == 1\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"ab\") == \"b\"\nassert solution(\"xyzxyz\") == \"x\"\nassert solution(\"abcx\") == \"x\"\nassert solution(\"x\") == \"x\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == 1\nassert solution(\"abaababa\") == 1\nassert solution(\"abaabab\") == 2\nassert solution(\"abaaba\") == 2\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"3\"\nassert solution(\"abaabab\") == \"1\"\nassert solution(\"abaaba\") == \"2\"\nassert solution(\"ababab\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '5'\nassert solution('abaababa') == '4'\nassert solution('abaabab') == '3'\nassert solution('abaaba') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"3\"\nassert solution(\"abaabab\") == \"2\"\nassert solution(\"abaab\") == \"1\"\nassert solution(\"a\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"5\"\nassert solution(\"abaabab\") == \"4\"\nassert solution(\"abaaba\") == \"3\"\nassert solution(\"aba\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == 6\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('acb') == 'Yes'\nassert solution('aab') == 'Yes'\nassert solution('aac') == 'No'\nassert solution('acd') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abc') == 'Yes', solution('abc')\nassert solution('bac') == 'Yes', solution('bac')\nassert solution('ba') == 'No', solution('ba')\nassert solution('ab') == 'No', solution('ab')\nassert solution('b') == 'No', solution('b')\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ba') == 'No'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cba') == 'No'\nassert solution('cc') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ab') == 'No'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('badc') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 3\\n4 2\") == \"20\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n5\\n1\\n8\\n7\\n2\\n4\\n3\") == \"646\"\nassert solution(\"2\\n1000000\\n1000000\\n\") == \"757402647\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == ''\nassert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\") == '646'\nassert solution(\"2\\n1000000\\n1000000\\n') == '20'",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"\n\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\n\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '646'\nassert solution('1') == '757402647'\nassert solution('2') == '20'\n\n\"\"\"\nfrom heapq import heappush, heappop\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '20'\nassert solution('3') == '646'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"646\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 8 7 2 4\\n9 7 2 9 3\") == \"646\"\nassert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\nassert solution(\"1\\n1000000\\n1000000\") == \"757402647\"\n",
        "num_ids_2": 45,
        "num_ids_4": 66
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4 5') == '17'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n\n\n\"\"\"\nimport sys\n\nn, m, k = map(int, sys.stdin.readline().split())\ncosts = list(map(int, sys.stdin.readline().split()))\nspecials = []\nfor _ in range(m):\n    a, b = map(int, sys.stdin.readline().split())\n    specials.append((a,b))\n\nshop = set(range(1, n+1))",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1') == '17'\nassert solution('9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7') == '17'\nassert solution('5 1 4\\n2 5 7 4 6\\n5 4') == '17'\n",
        "num_ids_2": 76,
        "num_ids_4": 99
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1''') == \"7\"\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7''') == \"17\"\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == \"17\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 4 5\") == \"17\"\nassert solution(\"9 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4\\n6 8 5 1 8 1 1 2 1\") == \"17\"\nassert solution(\"7 4 5\\n2 5 4 2 6 3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\") == \"17\"\nassert solution(\"9 1 4\\n6 8 5 1 8 1 1 2 1\") == \"17\"\n",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 7\n1 1\n1 2\n3 4\n1 3\n1 3\n2 5\n1 5\n2 5\n4 2\n1 1\n4 1\n''') == '17'\nassert solution('''2 2\n3\n1 1\n''') == '3'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"7\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == \"2\"\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == \"1\"\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 1, 4, 5, 4, 7, 2, 3]) == 2\nassert solution([10, 1, 2, 10, 2, 5, 3, 4, 5, 7, 6, 8]) == 1\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '1'\nassert solution('7') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2\\n'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1\\n'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0\\n'\n",
        "num_ids_2": 76,
        "num_ids_4": 114
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"1999999999\"\nassert solution(input()) == \"113\"\nassert solution(input()) == \"1000000001\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\nassert solution([3, 7]) == \"15\"\nassert solution([4, 12]) == \"1999999999\"\nassert solution([2, 1000000000]) == \"1000000001\"\nassert solution([7, 97]) == \"113\"\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1') == '10'\nassert solution('3 1\\n4 1\\n2 1\\n7 1\\n1000000000 1\\n2 1') == '1999999999'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '15'\nassert solution('4 12') == '1999999999'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '113'\nassert solution('1000000000 1000000000') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 7') == '1'\nassert solution('4 12') == '2'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1999999999'\nassert solution('1000000000 1000000000') == '1'\n\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('3') == '1999999999'\nassert solution('4') == '113'\nassert solution('5') == '1000000001'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"1999999999\"\nassert solution(input()) == \"113\"\nassert solution(input()) == \"1000000001\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n5\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\nassert solution('''\n5\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '113'\nassert solution('''\n5\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1000000001'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 5\n1 3\n3 5\n2 4\n5 7\n''') == '1'\nassert solution('''1\n2\n3\n4\n5''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"1000000001\"\nassert solution(\"\"\"\n3 10\n4 7\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"1999999999\"\nassert solution(\"\"\"\n3 12\n4 7\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"113\"\nassert solution(\"\"\"\n3 1000000000\n4 7\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"1000000001\"\nassert solution(\"\"\"\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"1000000001\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n100 2\n1 2 3 2 1 3 2\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n3\n1 2 2\n''') == '1'\nassert solution('''\n1\n1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\nassert solution('1 2 3 2 1 3 2') == '2'\nassert solution('7 4') == '3'\nassert solution('2 3 3 1 1 2 1 2 3 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2 1 3 2'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2 3 2 1 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '2'\nassert solution('10 4') == '3'\n\nassert solution('10 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2 1\"\nassert solution(\"10 4\") == \"3 1 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '263'\n\"\"\"\n\nimport sys\nimport math\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '263'\n\n\nimport sys\nimport os\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 263\n\"\"\"\n\nn = int(input())\n\ncards = []\n\nfor i in range(n):\n    c, d = map(int, input().split())\n    cards.append((c, d))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(test_input) == '263'\n\n\"\"\"\n\n\n\nimport unittest\n\nclass Solution:\n\n    def __init__(self, n):\n        self.n = n\n        self.turns = 0\n        self.tokens = 0\n        self.card_cost = 0\n        self.damages = 0\n\n    def __card_cost(self, c, d):\n        if c > 0:\n            self.card_cost += c\n        if d > 0:\n            self.damages += d\n\n    def __play(self, c, d):\n        if c > 0 and d > 0:\n            self.__card_cost(c, d)\n            self.turns += 1\n\n    def __discard(self, c, d):\n        if c > 0 and d > 0:\n            self.__card_cost(-c, -d)\n\n    def play(self, *args):\n        if len(args) == 3:\n            self.__play(args[0], args[1])\n            self.__play(args[2], args[0])\n        else:\n            self.__play(args[0], args[0])\n        \n    def discard(self, *args):\n        if len(args) == 2:\n            self.__discard(args[0], args[1])\n        else:\n            self.__discard(args[0], args[0])\n        \n        self.turns += 1\n\n\n    def __check(self):\n        if self.card_cost > 0 and self.damages > 0:\n            return True\n        return False\n\n    def solve(self):\n        while self.turns < self.n:\n            if self.__check():\n                return self.damages\n            self.discard()\n        return -1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3''') == '263'\nassert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3''') == '263'\nassert solution('''8\n1\n1 2\n3\n1 5\n1 3\n1 6\n2\n2 6\n1''') == '11'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n2 1\n3 1''') == '2'\n\nassert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100''') == '263'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 263\nassert solution(\"\"\"\n10\n2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n1 1\n1 2\n\"\"\") == 41\n\"\"\"\n\n------SOLUTION------",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 263, solution\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"./testInput/input.txt\") == \"9\"\nassert solution(\"./testInput/test2.txt\") == \"5\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"abacaba\\n5\\n2 1 4\\n1 4 b\\n1 5 b\\n2 4 6\\n2 1 7\\n\"\n) == \"3\\n1\\n2\\n\"\nassert solution(\n    \"dfcbbcfeeedbaea\\n15\\n1 6 e\\n1 4 b\\n2 6 14\\n1 7 b\\n1 12 c\\n2 6 8\\n2 1 6\\n1 7 c\\n1 2 f\\n1 10 a\\n2 7 9\\n1 10 a\\n1 14 b\\n1 1 f\\n2 1 11\\n\"\n) == \"5\\n2\\n5\\n2\\n6\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacaba') == \"3\"\nassert solution('dfcbbcfeeedbaea') == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\nprint(solution('dfcbbcfeeedbaea'))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"abacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"dfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n\"\"\"\n) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2\"\nassert solution(input) == \"6\"\nprint(solution(stdin))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''codeforces\n8\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n2 7 6\n2 8 9\n2 1 8\n1 7 c\n1 12 c\n1 1 f\n2 1 11\n''') == '6'\nassert solution('''dfcbbcfeeedbaea\n20\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"208026607\\n620886071\\n939752901\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n\") == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\nassert solution(\"2\\n81722894\\n30691831\\n92160878\\n41856432\\n52816869\\n66342457\\n21590828\\n39061547\\n31392745\\n\") == '81722894\\n30691831\\n92160878\\n41856432\\n52816869\\n66342457\\n21590828\\n39061547\\n31392745\\n'\nassert solution(\"3\\n23019748\\n68695984\\n10632553\\n34203076\\n93953290\\n12345678\\n90515232\\n89731423\\n\") == '23019748\\n68695984\\n10632553\\n34203076\\n93953290\\n12345678\\n90515232\\n89731423\\n'\nassert solution(\"4\\n17238729\\n25360089\\n02071794\\n53500126\\n11303938\\n83182373\\n19309391\\n65609536\\n\") == '17238729\\n25360089\\n02071794\\n53500126\\n11303938\\n83182373\\n19309391\\n65609536\\n'\nassert solution(\"5\\n28507430\\n48342759\\n30790174\\n91264984\\n11700838\\n93164098\\n60406094\\n52583781\\n\") == '28507430\\n48342759\\n30790174\\n91264984\\n11700838\\n93164098\\n60406094\\n52583781\\n'\n",
        "num_ids_2": 239,
        "num_ids_4": 445
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n386592714\n154873296\n629438159\n7329641835\n863725149\n412968357\n6331457982\n598236471\n247789563\n''') == '629543149'\nassert solution('''\n729641835\n863725149\n386592714\n154873296\n412968357\n6331457982\n247189563\n979314628\n598236471\n''') == '4298514628'\nassert solution('''\n863725149\n975314628\n336592714\n412968357\n6331457982\n871529646\n247189563\n899543149\n598236471\n''') == '6331457982'\nassert solution('''\n870231465\n390745762\n614939373\n639854713\n580957415\n483987392\n530663083\n740560689\n612970455\n''') == '871540695'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\nassert solution(\"2\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247789563\"\nassert solution(\"3\") == \"154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\"\n",
        "num_ids_2": 124,
        "num_ids_4": 186
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"154873296\"\nassert solution(\"2\") == \"336592714\"\nassert solution(\"3\") == \"729645835\"\nassert solution(\"4\") == \"837314628\"\nassert solution(\"5\") == \"979314628\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\n",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396'\nassert solution('''\n1\n386592714\n154873296\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '336592714'\nassert solution('''\n1\n154873296\n154873296\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n''') == '863725149'\nassert solution('''\n1\n154873296\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n''') == '863725149'\nassert solution('''\n1\n154873296\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n863725149\n''') == '863725149'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"154873296\"\nassert solution(\"2\") == \"336592714\"\nassert solution(\"3\") == \"729645835\"\nassert solution(\"4\") == \"979314628\"\nassert solution(\"5\") == \"412958357\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10\\n1 1 1 3 5 3 5 7\\n3 1') == '6'\nassert solution('1\\n1') == '-1'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('1\\n1 1\\n1 1\\n') == '2'\nassert solution('2\\n1 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n11 10') == '5'",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n\n6 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n8 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 5\") == \"1 5\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"2 2\") == \"2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 3 5 3 5 7\") == \"3\"\nassert solution(\"4 1 2 4 4\") == \"4\"\nassert solution(\"10 1\") == \"-1\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"10 3\") == \"3\"\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '3'\nassert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\nassert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '8'\nassert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 3 5 3 5 7\") == \"6\"\nassert solution(\"5 1 2 1 2 3 5 3\") == \"4\"\nassert solution(\"1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"10\"\n",
        "num_ids_2": 34,
        "num_ids_4": 59
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '4'\nassert solution('2 4') == '1'\nassert solution('3 2') == '1'\nassert solution('3') == '-1'\nassert solution('3 5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"-1\"\nassert solution(\"10 4\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"10 9\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6') == '3\\n6\\n8\\n-1\\n9\\n4'\nassert solution('5 5') == '5\\n5\\n5\\n5\\n5'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == \"YES\"\nassert solution('''\n3 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"101 101 101 3\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''\n10 10 10 10\n5 5 5 5\n2 2 2 2\n5 5 5 5\n2 2 2 2\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''\n1 1 1 1\n1\n''') == 'YES'\nassert solution('''\n3 3 3\n1 2 1\n''') == 'NO'\nassert solution('''\n2 5 6\n1 2 1 2\n''') == 'NO'\nassert solution('''\n2 1 2\n1 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105''') == 'YES'\nassert solution('''10 20 15 14\n101 101 101 3''') == 'NO'\nassert solution('''3 2 1 100000000\n11 100 101 102 105''') == 'YES'\nassert solution('''1 2 3 4 5 6 7 8 9 10''') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'NO'\n\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 2 8') == 'YES', solution('5 3 2 8')\nassert solution('100 101 102 105') == 'YES', solution('100 101 102 105')\nassert solution('10 20 15 14') == 'NO', solution('10 20 15 14')\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n2 1 5 3 5\n''') == '3 3 \n\nassert solution('''\n10 10\n1 2 1 2 2 2 2 2 2 2\n''') == '18 18'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n2 1 5 3 5\") == \"3 3\"\nassert solution(\"5 5\\n2 1 5 3 5\") == \"9 8 12 6 8\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == '3 4 6 5'\nassert solution(\"5 5\") == '9 8 12 6 8'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 2 3 4\\n') == '3 4 6 5'\nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2\\n') == '3 3'\nassert solution('1 1\\n1 1\\n') == '1 1'\n\nprint(solution(*tuple(map(int, stdin.strip().split()))))",
        "num_ids_2": 46,
        "num_ids_4": 90
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"3 4 6 5\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\") == \"3 3\"",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n2 1 5 3 5') == '9 8 12 6 8'\nassert solution('4 4\\n1 2 3 4') == '3 4 6 5'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5 \nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 ",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5 '\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 '\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 ",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3 4 6 5\"\nassert solution(\"2 5\") == \"9 8 12 6 8\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 6') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7''') == 'YES'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('10 8\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n",
        "num_ids_2": 196,
        "num_ids_4": 294
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 6\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n1 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n5 9\n5 10\n5 11\n6 10\n6 11\n6 12\n7 10\n7 11\n7 12\n7 13\n7 14\n7 15\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n8 16\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n11 11\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n13 14\n13 15\n13 16\n13 17\n13 18\n14 15\n14 16\n14 17\n14 18\n15 16\n15 17\n15 18\n16 17\n16 18\n17 18\n17 19\n18 19\n18 20\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 4\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 8\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"YES\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"NO\"\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 6') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_1) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(test_input_2) == \"NO\\nNO\\nNO\\nNO\\nYES\\nYES\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('1\\n2\\n3\\n') == 'NO'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\n\nassert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4''') == 'YES\\n1 2\\n2 3\\n3 4\\n1 3\\n1 4\\nNO'\n\nassert solution('''5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4''') == 'YES\\n1 2\\n2 3\\n3 4\\n1 3\\n1 4\\nNO'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES\\n1 2\\n2 3\\n3 4\\n1 2'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('4\\n5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('4\\n4\\n1 1 1') == 'YES\\n1 2\\n2 3\\n3 4\\n1 1'\nassert solution('4\\n4\\n1 1 1') == 'NO\\n1 2\\n2 3\\n3 4\\n1 1'",
        "num_ids_2": 85,
        "num_ids_4": 153
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\n\nassert solution('''\n3\n1 1 1\n2\n3\n''') == 'YES\\n1 2\\n1 3\\n2 3\\n3 4'\n\nassert solution('''\n4\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n'''\nassert solution('''\n1\n2\n3\n5\n4\n''') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n1 2 2 1 3\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"4\\n4\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n4\\n1 2 1 3\\n1 3 1 2\\n4\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n4\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 1 1\\n2\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n3\\n1 2 1 3\\n1 3 1 2\\n1 4 1 5\\n1 1 1\\n2\\n1",
        "num_ids_2": 1409,
        "num_ids_4": 1409
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n1 2 2 1 3\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"2\\n5\\n1 1 1\\n4\\n1 2 3 4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\n\nassert solution('''\n2 4\n110111\n1111\n''') == '111100'\n\n'''\nans = \"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"7 9\") == \"0101111\"\nassert solution(\"1111100\") == \"0011111\"\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11\n1111100\n''') == '01011110'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n8 5\\n11011010') == '01011110'\nassert solution('5\\n7 9\\n1111100') == '0101111'\nassert solution('4\\n8 5\\n1111100') == '0011111'\n\n'''",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 1\\n11011010\\n7 9\\n1111100\") == \"01011110\"\nassert solution(\"4\\n4 0\\n1101100\\n7 9\\n1111100\\n7 11\\n1111100\") == \"0101111\"\nassert solution(\"6\\n7 8\\n1101100\\n7 9\\n1111100\\n7 11\\n1111100\") == \"0011111\"\n\n'''\n",
        "num_ids_2": 68,
        "num_ids_4": 105
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100''') == '01011110'\nassert solution('''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100''') == '0101111'\nassert solution('''6\n7\n1111100\n1\n1111100\n1\n1111100\n1''') == '0011111'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0011111\"\nassert solution(input()) == \"01011110\"\nassert solution(input()) == \"010111100\"\n\n\"\"\"\n\nfrom collections import deque\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n\n''') == '01011110'\nprint(solution('''2 1\n1\n'''))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"01011110\", f\"input {sys.stdin.read()} should give {'01011110'}\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '01011110'\nassert solution(\n    '3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '0101111'\nassert solution(\n    '3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '0011111'\nassert solution(\n    '3\\n8 5\\n11011010\\n7 9\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100\\n7 11\\n1111100') == '0111111'\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '4'\nassert solution('5 1') == '1 3 5 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('1') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"3\"\nassert solution(s) == \"1 4 7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2\\n11 11\\n9 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9') == '3'\nassert solution('5 1\\n2 3\\n3 3\\n2 3\\n2 2\\n2 3\\n2 3') == '4'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '3'\nassert solution('5 1') == '4'\nassert solution('7 2') == '1 4 7'\nassert solution('7 3') == '1 4 7'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"1 2 3 4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"5 1\") == \"1 3 5 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n29 30\n30 30\n29 29\n28 30\n30 30''') == '4'\n\nassert solution('''6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\nOutput\n4\n1 3 5 6''') == '4'\n\nassert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\nOutput\n3\n1 4 7 \n\nInput\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\nOutput\n3\n1 4 7 \n\nInput\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n\nOutput\n4\n1 3 5 6\n\nInput\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\nOutput\n4\n1 3 5 6''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 1\\n-100 2 3\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"5 2 1\\n2 2 2 3 4\\n\"\n) == \"19\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"19\"\nassert solution(\"10\") == \"10\"\n\nprint(solution(*tuple(map(int, input().split()))))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n3\n2 1 4 3\n-100 2 3\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"3\"\nassert solution(\"5 2 1 4 3 5\") == \"19\"\nassert solution(\"5 2\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 4 3 5') == '3'\nassert solution('2 1 4 3 5') == '3'\nassert solution('2 1 4 3 5') == '3'\nassert solution('2 1 4 3 5') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '19'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 3 2\n-100 2 3\n''') == \"3\"\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == \"19\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('''\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1\n-3 0\n''') == '19'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 2') == '3'\nassert solution('5 2 1 4 3 5') == '19'\nassert solution('1 1 -1') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == '21 7 15 21 3'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''5 2\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '1 3 3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3'\n\nstdin = input()\nn, m = list(map(int, stdin.split()))\n\nedges = []\nfor _ in range(n - 1):\n    u, v, w = list(map(int, input().split()))\n    edges.append((u, v, w))\n\nq = int(input())\n\nfor _ in range(q):\n    x = int(input())\n    result = 0\n    for edge in edges:\n        if edge[2] <= x:\n            result += 1\n    print(result)",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"21 7 15 21 3\"\n\"\"\"\n\nfrom collections import defaultdict\nimport heapq\nfrom typing import DefaultDict\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''\n1 2\n1 2\n''') == '0 0 \n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2 1\n2 3 2\n1 3 2''') == \"1 3 3\"\n\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5') == '21 7 15 21 3 '\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\n''') == '21 7 15 21 3 \n\nassert solution('''\n1 2\n1 2\n\n''') == '0 0 \n\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n\n''') == '1 3 3 \n\nassert solution('''\n6 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\n''') == '21 7 15 21 3 \n\nassert solution('''\n5 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\n''') == '0 0 \n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3'\nassert solution('1 2\\n1 2\\n') == '0 0'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5''') == \"YES\"\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5''') == \"YES\"\nassert solution('''3\n1 2 2\n4\n1 3 4 4''') == \"NO\"\nassert solution('''5\n3\n1 2 2\n4\n1 3 4 4''') == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"NO\"\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES'\nassert solution('5\\n4\\n1 2 3 3 3\\n5\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES'\nassert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'NO'\n",
        "num_ids_2": 93,
        "num_ids_4": 143
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n4\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\\n1 2 2\") == \"YES\"\nassert solution(\"3\\n4\\n5 5 5 5\") == \"NO\"\nassert solution(\"5\\n10\\n1 2 4\") == \"YES\"\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1010\n1101\n\n4 5\n1001\n10101''') == '12'\nassert solution('''4 5\n1001\n10101\n\n4 6\n1001\n10101\n\n4 7\n1001\n10101\n\n4 8\n1001\n10101''') == '11'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"12\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == str(expected_output)\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4 4') == '12'\nassert solution('4 5') == '11'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n1010\n1101\n\n''') == '12'\nassert solution('''4 5\n1001\n10101\n\n''') == '11'\nassert solution('''\n2\n1\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"12\"\nassert solution(sys.stdin.read()) == \"11\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '12'\nassert solution('4 5') == '11'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '12'\nassert solution('5 5') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string()) == \"12\"\nassert solution(input_string(\"4 5\")) == \"11\"\n\n'''\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10''') == \"NO\"\nassert solution('''5\n2\n4\n6\n8\n10''') == \"YES\"\nassert solution('''5\n2\n4\n6\n8\n10''') == \"YES\"\nassert solution('''5\n2\n4\n6\n8\n10''') == \"YES\"\nassert solution('''5\n2\n4\n6\n8\n10''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n4\\n6\\n8\") == \"NO\"\nassert solution(\"5\\n2\\n4\\n6\\n8\") == \"YES\"\nassert solution(\"5\\n3\\n4\\n6\\n8\") == \"YES\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4\\n5') == '2 4 1 5'\nassert solution('2\\n6\\n10') == '2 4 1 5'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n\n\n----",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2') == 'NO'\nassert solution('5\\n4') == 'YES'\nassert solution('5\\n6') == 'YES'\nassert solution('5\\n8') == 'YES'\nassert solution('5\\n10') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2 4 1 5\"\nassert solution(\"5\") == \"2 4 6 8 1 3 5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2 4 1 5'\nassert solution('5') == '2 4 1 5 6'\n\nstdin = \"\"\"\n5\n10\n\"\"\".strip()\n\nprint(solution(stdin))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\") == \"NO\"\nassert solution(\"5\\n4\") == \"YES\"\nassert solution(\"5\\n6\") == \"YES\"\nassert solution(\"5\\n8\") == \"YES\"\nassert solution(\"5\\n10\") == \"YES\"\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '0'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '4'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '0'",
        "num_ids_2": 84,
        "num_ids_4": 168
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\nassert solution('''\n3\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == \"5\"\nassert solution('''6\n10\n11 12 13 14 15 16 17 18 19\n20 21 22 23 24 25 26 27 28 29\n30 31 32 33 34 35 36 37 38 39\n40 41 42 43 44 45 46 47 48 49\n50 51 52 53 54 55 56 57 58 59\n60 61 62 63 64 65 66 67 68 69\n70 71 72 73 74 75 76 77 78 79\n80 81 82 83 84 85 86 87 88 89\n90 91 92 93 94 95 96 97 98 99 100\n''') == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n9\\n3 1 4 1 5 9 2 6 5') == '1'\nassert solution('5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1') == '1\\n0'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\n\nassert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10\n1 1 2 2 2 3 2 3 3 2 2 2 4 1\n1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n3\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n5\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('7') == '0'\n\n\"\"\"\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    special_count = 0\n    \n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] + a[j] == a[j]:\n                special_count += 1\n                \n    print(special_count)",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '4'\n\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '2'\n\nassert solution('''3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '3'\nassert solution('''3\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '4'\nassert solution('''7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '7'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '3'\nassert solution('''5\n5\n1 2\n2 3\n3 4\n4 5\n5 1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n    \"\"\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '5'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '4', \"First\"\nassert solution('''3\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == '4', \"Second\"\nassert solution('''7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7''') == '7', \"Third\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 5\n2 4\n2 3\n3 4''') == '4'\nassert solution('''4\n1 5\n2 4\n2 3\n3 4''') == '3'\nassert solution('''4\n1 5\n2 4\n2 3\n3 4''') == '2'\nassert solution('''5\n1 5\n2 4\n2 3\n3 4''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\") == \"3\"\nassert solution(\"1\\n5\\n1 5\\n2 4\\n2 3\\n3 4\\n5\\n1 5\\n2 3\\n2 5\\n3 5\\n2 2\\n3\") == \"2\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''\n5\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n6\n6\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59''') == '60'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == \"5\"\nassert solution('''\n3\n12 30\n12 0\n4 12\n12 59\n''') == \"1180\"\nassert solution('''\n7\n0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n''') == \"1\"\nassert solution('''\n2\n10 20\n10 10\n1 10\n10 10\n''') == \"2\"\nassert solution('''\n1\n1 1\n2 2\n3 3\n4 4\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"60\"\nassert solution(\"5\") == \"1439\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0') == '1\\n1\\n'\nassert solution('1\\n1 1') == '1\\n2\\n'\nassert solution('1\\n0 0\\n1 1') == '1\\n1\\n'\nassert solution('5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n') == '5\\n60\\n1439\\n1180\\n1\\n'\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 109
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '60'\nassert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == '1439'\nassert solution(\"\"\"\n2\n23 0\n23 0\n\"\"\") == '1180'\n\"\"\"\nExample 1\n\nInput\n3\n19 20\n10 0\n10 20\n\nOutput\n1\n20\n907\n\"\"\"\n\n\"\"\"\nExample 2\n\nInput\n3\n19 0\n20 20\n10 10\n\nOutput\n1\n20\n907\n\"\"\"\n\n\"\"\"\nExample 3\n\nInput\n3\n19 0\n20 0\n10 10\n\nOutput\n1\n20\n907\n\"\"\"\n\n\"\"\"\nExample 4\n\nInput\n1\n0 0\n\nOutput\n1\n1\n\"\"\"\n\n\"\"\"\nExample 5\n\nInput\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n\nOutput\n5\n60\n1439\n1180\n1\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 18
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"60\"\nassert solution(\"\"\"\n2\n0 0\n0 0\n\"\"\") == \"1439\"\nassert solution(\"\"\"\n3\n0 0\n1 0\n0 0\n\"\"\") == \"1180\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59') == '60\\n1439\\n1180\\n1\\n'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"60\\n1439\\n1180\\n1\\n\"\nprint(solution(input()))",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1439'\nassert solution('4') == '1180'\nassert solution('1') == '60'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\") == \"60\"\nassert solution(\"2\\n0 0\\n0 1\\n3 4\\n1 3\\n3 4\\n2 4\\n4 4\\n5 5\\n0 5\") == \"1439\"",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2'\nassert solution() == '3 4'\nassert solution() == '1 4'\nassert solution() == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 2'\n\nassert solution('''3\n4\nRLUD\n4\nLURD\n5\nRRU\n5\nLLDDR''') == '1 4'\n\nassert solution('''8\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n6\nRRDDR''') == '1 4'\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 2\"\nassert solution(input()) == \"1 4\"\nassert solution(input()) == \"3 4\"\nassert solution(input()) == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '2 4'\n\nassert solution('''\n1\n4\nLURD\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3 4\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"5\") == \"3 4\"\nassert solution(\"6\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '1 2'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '3 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n1\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n    \"\"\"\n) == \"3 4\"\n\nassert solution(\n    \"\"\"\n2\n4\nRDDD\n4\nRDDD\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n5\n4\nRDDD\n4\nRDDD\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n5\n5\nRDDD\n4\nRDDD\n    \"\"\"\n) == \"3 4\"\n\nassert solution(\n    \"\"\"\n5\n5\nRDDD\n4\nRDDD\n    \"\"\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 2'\n\nassert solution('''\n5\nRRUUDDLL\n5\nLLRDDLLU\n''') == '-1'\n\nassert solution('''\n7\nURDDLDRDLL\n5\nLLRLDDRLLL\n''') == '1 1'\n\nassert solution('''\n5\nLLRDDLLU\n5\nLLRLDDRLLL\n''') == '2 2'\n\nassert solution('''\n8\nURDDDLLRLL\n5\nRLLDDLLDLLL\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n2\nRRUDU\n4\nLLDDR\n\"\"\") == \"0 0\"\n\nassert solution(\"\"\"\n2\nLURD\n4\nLLDDR\n\"\"\") == \"1 0\"\n\nassert solution(\"\"\"\n2\nRRUDR\n4\nLLDDR\n\"\"\") == \"0 0\"\n\nassert solution(\"\"\"\n2\nRURDU\n4\nLLDDR\n\"\"\") == \"0 0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\"\n) == \"1 2\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '3'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '1'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '0'\nassert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '0'\n",
        "num_ids_2": 94,
        "num_ids_4": 188
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n5 3 4 2 1') == '1'\nassert solution('4\\n4 5 5 5') == '0'\nassert solution('8\\n8 7 5 3') == '2'\nassert solution('8\\n8 7 7 2') == '1'\nassert solution('4\\n4 5 5 5') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n2 3 3\n4\n1 1 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n2 2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n5 1 2\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"3\"\nassert solution(\"4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\") == \"2\"\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''\n6\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\\n4 2 4 1 4 3 4\") == \"1\"\nassert solution(\"5\\n2 1 5 4 3\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n\n''') == '3'\nassert solution('''\n5\n5\n1 1 1 3\n\n''') == '0'\nassert solution('''\n6\n5\n1 2 2 2 3 3\n\n''') == '1'\nassert solution('''\n6\n6\n1 2 1 3 2\n\n''') == '2'\nassert solution('''\n4\n5\n4 4 4 4\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '2'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\nassert solution('''\n9\n10 1\n1 2\n2 3\n3 4\n3 5\n5 6\n5 7\n5 8\n''') == '10'\nassert solution('''\n6\n5 1 2 4 7 8\n1 3\n2 4\n3 5\n4 6\n4 7\n4 8\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '121'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1337''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('8') == '121'\nassert solution('10') == '4'\nassert solution('1337') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\nassert solution('1\\n1337') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nprint(solution('''\n1\n1337\n'''))\nassert solution('''\n6\n3 6 5 4 2 7\n1 2\n2 3\n1 4\n5 6\n5 7\n5 8\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"121\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '121'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1337\n''') == '0'\nassert solution('''\n2\n3\n1 2\n2 1\n''') == '4'\nassert solution('''\n2\n2\n1 2\n1 3\n''') == '1'\nassert solution('''\n3\n5\n1 2\n2 3\n2 4\n''') == '4'\nassert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\n\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5 10\n1 2 3 5 6\n10 20 1 0 50\n10 50 1 10 50\n10 50 50 1 10 50\n10 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50\n10 50 50 50 50 1 10 50",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''5 10\n1 2 3 4 5 6 7 8\n10 25\n24 24 24 24 24 24 24 24 24''') == '22'\nassert solution('''4 5\n5 6 7 8 9 1 2 3''') == '0'\nassert solution('''1 2 3 4 5 6 7 8''') == '0'\nassert solution('''1 2 3 4 5 6 7 8 9''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 44
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4 3\\n1 2 1 3') == \"18\"\nassert solution('5\\n10 6\\n8 7 1 8 3 7 5 10 8 9') == \"227\"\nassert solution('5\\n20 100 50 20 100500') == \"8\"\nassert solution('5\\n25\\n24 24 24 24 24 24 24 24 24 24') == \"0\"\nassert solution('5\\n8 8\\n1 2 3 4 5 6 7 8') == \"0\"\n",
        "num_ids_2": 46,
        "num_ids_4": 89
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n10 6\\n4 3\\n1 2 1 3\") == \"6\"\nassert solution(\"3 10\\n8 7 1 8 3 7 5 10 8 9\\n5 10\\n20 100 50 20 100500\") == \"8\"\nassert solution(\"5 10\\n24 24 24 24 24 24 24 24 24 24\") == \"227\"\nassert solution(\"6 3\\n1 2 3 4 5 6 7 8\\n10 25\") == \"0\"\nassert solution(\"5 10\\n20 100 50 20 100500\\n10 25\") == \"227\"\n",
        "num_ids_2": 64,
        "num_ids_4": 112
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n4 2\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n4 2\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\nassert solution('''\n4 2\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n4 4\n1 2 3 4\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1,2,3') == '1'\nassert solution('1,2') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['1', '2', '3']) == '1'\nassert solution(['1', '2']) == '2'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('[1,2,3]',['1','1']) == '1'\nassert solution('[1,2,3]',['1','2']) == '2'\nassert solution('[1,2,3]',['1','3']) == '2'\nassert solution('[1,2,3]',['3','3']) == '3'\nassert solution('[1,2,3]',['3','2','1']) == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '1'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n\n4\n1 2\n\n5\n1 2 3 5\n\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"2\\n\"\n\nassert solution(3) == \"2\\n\"\nassert solution(4) == \"2\\n\"\nassert solution(5) == \"1\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"5\") == [1,3,3,1,1]\nassert solution(\"0\") == []\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 42
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == ['1']\nassert solution('2') == ['1','1']\nassert solution('3') == ['1','3','3','1']\nassert solution('4') == ['1','4','6','4','1']\nassert solution('5') == ['1','5','10','10','5','1']\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2\n3\n1\n1\n2\n''') == '''\n1\n2\n3\n3\n1\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == [\"1\",\"1\"]\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n''') == [\n    1,\n    4,\n    6,\n    4,\n    1\n]\nassert solution('''\n3\n''') == [\n    1,\n    3,\n    3,\n    1\n]\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == [1,3,3,1]\n\"\"\"\n\nclass Solution:\n    def pascal(self, n):\n        if n == 0: return [[]]\n        result = [[1]]\n        for i in range(1, n+1):\n            row = [1]\n            for j in range(1, i):\n                row.append(result[i-1][j-1] + result[i-1][j])\n            row.append(1)\n            result.append(row)\n        return result\n\n\ns = Solution()\nassert s.pascal(1) == [[1]]\nassert s.pascal(2) == [[1], [1, 1]]\nassert s.pascal(3) == [[1], [1, 1], [1, 2, 1]]\nassert s.pascal(4) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n",
        "num_ids_2": 29,
        "num_ids_4": 72
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\n\n\n\n'''\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == [1,3,3,1]",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == [1,3,3,1]\nassert solution(\"5\") == [1,5,10,10,5,1]",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"00000000000000000000000000001011\"\n) == \"3\"\nassert solution(\n    \"00000000000000000000000010000000\"\n) == \"1\"\nassert solution(\n    \"111111111111111111111111111111101\"\n) == \"31\"\n\n\"\"\"\n\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while(n > 0):\n            if(n & 1):\n                count += 1\n            n = n >> 1\n        return count\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"00000000000000000000000000001011\") == '3'\nassert solution(\"00000000000000000000000010000000\") == '1'\nassert solution(\"111111111111111111111111111111101\") == '31'\n\n'''\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        \n        return bin(n).count(\"1\")\n        \n        \n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('101') == '2'\nassert solution('1011101') == '3'\nassert solution('101110101') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '31'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000000000000000000000000001011\") == '3'\nassert solution(\"00000000000000000000000010000000\") == '1'\nassert solution(\"111111111111111111111111111111101\") == '31'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('11111111111111111111111111111101') == '31'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == str(len(input))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == '3'\nassert solution(\"00000000000000000000000010000000\") == '1'\nassert solution(\"111111111111111111111111111111101\") == '31'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n00000000000000000000000000001011\n''') == '3'\n\nassert solution(\n'''\n00000000000000000000000010000000\n''') == '1'\n\nassert solution(\n'''\n111111111111111111111111111111101\n''') == '31'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(list(map(int, input().split()))) == list(map(int, input().split()))\n\n\"\"\"\n\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        for i in range(len(digits)-1, -1, -1):\n            if digits[i]!= 9:\n                digits[i] += 1\n                return digits\n            else:\n                digits[i] = 0\n        digits.insert(0, 1)\n        return digits\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == None\nassert solution([1]) == [1]\nassert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nprint(solution.__doc__)\n",
        "num_ids_2": 18,
        "num_ids_4": 58
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123\") == \"124\"\nassert solution(\"4123\") == \"4124\"\nassert solution(\"412345\") == \"4321\"\nassert solution(\"0\") == \"1\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == [1,2,4]\nassert solution([4,3,2,1]) == [4,3,2,2]\nassert solution([4,3,2,2]) == [4,3,2,3]\nassert solution([4,3,2,1,4]) == [4,3,2,2,5]\n",
        "num_ids_2": 40,
        "num_ids_4": 88
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[4,3,2,0]\") == \"[4,3,2,2]\"\nassert solution(\"[4,3,2,0]\") == \"[4,3,2,2]\"\n\nstdin = \"\"\"\n[1,2,3]\n[4,3,2,1]\n[4,3,2,0]\n[4,3,2,0]\n\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '13'\nassert solution('123') == '124'\nassert solution('9') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\n\"\"\"\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        if len(digits) == 1:\n            return [1] + digits\n        \n        s = ''\n        for i in range(len(digits)-1,-1,-1):\n            if digits[i] == 9:\n                s = str(0) + s\n            else:\n                s = str(digits[i] + 1) + s\n        \n        return [int(x) for x in s]",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"124\"\nassert solution(\"98888\") == \"989\"\nassert solution(\"99999\") == \"10000\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''[1,2,3]''') == \"[1,2,4]\"\nassert solution('''[4,3,2,1]''') == \"[4,3,2,2]\"\nassert solution('''[0,1]''') == \"[1,2]\"\nassert solution('''[9,9,9,9]''') == \"[1,0,0,0]\"\nassert solution('''[1,1]''') == \"[2,2]\"\n",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n3-1=2''') == '3'\nassert solution('''3 5\n8 10\n8 9''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '4'\nassert solution('3 5') == '9'\nassert solution('-3 5') == '7'\nassert solution('-3 -5') == '-7'\nassert solution('-3 3') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\nassert solution(input('5 7')) == '8'\nassert solution(input('4 6')) == '6'\nassert solution(input('-2 9')) == '10'\nassert solution(input('-20 -4')) == '20'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == None\nassert solution(\"\") == None\nassert solution(\"2\") == None\nassert solution(\"1 2\") == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '4'\nassert solution('2 2') == '2'\n\n---\n\n3 + 1 = 4\n3 - 1 = 2\n3 * 1 = 3\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4','should be 4'\nassert solution('1 1') == '2','should be 2'\nassert solution('2 2') == '4','should be 4'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"-5 -2\") == \"2\"\nassert solution(\"5 -2\") == \"2\"\nassert solution(\"5 1\") == \"5\"\n\n------Submission------\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\", \"Should return 4\"\nassert solution(\"1 3\") == \"3\", \"Should return 3\"\nassert solution(\"-1 3\") == \"3\", \"Should return 3\"\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"10 10\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == '3'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n1 2\n-1 -2\n0 0''') == '2'\nassert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4\n\n-----Sample Input-----\n8 10\n0 1\n-2 3\n3 4\n-5 6\n7 8\n-10 9\n-2 -4\n-8 -6\n-5 9\n\n-----Sample Output-----\n3\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4\\n') == '3'\n\"\"\"\n\n\nimport math\nimport sys",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == '3'\nassert solution('5 1') == '3'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5') == '3'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"3\"\nassert solution(\"100 200\") == \"7\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4\n0 5\n-2 4\n3 4\n4 -4\n''') == '3'\nassert solution('''\n3 5\n0 5\n-2 4\n3 4\n4 -4\n''') == '3'\n\n'''\nfrom sys import stdin\nimport math\n\nn, d = list(map(int, stdin.readline().split()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('113') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_str) == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'No'\nassert solution('5') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('13') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"1233\") == \"No\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"123425\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1000') == 'Yes'\nassert solution('2000') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 5, -1]) == '12'\nassert solution([3, 1, 5]) == '8'\nassert solution([3, 2, 3]) == '10'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5 -1\n''') == '12'\nassert solution('''4\n-1 3\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '12'\nassert solution('5') == '8'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5 -1''') == '12'\nassert solution('''3\n3 5 -1''') == '8'\nassert solution('''3\n3 5 -1''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 5 -1\n''') == '12'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '12\\n8\\n10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5,2,-1]) == '12'\nassert solution([3,5,2]) == '8'\nassert solution([3,5,3]) == '10'\n\nstdin = \"\"\"3\n-1 2 5\n\"\"\"\nassert solution(stdin.splitlines()) == \"8\"\n\nstdin = \"\"\"2\n-1 -1\n\"\"\"\nassert solution(stdin.splitlines()) == \"4\"\n\nstdin = \"\"\"2\n2 2\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 5 -1\\n\") == \"12\\n8\\n10\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '12'\nassert solution('3') == '8'\nassert solution('4') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BBBWW') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BBBWW') == \"1\"\n\nassert solution('WWWWW') == \"4\"\n\nassert solution('WBWBW') == \"3\"\n\nassert solution('WWWBB') == \"3\"\n\nassert solution('WBWBW') == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBWBB\") == \"1\"\nassert solution(\"WBWBWBWB\") == \"8\"\nassert solution(\"WWWBBBB\") == \"5\"\nassert solution(\"BBBBBBW\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nBBBWW\n''') == '1'\nassert solution('''\nBBBBBWW\n''') == '4'\nassert solution('''\nBBBWW\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBWBB') == '2'\nassert solution('BWWBWW') == '3'\nassert solution('WBWBB') == '3'\nassert solution('WBBBWW') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWWWWW\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WBBWW') == '1'\nassert solution('WWWWWW') == '1'\nassert solution('WWWWWWB') == '1'\nassert solution('WWWWWWW') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''BBBWW''') == '1'\nassert solution('''BBBWWBB''') == '2'\nassert solution('''BBBWWBBB''') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('10 100') == 'No'\nassert solution('10 0') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 21') == \"Yes\"\nassert solution('5 3') == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n\nn1, n2 = map(int, input().split())\na = n1\nb = n2",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 21\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('3 13') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 42\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1 4 1 5 9 2') == \"4\"\nassert solution('3\\n5 4 6 5') == \"4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 4 1 5 9 2\n''') == '4'\nassert solution('''\n6\n2 3 1 5 6\n''') == '6'\nassert solution('''\n10\n10 15 2 3 5 7 9 11 14\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('7') == '5'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3 1 4 1 5 9 2') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\n3 1 4 1 5 9 2\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    7\n    3 1 4 1 5 9 2\n    \"\"\"\n) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"7\"\nassert solution(\"3\") == \"15\"\nassert solution(\"4\") == \"20\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '5'\nassert solution('8') == '6'\nassert solution('50') == '36'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"5\"\n\"\"\"\n\nN = int(input())\nA = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"9\"\nassert solution(\"7\") == \"14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\\n\") == \"5\"\nassert solution(\"3\\n4\\n\") == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"4 5 9\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 5 6') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'YES'\nassert solution('1 1 1') == 'YES'\nassert solution('3 4 5') == 'NO'\nassert solution('4 5 8') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"5 6 10\") == \"NO\"\nassert solution(\"5 4 2\") == \"YES\"\nassert solution(\"2 2 4\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 4 6\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 5 5') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 5 9') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29') == 'Yes'\nassert solution('39') == 'No'\nassert solution('121') == 'No'\nassert solution('9') == 'Yes'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == 'Yes'\nassert solution('38') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"28\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('29') == 'Yes'\nassert solution('10') == 'No'\nassert solution('20') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"No\"\nassert solution(\"10\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"Yes\"\nassert solution(input) == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('29') == \"Yes\"\nassert solution('81') == \"No\"\nassert solution('10') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('30') == \"No\"\nassert solution('18') == \"Yes\"\nassert solution('98') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"No\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"31\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 3\n1 2 4''') == '1'\nassert solution('''5 4 5\n1 2 3\n3 4 5\n5 4 3\n4 5 3\n3 5 4''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('3 4 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3 3\n1 2 4\n''') == '1'\n\nassert solution('''\n2 5 2\n0 1 4\n''') == '4'\n\nassert solution('''\n3 4 3\n1 2 3\n0 1 4\n''') == '2'\n\nassert solution('''\n2 5 2\n0 1 4\n''') == '1'\n\nassert solution('''\n1 2 2\n1 2 2\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3\\n1 2 4\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5\\n4\\n\") == \"1\"\nassert solution(\"5 3 3\\n1 2 4\\n5\\n6\\n\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 83
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"10 4 8\") == \"2\"\nassert solution(\"8 2 2\") == \"1\"\nassert solution(\"5 5 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 3 3\n1 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"5 5 5\n1 2 3 4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"7 5 7\n1 2 3 4 5 6 7\n\"\"\") == \"6\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '1'\nassert solution('2 2 4') == '1'\nassert solution('2 2 0') == '2'\nassert solution('5 5 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"4 5 2\") == \"3\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"5 3 3\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Yes'\n\"\"\"\nfrom typing import Tuple\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == \"Yes\"\n\"\"\"\n\nfrom itertools import product",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n.#.\\n###\\n.#.\\n') == \"Yes\"\nassert solution('4 4\\n.#.\\n###\\n.#.\\n') == \"Yes\"\n\n<output>\nYes\n\nThe code is partly generated by the template at \nhttps://github.com/Coding-Machine/advent-of-code-2020/blob/master/2020/day_06/solutions/solution.py\n'''\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n.#.\n###\n.#.''') == 'Yes'\nassert solution('''2 2\n..''') == 'No'\nassert solution('''1 1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\n....''') == 'Yes'\nassert solution('''5 5\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n.#.\\n###\\n.#.\\n') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"10 30 20\"]) == \"Yes\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 30 20\n''') == 'Yes'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == \"Yes\"\nassert solution('10 20 30') == \"No\"\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"100 10 20\") == \"No\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 1 1') == 'No'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['10 30 20']) == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 50 50') == 'No'\nassert solution('10 20 30') == 'Yes'\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\n\nassert solution(\"100 30 20\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 10 20\") == \"No\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('2 2 5 1') == 'Balanced'\nassert solution('6 9 6 3') == 'Right'\nassert solution('9 3 7 5') == 'Right'\nassert solution('6 8 9 2') == 'Right'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 8 2\") == \"Right\"\nassert solution(\"3 8 7 1\") == \"Left\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Right'\nassert solution('4 5 1 6') == 'Right'\nassert solution('4 5 2 6') == 'Left'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 3 9 5') == 'Left'\nassert solution('1 4 7 5') == 'Left'\nassert solution('1 5 4 7') == 'Right'\nassert solution('2 2 2 2') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8 7 1') == \"Left\"\nassert solution('1 3 4 1') == \"Balanced\"\nassert solution('2 2 2 2') == \"Balanced\"\nassert solution('3 4 5 4') == \"Left\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('8 4 6 9') == 'Left'\nassert solution('5 10 6 9') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 3 3\") == \"Left\"\nassert solution(\"7 7 1 1\") == \"Right\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('1 3 5 7') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1') == 'Left'\nassert solution('1 1') == 'Right'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 1 1 1') == 'Left'\nassert solution('5 2 2 3') == 'Left'\nassert solution('2 3 2 4') == 'Right'\nassert solution('5 6 5 5') == 'Left'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n2\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n10\n1 1 0 1 0 0 0 1 0 1\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n100\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"100\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '8'\nassert solution('5\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n') == '12'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"10\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    1\n    1 0 0 0 0 0 0 0 0\n    '''\n    ) == '8'\n    assert solution(\n    '''\n    2\n    0 0 0 0 0 0 1 1\n    '''\n    ) == '2'\n    assert solution(\n    '''\n    1\n    1 0 0 0 0 0 0 0\n    '''\n    ) == '0'\n    assert solution(\n    '''\n    3\n    0 0 0 0 0 0 1 1\n    '''\n    ) == '1'\n    assert solution(\n    '''\n    2\n    0 0 0 0 0 0 0 0\n    '''\n    ) == '0'\n    ",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '22'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n269-6650') == 'Yes'\nassert solution('1 2\\n-1 -9') == 'No'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('7 8') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"1\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n269-6650') == 'Yes'\nassert solution('3 4\\n300-2000') == 'No'\nassert solution('3 4\\n50-50') == 'No'\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 2') == 'No'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 6') == '1'\nassert solution('3 2 6') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 2 4') == '1'\nassert solution('3 2 3') == '0'\nassert solution('3 2 2') == '0'\nassert solution('3 2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 1') == '1'\nassert solution('1 1 1') == '0'\nassert solution('10 10 10') == '0'\nassert solution('20 10 20') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 2 6\n\"\"\"\n) == \"1\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 4\\n\") == \"3\"\nassert solution(\"6 1 5\\n\") == \"2\"\nassert solution(\"1 4 8\\n\") == \"9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 6\") == \"1\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"4 2 4\") == \"1\"\nassert solution(\"3 2 10\") == \"2\"\nassert solution(\"4 2 10\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 5 3\") == \"1\"\nassert solution(\"5 5 5\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 5') == '1 5'\nassert solution('1 1 5') == '1 5'\nassert solution('5 5 8') == '5 8'\nassert solution('5 5 8') == '5 8'\nassert solution('5 5 8') == '5 8'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\") == \"3 4 7 8\"\nassert solution(\"1 5 2\") == \"1 5 7 8\"\nassert solution(\"8 1 2\") == \"8 1 7 8\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"6 4 5\") == \"6\"\nassert solution(\"3 4 1\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 8, 2]) == '3, 7, 8'\nassert solution([5, 12, 3, 7, 20, 9, 4, 11, 18, 8, 15]) == '5, 12, 9, 11, 18, 15, 20, 7, 4, 3'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"4 1 2\") == \"4\"\nassert solution(\"4 2 4\") == \"4\"\nassert solution(\"3 6 5\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 5, 4, 8, 6, 7, 9, 10]) == '6 7 10'\nassert solution([1, 2, 3, 4, 5]) == '1 5'\nassert solution([10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10]) == '10'\nassert solution([1, 2, 3, 4, 5, 10, 9, 8, 7, 6]) == '1 2 3 4 5'\nassert solution([2, 5, 3, 6, 1, 10, 4, 8, 9]) == '4 5 6'\n",
        "num_ids_2": 45,
        "num_ids_4": 107
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1\") == \"1\"\nassert solution(\"3 5 1\") == \"1\"\nassert solution(\"10 9 8 7 6 5 4 3 2 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 43
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"AXC\"\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AtCoder s Contest') == 'AxC'\nprint('PASS!')\nassert solution('AtCoder Beginner Contest') == 'ABC'\nprint('PASS!')\nassert solution('AtCoder Beginner Contest') == 'ABC'\nprint('PASS!')\nassert solution('AtCoder Beginner Contest') == 'ABC'\nprint('PASS!')\nassert solution('AtCoder Beginner Contest') == 'ABC'\nprint('PASS!')\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Challenge Contest\") == \"ACB\"\nassert solution(\"AtCoder Amateur Contest\") == \"AAC\"\nassert solution(\"AtCoder Expert Contest\") == \"AEC\"\nassert solution(\"AtCoder Expert Beginner Contest\") == \"AEXBC\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\n\"\"\"\nfrom collections import defaultdict\nfrom itertools import groupby",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AtCoder s Contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('AtCoder') == 'AC'\nassert solution('AtCoder Beginner') == 'AB'\nassert solution('AtCoder Beginner Contest') == 'ACB'\nassert solution('AtCoder Beginner Contest 2020') == 'AB2020'\n",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Ultimate Contest\") == \"ARC\"\nassert solution(\"AtCoder Super Ultimate Contest\") == \"ACU\"\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nprint(\"all test cases passed\")\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('AtCoder') == 'AxC'\nassert solution('AtCoder s') == 'AxC'\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder Beginner Contest 2019') == 'ABC'\n",
        "num_ids_2": 21,
        "num_ids_4": 50
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 1 4\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"5 5 7\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 4\\n\") == \"YES\"\nassert solution(\"3 10 5\\n\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 4\n''') == 'YES'\nassert solution('''1 2 3\n''') == 'NO'\nassert solution('''1 1 3\n''') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 5 1\n''') == 'YES', 'Should return \"YES\"'\nassert solution('''\n10 5 4\n''') == 'NO', 'Should return \"NO\"'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"7 6 5\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\") == \"YES\"\nassert solution(\"3 5 4\") == \"NO\"\nassert solution(\"5 3 4\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"1 1 5\n\"\"\") == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '83'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '83'\nassert solution('5 2') == '83'\nassert solution('5 2') == '83'\nassert solution('5 2') == '83'\nassert solution('5 2') == '83'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20 20\") == \"83\"\nassert solution(\"100 30\") == \"97\"\nassert solution(\"100 60\") == \"61\"\nassert solution(\"100 120\") == \"43\"\nassert solution(\"100 100\") == \"100\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('4 4') == '8'\nassert solution('6 6') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 10\n2''') == '2'\nassert solution('''1 1\n1''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''100 17\n''') == \"83\", \"Wrong!\"\nassert solution('''1000 12\n''') == \"1283\", \"Wrong!\"\nassert solution('''1 1\n''') == \"1\", \"Wrong!\"\nassert solution('''1000 10\n''') == \"1084\", \"Wrong!\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '83', \"expected: 83, got: {}\".format(solution('1 1'))\nassert solution('10 10') == '83', \"expected: 83, got: {}\".format(solution('10 10'))",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100 17\n''') == '83'\nassert solution('''2 3\n''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100 17\") == \"83\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"1 20\") == \"20\"\nassert solution(\"1 100\") == \"100\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"2\\n-1\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1000000000000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '13', \"Should return: 13\"\nassert solution('2\\n1 2') == '21', \"Should return: 21\"\nassert solution('4\\n1000000000 1000000000') == '1000000000000000000', \"Should return: 1\"\n",
        "num_ids_2": 41,
        "num_ids_4": 66
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"3\") == \"10000000000000000\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1000000000 1000000000\n''') == '1000000000000000000'\nassert solution('''\n2\n1000000000 1000000000\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"12\") == \"1000000000000000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"1\", \"2\", \"5\"]) == \"24\"\nassert solution([\"1\", \"20\", \"50\"]) == \"-1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1000000000 1000000000\n''') == '1000000000000000000'\n\nassert solution('''\n3\n1000000000 1000000000 1000000000 1000000000\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == \"Yes\"\nassert solution(\"5\\n500\\n\") == \"Yes\"\nassert solution(\"100\\n1\\n\") == \"No\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20') == 'Yes'\nassert solution('300') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yes'\nassert solution('1000') == 'Yes'\nassert solution('1000000') == 'Yes'\nassert solution('1000000000') == 'Yes'\nassert solution('10000000000') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == 'Yes'\nassert solution('5') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2018\\n218\"\n) == \"Yes\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"50\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n9\\n') == 'Yes'\nassert solution('5\\n10\\n') == 'No'\nassert solution('8\\n10\\n') == 'Yes'\nassert solution('0\\n0\\n') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2018\\n218\\n') == 'Yes'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 2\n''') =='safe'\nassert solution('''\n1 3 1\n''') == 'dangerous'\nassert solution('''\n1 4 2\n''') == 'dangerous'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"safe\"\nassert solution(\"5 4 2\") == \"dangerous\"\nassert solution(\"2 3 4\") == \"safe\"\nassert solution(\"5 5 2\") == \"dangerous\"\nassert solution(\"2 5 4\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    4 3 6\n''') =='safe'\nassert solution('''\n    10 10 5\n''') == 'dangerous'\nassert solution('''\n    7 3 2\n''') == 'dangerous'\nassert solution('''\n    2 5 6\n''') == 'dangerous'\nassert solution('''\n    1 1 0\n''') =='safe'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 4\") == \"safe\"\nassert solution(\"5 1 3\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 6') =='safe'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('4 3 7') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 2') =='safe'\nassert solution('1 1 1') == 'dangerous'\nassert solution('1 3 2') == 'dangerous'\nassert solution('1 4 1') == 'dangerous'\nassert solution('1 5 1') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 6') == 'dangerous'\nassert solution('4 3 6') =='safe'\nassert solution('2 4 3') == 'dangerous'\nassert solution('4 2 2') =='safe'\nassert solution('4 1 2') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 1 5') == 'dangerous'\nassert solution('2 1 6') == 'dangerous'\nassert solution('6 1 2') =='safe'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('1 1 1') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"10\\n\") == \"9\\n\"\nassert solution(\"4\\n\") == \"3\\n\"\nassert solution(\"32\\n\") == \"33\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '8'\nassert solution('10') == '9'\nassert solution('100') == '101'\nassert solution('100000000') == '1000101'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\n') == '8'\nassert solution('3\\n') == '3'\nassert solution('9\\n') == '9'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '9'\nassert solution('9') == '9'\nassert solution('123') == '9'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"12\") == \"9\"\nassert solution(\"9\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"16\") == \"9\"\nassert solution(\"12\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"99\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3') == '10'\nassert solution('4\\n1 2\\n1 2\\n3 2') == '17'\nassert solution('5\\n1 2\\n3 2\\n5 2\\n2 2') == '11'\n",
        "num_ids_2": 36,
        "num_ids_4": 62
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '10'\nassert solution('100') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3\n1 1\n3 2\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('4\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('6\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('1\\n2 3\\n3 2\\n1 2') == '6'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '10'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2 3\n1 1\n3 2\n''') == \"10\"\nassert solution('''3\n2 2\n1 1\n3 2\n''') == \"10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2 3\n1 1\n3 2\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n5\n2 3\n3 2\n4 1\n1 1\n6 2\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n4\n2 3\n3 2\n4 1\n1 1\n\"\"\") == \"10\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == '10'\nassert solution('2 3') == '6'\nassert solution('1 1') == '3'\nassert solution('3 2') == '10'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"marl\") == \"no\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"unicorn\") == \"no\"\nassert solution(\"billy\") == \"yes\"\nassert solution(\"cfp\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'no'\nassert solution('test') == 'yes'\nassert solution('testtest') == 'yes'\nassert solution('copyrightable') == 'yes'\nassert solution('university') == 'no'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"how can I be\") == \"no\"\nassert solution(\"Merry Christmas\") == \"no\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abc') == 'yes'\nassert solution('def') == 'no'\nassert solution('ef') == 'yes'\nassert solution('c') == 'yes'\nassert solution('cba') == 'no'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('non-uncopyrightable') == 'no'\nassert solution('i love me') == 'no'\nassert solution('love you') == 'yes'\nassert solution('my name is') == 'no'\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"yes\"\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == 'yes'\nassert solution(\"Uncopyrightable\") == 'no'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''uncompressible\nuncompressible''') == 'yes'\nassert solution('''sad\nsad''') == 'no'\nassert solution('''secret\nsecret''') == 'yes'\n\nprint(solution(input()))\n",
        "num_ids_2": 18,
        "num_ids_4": 25
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('2\\nWEEW') == '0'\nassert solution('3\\nWEEW') == '1'\n\n'''\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\nWEEW\") == \"1\"\nassert solution(\"3\\nWEEW\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nWEEWW\") == \"1\"\nassert solution(\"5\\nWEEWWE\") == \"2\"\nassert solution(\"4\\nEEEEE\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('10\\nWEEWWWEEWWWEEWW') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"6 5\") == \"3\"\nassert solution(\"6 5\") == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"3 3\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1'\nassert solution('''6 2\n2 3\n2 4\n2 5\n4 3\n5 6\n''') == '3\\n2\\n1\\n1'\nassert solution('''4 5\n1 2\n2 3\n3 4\n4 5\n''') == '4\\n4\\n3\\n3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n2\\n1\\n1'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1\\n', f'wrong result {solution(stdin)}'\nassert solution('''2 2\n1 1\n2 1''') == '1\\n1\\n1\\n1\\n', f'wrong result {solution(stdin)}'\nassert solution('''1 2\n3 2\n2 4''') == '2\\n2\\n2\\n2\\n', f'wrong result {solution(stdin)}'\nassert solution('''1 2\n3 2\n2 4''') == '3\\n3\\n3\\n3\\n', f'wrong result {solution(stdin)}'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2\\n2\\n1\\n1', 'test fail'\nassert solution('5 5') == '4\\n4\\n3\\n2\\n1', 'test fail'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '25'\nassert solution('5') == '30'\nassert solution('10') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"\nassert solution(\"6\") == \"25\"\nassert solution(\"7\") == \"30\"\nassert solution(\"9\") == \"30\"\n\nstdin = input()\nprint(solution(stdin))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '25'\nassert solution('10') == '30'\nassert solution('15') == '0'\nassert solution('1') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"5\") == \"30\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n10\\n15') == '25'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n5\\n10\\n10\\n') == '30'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '25'\nassert solution('5') == '30'\nassert solution('10') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"25\"\nassert solution(input()) == \"30\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"2\\n10\\n20\") == \"30\"\nassert solution(\"1\\n10\\n20\") == \"0\"\nassert solution(\"1\\n10\\n5\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\naabbca\n''') == '2'\n\nassert solution('''\n2\naabbca\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nabca') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6\naabbca\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('8') == '1'\nassert solution('3') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"a\"\nassert solution(\"abab\") == \"b\"\nassert solution(\"abababbab\") == \"a\"\n",
        "num_ids_2": 15,
        "num_ids_4": 36
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('123') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabbca\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Sunny'\nassert solution('Cloudy') == 'Cloudy'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Rainy'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Sunny\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\nassert solution('Rainy') == 'Rainy'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"First\"\nassert solution(\"7 0 120\") == \"120\", \"Second\"\nassert solution(\"0 17 120\") == \"120\", \"Third\"\nassert solution(\"7 0 0\") == \"0\", \"Fourth\"\nassert solution(\"7\") == \"0\", \"Fifth\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 17 120\") == \"119\", \"First\"\nassert solution(\"7 5 120\") == \"120\", \"Second\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 10') == '4'\nassert solution('2 1 10') == '4'\nassert solution('3 2 10') == '5'\nassert solution('4 2 10') == '4'\nassert solution('5 2 10') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('5 1 50') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5 100\n1 2 100\n1 3 100\n1 4 100''') == '200'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 10 10') == '10'\nassert solution('17 20 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('6 7 8 10') == '16'\nassert solution('13 21 100') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 120''') == '119'\nassert solution('''7 17 120''') == '119'\nassert solution('''1 5 120''') == '120'\nassert solution('''1 10 120''') == '120'\nassert solution('''7 10 120''') == '120'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 17 120\n''') == '119', \"example\"\nassert solution('''5 7 120\n''') == '120', \"another\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('1 2 3') == '1'\nassert solution('10 10 10') == '10'\nassert solution('1 2 4') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 100\") == \"1000000\"\nassert solution(\"10 1\") == \"50000\"\nassert solution(\"10 100\") == \"6000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"2 2\") == \"3752\"\nassert solution(\"3 3\") == \"4662\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 3\") == \"3600\"\nassert solution(\"1 5\") == \"3000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '3800'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '3800'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1 1\n''') == '3800'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'\nassert solution('4 3') == '0'\n\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 2') == '5600'\nassert solution('1 3') == '5600'\nassert solution('1 4') == '4750'\nassert solution('1 5') == '4750'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n''') == '1900'\n'''\n\nimport sys\nfrom math import factorial",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") == None\nassert solution(\"a\") == \"b\"\nassert solution(\"aA\") == \"a\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('abcd') == None\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == None\nassert solution(\"atcoder\") == None\nassert solution(\"anagram\") == \"n\"\nassert solution(\"ac\") == \"b\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('atcoderregularcontest') == 'b'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abcd\") == \"c\"\nassert solution(\"atcoderregularcontest\") == \"d\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'None'\nassert solution('abc') == 'a'\nassert solution('abcdefgh') == 'b'\nassert solution('aabbccddeeff') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') is None, \"First\"\nassert solution('a') == 'b', \"Second\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\"\"\natcoderregularcontest\n\"\"\") == None\nassert solution(\"\"\"\natcoderregularcontest\"\"\") == \"b\"\nprint(\"Congratulations! Your solution is correct.\")\n",
        "num_ids_2": 20,
        "num_ids_4": 25
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"8\") == \"4\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4 3\") == \"4 3\"\nassert solution(\"4 3 2\") == \"3\"\nassert solution(\"4 1 1 2 3\") == \"3\"\nassert solution(\"3 1 2 3\") == \"2\"\nassert solution(\"3 1 2 3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 4 4 3\\n') == '4\\n3\\n3\\n4\\n'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 4 4 3\\n\") == \"4\\n3\\n3\\n4\\n\"\n\"\"\"\n\nimport math",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('7') == '4'\nassert solution('17') == '5'\nassert solution('0') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 2 2', \"smallest\"\nassert solution('4') == '3 3 3 3', \"middle\"\nassert solution('5') == '4 4 4 4 4', \"largest\"\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 3\") == \"4 3 4\"\n\"\"\"\nimport sys\nsys.stdin = open(file_name)",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4\\n3\\n3\\n4\\n'\nassert solution('5') == '5\\n4\\n4\\n4\\n'\nassert solution('6') == '6\\n5\\n5\\n5\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\\n3\\n3\\n4\\n\"\nassert solution(\"4\") == \"3\\n3\\n3\\n4\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 1 1 2 3\n    \"\"\") == \"1\"\n    \"\"\"\n    1 \\times 1 rectangle can be formed.\n    \"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5') == '2'\nassert solution('10\\n4 5 6 8 7 2') == '20'\nassert solution('100\\n2 1 2 1') == '0'\nassert solution('10\\n10 10 10') == '10'\n",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\", \"Test 1 Failed\"\nassert solution(\"4\") == \"0\", \"Test 2 Failed\"\nassert solution(\"5\") == \"0\", \"Test 3 Failed\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('12\\n5 9 1 8 6 7 2') == '4'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"1\\n\", \"2\\n\", \"3\\n\", \"4\\n\", \"5\\n\"]) == \"2\"\nassert solution([\"4\\n\", \"1\\n\", \"3\\n\", \"2\\n\", \"5\\n\"]) == \"0\"\nassert solution([\"1\\n\", \"1\\n\", \"2\\n\", \"2\\n\", \"3\\n\"]) == \"2\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"3\") == \"1\"\n\"\"\"\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 4 1 1') == '2\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\nassert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\nassert solution(\"6\\n3 1 2 4 2 1\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"7\") == \"8\"\nassert solution(\"10\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 1\\n2') == '8'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"10\") == \"22\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n7 1\n2\n5\n10\n''') == '8'\nassert solution('''1\n3\n1\n3\n3\n''') == '4'\nassert solution('''3\n3 1\n2\n2\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('3') == '5'\nassert solution('5') == '6'\nassert solution('6') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\nassert solution('''\n4\n6 5\n8\n1 2\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 1\\n2\") == \"8\"\nassert solution(\"3\\n7 2\\n5\\n10\") == \"13\"\nassert solution(\"5\\n3 1\\n2\") == \"7\"\nassert solution(\"3\\n7 2\\n5\\n10\") == \"13\"\n",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n\n''') == '8'\nassert solution('''\n6\n4 3\n1 2 1 2 1 2 1\n\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n50') == '2'\nassert solution('2\\n2\\n2\\n500') == '0'\nassert solution('2\\n2\\n2\\n50') == '0'\nassert solution('2\\n2\\n2\\n100') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n20\") == \"0\"\nassert solution(\"0\\n0\\n0\\n20\") == \"1\"\nassert solution(\"0\\n0\\n1\\n20\") == \"1\"\nassert solution(\"1\\n1\\n1\\n20\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2\n2\n100\n''') == '2'\n\nassert solution('''20\n2\n2\n100\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n\"\"\"\nA, B, C, X = list(map(int, stdin.readline().split()))\nprint(X // 50)\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2\n100''') == '2'\nassert solution('''5\n2\n2\n100\n''') == '1'\nassert solution('''4\n2\n2\n100\n''') == '2'\nassert solution('''20\n2\n2\n100\n''') == '2'\nassert solution('''20\n2\n2\n100\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n2\n100''') == '2'\nassert solution('''0\n0\n0\n100''') == '0'\nassert solution('''0\n0\n0\n0''') == '0'\nassert solution('''0\n0\n0\n0''') == '0'\nassert solution('''1\n2\n2\n100''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\") == \"1\"\nassert solution(\"3\\n3\\n3\\n100\") == \"3\"\nassert solution(\"3\\n2\\n2\\n100\") == \"3\"\nassert solution(\"5\\n5\\n5\\n100\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3 2''') == 'Yes'\nassert solution('''-100 -50 -5''') == 'No'\nassert solution('''-2 -1 2''') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nprint(solution(\"10 10 10\"))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"-1 -3 2\") == \"No\"\nassert solution(\"-1 3 2\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 1 3') == 'No'\nassert solution('-1 -3 -2') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('3 3 3') == 'No'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 4 2') == 'No'\n'''\nA,B,C=map(int,stdin.split(' '))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('1 2 3 4') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"0 0 0\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000') == '9'\nassert solution('3 1') == '2'\nassert solution('5 1') == '5'\nassert solution('100 1') == '100'\nassert solution('1') == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n2\") == \"1\"\nassert solution(\"3\\n4\\n2\\n2\") == \"2\"\nassert solution(\"3\\n2\\n3\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n120\\n100\\n140') == '9'\nassert solution('2\\n120\\n100\\n140') == '8'\nassert solution('3\\n120\\n100\\n140') == '7'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string, \"Should be \" + output_string\nprint(solution(input_string))\n\n\"\"\"\n\nn, x = [int(i) for i in input().split()]\n\nm_x = x - n * sum([int(i) for i in input().split()])\n\nprint(min(n, m_x) + 1)\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\nassert solution('''5 100\n120\n100\n140\n100\n120''') == '6'\nassert solution('''4 100\n120\n100\n140\n100\n120''') == '5'\nassert solution('''1 100\n120''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1000 120 100 140\") == \"9\"\nassert solution(\"3 2 1 0\") == \"1\"\nassert solution(\"4 7 13\") == \"3\"\nassert solution(\"2 2 2 3\") == \"1\"\nassert solution(\"1 5 1 3\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 1, 2]) == '3'\nassert solution([3, 1, 2]) == '2'\nassert solution([3, 1, 2, 1]) == '4'\nassert solution([3, 1, 2, 2]) == '4'\nassert solution([3, 1, 2, 2, 1]) == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1000 120 100 140\") == \"9\"\nassert solution(\"3 1000 120 100 140\") == \"6\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 4 5') == '2'\nassert solution('2 3 1') == '3'\nassert solution('2 3 1 2 1 1 2 1 3 2 1 3 1 1 1 2 1 2 2 2') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 65
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"6\") == \"5\"\n\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\napple\"\"\") == \"2\"\nassert solution(\"\"\"3\norange\"\"\") == \"2\"\n\n---------------------------------------------------\n\n3\napple\norange\napple\n\n3\napple\norange\napple\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\norange\n\n4\napple\napple\napple\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\napple\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\napple\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\napple\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\napple\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\napple\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n3\napple\napple\napple\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange\n\n2\napple\norange",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\na\nb''') == '2'\n\nprint('PASS') if solution('''\n2\na\na\nb''') == '2' else print('FAIL')\n\nprint('PASS') if solution('''\n3\na\na\nb''') == '2' else print('FAIL')\n\nprint('PASS') if solution('''\n3\na\na\na''') == '3' else print('FAIL')\n\nprint('PASS') if solution('''\n3\nb\nb\nb''') == '3' else print('FAIL')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n\"\"\"\nn = int(input())\n\nl = []\nfor i in range(n):\n    l.append(input())\n\ncount = 0\nfor i in range(len(l)):\n    s = l[i]\n    n = len(s)\n    d = {}\n    for j in range(n):\n        if s[j] not in d:\n            d[s[j]] = 1\n        else:\n            d[s[j]] += 1\n    count += len(d)\n\nprint(count)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == \"\"\nassert solution(2) == \"apple\"\nassert solution(3) == \"orange\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\napple\\norange\\napple') == '2'\n\nprint(solution('3\\napple\\norange\\napple'))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'\nassert solution('5\\n1439 1440 1440 1440\\n') == '3 3'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"3\\n4 5 3\") == \"0 1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''\n3\n1375 1375 1375\n''') == '1 2'\nassert solution('''\n7\n2000 2100 2100 2100 2700 2700 2100 2700\n''') == '1 1'\nassert solution('''\n4\n2200 1225 1225 1225 1225\n''') == '1 1 1 1'\nassert solution('''\n4\n2200 1225 1225 1225 1225\n''') == '1 1 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2 2\"\nassert solution(\"4\") == \"2 2 2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2 2'\nassert solution('3') == '2 2'\nassert solution('4') == '2 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3\\n2 4\\n3 4') == '2 2'\nassert solution('5\\n6 5\\n7 7\\n6 7\\n8 8\\n5 5') == '2 2'\n\n=========================================\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2'\nassert solution('5\\n3 200\\n1 800\\n3 600\\n3 600\\n4 700') == '2 3'\nassert solution('5\\n800 100\\n200 600\\n400 1000\\n3 800\\n400 800\\n1 3') == '3 3'\nassert solution('2\\n1 1\\n2 2') == '1 1'\nassert solution('2\\n1 4\\n4 3') == '1 1'\n",
        "num_ids_2": 51,
        "num_ids_4": 105
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n200 300 400\\n') == '2 2'\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2 2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"o\") == \"0\"\nassert solution(\"ooxx\") == \"900\"\nassert solution(\"xo\") == \"0\"\nassert solution(\"ooxxo\") == \"1125\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('oxo') == '900'\nassert solution('oxx') == '2000'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''o\nxo\nx''') == '900'\nassert solution('''x\nxo\nx''') == '700'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('o') == '700'\nassert solution('x') == '900'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\nassert solution('ooxx') == '700'\nassert solution('xxo') == '700'\nassert solution('ooxxo') == '900'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"o\") == 700\nassert solution(\"x\") == 700\nassert solution(\"oox\") == 900\nassert solution(\"ooxx\") == 900\nassert solution(\"ooxxxooxxooxooxoxooxoxoxooxooxoxoxoxoxoxoxoxoxoxooxoxoxoxoxoxoxoxooxooxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\", \"Should return 'H'\"\nassert solution(\"H D\") == \"D\", \"Should return 'D'\"\nassert solution(\"D D\") == \"D\", \"Should return 'D'\"\nassert solution(\"D H\") == \"H\", \"Should return 'H'\"\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"H H\\n\") == \"H\"\nassert solution(\"H D\\n\") == \"D\"\nassert solution(\"D H\\n\") == \"H\"\nassert solution(\"D D\\n\") == \"D\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''H H''') == 'H'\nassert solution('''H D''') == 'D'\nassert solution('''D H''') == 'H'\nassert solution('''D D''') == 'D'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''D H\nH D''') == 'D'\n\nassert solution('''H D\nH D''') == 'D'\n\nassert solution('''H D\nD H''') == 'D'\n\nassert solution('''H D\nD D''') == 'H'\n\nassert solution('''H D\nD H''') == 'H'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'H'\n\nSample test case 2:",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"H H\") == \"H\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1112') == '1+1+1+1=7'\nassert solution('2222') == '2+2+2+2=7'\nassert solution('111211') == '1+1+1+1=7'",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1223\") == \"1+2+2+3=7\"\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABCD') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1+2+2+2=7') == '1+2+2+2=7'\nassert solution('3+4+5+6=7') == '3+4+5+6=7'\nassert solution('1+2+3+4=7') == '1+2+3+4=7'\nassert solution('5+6+7+8=9') == '5+6+7+8=9'\nassert solution('2+2+2+3=5') == '2+2+2+3=5'\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1+2+2+2=7'\nassert solution(input()) == '1-2-2-2=7'\nassert solution(input()) == '1*2*2*2=7'\nassert solution(input()) == '1/2/2/2=7'\n\n--- ---\n\nOutput:\n\n1+2+2+2=7\n1-2-2-2=7\n1*2*2*2=7\n1/2/2/2=7\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1221\") == \"1+2+2+1=7\"\nassert solution(\"1223\") == \"1+2+1+2=7\"\nassert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1111\") == \"1+1+1+1=7\"\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"00013\") == \"1-3+1=6\"\nassert solution(\"1345\") == \"2-5+4=9\"\nassert solution(\"1112\") == \"1+1+1=3\"\nassert solution(\"1237\") == \"1+2+3+1=7\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == '1+2+2+2=7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1+2+2+2=7') == '1+2+2+2=7'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 2 2') == '2'\nassert solution('5\\n1 1 2 2') == '0'\nassert solution('5\\n1 1 2 2') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3\\n1\\n2 3') == '2 0 0 0 0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 1 2 2\n''') == '2 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n'\n\nassert solution('''\n5\n1 1 2 2\n''') == '2 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n'\n\nassert solution('''\n4\n1 1 2 2\n''') == '0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 1 2 2\n\"\"\") == \"\"\"2\n2\n0\n0\n0\"\"\"\nassert solution(\"\"\"\n5\n1 2 2 2 1\n\"\"\") == \"\"\"2\n2\n0\n0\n0\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 1 2 2\n''') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"20\") == \"19\"\nassert solution(\"100\") == \"97\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '1'\nassert solution('5\\n') == '2'\nassert solution('6\\n') == '3'\nassert solution('7\\n') == '4'\nassert solution('8\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0''') == '1'\nassert solution('''5''') == '1'\nassert solution('''5''') == '2'\nassert solution('''3''') == '0'\nassert solution('''10''') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1118') == 'Yes'\n\n\"\"\"\nimport sys\nn = int(input())\nn_str = str(n)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"Yes\"\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1118\") == 'Yes'\nassert solution(\"1011\") == 'No'\nassert solution(\"1111\") == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1231') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('1234') == 'No'\nassert solution('1234') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1118\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\n>>> \n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'No'\nassert solution('112') == 'Yes'\nassert solution('1337') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('12') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1118') == 'Yes'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6\\n') == '3'\nassert solution('1\\n1 2\\n2 4\\n3 6\\n') == '4'\nassert solution('3\\n1 2\\n2 4\\n3 6\\n') == '0'\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2,1,5]) == '3'\nassert solution([2,2,6]) == '2'\nassert solution([3,2,3]) == '3'\nassert solution([3,3,4]) == '1'\nprint('Congratulations! All test cases passed!')\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('10') == '9'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['2', '1 5', '2 4', '3 6']) == '3'\nassert solution(['4', '4 3 2 1', '3 3 1 1', '2 3 1 1']) == '3'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('10') == '11'\nassert solution('1000000000') == '5000000000'\nassert solution('20') == '3'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '<'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['A B']) == '<'\nassert solution(['A C']) == '>'\nassert solution(['A B']) == '=<'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A B') == '<'\nprint('All test cases passed!')\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A B') == '<'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A A\") == \"<\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"D E\") == \"<\"\nassert solution(\"B A\") == \"<\"\nassert solution(\"D C\") == \"<\"\nassert solution(\"E D\") == \"<\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A B\") == \"<\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A A') == '<'\nassert solution('B B') == '<'\nassert solution('C C') == '<'\nassert solution('D D') == '<'\nassert solution('E E') == '<'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A A\") == \"A A\"\nassert solution(\"A D\") == \"A D\"\nassert solution(\"B D\") == \"B D\"\nassert solution(\"A C\") == \"A C\"\nassert solution(\"A E\") == \"A E\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == '<'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"11211\"\nassert solution(\"5 5\") == \"11211\"\nassert solution(\"2 2\") == \"1#2#1\"",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"1 2\") == \"1#2#1\"\n\n'''",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5\\n') == '11211'\nassert solution('4 5\\n') == '1123'\nassert solution('5 5\\n') == '11121'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '11211'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\".#.####.###.##.#\") == \"11211\"\nassert solution(\".....#.....#.....#...#.....#.####.####.#####.......\") == \"0111111112\"\n\"\"\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"11211\"\n\n\"\"\"\nimport sys\nimport itertools",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '11211'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n\n''') == '11211'\nassert solution('''7 5\n.....\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\n') == '11211'\nassert solution('3 10\\n') == '11111'\nassert solution('3 10\\n') == '1#2#1'\n",
        "num_ids_2": 28,
        "num_ids_4": 45
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '111222'\nassert solution('3 5') == '112121'\nassert solution('4 5') == '11212'\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 4, 240]) == \"3\"\nassert solution([6, 8, 10, 160]) == \"4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\n\nassert solution('''3 3 480\n90 80 60\n80 120 80\n''') == '2'\n\nassert solution('''7 7 4 500\n20 20 20 20 20 20 20\n20 20 20 20 20 20 20 20\n20 20 20 20 20 20 20 20\n20 20 20 20 20 20 20 20\n20 20 20 20 20 20 20 20\n20 20 20 20 20 20 20 20\n''') == '1'\n\nassert solution('''5 5 20\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"2 2 8\") == \"2\"\nassert solution(\"2 4 5\") == \"1\"\nassert solution(\"3 2 3\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 240\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 4 240\n60 90 120\n80 150 80 150\n\"\"\") == \"3\"\nassert solution(\"\"\"5 2 7\n10 30 50 30 50\n40 20 50 20 50\n30 40 40 40 40\n10 20 50 50 20\n\"\"\") == \"5\"\nassert solution(\"\"\"3 3 2\n1 10 10\n10 10 10\n10 10 10\n\"\"\") == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('1 3 2') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"2 2 5\") == \"3\"\nassert solution(\"3 2 20\") == \"2\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 1 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n\") == \"3\"\nassert solution(\"5 5 4\\n1 1 1 1 1 1\\n\") == \"5\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"60 90 120\") == \"2\"\nassert solution(\"80 150 80 150\") == \"4\"\nassert solution(\"10 4 3 6\") == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 240') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '1'\nassert solution('10 10 10 10') == '1000000000'\nassert solution('1 1 1 1 1') == '1000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"2 2 2 0\") == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"5 4 3\") == \"4\"\nassert solution(\"2 6 2\") == \"12\"\nassert solution(\"3 3 4\") == \"9\"\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\\n\") == \"7900\"\nassert solution(\"200 1000 2000 1600 3 2\\n\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\\n\") == \"7900\"\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 1000 1000 3 3\") == \"800\"\nassert solution(\"1 1000 1000 3 2\") == \"800\"\nassert solution(\"1 1000 1000 3 2\") == \"800\"\nassert solution(\"1 1000 1000 3 2\") == \"800\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1000000 100000 100000 100000 100000') == '100000000'\nassert solution('1000000 200000 100000 100000 100000') == '100000000'\nassert solution('1000000 100000 200000 100000 100000') == '100000000'\nassert solution('1000000 200000 100000 100000 100000') == '100000000'\n",
        "num_ids_2": 35,
        "num_ids_4": 75
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1500, 2000, 1600, 3, 2]) == 7900\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"12\") == \"2\"\nassert solution(\"20\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('123') == '12'\nassert solution('12') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\nassert solution('6') == '7'\nassert solution('7') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"10\") == \"2\"\nassert solution(\"100\") == \"2\"\nassert solution(\"1000\") == \"3\"\nassert solution(\"10000\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('12') == '12'\nassert solution('10') == '10'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"8\"\nassert solution(\"13\") == \"9\"\nassert solution(\"1378\") == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '9'\nassert solution('99') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '9'\nprint(solution(input()))\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1000000\") == \"9\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10\\n\"\n    ) == \"9\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '4'\nassert solution('10') == '9'\nassert solution('20') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('11') == '9'\nassert solution('12') == '12'\nassert solution('13') == '13'\nassert solution('14') == '14'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('6') == '4'\nassert solution('9') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\") == \"2\"\nassert solution(\"3\\n6\\n2\\n5\") == \"0\"\n",
        "num_ids_2": 47,
        "num_ids_4": 66
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"4\\n100\\n100\\n100\\n100\") == \"1\"\nassert solution(\"3\\n10\\n8\\n8\") == \"2\"\nassert solution(\"3\\n10\\n8\\n8\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '3'\nassert solution('4 3') == '2'\nassert solution('7') == '1'\nassert solution('6') == '1'\nassert solution('1') == '1'\n\nN = int(stdin())\nd = list(map(int, stdin().split()))\n\ni = 0\nwhile i < len(d):\n    if d[i] > d[i + 1]:\n        i += 1\n        continue\n    k = d[i + 1]\n    l = i + 1\n    count = 0\n    while l < len(d):\n        if d[l] > k:\n            break\n        l += 1\n        count += 1\n    print(count)\n    i = l + 1\n    i += 1",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\", \"Wrong answer\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"3\"\nassert solution(\"10\\n7\\n6\\n5\\n4\\n3\\n2\\n1\") == \"4\"\n",
        "num_ids_2": 44,
        "num_ids_4": 75
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10\n8\n8\n6\n''') == \"3\"\nassert solution('''\n3\n10\n10\n10\n''') == \"1\"\nassert solution('''\n10\n10\n10\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('s') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"ASDFZX\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"XABCDEFGHI\") == \"5\"\nassert solution(\"ABCDEFGHIJ\") == \"5\"\nassert solution(\"ABCDEFGHIJK\") == \"5\"\nassert solution(\"ABCDEFGHIJKL\") == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution(\"QWERTYASDFZXCVASDFZXCV\") == \"7\"\nassert solution(\"QWERTYASDFZXCVASDFZXCVASDFZXCV\") == \"9\"\n",
        "num_ids_2": 36,
        "num_ids_4": 60
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"QWERTYASDFZXCV\"\n) == \"ASDFZ\"\nassert solution(\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n) == \"AZ\"\nassert solution(\n    \"WOWZKJHGFEDCBA\"\n) == \"WZKJHGFE\"\nassert solution(\n    \"Z\"\n) == \"Z\"\nassert solution(\n    \"A\"\n) == \"A\"\n\n\"\"\"\n\nimport string",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('QWERTYASDFZXCV') == '5'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n8 12 40\n''') == '2'\nassert solution('''3\n8 12 40\n''') == '2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\nassert solution('''1\n10\n''') == '0'\nassert solution('''5\n1 2 3 4 5\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n8 12 40\n''') == '2'\nassert solution('''10\n12 3 10 4 1 9 8 2\n''') == '2'\nprint('You are awesome! All tests are done!')\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n8 12 40\n''') == '2'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '2'\nassert solution('''5\n10\n20\n40\n60\n100\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n8 12 40\n\n''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3''') == '6'\nassert solution('''12''') == '216'\nassert solution('''1''') == '1'\nassert solution('''2''') == '8'\nassert solution('''3''') == '18'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3''') == '6'\n\n2",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5''') == '6'\nassert solution('''5''') == '6'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"6\") == \"18\"\nassert solution(\"10\") == \"39\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"18\"\nassert solution(\"10\") == \"84\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1', \"Wrong answer\"\nassert solution('2') == '2', \"Wrong answer\"\nassert solution('3') == '3', \"Wrong answer\"\nassert solution('4') == '6', \"Wrong answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '11'\nassert solution('100') == '101010'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n = int(stdin)\n        if n%2 == 0:\n            return str(n//2) +'' + str(n//2) +'' + str(n//2)\n        else:\n            return str((n//2) + 1) +'' + str((n//2) + 1) +'' + str((n//2) + 1)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '10'\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1872
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3 1\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 4 4 4 4\") == \"4\"\nassert solution(\"7 7 7 7 7 7\") == \"2\"\nassert solution(\"20 20 20 20 20 20\") == \"18\"\n",
        "num_ids_2": 21,
        "num_ids_4": 50
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'\nassert solution('4 1 1 3 2') == '1'\nprint('All test cases passed.')\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 5 2\") == \"3\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\n\n-------------------\n\n(1) N = int(input())\n    2 <= N <= 100\n    N = number of cards\n\n(2) A = map(int,input().split())\n    A = iterable with N integers (1 <= A[i] <= 100)\n\n(3) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(4) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(5) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(6) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(7) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(8) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(9) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(10) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(11) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(12) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(13) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(14) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(15) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(16) for a in A:\n    if (0 <= a <= 100):\n        print (a)\n    else:\n        print (a - 100)\n\n(17) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(18) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(19) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(20) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(21) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(22) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(23) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(24) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(25) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(26) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(27) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(28) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(29) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(30) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(31) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(32) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(33) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(34) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(35) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(36) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(37) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(38) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(39) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(40) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(41) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(42) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(43) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(44) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(45) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(46) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(47) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A[i] <= 100)\n\n(48) A = list(map(int,input().split()))\n    A = list of N integers (1 <= A",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n4 WA') == '2 3'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"1 1\") == \"1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 WA') == '1 1'\nassert solution('2 WA') == '2 0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == \"2 2\"\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == \"3 2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('10 5\\n1 WA\\n1 AC\\n3 WA\\n3 AC\\n4 WA\\n4 AC\\n4 WA\\n5 WA\\n5 AC\\n') == '11 11'\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nassert solution('''2 2\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"1 WA\") == \"1 1\"\nassert solution(\"1 AC\") == \"1 0\"\nassert solution(\"2 WA\") == \"2 1\"\nassert solution(\"2 AC\") == \"2 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"1 1\\n0 0\\n2 0\\n2 0\\n0 0\\n\") == \"1 1\"\nassert solution(\"10 10\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n3 WA\\n3 AC\\n3 WA\\n4 WA\\n4 AC\\n4 WA\\n\") == \"10 10\"\nassert solution(\"1 1\\n0 0\\n1 1\\n1 1\\n\") == \"1 1\"\n",
        "num_ids_2": 62,
        "num_ids_4": 146
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4 1 5') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == '5'\nassert solution(\"2 1\\n2 1\\n\") == '2'\nassert solution(\"2 2\\n1 1\\n\") == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n4 1 5''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '5'\nassert solution('4 1') == '5'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 1') == '5'\nassert solution('10 3') == '7'\n\nimport sys\nfrom io import StringIO\nimport unittest\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 4') == '5'\nassert solution('5 5') == '1'\nassert solution('5 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"6 5\") == \"6\"\nassert solution(\"4 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n10\n3 3 5''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"16\"\nassert solution(\"1 2\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '1'\n) == '4'\nassert solution(\n    '2'\n) == '16'\nassert solution(\n    '3'\n) == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n10\\n2\\n\"\n) == \"4\"\nassert solution(\n    \"1\\n100\\n2\\n\"\n) == \"20\"\nassert solution(\n    \"1\\n10\\n4\\n\"\n) == \"14\"\nassert solution(\n    \"2\\n10\\n4\\n\"\n) == \"12\"\nassert solution(\n    \"2\\n10\\n2\\n\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520\\n'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n300\n220\n420\n''') == '520'\nassert solution('''\n600\n300\n220\n420\n''') == '600'\nassert solution('''\n0\n1\n2\n3\n''') == '0'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        trains = a + b + c + d\n        buses = a + b + d\n        return min(trains, buses)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a + b, a + c + d, a + d, b + c)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        if a + b >= c and a + c >= d and b + c >= d:\n            return min(a, b, c, d)\n        elif a + b >= c and a + d >= c and b + d >= c:\n            return min(a, b, c, d)\n        elif a + b >= d and a + c >= d and b + c >= d:\n            return min(a, b, c, d)\n        else:\n            return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        if min(a, b, c, d) <= 0:\n            return 0\n        else:\n            return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        if min(a, b, c, d) <= 0:\n            return 0\n        else:\n            return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        if min(a, b, c, d) <= 0:\n            return 0\n        else:\n            return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c, d)\n\n------------------------------------\n\nclass Solution:\n    def solution(self, a, b, c, d):\n        return min(a, b, c",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sorted(stdin.split())) == \"520\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"300\") == \"300\"\nassert solution(\"600\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\n\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '300'\nassert solution('420') == '420'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''600\n300\n220\n420''') == '520'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''600\n300\n220\n420''') == \"520\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"400\") == \"300\"\nassert solution(\"100\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100\n50\n50\n''') == '250', 'Sample Test 1'\nassert solution('''\n1\n1\n1\n''') == '1', 'Sample Test 2'\nassert solution('''\n300\n300\n300\n300\n''') == '450', 'Sample Test 3'\nassert solution('''\n300\n300\n400\n400\n''') == '450', 'Sample Test 4'\nassert solution('''\n400\n300\n300\n300\n''') == '250', 'Sample Test 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n4\n2\n1\n3''') == '6'\nassert solution('''15\n13\n14\n10\n4\n7\n3\n3\n2\n1\n10\n5\n6\n4\n4\n4\n6\n2''') == '19'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n2\"\"\") == \"0\"\nassert solution(\"\"\"5\n2 4 4 0 2\"\"\") == \"4\"\nassert solution(\"\"\"1\n2\"\"\") == \"0\"\nassert solution(\"\"\"5\n2 4 4 0 2\"\"\") == \"4\"\nprint(solution(\"\"\"5\n2 4 4 0 2\"\"\"), end=\"\")\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '4'\nassert solution('3') == '4'\nassert solution('4') == '2'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"10\\n2 4 4 0 2\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 4 5\\n') == '4'\nassert solution('10\\n2 5 7 3 4 6 8 1 9\\n') == '2'\nassert solution('20\\n3 4 7 1 5 2 8\\n') == '0'\n",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n4 4 4\n''') == '3'\nassert solution('''3\n3 2 4\n''') == '1'\nassert solution('''5\n2 1 2 4\n''') == '3'\nassert solution('''5\n2 4 4 0\n''') == '2'\nassert solution('''5\n0 1 2 3\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4', \"Wrong answer\"\nassert solution('10') == '0', \"Wrong answer\"\nassert solution('1000') == '0', \"Wrong answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 4 4 0 2\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 5') == '84'\nassert solution('5 2 5') == '84'\nassert solution('20 2 5') == '84'\nassert solution('2 4 5') == '84'\nassert solution('20 2 5') == '84'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\\n\") == 84\nassert solution(\"20 2 5\\n\") == 84\nassert solution(\"20 2 10\\n\") == 24",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 1\") == \"2\"\nassert solution(\"20 1 5\") == \"84\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 3\\n') == '84'\nassert solution('20 2 5\\n') == '84'\nassert solution('20 5\\n') == '84'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('20 20 20') == '76'\nassert solution('20 5 5') == '76'\nassert solution('20 10 10') == '84'\nassert solution('20 100 100') == '120'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == 84\nassert solution(\"2 3\") == 10\nassert solution(\"4 3\") == 9\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('20 2 4') == '70'\nassert solution('1 2 3 4 5 6') == '30'\nassert solution('1 1 3 5 6 6') == '30'\nassert solution('2 3 4 5 6 6') == '30'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == 84, \"1st example\"\nassert solution(\"2 1 10\") == 8, \"2nd example\"\nassert solution(\"3 12 13\") == 28, \"3rd example\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 10 5\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"20 2 5\"\"\") == \"84\"\nassert solution(\"\"\"20 3 5\"\"\") == \"84\"\nassert solution(\"\"\"20 5 10\"\"\") == \"84\"\nassert solution(\"\"\"20 1 5\"\"\") == \"84\"\nassert solution(\"\"\"20 0 5\"\"\") == \"84\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"ABC1\"\nassert solution('3') == \"ABC3\"\nassert solution('999') == \"ABC999\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('99') == 'ABC99'\nassert solution('89') == 'ABC89'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('101') == 'ABC101'\nassert solution('1000') == 'ABC1000'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"4\", \"3\"]) == \"ABC3\"\nassert solution([\"3\", \"0\"]) == \"ABC0\"\nassert solution([\"0\", \"0\"]) == \"ABC0\"\nassert solution([\"1\", \"2\"]) == \"ABC2\"\nassert solution([\"2\", \"3\"]) == \"ABC3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == \"ABC10\"\nassert solution('100') == \"ABC100\"\nassert solution('1000') == \"ABC1000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"5\") == \"ABC95\"\nassert solution(\"10\") == \"ABC900\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'ABC100'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"100\") == \"ABC100\"\nassert solution(\"10000\") == \"ABC10000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(100) == 'ABC100'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == \"1\"\nassert solution('1 1') == \"0\"\nassert solution('2 2') == \"0\"\nassert solution('2 2') == \"0\"\nassert solution('3 3') == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"1 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 5\n    \"\"\"\n) == \"5\"\nassert solution(\n    \"\"\"\n    5 5\n    \"\"\"\n) == \"5\"\nassert solution(\n    \"\"\"\n    2 2\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    1 1\n    \"\"\"\n) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"8 8\") == \"6\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '5'\nassert solution('0 1') == '0'\nassert solution('1 0') == '1'\nassert solution('1 0') == '1'\nassert solution('4 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1\n2\n''') == '2'\nassert solution('''4\n1\n2\n''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n2\\n\") == \"2\"\nassert solution(\"10\\n3\\n7\\n\") == \"1\"\nassert solution(\"5\\n2\\n3\\n\") == \"1\"\nassert solution(\"3\\n1\\n2\\n\") == \"0\"\nassert solution(\"9\\n1\\n2\\n\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '-1'\nassert solution('5') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n\nn = int(input())\nl = list(map(int, input().split()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n3\\n1\\n2') == '2'\nassert solution('4\\n3\\n2\\n3') == '-1'\nassert solution('5\\n4\\n3\\n3') == '2'\nassert solution('6\\n5\\n2\\n2') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n6\n2\n6\n''') == '1'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '9'\nassert solution('''15\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n''') == '15'\nassert solution('''30\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1000000000\") == \"1\"\nassert solution(\"10000\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '1'\nassert solution('1000000') == '1000001'\nassert solution('10') == '11'\nassert solution('123456789') == '110101'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == '1'\nassert solution('''1\n1\n2\n1\n2''') == '1'\nassert solution('''5\n1\n2\n3\n4\n5''') == '0'\nassert solution('''3\n1\n2\n3''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3\n6\n2\n6\n\"\"\") == \"1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"1 1 2 2 3\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\n\n\"\"\"\n\nn, k = map(int, input().split())\nballs = list(map(int, input().split()))\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1'\nassert solution('10 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 1\\n1 1 1 1 2') == '2'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '1'\nassert solution('100 5') == '1'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\nassert solution('5 5\\n1 1 1 1 1 1') == '5'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"Yes\"\nassert solution('3') == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    2\n    3 1 2\n    6 1 1\n    '''\n) == 'Yes'\nassert solution(\n    '''\n    6\n    7 4 1\n    '''\n) == 'No'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1\\n') == 'Yes\\n'\nassert solution('5\\n0 0 0\\n0 1 1\\n0 0 0\\n0 1 1\\n0 1 1\\n') == 'No\\n'\nassert solution('5\\n0 0 0\\n0 1 1\\n0 1 1\\n0 1 1\\n') == 'Yes\\n'\nassert solution('1\\n1\\n') == 'Yes\\n'\n\n-----Hint:-----\n- Define an empty array, and put elements from stdin in it.\n- Use a loop to process the array elements.\n- Check whether AtCoDeer can reach the destination at time t.\n\"\"\"",
        "num_ids_2": 63,
        "num_ids_4": 114
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"Yes\"\nassert solution('2') == \"No\"\nassert solution('3') == \"Yes\"\nassert solution('4') == \"No\"\nassert solution('5') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 2\n3 1 2\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n2\n3 1 2\n6 1 1\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3 1 2') == 'Yes'\nassert solution('6 1 1\\n6 1 1') == 'No'\nprint(solution(input()))\n\n------------------",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 1 2\\n6 1 1\") == \"Yes\"\nassert solution(\"1\\n3 1 3\\n0 1 3\") == \"No\"\nassert solution(\"1\\n3 0 2\\n1 0 2\") == \"No\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3\n''') == '2'\n\nassert solution('''\n3 5\n''') == '4'\n\nassert solution('''\n7 9\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('3 2') == '2'\nassert solution('3 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\n\"\"\"\n\nimport math\n\na, b = map(int, input().split())\naverage = math.ceil((a + b) / 2)\nprint(average)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"4\"\n\nassert solution(\"5 5\") == \"4\"\n\nassert solution(\"10 10\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'\nassert solution('''7 8\n1 2\n1 3\n1 4\n1 5\n2 4\n2 6\n3 4\n4 5\n4 6\n5 6\n''') == '3'\n\"\"\"\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"1 3\") == \"1 2 3 4 5 6\"\nassert solution(\"2 7\") == \"1 2 5 6 7\"\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''20 20\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20''') == '4'\n\n'''\nRuntime: 12 ms, faster than 99.84% of Python3 online submissions for Number of Bridges.\nMemory Usage: 12.8 MB, less than 100.00% of Python3 online submissions for Number of Bridges.\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '4'\nassert solution('9 4') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 5\n1 2\n2 3\n1 4\n4 5\n''') == '4'\n\nassert solution('''\n2 2\n1 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"12 0\") == \"3\"\nassert solution(\"1 2 3 4 5 6\") == \"5\"\n\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n===================================================================================================\n================================================================",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 6 5') == '6'\nassert solution('1 2 3') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('10 10 10') == '10'\nassert solution('-9 -9 -9') == '-9'\nassert solution('-9 -9 9') == '-9'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"2 3 2\") == \"2\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '7'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 6\") == \"6\"\nassert solution(\"5 7 7\") == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nprint(\"First puzzle correct!\")\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"110 10\"\nassert solution([\"1\", \"2\", \"10\", \"20\", \"15\", \"200\"]) == \"110 10\"\nassert solution([\"1\", \"2\", \"10\", \"20\", \"15\", \"100\"]) == \"110 10\"\nassert solution([\"1\", \"2\", \"10\", \"20\", \"15\", \"200\", \"100\"]) == \"110 10\"\n",
        "num_ids_2": 39,
        "num_ids_4": 98
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\"\"\"\n\nA, B, C, D, E, F = map(int, input().split())",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('3 1 2 10 20 15 200') == '200 10'\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"i18n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('internationalization') == 'i18n'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'i18n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('university') == 'u16n'\nassert solution('builiding') == 'i18n'\nassert solution('bw') == 'b2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('ascii') == 'ascii'\nassert solution('python') == 'pyt'\nassert solution('abcd') == 'abcd'\nassert solution('1234') == '1234'\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization is also abbreviated i18n') == 'i18n'\nassert solution('language is still abbreviated language') == 'lng'\nassert solution('language is still abbreviated language') == 'lng'\n",
        "num_ids_2": 21,
        "num_ids_4": 57
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('nationality') == 'natl'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('internationalization') == 'i18n'\n\nassert solution('india') == 'in'\n\"\"\"\nimport string\n\ns = stdin\ns = s.replace('i18n', '')\ns = s.replace('i', '')\ns = s.replace('a', '')\n\nx = list(s)\n\nfor i in range(0, len(s)):\n    x[i] = x[i].upper()\n\nprint(''.join(x))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'he'\nassert solution('world') == 'wo'\nassert solution('A') == 'A'\nassert solution('abcd') == 'abcd'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''pot\ntop''') == 'YES', 'First'\nassert solution('''CQC\nQCA\nCQC''') == 'NO', 'Second'\nassert solution('''CQC\nQCQ\nCQC''') == 'YES', 'Third'\n",
        "num_ids_2": 16,
        "num_ids_4": 25
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''pot\ntop''') == 'YES'\nassert solution('''not\nand\n\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"\") == \"NO\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''pot\ntop''') == 'YES'\nassert solution('''C_{11}C_{12}C_{13}\nC_{21}C_{22}C_{23}''') == 'YES'\nassert solution('''C_{11}C_{22}C_{13}\nC_{21}C_{22}C_{23}''') == 'NO'\n",
        "num_ids_2": 25,
        "num_ids_4": 43
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('top') == 'YES'\nassert solution('pot') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcd') == 'c'\nassert solution('adcd') == 'c'\nassert solution('adcd') == 'c'\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aba') == 'b'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'b'\nassert solution('abac') == 'b'\nassert solution('abbc') == 'c'\nassert solution('abbac') == 'ac'\nassert solution('abbbac') == 'ac'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abab\") == \"ab\"\nassert solution(\"abbb\") == \"b\"\nassert solution(\"bbbb\") == \"b\"\nassert solution(\"bab\") == \"a\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'b'\nassert solution('abc') == 'c'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"ababc\") == \"c\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aba') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"xyz\") == \"z\"\nassert solution(\"aba\") == \"b\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"4 3 2\") == \"9\"\nassert solution(\"3 4 1\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('10 9 1') == '8'\nassert solution('5 4 2') == '9'\nassert solution('10 9 1') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('10 3 2') == '11'\n\n---Output---\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 5 2\") == \"15\"\nassert solution(\"3 3 4\") == \"15\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 4 1\") == \"0\"\nassert solution(\"5 4 4\") == \"8\"\nassert solution(\"20 30 5\") == \"38\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('10 4 2') == '23'\nassert solution('10 10 2') == '35'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\n\nNote: Please do not use the import command here.\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''4 3 4\n1 3 1\n1 4 3\n''') == '8'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''\n4 5 3\n2 4 3\n1 3 2\n1 2 1\n''') == '14'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 4 2\n1 1 1\n3 3 4''') == '9'\nassert solution('''5 3 3\n1 1 4\n1 2 2\n4 1 1\n2 2 2''') == '6'\nassert solution('''4 4\n1 1 1\n2 2 2\n3 3 3\n1 1 1''') == '9'\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12\"\nassert solution(\"3\\n6 5 1\\n1 10 1\\n1 5 1\") == \"11\"\nassert solution(\"3\\n6 5 1\\n1 10 1\\n0 5 1\") == \"0\"\nassert solution(\"3\\n7 9 5 1\\n1 10 1\\n1 5 1\") == \"10\"\nassert solution(\"3\\n7 9 5 1\\n1 10 1\\n0 5 1\") == \"11\"\n",
        "num_ids_2": 45,
        "num_ids_4": 96
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '12 11 0'\nassert solution('3') == '12 11 0'\nassert solution('1') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n2 2 1\n2 5 1''') == '12'\nassert solution('''4\n6 5 1\n1 10 1\n5 3 1''') == '11'\nassert solution('''2\n3\n1\n''') == '0'\nassert solution('''4\n2 2 1\n2 5 1\n1 10 1\n5 3 1\n1 2 1\n''') == '11'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3]) == '12'\nassert solution([3, 6, 5, 1]) == '12'\nassert solution([6, 5, 1]) == '11'\nassert solution([6, 5, 1, 1]) == '11'\nassert solution([6, 5, 1, 1, 1, 1]) == '11'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"11\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '12'\nassert solution('4') == '11'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"2\") == \"11\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"12\\n11\\n0\"\nassert solution(\"5\") == \"12\\n11\\n0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n.') == '1.'\nassert solution('1\\n.1') == '1.'\nassert solution('1\\n.1\\n') == '1.'\n",
        "num_ids_2": 16,
        "num_ids_4": 43
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"**.\\n..*.\\n..*.\\n..*.\\n**.\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\".!.\") == \".!.\"\nassert solution(\"*..\") == \"*..\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n.\\n.\") == \"*\\n.\\n*\\n.\\n.\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \".\\n*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\") == \".\\n*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\") == \".\\n*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\") == \".\\n*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"2 2\") == \".\\n*.\\n*.\\n*.\\n*.\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n.\n.\n.\n.\n\n3 3\n.*\n.\n.\n.\n''') == '''***\n*\n**\n***\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '***\\n***\\n***'\nassert solution('4 4') == '****\\n****\\n****\\n****'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n.\\n.\\n.') == '..\\n..'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 2\n.*\n.*\n\"\"\") == \"\"\"\n.\n.\n.\n.\n\"\"\".strip(), \"\"\"\n2 2\n.\n.\n.\n.\n\"\"\".strip()\nassert solution(\"\"\"4 4\n.\n.\n.\n.\n\"\"\") == \"\"\"\n.\n.\n.\n.\n\"\"\".strip(), \"\"\"\n4 4\n.\n.\n.\n.\n\"\"\".strip()",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution('2 6 1 4 5') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 4 5\\n\") == \"NO\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('5\\n2 3 1 5') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('5\\n6 2 1 4 5') == 'NO'\nassert solution('5\\n1 6 2 4 5') == 'NO'\nassert solution('5\\n4 5 6 2 1') == 'NO'\nassert solution('4 5 6 2 1') == 'YES'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\n\nassert solution(\"3\") == \"NO\"\n\nassert solution(\"10\") == \"YES\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n\"\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n    \"8\\n\"\n    \"6 6 6 6 6 6 8 8\\n\"\n    \"8\\n\"\n    \"1 2 2 1 2 1 1 2\\n\"\n    \"3\\n\"\n    \"1 3 3\\n\"\n    \"6\\n\"\n    \"1 1 3 4 2 2\\n\"\n) == \"2\"\nassert solution(\n    \"5\\n\"\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n    \"8\\n\"\n    \"6 6 6 6 6 6 8 8\\n\"\n    \"8\\n\"\n    \"1 2 2 1 2 1 1 2\\n\"\n    \"3\\n\"\n    \"1 3 3\\n\"\n    \"6\\n\"\n    \"1 1 3 4 2 2\\n\"\n) == \"3\"\nassert solution(\n    \"5\\n\"\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n    \"8\\n\"\n    \"6 6 6 6 6 6 8 8\\n\"\n    \"8\\n\"\n    \"1 2 2 1 2 1 1 2\\n\"\n    \"3\\n\"\n    \"1 3 3\\n\"\n    \"6\\n\"\n    \"1 1 3 4 2 2\\n\"\n) == \"4\"\nassert solution(\n    \"5\\n\"\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n    \"8\\n\"\n    \"6 6 6 6 6 6 8 8\\n\"\n    \"8\\n\"\n    \"1 2 2 1 2 1 1 2\\n\"\n    \"3\\n\"\n    \"1 3 3\\n\"\n    \"6\\n\"\n    \"1 1 3 4 2 2\\n\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\n\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution() == '3'\nassert solution() == '4'\nassert solution() == '1'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n\"\"\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('100') == '4'\nassert solution('3') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n    \"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n    \"\"\"\n) == \"4\"\nassert solution(\n    \"\"\"\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n    \"\"\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n5 1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('5\\n5 1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('5\\n5 1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('5\\n5 1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n2\\n1 3 3') == '1'\nassert solution('5\\n5 1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\n",
        "num_ids_2": 104,
        "num_ids_4": 208
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n4\"\nassert solution(\"\") == \"0\\n\"\nassert solution(\"2\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n\") == \"2\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 56
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nprint(solution('''\n2\n2\n2\n1\n1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n7 3\\n1 5') == '3'\nassert solution('4\\n7 3\\n22 5') == '1'\nassert solution('4\\n7 3\\n987 13') == '77'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('20\\n100\\n250\\n400\\n500\\n900\\n1000\\n1500\\n1700') == '4'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"6 7\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n7 3\n1 5\n22 5\n987 13\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n2\n1\n''') == '1'\nassert solution('''\n2 5\n1\n1\n''') == '1'\nassert solution('''\n2 10\n1 5\n1 2\n1 3\n1 4\n1 5\n''') == '1'\nassert solution('''\n5 1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n3 5\n1\n1\n1\n2\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n7 3\\n1 5') == '3'\nassert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2\\n2') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 73
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n1 5\n22 5\n987 13\n''') == '3'\n\nassert solution('''\n5\n5\n1 5\n22 5\n987 13\n''') == '5'\n\nassert solution('''\n2\n5\n1 5\n22 5\n987 13\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''2\n4\n4''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0 0 1 1\"\nassert solution(\"2\") == \"0 0 2 3\"\nassert solution(\"3\") == \"0 0 4 5\"\nassert solution(\"4\") == \"0 0 4 5\"\nassert solution(\"5\") == \"0 0 4 5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2''')\n\nassert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2''')\n\n\nassert solution('''3\n10 3\nqwer\nqwerty''') == '0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(s) == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution(s) == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution() == '2 8 3 2 9'\nassert solution() == '26 10'\nassert solution() == '20 10 1 2 3 5 10 5 9 4'\n",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\n''')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \\\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 2 11 10 1 5 2 3 1 10 5 2 1 2 1 1 1 1 1 1 \n10 1 5 1 5 2 1 1 5 1 5 1 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(0).read()) == '26 10'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3\\nqwertyuioplkjhgfdsazxcvbnm\\n6\\n2 1 3 5 2 1 5 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'\n\n\"\"\"\n\nfor i in range(int(input())):\n    n, m = map(int, input().split())\n    s = input()\n    p = [int(i) - 1 for i in input().split()]\n    n_letters = ord('a') - 1\n    for i in p:\n        n_letters += 1\n        if n_letters > ord('z'):\n            n_letters = ord('a') - 1\n    count = [0] * n_letters\n    for i in p:\n        count[ord(s[i]) - ord('a')] += 1\n    for i in count:\n        print(i, end=\" \")",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 4') == '0'\nassert solution('10 20 30') == '36'\nassert solution('5 5 5') == '0'\nassert solution('2 4 3') == '4'\nassert solution('1 1000000000 1000000000') == '1999999994'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('2\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('3\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '2'\nassert solution('4\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '2'\nassert solution('5\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '4'\n",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\"\n) == \"0\"\nassert solution(\n    \"2\\n100000 100000 100000\\n1000000 10000 1000000\\n5000000 5000000 5000000\\n1000000 10000 1000000\\n1000000 10000 1000000\\n
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1\\n3 2\\n2 3\\n\"\n    \"1 10\\n3 9\\n4 8\\n\"\n) == \"0\\n0\\n0\\n\"\nassert solution(\n    \"1 1\\n3 2\\n2 3\\n\"\n    \"1 1000000000 1000000000\\n3 2 5\\n3 2 6\\n\"\n) == \"0\\n0\\n0\\n\"\nassert solution(\n    \"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\"\n) == \"1999999994\\n1999999994\\n2\\n4\\n\"\nassert solution(\n    \"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\"\n) == \"1999999994\\n1999999994\\n2\\n4\\n\"\nassert solution(\n    \"10\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\\n\"\n) == \"0\\n0\\n0\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5''') == '0'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6') == '0'\nassert solution('2\\n6 9 3\\n5 6 1\\n1 2 4\\n9 9 2\\n4 5 3\\n7 1 7') == '1999999994'\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == \"0\"\nassert solution('''\n3 4 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == \"0\"\nassert solution('''\n2 4 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == \"0\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"36\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1999999994\"\nassert solution(input()) == \"1999999994\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\"\nassert solution(\n    \"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"1999999994\"\nassert solution(\n    \"8\\n3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\\n3 2 6\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n10 5 6\n1 2 3 4 5 6\n8 7 6 9\n4 5 7 8\n''') == '1999999994'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\n''') == 'YES'\nassert solution('''\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\n''') == 'NO'\nassert solution('''\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == \"YES\"\nassert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == \"NO\"\nassert solution('''\n4\n1 5 2 6 1\n2\n3\n2\n1\n''') == \"YES\"\nassert solution('''\n4\n2\n5\n1\n2\n''') == \"NO\"\nassert solution('''\n4\n1 2 3 4\n2\n1\n''') == \"NO\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1''') == 'YES'\nassert solution('''4\n1 2 3 4\n1\n3\n4\n5''') == 'NO'\nassert solution('''4\n1 2 3 4\n1\n3\n4\n5''') == 'YES'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n6\\n2') == 'NO'\nassert solution('3\\n4\\n1') == 'YES'\nassert solution('3\\n4\\n1') == 'YES'\nassert solution('3\\n4\\n1') == 'YES'\nassert solution('3\\n4\\n1') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('3\\n4') == 'YES'\nassert solution('5\\n6') == 'YES'\nassert solution('7\\n8') == 'YES'\nassert solution('9\\n10') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\", \"base case 1\"\nassert solution(\"2\") == \"NO\", \"base case 2\"\nassert solution(\"3\") == \"YES\", \"base case 3\"\nassert solution(\"4\") == \"YES\", \"base case 4\"\nassert solution(\"5\") == \"YES\", \"base case 5\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '6 5 2'\n    '1 2 5'\n    '2 3 7'\n    '2 4 4'\n    '4 5 2'\n    '4 6 8'\n    '1 6'\n    '5 3'\n) == '22'\nassert solution(\n    '5 5 4'\n    '1 2 5'\n    '2 3 4'\n    '1 4 3'\n    '4 3 7'\n    '3 5 2'\n    '1 5'\n    '1 3'\n    '3 3'\n    '1 5'\n) == '13'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n'''\n) == '22'\nassert solution(\n'''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n'''\n) == '13'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"13\"\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\nassert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\"\"\") == \"13\"\nassert solution(\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\"\"\") == \"22\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '13'\nassert solution('2 3 3\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n100') == '3'\nassert solution('1\\n1') == '1'\nassert solution('1\\n0') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3\n4\n''') == '3'\n\nassert solution('''\n2\n100\n''') == '2'\n\nassert solution('''\n3\n1\n''') == '1'\n\nassert solution('''\n5\n3\n''') == '3'\n\nassert solution('''\n10\n11\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n10000') == '19683'\nassert solution('2\\n6') == '9'\nassert solution('13\\n2') == '3'\nassert solution('14\\n2') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '69'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n5\n6\n7\n8\n9''') == '1'\nassert solution('''4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30''') == '13'\n\nassert solution('''1\n3\n5\n6\n7\n8\n9\n10''') == '3'\n\nassert solution('''2\n2\n1\n2\n3\n4''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution() == \"9\"\nassert solution() == \"13\"\nassert solution() == \"27\"\nassert solution() == \"6561\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '6561'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1'\nassert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '3 3 3 2 3'\nassert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '2 2 2 2 2'\nassert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1'\nassert solution('''6\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 2 2 2 2 2'\n\nassert solution('''\n7\n4 5 1 2 3 4 5 2\n2 3 2 3 1 3 4\n2 4 2 4 1 2\n2 3 1 4 2 5\n2 5 1 2 3 4\n3 4 2 4 2 2\n2 2 2 1 2 1\n''') == '4 5 4 5 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1 1 1 1 1\"\nassert solution(\"2\") == \"3 3 3 3 3\"\nassert solution(\"3\") == \"2 2 2 2 2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2 2 2 2 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2 3 2 2 2 1 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5 1 1 1 1 1\"\nassert solution() == \"2 1 2 2 3 2\"\nassert solution() == \"2 2 2 2 2 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 3 1 2\") == \"3 3 3 3\"\nassert solution(\"6\\n5\\n3 1 2 4 5\") == \"1 1 1 2 2 2 1\"\nassert solution(\"7\\n6\\n4 1 2 3 4 5 6\") == \"1 1 1 1 1 1 1 1\"\nassert solution(\"7\\n7\\n5 1 2 3 4 5 6 7\") == \"2 2 2 1 1 2 1 2\"\nassert solution(\"8\\n8\\n1 2 3 4 5 6 7 8\") == \"1 1 1 1 1 1 1 1 1\"\n",
        "num_ids_2": 45,
        "num_ids_4": 104
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 1 2 3 4\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 3 4 3'\nassert solution('''\n6\n6 1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 3 2 3 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3 3 3 2 1 3\\n5 3 3 2 1 4 3\\n4 4 4 1 4 3\\n3 3 3 2 1 3\\n5 5 5 5 2 2 1 4\\n2 5 1 1 5 2 4\\n4 4 4 1 4 3\\n3 3 3 2 1 3\\n1 1 1 1 1\\n2 2 2 2 2'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7 5 -2 4 -1 2'\nassert solution('''\n1 5\n1\n''') == '-1 2 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '7\\n-2 4 -1 2\\n'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"7 5 -2 4 -1 2\"\nassert solution([\"1 3 5\", \"2 3 7\"]) == \"4 3 3\"\nassert solution(\"3 4 5 1 2 3\") == \"5 2 4 0 3 1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"8\"\nassert solution([\n    \"2\",\n    \"1\",\n    \"\"]) == \"0\"\nassert solution([\n    \"2\",\n    \"1\",\n    \"\"]) == \"0\"\nassert solution([\n    \"2\",\n    \"1\",\n    \"\"]) == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 20
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7 5 -2 4 -1 2'\nassert solution('3 3') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 40
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '8'\nassert solution(stdin='''\n1 5\n''') == '5 -2 4 -1 2'''\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7'\nassert solution('''\n6 7\n1 4 5 2 6\n''') == '4'\nassert solution('''\n11 15\n1 3 4 2 5 6 8 7 9 10 11 12 13 14 15\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7 5 -2 4 -1 2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 4') == '4'\nassert solution('3 4') == '3'\nassert solution('1 5') == '5'\nassert solution('5 -1') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\n\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\nassert solution('''5\n0 0\n1 1\n2 2\n3 2\n4 1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\nassert solution('''2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''4\n2 2\n1 1\n1 1\n1''') == 'YES'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n4\n7\n2 4\n4 1\n0 5\n1 2\n2 3\n3 6\n5 3\n''') == 'NO'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''\n1\n4 3\n''') == \"YES\"\nassert solution('''\n1\n4 3\n''') == \"YES\"\nassert solution('''\n1\n4 3\n''') == \"YES\"\nassert solution('''\n3\n4 3\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n5\n5\n4 3\n3 3\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == 'NO'\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n5\n5\n4 3\n3 3\n2 2\n2 2\n2 2\n2 2\n2 2\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\n\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\n\nassert solution('''\n1\n3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\n\nassert solution('''\n3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"NO\"\n\nassert solution('''\n3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"YES\"\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"YES\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"YES\"\nassert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"NO\"\nassert solution('''5\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'RUUURRRRUU'\n\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'RRRRUUU'\n\n\"\"\"\n\nimport re\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '0'\nassert solution('1 1') == '1'\nassert solution('500 4') == '500'\nassert solution('217871987498122 10') == '10'\nassert solution('100000000000000001 1') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1\n1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '500'\nassert solution('''5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '2128012501878'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '0'\nassert solution('100 2') == '2'\nassert solution('10000 1') == '1000000'\nassert solution('10000 1') == '100000'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 4\n1 2\n4\n3\n4\n''') == '0'\nassert solution('''\n4\n1 2\n1 3\n4\n1\n''') == '1'\nassert solution('''\n4\n1 4\n2 3\n4\n3\n''') == '3'\nassert solution('''\n4\n1 2\n1 3\n4\n3\n''') == '0'\nassert solution('''\n3\n1 1\n1 2\n1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 3\n5 8\n8 9\n\n''') == '0'\nassert solution('''\n4\n2 2\n3 2\n1 4\n5 2\n1 1\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"500\"\nassert solution(input()) == \"2128012501878\"\nassert solution(input()) == \"999999999999999999\"\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n        3\n        6 2\n        5 3\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n        2\n        10 20\n        1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"8\"\nassert solution(\n    \"\"\"\n        3\n        3 4\n        20 3\n    \"\"\"\n) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '0'\nassert solution('1 1') == '0'\nassert solution('500 4') == '8'\nassert solution('217871987498122 10') == '899999999999999999'\nassert solution('100000000000000001 1') == '899999999999999999'",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '8', 'wrong'\nassert solution('2 1') == '0', 'wrong'\nassert solution('1 1') == '0', 'wrong'\nassert solution('500 4') == '2128012501878', 'wrong'\nassert solution('217871987498122 10') == '99999999999999999999', 'wrong'\n",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == \"0\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '0'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n1 0 1\n3\n1 1 0''') == \"1\"\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == \"0\"\nassert solution('''7\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == \"3\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n'''\n    ) == '2'\nassert solution(\n'''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n'''\n    ) == '4'\nassert solution(\n'''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n'''\n    ) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0') == '2'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n5\\n1 1 0 0 1 1') == '4'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n5\\n1 1 0 1 1') == '1'\nassert solution('5\\n7\\n0 0 1 0 1 0 1\\n6\\n1 0 0 0 0 1') == '2'\n",
        "num_ids_2": 60,
        "num_ids_4": 125
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n0 0 1 0 1\\n2\\n1 0 0\") == \"2\"\nassert solution(\"5\\n7\\n0 0 1 0 1\\n4\\n1 1 0 0 1\") == \"4\"\nassert solution(\"5\\n7\\n0 0 1 0 1\\n3\\n1 0 0\") == \"0\"\nassert solution(\"5\\n7\\n0 0 1 0 1\\n1 2 3 4 5\\n5\\n1 0 0\") == \"0\"",
        "num_ids_2": 58,
        "num_ids_4": 121
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"ab\"\nassert solution(\"3\") == \"baa\"\nassert solution(\"4\") == \"cba\"\nassert solution(\"5\") == \"bcab\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"ab\"\nassert solution(\"3\") == \"cbc\"\nassert solution(\"4\") == \"ccb\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4 3') == 'ccbbaaa'\nassert solution('2\\n6 2') == 'cbcacab'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n4 4') == 'cbcacab'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n4 4\n6 2\n''') == 'abcd'\nassert solution('''3\n7 3\n4 4\n6 2\n''') == 'cbcaca'\nassert solution('''3\n6 3\n7 2\n''') == 'ccbbbb'\nassert solution('''3\n5 4\n3 3\n2 3\n''') == 'bacacb'\nassert solution('''3\n4 4\n6 2\n''') == 'acbab'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2\n''') == 'cbcaca'\nassert solution('''3\n5 5\n4 4\n6 2\n''') == 'cbcaca'\nassert solution('''2\n2 2\n2 2\n''') == 'ababab'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'cbcacab'\nassert solution(input()) == 'abcd'\nassert solution(input()) == 'baabab'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"cbcacab\"\nassert solution(input()) == \"abcd\"\nassert solution(input()) == \"baabab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2''') == \"abcd\"\nassert solution('''3\n7 3\n4 4\n6 2''') == \"cbcacab\"\nassert solution('''3\n7 3\n4 4\n6 2''') == \"baabab\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n7 3\\n4 4') == 'cbcacab'\nassert solution('4 3\\n6 2\\n') == 'abcd'\nassert solution('5 3\\n7 3\\n1 1') == 'abcd'\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '4 6 21'\nassert solution('''\n1\n11\n3 1 4 1 5 9 2 6 5 3 5\n2\n1 1\n6\n1 1 1\n7\n1 1 1\n''') == '3 7 21'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\"\"\") == \"6 23 21\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 2 1'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '3 2 1'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n7\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\"\"\") == \"6 23 21\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"6 23 21\"\nassert solution(\"13\") == \"2 2 1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n7\n1 1 1\n3\n1 2 3\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n6\n9\n2 3 1 4 2\n4\n1 2 1 1\n''') == '1 5 7'\n\nprint(solution('''\n6\n9\n2 3 1 4 2\n4\n1 2 1 1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n\n6\n\n11\n3 1 4 1 5 9 2 6 5 3 5\n\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''\n\n4\n\n20\n3 1 4 1 5 9 2 6 5 3 5\n\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''\n\n3\n\n1\n1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''\n\n4\n\n20\n3 1 4 1 5 9 2 6 5 3 5\n\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\nassert solution('''\n\n4\n\n20\n3 1 4 1 5 9 2 6 5 3 5\n\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '23 21'\n\nassert solution('''\n2\n2\n1 1\n1\n2\n''') == '0 0'\n\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '45 46'\n\nassert solution('''\n2\n2\n1 1\n1\n2\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n5 1 5 1 4 3 5 2\n7\n1 5\n2 1\n2 4\n1 1\n2 1\n1 1\n1 2\n2 1\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5\n1 6\n2 6\n1 7\n2 7\n1 8\n2 8\n1 9\n2 9\n1 10\n2 10\n1 11\n2 11\n1 12\n2 12\n1 13\n2 13\n1 14\n2 14\n1 15\n2 15\n1 16\n2 16\n1 17\n2 17\n1 18\n2 18\n1 19\n2 19\n1 20\n2 20\n1 21\n2 21\n1 22\n2 22\n1 23\n2 23\n1 24\n2 24\n1 25\n2 25\n1 26\n2 26\n1 27\n2 27\n1 28\n2 28\n1 29\n2 29\n1 30\n2 30\n1 31\n2 31\n1 32\n2 32\n1 33\n2 33\n1 34\n2 34\n1 35\n2 35\n1 36\n2 36\n1 37\n2 37\n1 38\n2 38\n1 39\n2 39\n1 40\n2 40\n1 41\n2 41\n1 42\n2 42\n1 43\n2 43\n1 44\n2 44\n1 45\n2 45\n1 46\n2 46\n1 47\n2 47\n1 48\n2 48\n1 49\n2 49\n1 50\n2 50\n1 51\n2 51\n1 52\n2 52\n1 53\n2 53\n1 54\n2 54\n1 55\n2 55\n1 56\n2 56\n1 57\n2 57\n1 58\n2 58\n1 59\n2 59\n1 60\n2 60\n1 61\n2 61\n1 62\n2 62\n1 63\n2 63\n1 64\n2 64\n1 65\n2 65\n1 66\n2 66\n1 67\n2 67\n1 68\n2 68\n1 69\n2 69\n1 70\n2 70\n1 71\n2 71\n1 72\n2 72\n1 73\n2 73\n1 74\n2 74\n1 75\n2 75\n1 76\n2 76\n1 77\n2 77\n1 78\n2 78\n1 79\n2 79\n1 80\n2 80\n1 81\n2 81\n1 82\n2 82\n1 83\n2 83\n1 84\n2 84\n1 85\n2 85\n1 86\n2 86\n1 87\n2 87\n1 88\n2 88\n1 89\n2 89\n1 90\n2 90\n1 91\n2 91\n1 92\n2 92\n1 93\n2 93\n1 94\n2 94\n1 95\n2 95\n1 96\n2 96\n1 97\n2 97\n1 98\n2 98\n1 99\n2 99\n1 100\n2 100\n1 101\n2 101\n1 102\n2 102\n1 103\n2 103\n1 104\n2 104\n1 105\n2 105\n1 106\n2 106\n1 107\n2 107\n1 108\n2 108\n1 109\n2 109\n1 110\n2 110\n1 111\n2 111\n1 112\n2 112\n1 113\n2 113\n1 114\n2 114\n1 115\n2 115\n1 116\n2 116\n1 117\n2 117\n1 118\n2 118\n1 119\n2 119\n1 120\n2 120\n1 121\n2 121\n1 122\n2 122\n1 123\n2 123\n1 124\n2 124\n1 125\n2 125\n1 126\n2 126\n1 127\n2 127\n1 128\n2 128\n1 129\n2 129\n1 130\n2 130\n1 131\n2 131\n1 132\n2 132\n1 133\n2 133\n1 134\n2 134\n1 135\n2 135\n1 136\n2 136\n1 137\n2 137\n1 138\n2 138\n1 139\n2 139\n1 140\n2 140\n1 141\n2 141\n1 142\n2 142\n1 143\n2 143\n1 144\n2 144\n1 145\n2 145\n1 146\n2 146\n1 147\n2 147\n1 148\n2 148\n1 149\n2 149\n1 150\n2 150\n1 151\n2 151\n1 152\n2 152\n1 153\n2 153\n1 154\n2 154\n1 155\n2 155\n1 156",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1') == '6'\nassert solution('5\\n2 1') == '27'\nassert solution('5\\n4 4') == '11'\nassert solution('5\\n4 0') == '17'\nassert solution('3\\n2 3') == '17'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\n\nassert solution('''2\n1 1\n1 1\n2 2\n2 2\n3 3\n3 3\n4 4\n4 4\n5 5\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n\nassert solution('''2\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n\nassert solution('''2\n1 1\n1 1\n2 2\n2 2\n3 3\n3 3\n4 4\n4 4\n5 5\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\n\nassert solution('''2\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1\") == \"6\"\nassert solution(\"5\\n1 2\") == \"27\"\nassert solution(\"5\\n3 4\") == \"39\"\nassert solution(\"5\\n5 5\") == \"11\"\nassert solution(\"5\\n5 5 6 6 5\") == \"17\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"27\"\nassert solution(\"3\") == \"39\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"17\"\nprint(\"All tests passed\")\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2\n1 2\n3 4\n''') == '6'\nassert solution('''\n3\n1 2\n3 4\n''') == '27'\nassert solution('''\n5\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n5\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n5\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"27\"\n\nassert solution(\n\"\"\"\n2\n2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"39\"\n\nassert solution(\n\"\"\"\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"11\"\n\nassert solution(\n\"\"\"\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"17\"\n\nassert solution(\n\"\"\"\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"27\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1 2\n2 2''') == \"27\"\nassert solution('''3 5\n3 1 4 3 2''') == \"39\"\nassert solution('''4 4\n4 1 2 3''') == \"11\"\nassert solution('''5 5\n5 3 4 2 3''') == \"17\"\nassert solution('''10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"27\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n1 2\n3 4''') == '6'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '27'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3''') == '39'\nassert solution('''10 9 10 10 9\n4 0''') == '11'\nassert solution('''4 4 5 4\n1 2 2 1\n4 4 5 4\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2') == '7 6 18 6 16 18 1 17 17'\nassert solution('10 1') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''\n10 2\n5 2 5 2 5 5 2 5 5 2 2 5\n5 2 5 2 5 5 2 5 5 2 5 2\n''') == '0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n4 3\n4 1 2 2''') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''8 3\n2 5 1 6 5 3 8 9 2 5\n4 9 2 1 7 1 1 8 4 4\n5 7 3 6 3 2 1 1 1 8\n6 7 9 2 5 2 1 1 3 6\n7 6 2 8 1 9 1 4 1 7\n8 4 9 1 8 1 3 7 6 7\n9 5 5 9 2 2 1 4 8 2\n''') == '8 4 9 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 9 5 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2 9 5 5 9 2 2 1 4 8 2 5 2 1 4 8 2",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 1') == '0 1 2 3 4 5 6 7 8 9 10'\nassert solution('1 3 2') == '0 1 2'\nassert solution('10 1') == '0 1 2 3 4 5 6 7 8 9 10'\nassert solution('10 2') == '0 2'",
        "num_ids_2": 41,
        "num_ids_4": 76
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n    ''') == '0 7 13 18 24 35 36 37 40 45'\n\nassert solution(\n    '''\n2\n1 1 1 2 2\n    ''') == '0 1 1 2 2'\n\nassert solution(\n    '''\n3\n1 1 1 2 2\n    ''') == '0 1 1 2 2'\n\nassert solution(\n    '''\n4\n1 1 1 2 2\n    ''') == '0 1 1 2 2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0 2 4 7 8 11 13 14 16 17\"\nprint(solution())\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n'''\n) == '0 7 13 18 24 35 36 37 40 45'\nassert solution(\n'''\n100 2\n
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'abb'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"abb\"\nassert solution(\"8 8\") == \"abbaba\"\nassert solution(\"4 1\") == \"aaaaabaaaaabaaaaaaaa\"\nassert solution(\"8 8\") == \"aaaaabaabaabbaaabaababaaaaaaaaaaaabbbbaaabbaabbabbabaabaaaababbbbababbbbabbbbbbbbaaaabbaaaaabbaaaaaabbabaaabbbbabababababbababaabbaaaaaabaaaaabbaaaaabbbbbbbbaabbaaabaaabbbababbbbbbbbbabbabaaababbaaaaabbabbaaabaaaaababbaaaaabbababbababbbbbbbbbbbbaaaabaabaaaababbbbbbaabbabbaaaaabbbaaabaaaaabababaaaaaabaaaabbbbbbbbbbbbaaaabaabbaaaaabbaaaaaabaaaaabbbbbbbbbbbbaaaabaabaaaababbaaabbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaabbbbaaabaaaaababaaaaaabaaaabbbbbbbbbbbbbbaaaabaabaaaaabbaaabbbbbbbbbbbbbabaaabbabbbaaaaababbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaabbbbbbbbbbbbaaaabaabaaaabababaaabbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaabbbbaaabaaaaababaaaaaabaaaabbbbbbbbbbbbbbaaaabaabaaaaabbabaaabbbbbbbbbbbbbabaaabbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaabbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaabbbbbbbbbbbbbbaaaabaabaaaababbabaaaabbbbbbbbbbbbbabaaabbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaaabaaaabbbbbbbbbbbbbbbbaaaabaabaaaababaaabbbbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaabbbbaaabaaaaababaaaaaabaaaabbbbbbbbbbbbbbbbbbaaaabaabaaaaabbaaabbbbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaabbbbaaabaaaaababaaaaaabaaaabbbbbbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaabbbbaaabaaaaababaaaaaabaaaabbbbbbbbbbbbbbbbbbbbbbbbaaaabaabaaaababbabaaabbbbbbbbbbbbbbbbaaaabaabaaaaabaaaabaaaaababaaaaaabaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
        "num_ids_2": 23,
        "num_ids_4": 1471
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\\n') == 'aaabb'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'aaabb', 'Expected'+ solution()\nprint(solution())\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"aabaa\"\nassert solution() == \"aaaab\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"aaaaabaaaaabaaaaaaaa\"\nassert solution() == \"abb\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2''') == 'aaabb'\nassert solution('''3 1\n3 2\n20 100''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == 'aabab'\nassert solution('''\n1\n3\n6\n8\n10\n''') == 'aaaaa'\nassert solution('''\n4\n9\n6\n7\n2\n''') == 'abb'\nassert solution('''\n6\n8\n10\n12\n14\n16\n18\n20\n22\n''') == 'bbaaa'\nassert solution('''\n7\n8\n10\n12\n13\n15\n16\n17\n18\n20\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'babaa'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa'\nassert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'abb'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\nprint('You passed all the tests!')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"6\"\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"7\"\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"10\"\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"10\"\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n2 5\n3 4\n''') == '0'\nassert solution('''\n4 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\") == \"6\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\") == \"1\"\nassert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1000000000\") == \"1\"\n",
        "num_ids_2": 77,
        "num_ids_4": 114
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n10 7 5 15 8\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '6'\nassert solution('''5\n20 2 5 9 3 7\n12 10 9 4 8 14''') == '5'\nassert solution('''6\n-10 4 -1 -7 -2 1 2 -5 4 -8''') == '5'\nassert solution('''4\n10 7\n5 15\n1 1\n1000000000''') == '2'\nassert solution('''3\n-10 -4 5\n-5 -10 2\n10 -9''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4''') == '1'\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000''') == '5'\nassert solution('''5\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n6\n1\n5\n10\n2\n3\n1\n1\n5\n1\n1\n2\n''') == '6'\nassert solution('''\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''5 3\n1\n2\n1\n2\n''') == '3'\nassert solution('''6 3\n1\n2\n1\n2\n''') == '4'\nassert solution('''7 3\n0\n1\n2\n2\n0\n0\n10\n\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3\\n0') == '1\\n2\\n3\\n4\\n4'\nassert solution('4 3\\n1\\n2\\n1') == '0\\n0\\n0\\n0'\nassert solution('4 3\\n1\\n2\\n1\\n2') == '0\\n0\\n0\\n0'\n",
        "num_ids_2": 55,
        "num_ids_4": 87
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\\n2\\n3\\n3\"\nassert solution(\"4 3\") == \"0\\n0\\n0\\n0\"\nassert solution(\"5 3\") == \"0\\n0\\n0\\n0\\n1\"\nassert solution(\"6 3\") == \"0\\n0\\n0\\n0\\n0\\n1\"\nassert solution(\"7 3\") == \"1\\n2\\n3\\n3\"",
        "num_ids_2": 40,
        "num_ids_4": 89
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\") == \"2\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"4\"\nassert solution(\"4 3\\n1\\n2\\n1\\n2\") == \"4\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\\n0\") == \"1\"\nassert solution(\"4 3\\n1\\n2\\n1\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0') == '1\\n2\\n3\\n3\\n4\\n4\\n7\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1\\n2\\n3\\n3\\n4\\n4\\n7'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 49 20 40 30 50 10', 'Should be 1 49 20 40 30 50 10'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 49 20 40 30 50 10\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '13 22'\nprint('Congratulations, have fun with these simple tests!')\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10'\nassert solution('''4 1 3 2\n6 5 2 1\n8 5 1 2\n4 2 1 3\n4 4 5 1\n''') == '2 4 1 6 5 1 2 3 4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10\\n26 32 20 38 44 50 10\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 2 3\n''') == '''\n1 2 3\n'''\nassert solution('''\n10 10 10\n''') == '''\n10 10 10\n'''\nassert solution('''\n10 10 10\n''') == '''\n10 10 10\n'''\nassert solution('''\n10 10 10\n''') == '''\n10 10 10\n'''\nassert solution('''\n1 1 2 3\n''') == '''\n1 2 3\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22''') == '26 32 20 38 44 50 10\\n1 10 13 4 19 22 25 16 7\\n1 20 40 30 50 10\\n1 20 40 30 50 10\\n1 20 40 30 50 10'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == \"1 49 20 40 30 50 10\"\nassert solution('''\n5 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == \"1 49 20 40 30 50 10\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nprint('YOUR CODE IS CORRECT!')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 2 3\"\nassert solution(input()) == \"1 2 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1 2 3'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\"\"\"\nimport sys\nimport collections\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nprint(solution('3 3 1 2'))\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\") == \"1 2 3\"\nassert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1 2 3'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2 2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\\n\") == \"YES\"\nassert solution(\"2\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\\n\") == \"NO\"\n\n\"\"\"",
        "num_ids_2": 57,
        "num_ids_4": 104
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3\") == \"YES\"\nassert solution(\"3\\n2 3\") == \"NO\"\nassert solution(\"4\\n2 2 8 8\") == \"YES\"\nassert solution(\"3\\n3 3\") == \"NO\"\nassert solution(\"4\\n5 5 5 5\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2\n3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'NO'\nassert solution('''5\n2\n3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('2 2 3') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3 3 3') == 'NO'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n5\n2\n3\n4\n5\n5\n''') == 'NO'\nassert solution('''\n3\n1\n2\n''') == 'NO'\nassert solution('''\n2\n2\n2\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3\n4''') == 'NO'\nassert solution('''5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n3\n2 4\n1 2\n5\n2 5\n''') == 'NO'\nassert solution('''\n5\n2 3\n3 3 4\n4 4\n5\n2 5\n''') == 'NO'\nassert solution('''\n5\n2 3\n4 4\n5 5\n6\n2 5\n''') == 'YES'\nassert solution('''\n5\n2 3\n4 4\n5 5\n6\n2 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('3') == '5 3 6 2 4 1 7 8 1 9 2 10'\nassert solution('4') == '5 1 3 6 2 4 7 8 1 9 2 10 13'\nassert solution('5') == '13 9 7 11 8 4 1 3 5 2 6 10 12'\n",
        "num_ids_2": 30,
        "num_ids_4": 73
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2\n4\n6\n7\n13''') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('''3\n2\n4\n6''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n10\\n6') == '10 6 2 1 5 3 4 7 8 9 12 11 13'\nassert solution('4\\n4') == '4 1 2 3'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n6\n7\n13\n\"\"\") == \"-1\"\nassert solution(\n    \"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\"\"\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\n    \"\"\"\n2\n2\n\"\"\") == \"2\"\nassert solution(\n    \"\"\"\n6\n8\n2\n5\n7\n1\n4\n3\n10\n9\n11\n13\n12\n15\n\"\"\") == \"2 5 8 4 1 3 6 7 9 10 12 11 13 14 15\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n1\n''') == '3 1 4 2'\n\nassert solution('''\n5\n4\n1\n''') == '-1'\n\nassert solution('''\n7\n3\n1\n4\n5\n6\n7\n8\n''') == '3 1 4 2 5 6 7 8'\n\nassert solution('''\n6\n3\n1\n4\n5\n6\n''') == '-1'\n\nassert solution('''\n10\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3\n1\n5\n5\n1\n2\n''') == '3 1 4 2'\n\n'''\n2\n1\n2\n3\n2 3\n2 2\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4\\n\") == \"1 2 3 4\"\nassert solution(\"5\\n\") == \"1 2 3 4 5\"\nassert solution(\"1\\n\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n5 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1', 'first test case'\nassert solution('''\n2\n5 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0','second test case'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3') == '1'\nassert solution('4\\n4\\n3 2 6 7\\n3') == '1'\nassert solution('4\\n4\\n1 2 3 4\\n3') == '0'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '0'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\n\nprint('Congratulations, have you solved it')",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '-1'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n6\\n3 2 7 6\\n3\") == \"1\"\nassert solution(\"4\\n3\\n7\\n6\") == \"1\"\nassert solution(\"4\\n3\\n7\\n6\\n8\") == \"0\"\nassert solution(\"4\\n1\\n2\\n3\") == \"0\"\nassert solution(\"4\\n1\\n2\\n3\\n3\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '1'\nassert solution('5\\n10\\n6 4 3 2 1 0\\n1\\n0\\n4\\n4 1 4\\n4\\n7\\n1\\n3\\n2\\n4\\n3\\n6\\n3\\n5\\n6\\n4\\n3\\n7\\n3\\n6\\n7\\n5\\n1\\n4\\n2\\n6\\n1\\n7\\n0\\n5\\n4\\n1\\n7\\n6\\n2\\n3\\n4\\n2\\n0\\n7\\n4\\n1\\n6\\n3\\n5\\n2\\n4\\n1\\n2\\n3\\n1\\n1\\n0\\n7\\n1\\n3\\n5\\n1\\n4\\n0\\n4\\n2\\n4\\n2\\n1\\n2\\n3\\n5\\n3\\n5\\n7\\n4\\n1\\n4\\n3\\n2\\n0\\n4\\n0\\n1\\n1\\n2\\n7\\n2\\n5\\n0\\n0\\n1\\n1\\n2\\n3\\n4\\n2\\n4\\n3\\n5\\n1\\n1\\n2\\n0\\n4\\n4\\n1\\n2\\n1\\n2\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n2\\n1\\n3\\n4\\n3\\n5\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n2\\n1\\n0\\n4\\n1\\n0\\n3\\n0\\n1\\n3\\n4\\n4\\n0\\n3\\n2\\n1\\n0\\n0\\n1\\n2\\n3\\n5\\n0\\n1\\n1\\n2\\n1\\n2\\n3\\n3\\n2\\n4\\n2\\n4\\n3\\n4\\n3\\n3\\n4\\n4\\n4\\n4\\n3\\n0\\n1\\n2\\n2\\n1\\n1\\n1\\n2\\n4\\n2\\n4\\n2\\n3\\n0\\n2\\n4\\n3\\n0\\n1\\n4\\n0\\n1\\n2\\n2\\n4\\n0\\n2\\n1\\n1\\n1\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\",
        "num_ids_2": 1417,
        "num_ids_4": 1417
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1') == '2'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1') == '1'\nassert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1') == '0'\n\n\"\"\"",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''\n2\n7\n7\n3\n4\n4\n3\n3\n3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1 1 1 0 0 0 0 1\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"1 2\") == \"0 -1 1 -1\"\nassert solution(\"1 3\") == \"1 2 1 2\"\nassert solution(\"3 4\") == \"1 2 1 2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 63
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 1 1 0 2 '\n\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1 '\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == \"2 2 2 2 2 1 1 0 2\"\nprint(solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n'''))\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == \"-1 -1 1 -1\"\nprint(solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n'''))\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\n0 0 1 0 0 0 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\n''') == \"1 1 1 1 1 1 1 1 1\"\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == \"-1 -1 -1 -1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2 1 0 1 2 2 2 1 0 2 2 2'\nassert solution('4') == '1 -1 1 1 0 1 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 2 1 1 0 1 2 1 2 1 1 0 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1 1 0 2 1 2 1 2 1 0 1",
        "num_ids_2": 1400,
        "num_ids_4": 1400
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1 1 1 0 0 0 0 1\") == \"2 2 2 2 2 1 1 0 2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1 1 1 0 0 0 0 1') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '0 -1 1 -1'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 1 1 0 2'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '36'\nassert solution('12345') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == -1\nassert solution(\"3\") == 2\nassert solution(\"12\") == -1\nassert solution(\"12345\") == 12\nassert solution(\"15116544\") == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '-1'\nassert solution('12345') == '36'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '0', 'First test case failed'\nassert solution('1') == '-1', 'Second test case failed'\nassert solution('12') == '2', 'Third test case failed'\nassert solution('12345') == '36', 'Fourth test case failed'\nassert solution('15116544') == '2519424', 'Fifth test case failed'\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"36\"\nassert solution(\"12345\") == \"123645\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '2'\n\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('12') == '-1'\nassert solution('12345') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\nassert solution('''5\n6\n7\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''2\n3\n4\n12\n12345\n15116544\n387420489''') == '2'\nassert solution('''4\n5\n6\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''6\n7\n8\n12\n12345\n15116544\n387420489''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n2\n3\n''') == '0'\n\nassert solution('''\n4\n1\n2\n3\n''') == '-1'\n\nassert solution('''\n10\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n6\n6\n6\n6\n6\n6\n6\n6\n''') == '36'\n",
        "num_ids_2": 13,
        "num_ids_4": 19
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 2\nBGGG\n5 3\nRBRG\n5 5\nBBBRR\n''') == '1'\nassert solution('''\n5\n5 3\nRBRG\n5 5\nBBBRR\n''') == '3'\nassert solution('''\n5\n2\nB\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n4 2\nBGGG\n2 3\nRG\n3 4\nBBBR\n''') == '0'\nassert solution('''3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == '3'\n\n\"\"\"\nfrom typing import List\nfrom collections import deque",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == '1'\nassert solution('''\n10 4\nBBBRRBBBRR\n10 2\nBBBBBBBBBR\n10 4\nBBBBBBBBBBR\n10 5\nBBBBBBBBBBB\n10 5\nBBBBBBBBBBB\n10 5\nBBBBBBBBBBB\n''') == '1'\nassert solution('''\n10 4\nBBBRRBBBRR\n10 2\nBBBBBBBBBR\n10 4\nBBBBBBBBBBR\n10 5\nBBBBBBBBBBB\n10 5\nBBBBBBBBBBB\n10 5\nBBBBBBBBBBB\n10 5\nBBBBBBBBBBB\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5 2\\nBGGGG\") == \"0\"\nassert solution(\"2\\n5 3\\nRBRGR\") == \"3\"\nassert solution(\"3\\n5 5\\nBBBRR\") == \"3\"\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR\") == \"1\"\nassert solution(\"5 2\\nBGGG\\n5 3\\nRBRG\\n5 5\\nBBBR\") == \"3\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"0\"\nassert solution(\"5 3\\nRBRGR\") == \"3\"\nassert solution(\"5 5\\nBBBRR\") == \"3\"",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nprint(solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == \"3\"\nassert solution('''\n1\n3\n3 1 2 3 1\n''') == \"2\"\nprint(\"All tests passed!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == \"3\"\nassert solution('''1\n1 1 1 1 1 1 2 2''') == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1') == '3'\nassert solution('2\\n7\\n1 1 1 1 1 2 2') == '3'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\nassert solution('''3\n3 1 2 3 1\n2\n4 1 3\n''') == '3'\nassert solution('''2\n3\n4\n2\n''') == '1'\nassert solution('''3\n2\n4\n3\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n3 1 2 3 1\n6\n3 1 1 1 2 2\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == \"3\"\nassert solution('''1\n7\n1 1 1 1 1 2 2\n''') == \"3\"\nassert solution('''5\n2\n1 2\n1 3\n2 4\n3 6\n''') == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 1 3 2\") == \"1 5 2 4 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 41
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1 5 2 4 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5 4 1 3 2\") == \"1 5 2 4 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 2 3 4\"\n\nassert solution('''3\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 2 3 4\"\n\nassert solution('''6\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 2 3 4\"\n\nassert solution('''6\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 2 3 4\"\n\nassert solution('''7\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == \"1 2 3 4\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\") == \"1 5 2 4 3\"\nassert solution(\"4\\n4 2 1 3 5\\n1 2 3 4 5\\n3 4 2 1 5\\n1 2 3 4 5\\n4 5 3 2 1\\n1 2 3 4 5\\n4 5 3 2 1\\n2 1 5 4 3\\n1 2 3 4 5\\n5 4 2 1 3\\n1 2 3 4 5\\n3 4 2 1 5\\n1 2 3 4 5\\n3 4 5 2 1\\n1 2 3 4 5\\n3 4 2 1 5\\n3 4 5 2 1\\n3 4 5 2 1\\n5 4 3 2 1\\n1 2 3 4 5\") == \"1 2 3 4 5\"",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 4 1\n4\n2 1 4''') == '2 1 4'\n\nassert solution('''4\n2 3 1 5\n5\n2 3 1''') == '2 3 1 5'\n\nassert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 2 4 3 5'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1 2 4 3\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"1 2 3 4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 4 3 2\") == \"5 4 3 2 1\"\nassert solution(\"4\") == \"1 2 3 4\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\n'''\n\n--------------------------------------------------------------\n\nProblem Title: Minimum Permutation\n\nDescription:\n\nGiven a permutation of length $n$. Recall that the permutation is an array consisting of $n$ distinct integers from $1$ to $n$ in arbitrary order. For example, $[2, 3, 1, 5, 4]$ is a permutation, but $[1, 2, 2]$ is not a permutation ($2$ appears twice in the array) and $[1, 3, 4]$ is also not a permutation ($n=3$ but there is $4$ in the array).\n\nYou can perform at most $n-1$ operations with the given permutation (it is possible that you don't perform any operations at all). The $i$-th operation allows you to swap elements of the given permutation on positions $i$ and $i+1$. Each operation can be performed at most once. The operations can be performed in arbitrary order.\n\nYour task is to find the lexicographically minimum possible permutation obtained by performing some of the given operations in some order.\n\nYou can see the definition of the lexicographical order in the notes section.\n\nYou have to answer $q$ independent test cases.\n\nFor example, let's consider the permutation $[5, 4, 1, 3, 2]$. The minimum possible permutation we can obtain is $[1, 5, 2, 4, 3]$ and we can do it in the following way:\n\n  perform the second operation (swap the second and the third elements) and obtain the permutation $[5, 1, 4, 3, 2]$;  perform the fourth operation (swap the fourth and the fifth elements) and obtain the permutation $[5, 1, 2, 4, 3]$;  perform the third operation (swap the third and the fourth elements) and obtain the permutation $[5, 1, 2, 3, 4]$;  perform the first operation (swap the first and the second elements) and obtain the permutation $[1, 5, 2, 4, 3]$; \n\nAnother example is $[1, 2, 4, 3]$. The minimum possible permutation we can obtain is $[1, 2, 3, 4]$ by performing the third operation (swap the third and the fourth elements).\n\n\n-----Input-----\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 100$) \u2014 the number of test cases. Then $q$ test cases follow.\n\nThe first line of the test case contains one integer $n$ ($1 \\le n \\le 100$) \u2014 the number of elements in the permutation.\n\nThe second line of the test case contains $n$ distinct integers from $1$ to $n$ \u2014 the given permutation.\n\n\n-----Output-----\n\nFor each test case, print the answer on it \u2014 the lexicograhically minimum possible permutation obtained by performing some of the given operations in some order.\n\n\n-----Example-----\nInput\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n\nOutput\n1 5 2 4 3 \n1 2 3 4 \n1 \n1 4 3 2 \n\n\n\n-----Note-----\n\nRecall that the permutation $p$ of length $n$ is lexicographically less than the permutation $q$ of length $n$ if there is such index $i \\le n$ that for all $j$ from $1$ to $i - 1$ the condition $p_j = q_j$ is satisfied, and $p_i < q_i$. For example:\n\n  $p = [1, 3, 5, 2, 4]$ is less than $q = [1, 3, 5, 4, 2]$ (such $i=4$ exists, that $p_i < q_i$ and for each $j < i$ holds $p_j = q_j$),  $p = [1, 2]$ is less than $q = [2, 1]$ (such $i=1$ exists, that $p_i < q_i$ and for each $j < i$ holds $p_j = q_j$).\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 4 3 2\") == \"1 2 3 4 5\"\nassert solution(\"3 2 4 1\") == \"1 2 3 4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4 3 2 1\"\n\n'''",
        "num_ids_2": 34,
        "num_ids_4": 57
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n1 2 3\\n4') == '1 2 3 4'\nassert solution('4\\n3 1 2 4\\n5') == '5 1 2 4 3'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == \"YES\"\nassert solution('5\\n6\\n2 4 3 1 5\\n3\\n1 5 4 2\\n5\\n1 2 3 4 5\\n1\\n1\\n5\\n3 2 1 5 4') == \"NO\"\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4') == \"YES\"\n",
        "num_ids_2": 108,
        "num_ids_4": 145
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"5\n5\n1 2 3 4\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n1 2 3 4 5\n1 5 2 3 4\n3\n1 5 2 3 4\n1 3 2 1 5 4\n5\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'YES'\nassert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('2') == 'YES'\nassert solution('5') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4\n1 2 3 4''') == 'YES'\nassert solution('''4\n4\n1 3 2 4''') == 'YES'\nassert solution('''5\n4\n1 2 3 4''') == 'NO'\nassert solution('''3\n4\n1 2 3''') == 'NO'\nassert solution('''5\n3\n1 2 3 5 4''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\nassert solution('5\\n3\\n1 2 3 4\\n5 4 3 2 1') == 'YES'\nassert solution('5\\n3\\n1 2 3 4\\n5 4 3 2 1\\n3') == 'NO'\nassert solution('5\\n4\\n1 2 3 4\\n5 4 3 2 1\\n3\\n1 3 2\\n1 2 3\\n1 3 2') == 'NO'",
        "num_ids_2": 53,
        "num_ids_4": 126
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'YES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'YES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'NO'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'YES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1') == 'NO'\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3\n1 2\n2 3\n''') == 'NO'\nassert solution('''\n2\n2\n1 3\n3 2\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nNO\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'NO'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\\n1\\n5\\n3 2 1 5 4') == 'YES\\nYES\\nNO\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 2') == '18'\nassert solution('5 2') == '10'\nassert solution('5 2') == '6'\nassert solution('100000 50010') == '75015'\nprint('all tests passed')",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5'\nassert solution('''5 5\n12 4\n12 7\n6 2\n100000 50010''') == '18'\nassert solution('''5 6\n12 4\n12 7\n6 2\n100000 50010''') == '10'\nassert solution('''5 7\n12 4\n12 7\n6 2\n100000 50010''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''5\n2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''5\n2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''5\n2\n19 4\n12 7\n6 2\n100000 50010\n''') == '6'\nassert solution('''5\n2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\\n\") == \"5\\n18\\n10\\n6\\n75015\\n\"\nassert solution(\"5 3\\n3 2\\n3 3\\n4 1\\n3 1\\n\") == \"2\\n3\\n3\\n\"\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 4\\n12 7\\n6 2\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\nassert solution('5\\n7 7\\n5 2\\n6 7\\n100000 50010\\n') == '5\\n18\\n10\\n6\\n75015\\n'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '6'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3') == '4 2 4'\nassert solution('100 4') == '55 5 5 35'\nassert solution('8 7') == '3 1 1'\nassert solution('97 2') == '1 1 1'\nassert solution('8 8') == '1 1 1 1 1 1 1'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\n4 2 4\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == 'YES 4 2 4'\nassert solution('1000000000 9') == 'YES 1 1 1 1 1 1 1 1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n''')\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\nassert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES'\nassert solution('10\\n3 1\\n1000000000 9') == 'NO'\nassert solution('10\\n10 2\\n1000000000 9') == 'YES'\nassert solution('10\\n3 1\\n1000000000 9') == 'YES'\n",
        "num_ids_2": 52,
        "num_ids_4": 92
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == 'YES 4 2 4'\nassert solution('''5\n3 10\n5 3\n1000000000 9''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\") == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n\"\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '51'\nassert solution('''3\n1 3 2\n1 4 2\n1 6 3\n''') == '12'\n",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n2 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '5'\nassert solution('''\n3 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '4'\nassert solution('''\n5 5 8\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n123456789\n''') == '15000000000000000'\nassert solution('''\n5 5 8\n1 10 100\n123456789\n''') == '15000000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n2 1 2\n3\n6\n''') == '3'\nassert solution('''\n3 1 1\n1\n2\n''') == '3'\nassert solution('''\n4 1 1\n1\n2\n3\n''') == '3'\nassert solution('''\n3 1 1\n1\n2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000\\n23 34 45\\n') == '4\\n55\\n15000000000000000\\n51\\n'\nprint(solution(*[*[int(i) for i in input().split()],] for _ in range(int(input()))]))",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 3 4\\n\"\n    \"1 10 100\\n\"\n    \"10000000000000000 10000000000000000 10000000000000000\\n\"\n    \"23 34 45\") == \"55\\n\"\n\nassert solution(\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    \"1 1 1\\n\"\n    ",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n\"\"\") == \"55\"\nassert solution(\"\"\"\n1 2\n1 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 1\n1 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 1\n2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8 5\n1 5 2 3 4\n\"\"\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4'\nassert solution('10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '51'\nassert solution('10000000000000000 10000000000000000 10000000000000000\\n10000000000000000 10000000000000000 10000000000000000') == '0'\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000') == '4\\n55\\n15000000000000000\\n51'\nassert solution('4\\n1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45') == '4\\n55\\n15000000000000000\\n51'\n",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '0'\nassert solution('6') == '16'\nassert solution('16') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n) == \"1\\n\"\nassert solution(\n    \"1\\n\"\n    \"10\\n\"\n    \"100\\n\"\n) == \"55\\n\"\nassert solution(\n    \"2\\n\"\n    \"23\\n\"\n    \"34\\n\"\n) == \"15000000000000000\\n\"\nassert solution(\n    \"3\\n\"\n    \"1\\n\"\n    \"5\\n\"\n) == \"1\\n\"\nassert solution(\n    \"10000000000000000 1\\n\"\n    \"20000000000000000 2\\n\"\n    \"30000000000000000 3\\n\"\n) == \"23\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\n\nassert solution('''\n6 3\naaaa\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\n\nassert solution('''\n4 4\nabcde\nabcce\nabcdef\n''') == '3'\n\nassert solution('''\n6 4\nabcdefghijklmnopqrstuvwxyz\n''') == '8'\n\nassert solution('''\n6 4\nabcdefghijklmnopqrstuvwxyz\n''') == '8'\n\nassert solution('''\n6 4\nabcdefghijklmnopqrstuvwxyz\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3\\nabcbac') == '3'\nassert solution('6 3\\naaa') == '5'\nassert solution('6 3\\nabca') == '4'\nassert solution('6 3\\nabca') == '4'\nassert solution('6 3\\nabca') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '4'\nassert solution('''\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 5\nabcd\na\naaa\ne\nbbb\nc\n''') == '4'\nassert solution('''\n4 6\nabcb\nacbd\na\naaa\n''') == '3'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\nabcbac\\n\") == \"3\"\nassert solution(\"6 3\\naaa\\n\") == \"5\"\nassert solution(\"6 3\\nababa\\n\") == \"10\"\nassert solution(\"6 3\\necbedececacbcbccbdec\\n\") == \"15\"\nassert solution(\"6 3\\nabcbac\\n\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 5') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('6 2') == 'NO'",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 3\\n4 2\\n5 4') == 'YES\\n1 3 5\\n'\nassert solution('3\\n4 3\\n5 2') == 'NO'\nassert solution('3\\n1 2\\n2 3') == 'YES\\n1 2\\n'",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\nNO'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\nassert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'NO'\nassert solution('''\n2\n4\n3 4\n2 4 6\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('2\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('1\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'",
        "num_ids_2": 93,
        "num_ids_4": 123
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES\\n1 3 5\\nNO\\nNO'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"YES\\n1 3 5\\nNO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 5\n1 2 3 4 5\n5 7 8 4 10 2''') == 'YES'\nassert solution('''5 4\n1 2 3 4 5\n5 7 8 4 10 2''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"00000010100101000001111010011100\") == 964176192\nassert solution(\"111111111111111111111111111111111\") == 3221225471\n\n\"\"\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '964176192'\n\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(Solution.__init__.__doc__) == Solution.__init__.__doc__\n\n\n'''\nimport operator\nimport functools\n\nclass Solution:\n    @classmethod\n    def __init__(self):\n        self.bin_to_int_map = {str(i): i for i in range(2**32)}\n        self.int_to_bin_map = {i: bin(i)[2:] for i in range(2**32)}\n\n    def __init__(self, val: str) -> int:\n        self.val = val\n        self.bin = list(val)\n        self.int = self.bin_to_int(self.bin)\n\n    def __repr__(self):\n        return f\"{self.bin_to_int_map[self.val]}\"\n\n    def bin_to_int(self, val: list) -> int:\n        return functools.reduce(operator.__add__, map(self.bin_to_int_map.get, val), 0)\n\n    def int_to_bin(self, val: int) -> list:\n        return list(map(self.int_to_bin_map.get, bin(val)[2:]))\n\n    def reverse_bits(self) -> int:\n        return functools.reduce(operator.__sub__, map(self.bin_to_int_map.get, self.bin), 0)\n\n    def reverse_bits_linear(self) -> int:\n        val = 0\n        for i in range(32):\n            val = (val << 1) + self.bin_to_int_map[self.bin[i]]\n        return val\n\n    def reverse_bits_fast(self) -> int:\n        return functools.reduce(operator.__add__, map(self.bin_to_int_map.get, self.bin[::-1]))\n\n    def reverse_bits_fast_linear(self) -> int:\n        val = 0\n        for i in range(32):\n            val = (val << 1) + self.bin_to_int_map[self.bin[i]]\n        return val\n\n    def reverse_bits_fast_no_list(self) -> int:\n        return int((''.join(reversed(self.bin))), 2)\n\n    def reverse_bits_fast_no_list_linear(self) -> int:\n        return functools.reduce(operator.__add__, map(self.bin_to_int_map.get, reversed(self.bin)))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '000000000000000000000000'\nassert solution('1') == '1'\nassert solution('101') == '101'\nassert solution('100111011111111111111111111111111') == '3221225471'\n\nassert solution('100000010100101000001111010011100') == '964176192'",
        "num_ids_2": 21,
        "num_ids_4": 53
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\\\n0000000010000000\n001111111111111111\n001111111111111111\n001111111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001111111111111\n000001",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution
        "num_ids_2": 1676,
        "num_ids_4": 1676
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == solution(input)\n\n'''\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        '''\n        This is the first attempt using bitwise operations. The idea is to just flip each bit from left to right.\n        '''\n        \n        #bit_str = '{0:032b}'.format(n)\n        bit_str = bin(n)[2:]\n        \n        return int(bit_str[::-1], 2)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == '10111111111111111111111111111111'\nassert solution('111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        "num_ids_2": 1676,
        "num_ids_4": 1676
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '964176192'\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example1) == \"964176192\"\nassert solution(example2) == \"3221225471\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == [\"1\",\"1\",\"1\",\"1\",\"1\"]\nassert solution(\"6\") == [\"1\",\"1\",\"1\",\"2\",\"3\",\"3\",\"2\",\"1\",\"1\",\"1\"]",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5'\n    ) == '\\n'.join([str(row) for row in [\n        [1],\n        [1, 1],\n        [1, 2, 1],\n        [1, 3, 3, 1],\n        [1, 4, 6, 4, 1]\n    ]]), solution(\n        '5'\n    )\nassert solution(\n    '4'\n    ) == '\\n'.join([str(row) for row in [\n        [1],\n        [1, 1],\n        [1, 2, 1],\n        [1, 3, 3, 1]\n    ]]), solution(\n        '4'\n    )\nassert solution(\n    '3'\n    ) == '\\n'.join([str(row) for row in [\n        [1],\n        [1, 1],\n        [1, 2, 1]\n    ]]), solution(\n        '3'\n    )\nassert solution(\n    '2'\n    ) == '\\n'.join([str(row) for row in [\n        [1],\n        [1, 1]\n    ]]), solution(\n        '2'\n    )\nassert solution(\n    '1'\n    ) == '\\n'.join([str(row) for row in [\n        [1]\n    ]]), solution(\n        '1'\n    )\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1']), \\\n        solution('5')\nassert solution('8') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1', '1,5,10,10,5,1', '1,6,15,20,15,6,1', '1,7,21,35,35,21,7,1']), \\\n        solution('8')\n",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])\nassert solution('3') == '\\n'.join(['1', '1,1', '1,2,1'])\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"[1, 1, 1, 1, 1]\"\nassert solution(\"4\") == \"[1, 1, 1, 1, 1]\"\nassert solution(\"3\") == \"[1, 1, 1, 1]\"\nassert solution(\"2\") == \"[1, 1]\"\nassert solution(\"1\") == \"[1]\"\n",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n''') == '\\n'.join(['\\n'.join(map(str, row)) for row in [[1],\n                                                         [1,1],\n                                                         [1,2,1],\n                                                         [1,3,3,1],\n                                                         [1,4,6,4,1]]])\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == sol\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([0]) == [[]]\nassert solution([1]) == [[1]]\nassert solution([2]) == [[1], [1, 1]]\nassert solution([3]) == [[1], [1, 1], [1, 2, 1]]\nassert solution([4]) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n",
        "num_ids_2": 19,
        "num_ids_4": 56
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n\"\"\") == \"\".join(\n\"\"\"\n[\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n\"\"\")\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n''') == \"[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1]\\n]\"\nassert solution('''6\n''') == \"[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1],\\n  [1,5,10,10,5,1]\\n]\"\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nuser@google.com\\nuser@facebook.com\\n\") == [\"user@google.com\",\"user@facebook.com\"], \"Should be ['user@google.com','user@facebook.com']\"\n>>>>>>> Stashed changes\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\njane@google.com\\njohn@google.com\\n\") == [\"john@google.com\", \"jane@google.com\"]\nassert solution(\"3\\ngoogle@abc.com\\ngmail.com\\nyahoo.com\\nyahoo.com\\n\") == [\"google@abc.com\", \"yahoo.com\"]\nassert solution(\"1\\n\") == []\n",
        "num_ids_2": 83,
        "num_ids_4": 93
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\n    \"vmishra@gmail.com\",\n    \"xyz@gmail.com\",\n    \"abc@gmail.com\"\n]) == \"vmishra@gmail.com,abc@gmail.com,xyz@gmail.com\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['a@b.com','c@d.com','e@f.com']) == [\"a@b.com\",\"c@d.com\",\"e@f.com\"]\nassert solution(['a@1.com','2@b.com']) == [\"a@1.com\",\"2@b.com\"]\nassert solution(['a@b.com','c@d.com','e@f.com','g@h.com']) == [\"a@b.com\",\"c@d.com\",\"e@f.com\",\"g@h.com\"]\n=====Sample Input&Output=====\nInput\n\n10\na@b.com\nc@d.com\ne@f.com\ng@h.com\nj@i.com\nn@o.com\np@q.com\nr@s.com\nt@u.com\nw@x.com\nOutput\n\n['a@b.com','c@d.com','e@f.com','g@h.com','j@i.com','n@o.com','p@q.com','r@s.com','t@u.com','w@x.com']\nExplanation\n\nValid email addresses are those that contain\nthe username@websitename.extension format type.\n\nWe can find those email addresses in the given input.\n\nOutput is the list of those email addresses in lexicographical order.\n\nUsing lambda function we can filter those emails.\n\n=====Test cases=====\nYour code should work for many inputs. We are opening a file containing a series of inputs on one line and your program should work with them. ",
        "num_ids_2": 76,
        "num_ids_4": 132
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nabcd@gmail.com\nzzz@abc.com\n''') == [\"abcd@gmail.com\", \"zzz@abc.com\"]\nassert solution('''\n2\n''') == []\nprint(solution('''\n2\na@abc.com\nb@abc.com\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\nk@m.co\\n\") == [\"k@m.co\"]\nassert solution(\"4\\nbcdefghijklmnopqrstuvwxyz@gmail.com\\nefghijklmnopqrstuvwxyz@gmail.com\\nijklmnopqrstuvwxyz@gmail.com\\nopqrstuvwxyz@gmail.com\") == [\"bcdefghijklmnopqrstuvwxyz@gmail.com\", \"efghijklmnopqrstuvwxyz@gmail.com\", \"ijklmnopqrstuvwxyz@gmail.com\", \"opqrstuvwxyz@gmail.com\"]\n\"\"\"\n",
        "num_ids_2": 170,
        "num_ids_4": 170
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\njfsf@f') == ['jfsf@f']\nassert solution('2\\njfssd@f') == ['jfssd@f']\nassert solution('1\\njfssdd@f') == ['jfssdd@f']\nassert solution('3\\njfssfds@f') == ['jfssfds@f']\nassert solution('1\\njfssddds@f') == ['jfssddds@f']\n",
        "num_ids_2": 44,
        "num_ids_4": 92
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == [\"aa@bb.com\", \"bb@aa.com\", \"cc@ee.com\", \"dd@cc.com\"]\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == []\nassert solution('a@google.com') == ['a@google.com']\nassert solution('test.email+alex@leetcode.com') == ['test.email+alex@leetcode.com']\nassert solution('test.+alex@leetcode.com') == ['test.+alex@leetcode.com']\nassert solution('test-alex@leetcode.com') == ['test-alex@leetcode.com']\n",
        "num_ids_2": 26,
        "num_ids_4": 88
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\njoe@google.com\\njohn@google.com') == ['john@google.com']\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0 1 1 8'\n\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == ['0', '1', '1', '8', '27', '561', '1824', '55288']",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([6]) == [28, ]",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5''') == '1234\\n'\n\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n''') == '0 1 1 8 9'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '[0, 1, 1, 8, 27, 534, 9018, 3245, 70536, 1355468]', solution('2')\nassert solution('6') == '[0, 1, 1, 2, 3, 5, 8, 13]', solution('6')\n'''\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == [0, 1, 1, 8, 27]\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == [0, 1, 1, 8, 27]\nassert solution('2') == [0, 1]\nassert solution('0') == []\n\n'''\n\nn = int(input())",
        "num_ids_2": 30,
        "num_ids_4": 38
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3628800'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0, 1, 1, 8, 27'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"<a><b><c><d></d></c></b></a>\") == \"3\", \"Wrong answer!\"\nassert solution(\"<a><b><c></c></b></a>\") == \"2\", \"Wrong answer!\"\n\n\"\"\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"2\", \"Should be 2\"\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"1\", \"Should be 1\"\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"0\", \"Should be 0\"\nassert solution('''<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>''') == \"3\", \"Should be 3\"\n=====Explanation=====\nIn the above example, the level of nesting is 2 since the root node is inside the first <feed> tag and the second <feed> tag is inside the second <feed> tag.\n\n'''\n     )\n\n\n\n\n\n\"\"\"\n1. Use stack to keep track of the current depth (using DFS)\n2. At each node, check if there is an ancestor (if so, then update max_depth)\n3. If none, then update max_depth.\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''<?xml version=\"1.0\"?>\n<data>\n    <category>\n        <category>\n            <category>\n                <category>\n                    <name>Java</name>\n                </category>\n            </category>\n        </category>\n    </category>\n    <category>\n        <category>\n            <category>\n                <category>\n                    <name>C#</name>\n                </category>\n            </category>\n        </category>\n    </category>\n</data>''') == 2\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank.org</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == \"2\"\n'''\nSample Input 0\n\n5\n<feed xml:lang='en'>\n    <title>HackerRank.org</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\nSample Output 0\n\n2\n\nExplanation 0\n\nThe <feed> tag has depth 0.\nThe <title> tag has depth 1.\nThe <subtitle lang='en'> tag has depth 2.\nThe <link rel='alternate' type='text/html' href='http://hackerrank.com/'/> tag has depth 3.\nThe <updated> tag has depth 4.\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' href='hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>''') == '4'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n\"\"\") == \"2\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"<data><category><title>1</title><title>2</title><title>3</title><title>4</title></category></data>\") == '2', 'Test #1 failed'\nassert solution(\"<data><category><title>1</title><title>2</title><title>3</title></category><category><title>4</title><title>5</title></category></data>\") == '3', 'Test #2 failed'\nassert solution(\"<data><category><title>1</title><title>2</title><title>3</title></category><category><title>4</title><title>5</title><title>6</title></category></data>\") == '3', 'Test #3 failed'\nassert solution(\"<data><category><title>1</title><title>2</title><title>3</title><title>4</title><title>5</title><title>6</title></category></data>\") == '4', 'Test #4 failed'\n=====Explanation=====\nThe input is a valid XML document.\n\n=====Constraints=====\n1 <= N <= 100\n\n=====Note=====\nIn this problem, we are doing a simple depth first search.\nWe start by declaring a maximum depth of 0.\nAfter traversing the XML tree, we increment the depth by 1.\nWe return the maximum depth of the XML tree, which is equal to the depth of the root node.\n\n\"\"\"\n\nimport xml.etree.ElementTree as ET",
        "num_ids_2": 106,
        "num_ids_4": 230
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n  <title>HackerRank</title>\\n  <subtitle lang='en'>Programming challenges</subtitle>\\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n  <updated>2013-12-25T12:00:00</updated>\\n</feed>\\n\") == \"3\"\n",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('<feed><title>Bit</title><subtitle>Bit</subtitle></feed>') == '2'\nassert solution('<feed><title>Bit</title><title><subtitle>Bit</subtitle></title></feed>') == '2'\nassert solution('<feed><title>Bit</title><title>Bit<subtitle>Bit</subtitle></title></feed>') == '3'\nassert solution('<feed><title>Bit</title><title>Bit<subtitle>Bit</subtitle><subtitle>Bit</subtitle></title></feed>') == '4'\nassert solution('<feed><title>Bit</title><title>Bit<subtitle>Bit</subtitle><subtitle>Bit</subtitle><subtitle>Bit</subtitle></title></feed>') == '5'\n",
        "num_ids_2": 60,
        "num_ids_4": 136
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n<a><b><c></c><d></d></b></a>\n''') == 1\nassert solution('''\n<a><b>\n<c></c><d></d></b></a>\n''') == 2\nassert solution('''\n<a>\n<b><c></c></b>\n<d></d>\n</a>\n''') == 2\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"7\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\n07782845678\"\"\") == 'NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'NO'\nassert solution('97687911') == 'YES'\n=====Sample Input and Output=====\nInput\n\n3\n97687911\n97687912\n97687913\n\nOutput\n\nYES\nNO\nYES\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n011\\n85\\n96392639') == 'YES\\nNO\\nYES\\nNO\\n'\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n919650444\\n919650444\") == \"YES\"\nassert solution(\"1\\n9196504441\\n919650444\") == \"NO\"\nassert solution(\"1\\n919650444\\n919650444\") == \"YES\"\nassert solution(\"919650444\\n919650444\") == \"YES\"\nassert solution(\"919650444\\n919650444\") == \"NO\"\n",
        "num_ids_2": 45,
        "num_ids_4": 86
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 853456789\") == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"7 8534567891\") == \"YES\"\nassert solution(\"+7 8534567891\") == \"YES\"\nassert solution(\"+7 8534567893\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\") == \"NO\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 8\\n') == 'YES'\nassert solution('7 8\\n') == 'NO'\nassert solution('7 8\\n') == 'YES'\nassert solution('7 8\\n') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\n744125678\n178915298\n98421000\n9842100000000000000000\n984210000000000000000\n98421000000000000000000000000\n''') == 'YES\\nNO\\nYES\\nNO\\nNO\\nNO\\n'\n\n'''\n\nimport re",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"\n=====Submission=====\n2\n>\n7\n8\n9\n>\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n07123456789') == 'YES\\nYES', 'Test Case 1'\nassert solution('1\\n07123456789') == 'YES\\nYES', 'Test Case 2'\nassert solution('1\\n8123456789') == 'NO\\nNO', 'Test Case 3'\nassert solution('1\\n7123456789') == 'NO\\nNO', 'Test Case 4'\nassert solution('1\\n71234567890') == 'NO\\nNO', 'Test Case 5'\n\n=====Sample Test Case 1\n3\n0712345678\n12387654321\n7654321\n\nOutput:\nYES\nYES\nNO\n\n=====Sample Test Case 2\n3\n07123456789\n12387654321\n7654321\n\nOutput:\nYES\nYES\nNO\n\n=====Sample Test Case 3\n3\n0712345678\n12387654321\n7654321\n\nOutput:\nNO\nNO\nNO\n\n=====Sample Test Case 4\n3\n0712345678\n12387654321\n7654321\n\nOutput:\nNO\nNO\nNO\n\n=====Sample Test Case 5\n3\n0712345678\n12387654321\n7654321\n\nOutput:\nNO\nNO\nNO\n=====",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 1, 3, 4, 5, 2]) == '1 2 3 5 4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('2 5 7') == '1 3 4 6 8'\nassert solution('3 5 4') == '1 3 4'\n\n'''\n\nM = int(input())\nm = set(map(int, input().split()))\nN = int(input())\nn = set(map(int, input().split()))\na = sorted(m.union(n))\nprint(*a)\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 2, 8, 9, 1, 7, 4, 6, 3]) == [4, 3, 6, 1, 7, 8, 9, 2, 5]\nassert solution([1, 2, 3, 4, 5]) == [1, 3, 5, 2, 4]",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 4 5\n3 2\n''') == '''\n5\n4\n'''\nassert solution('''\n3\n2 4 5\n3 2\n''') == '''\n5\n4\n'''\nassert solution('''\n3\n2 4 5\n3 2\n''') == '''\n5\n4\n'''\nassert solution('''\n3\n2 4 5\n3 2\n''') == '''\n5\n4\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3 2') == '3 1 4 2'\nassert solution('7 1 5 2') == '1 3 5 2 7'\nassert solution('5 9 5 4') == '9 1 2 4'\nassert solution('4 6') == '7 1 2 3 4'\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3 2\") == \"3 5 2\"\nassert solution(\"7 4 5 3 2\") == \"3 5 2\"\nassert solution(\"5 6 7 4 3 2\") == \"3 5 2\"\nassert solution(\"7 4 6 5 3 2\") == \"3 5 2\"",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 5 9 11 12\") == \"2 4 5 9 12 11\"\nassert solution(\"3 4 5 6 7 8 10\") == \"3 4 5 6 7 8 10\"\n\"\"\"\n\n###############################################################################################################################################################################################\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 4 5\n6 7''') == '''2\n4\n5\n7'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n    1 2 3 4 5\n    2''') == '1 3 5 2 4'\nassert solution('''10\n    1 2 3 4 5 6 7 8 9 10\n    2''') == '1 3 5 6 7 8 9 10 2 4'\nassert solution('''5\n    1 2 3 4 5\n    2''') == '1 3 5 2 4'\n'''\n\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == stdout\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nID\\nMARKS\\n1\\n2\\n3\") == \"2.00\"\nassert solution(\"4\\nMARKS\\n100\\n99\\n98\\n97\") == \"98.00\"\nassert solution(\"5\\nMARKS\\n40\\n33\\n32\\n31\\n\") == \"33.33\"\nassert solution(\"3\\nID\\nMARKS\\n1\\n2\\n3\") == \"2.00\"\nassert solution(\"4\\nMARKS\\n100\\n99\\n98\\n97\") == \"98.00\"\n",
        "num_ids_2": 58,
        "num_ids_4": 118
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nID        MARKS      NAME       CLASS\n1        97         Raymond    7\n2        50         Steven     4\n3        91         Adrian     9\n4        72         Stewart    5\n5        80         Peter      6''') == \"98.00\"\nassert solution('''\n10\nMARKS      CLASS      NAME       ID\n85        2          Sam       1\n92         6          Samantha  2\n78         8          Alex       3\n90         10          Alicia    4\n56         14          Eva       5\n65         23          Sam       6\n79         89          Sam       7\n83         91          Samantha  8\n88         72         Adrian    9\n70         79         Eva       10''') == \"91.64\"\n\n'''\nGiven a string s containing only lower case alphabets, find the length of the longest substring with k distinct characters.\nExample 1:\nInput:\ns = \"eceba\"\nk = 3\nOutput:\n3\nExplanation:\nThe longest substring with 3 distinct characters is \"ece\".\nExample 2:\nInput:\ns = \"aa\"\nk = 1\nOutput:\n2\nExplanation:\nThe longest substring with 1 distinct character is \"a\".\nExample 3:\nInput:\ns = \"dee\"\nk = 2\nOutput:\n3\nExplanation:\nThe longest substring with 2 distinct characters is \"ee\".\n'''\n\nfrom collections import Counter",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == '3.00'\n\n'''\nCode 01\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point','x,y')\n>>> pt1 = Point(1,2)\n>>> pt2 = Point(3,4)\n>>> dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n>>> print dot_product\n11\n\nCode 02\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car','Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY\n\n=====Problem Statement=====\nDr. John Wesley has a spreadsheet containing a list of student's IDs, marks, class and name.\nYour task is to help Dr. Wesley calculate the average marks of the students.\nAverage = Sum of all marks / Total students\n\nNote:\n1. Columns can be in any order. IDs, marks, class and name can be written in any order in the spreadsheet.\n2. Column names are ID, MARKS, CLASS and NAME. (The spelling and case type of these names won't change.)\n\n=====Input Format=====\nThe first line contains an integer N, the total number of students.\nThe second line contains the names of the columns in any order.\nThe next N lines contains the marks, IDs, name and class, under their respective column names.\n\n=====Constraints=====\n0<N\u2264100\n\n=====Output Format=====\nPrint the average marks of the list corrected to 2 decimal places.\n\nsolution(stdin: str) -> str\n\nassert solution('''5\n1\n2\n3\n4\n5''') == '3.00'\n\n'''\nCode 01\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point','x,y')\n>>> pt1 = Point(1,2)\n>>> pt2 = Point(3,4)\n>>> dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n>>> print dot_product\n11\n\nCode 02\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car','Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY\n\n=====Problem Statement=====\nDr. John Wesley has a spreadsheet containing a list of student's IDs, marks, class and name.\nYour task is to help Dr. Wesley calculate the average marks of the students.\nAverage = Sum of all marks / Total students\n\nNote:\n1. Columns can be in any order. IDs, marks, class and name can be written in any order in the spreadsheet.\n2. Column names are ID, MARKS, CLASS and NAME. (The spelling and case type of these names won't change.)\n\n=====Input Format=====\nThe first line contains an integer N, the total number of students.\nThe second line contains the names of the columns in any order.\nThe next N lines contains the marks, IDs, name and class, under their respective column names.\n\n=====Constraints=====\n0<N\u2264100\n\n=====Output Format=====\nPrint the average marks of the list corrected to 2 decimal places.\n\nsolution(stdin: str) -> str\n\nassert solution('''5\n1\n2\n3\n4\n5''') == '3.00'\n\n'''\nCode 01\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point','x,y')\n>>> pt1 = Point(1,2)\n>>> pt2 = Point(3,4)\n>>> dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n>>> print dot_product\n11\n\nCode 02\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car','Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY\n\n=====Problem Statement=====\nDr. John Wesley has a spreadsheet containing a list of student's IDs, marks, class and name.\nYour task is to help Dr. Wesley calculate the average marks of the students.\nAverage = Sum of all marks / Total students\n\nNote:\n1. Columns can be in any order. IDs, marks, class and name can be written in any order in the spreadsheet.\n2. Column names are ID, MARKS, CLASS and NAME. (The spelling and case type of these names won't change.)\n\n=====Input Format=====\nThe first line contains an integer N, the total number of students.\nThe second line contains the names of the columns in any order.\nThe next N lines contains the marks, IDs, name and class, under their respective column names.\n\n=====Constraints=====\n0<N\u2264100\n\n=====Output Format=====\nPrint the average marks of the list corrected to 2 decimal places.\n\nsolution(stdin: str) -> str\n\nassert solution('''5\n1\n2\n3\n4\n5''') == '3.00'\n\n'''\nCode 01\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point','x,y')\n>>> pt1 = Point(1,2)\n>>> pt2 = Point(3,4)\n>>> dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n>>> print dot_product\n11\n\nCode 02\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car','Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY\n\n=====Problem Statement=====\nDr. John Wesley has a spreadsheet containing a list of student's IDs, marks, class and name.\nYour task is to help Dr. Wesley calculate the average marks of the students.\nAverage = Sum of all marks / Total students\n\nNote:\n1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\nA\\nB\\nC\\nD\\n\") == \"2.00\"\nassert solution(\"2\\nAB\\nCD\\n\") == \"2.00\"\nassert solution(\"1\\nA\\nB\\nC\\n\") == \"2.00\"\nassert solution(\"2\\nAB\\nCD\\n\") == \"2.00\"\nassert solution(\"2\\nAB\\nAC\\n\") == \"2.00\"\n\n\"\"\"\n",
        "num_ids_2": 46,
        "num_ids_4": 89
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nID,MARKS,CLASS,NAME\\n1,67,3rd,John\\n2,20,4th,Bob\") == \"67.00\"\nassert solution(\"2\\nMARKS,ID,NAME,CLASS\\n89,1,John,4th\\n90,2,Bob,4th\") == \"89.00\"\nassert solution(\"3\\nMARKS,CLASS,ID,NAME\\n89,4th,1,John\\n90,4th,2,Bob\") == \"89.00\"\n\n=====Test Cases=====\nTest Case 1\n>>> solution(\"3\\nMARKS,CLASS,ID,NAME\\n89,4th,1,John\\n90,4th,2,Bob\")\n89.00\n\nTest Case 2\n>>> solution(\"2\\nMARKS,CLASS,ID,NAME\\n89,4th,1,John\\n90,4th,2,Bob\")\n89.00\n\nTest Case 3\n>>> solution(\"3\\nMARKS,CLASS,ID,NAME\\n89,4th,1,John\\n90,4th,2,Bob\")\n89.00\n\"\"\"\n\nfrom collections import namedtuple",
        "num_ids_2": 86,
        "num_ids_4": 129
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n5\\nNavin\\n18\\n') == '71.25'\nassert solution('1\\n10\\n5\\nNavin\\n18\\n') == '10.00'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,2,3,4,5]) == 3.0\nassert solution([1,2,3,4,5,6]) == 3.2\n=====Sample Input/Output=====\nSample Input 1\n4\nID         MARKS      NAME       CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n\nSample Output 1\n78.0\nSample Input 2\n5\nID         MARKS      NAME       CLASS      \n1          97         Raymond    7         \n2          50         Steven     4         \n3          91         Adrian     9         \n4          72         Stewart    5         \n5          100         Peter      6\n\nSample Output 2\n78.0\nSample Input 3\n6\nID         MARKS      NAME       CLASS      \n1          97         Raymond    7         \n2          50         Steven     4         \n3          91         Adrian     9         \n4          72         Stewart    5         \n5          97         Peter      6         \n6          75         Glenn      7\n\nSample Output 3\n85.0\n'''",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nA 100\\n1 B 200\\n2 C 300\\n3 D 200\") == \"66.67\"\nassert solution(\"2\\nA 70\\nB 80\\nC 85\\nD 75\") == \"72.00\"\n\nExample\nRun your code on terminal\n$ python solution.py\nEnter the number of student: 2\nEnter the names of the columns: ID, MARKS, CLASS and NAME\n1.00 2.00 C 80 70\n2.00 8.00 A 60 85\n\nOutput\n72.00\n\nIn the above example, 72 is the average marks of the student list.\n\n=====Explaination=====\nThe average marks is calculated as follows:\n\nAverage = Sum of all marks / Total students\n\nIn the above example, the total students is 2.\n\nTo calculate the average marks, take the following steps:\n\n(1) Read in 2 lines of input.\n(2) The first line contains the number of student.\n(3) The second line contains the names of the columns in any order.\n(4) For every student, the marks, ID, Name and Class are read in and put into respective columns.\n(5) To find the average marks, you need to sum up the marks and divide by the number of students.\n\nIn the above example, the average marks is 72.\n\"\"\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\nA 25.5 78.5 C\\nB 75.5 88.5 D\\nC 100.5 88.5 E\\nD 50.5 55.5 F\\nE 55.5 65.5 A\\nF 100.5 82.5 H\\nG 75.5 85.5 I\\nH 100.5 90.5 J\\nI 100.5 100.5 K\") == \"82.18\"\n\n=====Sample Input & Output=====\nSample Input\n8\nA 25.5 78.5 C\nB 75.5 88.5 D\nC 100.5 88.5 E\nD 50.5 55.5 F\nE 55.5 65.5 A\nF 100.5 82.5 H\nG 75.5 85.5 I\nH 100.5 90.5 J\nI 100.5 100.5 K\n\nSample Output\n82.18\n'''\n\nimport collections",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n    ID         MARKS      NAME      CLASS\n    1          97         Raymond    7\n    2          50         Steven     4\n    3          91         Adrian     9\n    4          72         Stewart    5''') == \"Average: 54.00\"\n\n=====Sample Input & Output=====\nInput Format\nThe first line contains an integer N.\nThe second line contains the names of the columns in any order.\nThe next N lines contains the marks, IDs, name and class, under their respective column names.\nOutput Format\nPrint the average marks of the list corrected to 2 decimal places.\nSample Input 0\n4\n    ID         MARKS      NAME      CLASS\n    1          97         Raymond    7\n    2          50         Steven     4\n    3          91         Adrian     9\n    4          72         Stewart    5\nSample Output 0\nAverage: 54.00\nExplanation 0\nMarks of the 4 students are as follows:\nID = 1, Name = Raymond, Class = 7, Marks = 97\nID = 2, Name = Steven, Class = 4, Marks = 50\nID = 3, Name = Adrian, Class = 9, Marks = 91\nID = 4, Name = Stewart, Class = 5, Marks = 72\nAverage = (97+50+91+72)/4 = 54.0\nExplanation 0\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 3, 9]) == \"Not Weird\"\nassert solution([6, 19, 37]) == \"Weird\"\nassert solution([20, 30, 100]) == \"Weird\"\nassert solution([1, 10, 13]) == \"Not Weird\"\n\n=====Sample Test Cases=====\nExpected Output\n\nInput\n\nOutput\n\n=======Code Testing=======\n\nInput:\n3\n\nOutput:\nWeird\n\nInput:\n20\n\nOutput:\nNot Weird\n\nInput:\n30\n\nOutput:\nNot Weird\n\nInput:\n100\n\nOutput:\nWeird\n\nInput:\n-2147483648\n\nOutput:\nNot Weird\n\nInput:\n2147483647\n\nOutput:\nWeird\n\n=====Explaination=====\nWe can use the above condition to check the condition and print the answer\nbut we need to check the condition whether it's odd or even\n\nWe can use a handy function to check the conditions of even or odd\n\nSOLUTION:",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('4') == 'Weird'\nassert solution('8') == 'Not Weird'\nassert solution('10') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Not Weird'\nassert solution('4') == 'Weird'\nassert solution('5') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Weird\"\nassert solution(\"2\") == \"Not Weird\"\nassert solution(\"4\") == \"Not Weird\"\nassert solution(\"5\") == \"Weird\"\nassert solution(\"6\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('17') == 'Weird'\nassert solution('6') == 'Not Weird'\nassert solution('123') == 'Not Weird'\nassert solution('129') == 'Not Weird'\nassert solution('100') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Not Weird\"\nassert solution(\"24\") == \"Weird\"\nassert solution(\"35\") == \"Not Weird\"\n=====Sample Input and Output=====\nInput\n2\nOutput\nNot Weird\n\nInput\n4\nOutput\nWeird\n\nInput\n5\nOutput\nNot Weird\n\nInput\n6\nOutput\nWeird\n\nInput\n21\nOutput\nWeird\n\nInput\n35\nOutput\nNot Weird\n\nInput\n1000\nOutput\nNot Weird\n\n=====Explanation=====\nThe input n is a very large number, so we set it to 10,000,000,000,000.\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Weird\"\nassert solution(input(\"\")) == \"Not Weird\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([15]) == 'Weird'\nassert solution([21]) == 'Not Weird'\nassert solution([12]) == 'Weird'\nassert solution([1]) == 'Not Weird'\nassert solution([2]) == 'Weird'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Weird\"\nassert solution(\"2\") == \"Not Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"6\") == \"Not Weird\"\nassert solution(\"10\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'Weird'\nassert solution('20') == 'Not Weird'\nassert solution('21') == 'Not Weird'\nassert solution('12') == 'Weird'\nassert solution('1') == 'Not Weird'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n<students><student>this is a student</student></students>') == '2'\nassert solution('2\\n<students><student><name>Dhiraj</name><rollno>100799</rollno></student></students>') == '2'\nassert solution('3\\n<students><student><name>Dhiraj</name><score>90</score><schoolrollno>1008</schoolrollno></student></students>') == '3'\nassert solution('4\\n<students><student><name>Dhiraj</name><score>90</score><schoolrollno>1008</schoolrollno></student><student><name>Ram</name><score>99</score><schoolrollno>1010</schoolrollno></student></students>') == '5'\n",
        "num_ids_2": 69,
        "num_ids_4": 194
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>XML</title>\\n<link href=\"http://example.com/stuff\"/>\\n<description>XML is cool!</description>\\n</feed>') == '3'\nassert solution('<feed xml:lang=\"en\">\\n<title>XML</title><description>XML is cool!</description>\\n<link href=\"http://example.com/stuff\"/>\\n</feed>') == '2'\nassert solution('<feed xml:lang=\"en\">\\n<title>XML</title><description>XML is cool!</description>\\n<link href=\"http://example.com/stuff\"/>\\n<category>Science</category>\\n</feed>') == '2'\nassert solution('<feed xml:lang=\"en\">\\n<title>XML</title><description>XML is cool!</description>\\n<link href=\"http://example.com/stuff\"/>\\n<category>Science</category>\\n</feed>') == '1'\nassert solution('<feed xml:lang=\"en\">\\n<title>XML</title><description>XML is cool!</description>\\n<link href=\"http://example.com/stuff\"/>\\n<category>Science</category>\\n<category>Society</category>\\n</feed>') == '1'\n",
        "num_ids_2": 115,
        "num_ids_4": 245
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n    <title>Some title</title>\n    <link rel='alternate'/>\n    <subtitle lang='en'>Some subtitle</subtitle>\n    <icon></icon>\n    <updated>2013-09-25T11:33:27.000+00:00</updated>\n    <published>2013-09-25T11:33:27.000+00:00</published>\n    <title>Some title</title>\n</feed>\"\"\") == 0\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>Some title</title>\n    <link rel='alternate'/>\n    <subtitle lang='en'>Some subtitle</subtitle>\n    <icon></icon>\n    <updated>2013-09-25T11:33:27.000+00:00</updated>\n    <published>2013-09-25T11:33:27.000+00:00</published>\n</feed>\"\"\") == 6\nassert solution(\"\"\"<feed xml:lang='en'>\n    <title>Some title</title>\n    <link rel='alternate'/>\n    <subtitle lang='en'>Some subtitle</subtitle>\n    <icon></icon>\n    <updated>2013-09-25T11:33:27.000+00:00</updated>\n    <published>2013-09-25T11:33:27.000+00:00</published>\n</feed>\"\"\") == 9\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n\\t<title>HackerRank</title>\\n\\t<subtitle lang='en'>Programming challenges</subtitle>\\n\\t<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\\n\\t<updated>2013-12-25T12:00:00</updated>\\n</feed>\") == \"5\"\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n<feed xml:lang='en'>\\n  <title>Document</title>\\n  <link rel='alternate'/>\\n  <id>urn:uuid:5a7c5d8a-6685-4d3d-972d-bb9be8d2b90d</id>\\n  <updated>2013-05-19T13:20:17Z</updated>\\n  <entry>\\n    <title>Document</title>\\n    <link rel='alternate'/>\\n    <id>urn:uuid:5a7c5d8a-6685-4d3d-972d-bb9be8d2b90d</id>\\n    <updated>2013-05-19T13:20:17Z</updated>\\n    <content:encoded>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;&gt;&lt;html xmlns:xsi&gt;xsi:schemaLocation &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;&lt;head&gt;&lt;title&gt;Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div&gt;&lt;h1&gt;Document&lt;/h1&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</content:encoded>\\n  </entry>\\n</feed>\\n\") == \"73\"\n",
        "num_ids_2": 407,
        "num_ids_4": 407
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n<feed xmlns:tns=\"http://www.w3.org/2005/Atom\">\n    <title>Coding Ninjas</title>\n    <link rel=\"alternate\" h:url=\"http://www.gstatic.com/generate_204\"/>\n    <id>http://www.gstatic.com/generate_204</id>\n    <updated>2013-04-03T23:27:24Z</updated>\n    <entry>\n        <id>urn:uuid:4d6f8d6a-97c2-4cbe-95c7-8f7d914a2a0f</id>\n        <updated>2013-04-03T23:27:24Z</updated>\n        <title>Coding Ninjas</title>\n        <author>\n            <name>John</name>\n        </author>\n        <category>\n            <term>software-development</term>\n        </category>\n        <link rel=\"alternate\" h:url=\"https://www.facebook.com/john.b.lee.official/\"/>\n        <content type=\"application/atom+xml\">\n            <title>John</title>\n            <updated>2013-04-03T23:27:24Z</updated>\n            <link href=\"https://www.facebook.com/john.b.lee.official/\" rel=\"alternate\" h:update-time=\"2013-04-03T23:27:24Z\" h:type=\"text/html\" h:title=\"John, the bluelife of Facebook, with his story and passion\" h:lang=\"en\"/>\n            <id>urn:uuid:8dd6fbc4-1d7f-4ed4-b14c-0b9d12d7efca</id>\n            <author>\n                <name>John</name>\n                <uri>http://www.facebook.com/john.b.lee.official</uri>\n            </author>\n            <summary>\n                <p>\n                    A biography written by John, the bluelife of Facebook, \n                    his story and passion. \n                </p>\n            </summary>\n            <category term=\"software-development\" />\n            <content type=\"application/xml\">\n                <div xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2005/Atom.xsd\">\n                    <title xml:lang=\"en\">Coding Ninjas</title>\n                    <author xml:lang=\"en\">John</author>\n                    <updated>2013-04-03T23:27:24Z</updated>\n                    <category xml:lang=\"en\">software-development</category>\n                    <id xml:lang=\"en\">urn:uuid:4d6f8d6a-97c2-4cbe-95c7-8f7d914a2a0f</id>\n                    <link href=\"https://www.facebook.com/john.b.lee.official/\" rel=\"alternate\" h:update-time=\"2013-04-03T23:27:24Z\" h:type=\"text/html\" h:title=\"John, the bluelife of Facebook, with his story and passion\" h:lang=\"en\"/>\n                </div>\n            </content>\n        </entry>\n    </feed>\n''') == '204':\n    print('The score of the given XML document is 204')\nelse:\n    print('The score of the given XML document is', solution('''\n<feed xmlns:tns=\"http://www.w3.org/2005/Atom\">\n    <title>Coding Ninjas</title>\n    <link rel=\"alternate\" h:url=\"http://www.gstatic.com/generate_204\"/>\n    <id>http://www.gstatic.com/generate_204</id>\n    <updated>2013-04-03T23:27:24Z</updated>\n    <entry>\n        <id>urn:uuid:4d6f8d6a-97c2-4cbe-95c7-8f7d914a2a0f</id>\n        <updated>2013-04-03T23:27:24Z</updated>\n        <title>Coding Ninjas</title>\n        <author>\n            <name>John</name>\n        </author>\n        <category>\n            <term>software-development</term>\n        </category>\n        <link rel=\"alternate\" h:url=\"https://www.facebook.com/john.b.lee.official/\"/>\n        <content type=\"application/atom+xml\">\n            <title>John</title>\n            <updated>2013-04-03T23:27:24Z</updated>\n            <link href=\"https://www.facebook.com/john.b.lee.official/\" rel=\"alternate\" h:update-time=\"2013-04-03T23:27:24Z\" h:type=\"text/html\" h:title=\"John, the bluelife of Facebook, with his story and passion\" h:lang=\"en\"/>\n            <id>urn:uuid:8dd6fbc4-1d7f-4ed4-b14c-0b9d12d7efca</id>\n            <author>\n                <name>John</name>\n                <uri>http://www.facebook.com/john.b.lee.official</uri>\n            </author>\n            <summary>\n                <p>\n                    A biography written by John, the bluelife of Facebook, \n                    his story and passion. \n                </p>\n            </summary>\n            <category term=\"software-development\" />\n            <content type=\"application/xml\">\n                <div xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.w3.org/2001/XMLSchema-instance http://www.w3.org/2005/Atom.xsd\">\n                    <title xml:lang=\"en\">Coding Ninjas</title>\n                    <author xml:lang=\"en\">John</author>\n                    <updated>2013-04-03T23:27:24Z</updated>\n                    <category xml:lang=\"en\">software-development</category>\n                    <id xml:lang=\"en\">urn:uuid:4d6f8d6a-97c2-4cbe-95c7-8f7d914a2a0f</id>\n                    <link href=\"https://www.facebook.com/john.b.lee.official/\" rel=\"alternate\" h:update-time=\"2013-04-03T23:27:24Z\" h:type=\"text/html\" h:title=\"John, the bluelife of Facebook, with his story and passion\" h:lang=\"en\"/>\n                </div>\n            </content>\n        </entry>\n    </feed>\n''') == '204':\n    print('The score of the given XML document is 204')\nelse:\n    print('The score of the given XML document is', solution('''\n<feed xmlns:tns=\"http://www.w3.org/2005/Atom\">\n    <title>Coding Ninjas</title>\n    <link rel=\"alternate\" h:url=\"http://www.gstatic.com/generate_204\"/>\n    <id>http://www.gstatic.com/generate_204</id>\n    <updated>2013-04-03T23:27:24Z</updated>\n    <entry>\n        <id>urn:uuid:4d6f8d6a-97c2-4cbe-95c7-8f7d914a2a0f</id>\n        <updated>2013-04-03T23:27:24Z</updated>\n        <title>Coding Ninjas</title>\n        <author>\n            <name>John</name>\n        </",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/default.asp'/>\n</feed>''') == '3', \"Should be 3.\"\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/default.asp'/>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/xml_functions.asp'/>\n</feed>''') == '3', \"Should be 3.\"\n''')\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"<head><title>My Solution</title></head>\") == \"11\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == \"5\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == \"0\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == \"1\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n<title>HackerRank</title>\n<subtitle lang='en'>Programming challenges</subtitle>\n<link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n<updated>2013-12-25T12:00:00</updated>\n<author>\n    <name>HackerRank</name>\n    <email>hackerrank@hackerrank.com</email>\n</author>\n<published>2013-12-25T12:00:00</published>\n</feed>\"\"\") == \"0\"\n\n=======\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <link rel='alternate'/>\\n    <guid>guid-1</guid>\\n    <subtitle lang='en'>Subtitle</subtitle>\\n</feed>\") == \"3\", \"First\"\nassert solution(\"<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <link rel='alternate'/>\\n    <guid>guid-1</guid>\\n    <subtitle lang='en'>Subtitle</subtitle>\\n    <author>Author</author>\\n</feed>\") == \"1\", \"Second\"\nassert solution(\"<feed xml:lang='en'>\\n    <title>HackerRank</title>\\n    <link rel='alternate'/>\\n    <guid>guid-1</guid>\\n    <subtitle lang='en'>Subtitle</subtitle>\\n    <author>Author</author>\\n    <title lang='en'>HackerRank</title>\\n    <subtitle lang='en'>Subtitle</subtitle>\\n</feed>\") == \"2\", \"Third\"\n",
        "num_ids_2": 168,
        "num_ids_4": 288
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1.2 3 4') == '0.57'\nassert solution('-1 -3.1 1 -1') == '1.38'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.0 1.0 1.0 2.0 3.0\") == \"60.00\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"0.00\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"0.00\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"0.00\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"0.00\"\n",
        "num_ids_2": 49,
        "num_ids_4": 95
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '45'\nassert solution('0 0 1 1') == '90'\nassert solution('1 0 0 1') == '90'\nassert solution('0 0 0 1') == '0'\nassert solution('0 0 0 0') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2.0 2.0 5.0 1.0\") == '45.0', \"Wrong Answer\"\nassert solution(\"-1.0 -1.0 3.0 1.0\") == '43.14', \"Wrong Answer\"\nassert solution(\"-1.0 -1.0 -3.0 1.0\") == '41.57', \"Wrong Answer\"\nassert solution(\"-1.0 -1.0 -3.0 1.0\") == '41.57', \"Wrong Answer\"\nassert solution(\"0.0 0.0 3.0 1.0\") == '90.0', \"Wrong Answer\"\n",
        "num_ids_2": 58,
        "num_ids_4": 120
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.0 0.0 -1.0 0.0') == '45.0'\nassert solution('1.0 0.0 -2.0 0.0') == '60.0'\n\n'''",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"60.0\"\n=====Test Cases=====\nExample 1\n\nInput\n\n1 2 3 4\n\nOutput\n\n60.0\nExample 2\n\nInput\n\n4 2 8 10\n\nOutput\n\n90.0\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2 3\") == \"60.00\"\nassert solution(\"0 0 0 0\") == \"0.00\"\n=====Sample Test Cases=====\nInput\n\nOutput\n\nExplanation\n\nInput\n\nOutput\n\nExample 1\n\nInput\n\nOutput\n\nExample 2\n\nInput\n\nOutput\n\nExample 3\n\nInput\n\nOutput\n\nExample 4\n\nInput\n\nOutput\n\nExample 5\n\nInput\n\nOutput\n\nExample 6\n\nInput\n\nOutput\n\nExample 7\n\nInput\n\nOutput\n\nYour Task:\nYou don't need to read input or print anything. Your task is to complete the function solution() which takes a string as input parameter and returns a string as output.\n\nConstraints\n1<=t<=10\n1<=|x|<=10\n1<=|y|<=10\n1<=|z|<=10",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.0 2.0 1.0 3.0\") == \"90.00\"\nprint(solution(\"1.0 2.0 1.0 3.0\"))\nassert solution(\"1.0 2.0 1.0 3.0\") == \"90.00\"\n\n=====Explanation=====\nThere are two cases:\n1. If all the points are collinear and the angle is zero.\n2. If one of the points are collinear and the angle is pi/2.\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4.3 2.6 4.1 -1.3\") == '60.48'\nassert solution(\"-1.3 1.4 -4.5 1.5\") == '60.5'\nassert solution(\"-5 -1.7 -2.5 -3.1\") == '45.7'\n\n'''\n",
        "num_ids_2": 49,
        "num_ids_4": 74
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3.0 3.0 4.0 4.0\") == \"135.0\", \"Wrong solution\"\nassert solution(\"-3.0 3.0 4.0 4.0\") == \"-135.0\", \"Wrong solution\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\ne\\ni\\no\\ny\\n') == 2\nassert solution('2\\ne\\ni\\no\\ny\\n') == 1\n\n=====Sample Test Cases=====\nInput\nOutput\n\n'''",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\neven\\none\\nodd') == 2\nassert solution('2\\nodd\\neven\\nodd\\neven') == 0\nassert solution('10\\neven\\nodd\\nodd\\nodd\\neven\\nodd\\neven\\nodd\\nodd\\neven\\nodd') == 0\n\n=====Sample Input and Output=====\nInput\n\nOutput\n\n=====Explanation=====\n\nSample Case 1\n\nSample Case 2\n\nSample Case 3\n\n'''",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nhello world') == '2'\nassert solution('2\\neasy') == '1'\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == 9\nassert solution(\"aa ee iii ooo uuu yyy\") == 6\nassert solution(\"wow cow cow cow cow cow wow\") == 10\n\n\nInput\n2\nravenclaw\ntask\nWrite 5 lines of code to test the correctness of solution:\n=====Problem Statement=====\nIn this challenge, the task is to debug the existing code to successfully execute all provided test files.\nConsider that vowels in the alphabet are a, e, i, o, u and y.\nFunction score_words takes a list of lowercase words as an argument and returns a score as follows:\nThe score of a single word is 2 if the word contains an even number of vowels. Otherwise, the score of this word is 1. The score for the whole list of words is the sum of scores of all words in the list.\nDebug the given function score_words such that it returns a correct score.\nYour function will be tested on several cases by the locked template code.\n\n=====Input Format=====\nThe input is read by the provided locked code template. In the first line, there is a single integer n denoting the number of words. In the second line, there are n space-separated lowercase words.\n\n=====Constraints=====\n1\u2264n\u226420\nEach word has at most 20 letters and all letters are English lowercase letters\n\n=====Output Format=====\nThe output is produced by the provided and locked code template. It calls function score_words with the list of words read from the input as the argument and prints the returned score to the output.\n",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 a 4 b 5\") == \"3\"\nassert solution(\"1 1 a 1 b 1\") == \"2\"\nassert solution(\"2 2 a 2 b 2\") == \"4\"\nassert solution(\"3 3 a 3 b 3\") == \"6\"\nassert solution(\"10 1 a 1 b 1 c 2 d 3 e 4 f 5 g\") == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 a b c\") == 2\nassert solution(\"3 a b c\") == 1\nassert solution(\"1 a b c\") == 1\nassert solution(\"2 3 c c c\") == 2\nassert solution(\"2 3 c c e\") == 1\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 0\nassert solution(\"aaa\") == 2\nassert solution(\"a ab abc\") == 2\nassert solution(\"aaa aaa\") == 3\n",
        "num_ids_2": 15,
        "num_ids_4": 34
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nfoobar\") == \"1\", \"Should return 1 for an even word with an even number of vowels.\"\nassert solution(\"2\\nfoo bar\") == \"1\", \"Should return 1 for an odd word with an even number of vowels.\"\nassert solution(\"1\\nfoobarz\") == \"0\", \"Should return 0 for an even word with an odd number of vowels.\"\nassert solution(\"2\\nfoo barz\") == \"0\", \"Should return 0 for an odd word with an odd number of vowels.\"\nassert solution(\"1\\nfoobar\") == \"1\", \"Should return 1 for an even word with an even number of vowels.\"\n",
        "num_ids_2": 60,
        "num_ids_4": 122
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 abc efg\") == \"2\"\nassert solution(\"2 abc efg\") == \"1\"\n\nSolution",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 hello world\") == 5\n'''\n\nclass Solution:\n    def score_words(self, words):\n        d = {\"a\":1,\"e\":1,\"i\":1,\"o\":1,\"u\":1,\"y\":1}\n        count = 0\n        for w in words:\n            count += d[w[0]]\n            for i in range(1,len(w)):\n                if w[i] in d.keys():\n                    count += (d[w[i]]*2)\n                else:\n                    count += 1\n        return count",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('X') == True\nassert solution('V') == False\nassert solution('L') == True\nassert solution('C') == False\nassert solution('D') == False\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('MMMCMLXXXVI') == 'True'\nassert solution('MMMCMLXXXVI') == 'False'\nassert solution('MMMCMXLIII') == 'False'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''III\nXXX\n''') == 'True'\nassert solution('''III\nXXX\n''') == 'False'\nassert solution('''III\nXXX\n''') == 'False'\nassert solution('''I\nX\n''') == 'True'\nassert solution('''I\nX\n''') == 'False'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('III') == True\nassert solution('IV') == False\n\n=====Sample Input&Output 2=====\nInput\n\nIIII\n\nOutput\n\nTrue\n\n\n\n'''\n\nimport re\na = input()\nx = re.match(r\"^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$\",a)\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"X\") == True\nassert solution(\"VIII\") == True\nassert solution(\"LXXVII\") == True\nassert solution(\"IX\") == False\nassert solution(\"CMXCIX\") == True\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"XIV\") == \"True\"\nassert solution(\"MCMXCIV\") == \"True\"\nassert solution(\"I\") == \"False\"\nassert solution(\"VX\") == \"False\"\nassert solution(\"MMCMXCIX\") == \"False\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('XVIII') == 'True'\nassert solution('III') == 'True'\nassert solution('C') == 'False'\n\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"MCMXCVI\") == True\nassert solution(\"III\") == True\nassert solution(\"X\") == True\nassert solution(\"C\") == True\nassert solution(\"L\") == True\n",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"III\") == \"True\"\nassert solution(\"IV\") == \"False\"\nassert solution(\"LVIII\") == \"True\"\nassert solution(\"MCMXCIV\") == \"True\"\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''MDCLXVI''') == True\nassert solution('''IX''') == False\nassert solution('''MCMXCIV''') == True\n\n=====Sample Test Case=====\nInput\n    MDCLXVI\nOutput\n    True\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n9718253645\\n9718253645\\n\") == \"1+9718253645 x9718253645\\n1+9718253645 x9718253645\\n\"\nassert solution(\"1\\n9718253645\\n9718253645\\n9718253645\\n\") == \"1+9718253645 x9718253645\\n1+9718253645 x9718253645\\n1+9718253645 x9718253645\\n\"\nassert solution(\"2\\n87654321\\n87654321\\n87654321\\n\") == \"2+87654321 x87654321\\n2+87654321 x87654321\\n2+87654321 x87654321\\n\"\nassert solution(\"2\\n87654321\\n87654321\\n87654321\\n\") == \"2+87654321 x87654321\\n2+87654321 x87654321\\n2+87654321 x87654321\\n\"\n\nprint(solution(input()))\n>>>>>>> cd938f9b2f5387964cc1b5ad88d8f88ba1d0a937\n",
        "num_ids_2": 132,
        "num_ids_4": 268
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''+91 8588888888\n+91 8588888777\n''') == '+91 8588888777\\n+91 8588888888'\nassert solution('''+91 90812 2468 1232\n+91 8588888888\n+91 8888888888''') == '+91 8888888888\\n+91 8588888888\\n+91 8588888888'\nassert solution('''+91 90812 2468 1232\n+91 8588888888\n+91 8888888888''') == '+91 8888888888\\n+91 8588888888\\n+91 8588888888'\nassert solution('''+91 8588888888\n+91 8588888777\n+91 90812 2468 1232\n''') == '+91 8588888777\\n+91 8588888888\\n+91 8588888888\\n+91 8588888777'\nassert solution('''+91 8588888888\n+91 8588888777\n+91 8888888888''') == '+91 8888888888\\n+91 8588888777\\n+91 8588888888'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\n    '+91 9471234567',\n    '+91 9479876321',\n    '+91 9476543210',\n    '+91 9456783456',\n    '+91 9456783987'\n]) == '''+91 9471234567\n+91 9479876321\n+91 9476543210\n+91 9456783456\n+91 9456783987'''\n\n=====Test Case 1=====\nInput\nOutput\nExplanation\nTest Case 1:\n+91 9471234567\n+91 9479876321\n+91 9476543210\n+91 9456783456\n+91 9456783987\n\nResult:\n+91 9471234567\n+91 9479876321\n+91 9476543210\n+91 9456783456\n+91 9456783987\n\n=====Test Case 2=====\nInput\nOutput\nExplanation\nTest Case 2:\n+91 9471234567\n+91 9479876321\n+91 9476543210\n+91 9456783456\n+91 9456783987\n\nResult:\n+91 9471234567\n+91 9479876321\n+91 9476543210\n+91 9456783456\n+91 9456783987\n\n'''\n\nimport operator",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234 7532 9876\") == \"+91 9876 753 2 456\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == \"+91 99999999999\"\nassert solution('10000000001') == \"+91 99999999999\"\nassert solution('100000000010') == \"+91 99999999999\"\n=====Sample Input & Output Examples=====\nInput\n\n2\n92837492468\n92837492469\nOutput\n\n+91 99999999999\n+91 99999999998",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == stdout, \"WRONG\"\nprint(\"solution =\", solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n977 857 741 1234 5555\n4555 9555 8785 956 847 5555\n+91 976 741 5555\"\"\") == \"\"\"+91 977 857 741\n+91 955 955 8785 956 847 5555\"\"\"\n=====Explanation=====\nHere we will use a map to store the map of index and mobile number value.\nAfter iterating through the given number of lines, we will print the map values in required format.\nExample:\nInput:\n3\n977 857 741 1234 5555\n4555 9555 8785 956 847 5555\n+91 976 741 5555\nOutput:\n+91 977 857 741\n+91 955 955 8785 956 847 5555\n\n'''",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n9723984987\\n9723984987\\n9723984987\\n9723984987\") == \"+919723984987\\n+919723984987\\n+919723984987\\n+919723984987\", \"First\"\nassert solution(\"5\\n9723984987\\n9723984987\\n9723984987\\n9723984987\") == \"+919723984987\\n+919723984987\\n+919723984987\\n+919723984987\", \"Second\"\nassert solution(\"2\\n9723984987\\n9723984987\\n9723984987\\n9723984987\\n9723984987\") == \"+919723984987\\n+919723984987\\n+919723984987\\n+919723984987\", \"Third\"\nassert solution(\"1\\n9723984987\\n9723984987\\n9723984987\\n9723984987\") == \"+919723984987\\n+919723984987\\n+919723984987\", \"Fourth\"\n",
        "num_ids_2": 146,
        "num_ids_4": 290
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n+91 8054142301\n+91 8054178801\n+91 8050332514\n+91 8050334834\n+91 8050334434\n+91 8051524181\n+91 8051524181\n''') == '''+91 8054142301\n+91 8054178801\n+91 8050332514\n+91 8050334834\n+91 8050334434\n+91 8051524181\n+91 8051524181'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n88\\n+91 888 888') == '+91 888 888\\n+91 888 888'\nassert solution('1\\n88\\n+91 888 888') == '+91 888 888'\nassert solution('1\\n88') == '+91 888'\nassert solution('1\\n') == '+91'",
        "num_ids_2": 60,
        "num_ids_4": 89
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 90\\nalpha\\n\") == \"90.0\"\nassert solution(\"3\\nalpha\\nbeta\\nalpha\\n\") == \"50.0\"\nassert solution(\"2\\nalpha 100\\nbeta\\nalpha\\n\") == \"50.0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nalpha 100\\nbeta 80\\nalpha\\nbeta\\nalpha\\n') == '50.0'\nassert solution('1\\nalpha\\nbeta\\n') == '0.0'\nassert solution('2\\nalpha 100\\nbeta\\n') == '50.0'\n",
        "num_ids_2": 51,
        "num_ids_4": 72
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nalpha 20\\nbeta 30\\ngamma 40\\n') == '50.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\\n') == '50.0'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\nalpha 100\\nbeta 75\\n') == '75.0'\n\n=====Test Cases=====\nInput\n\nOutput\n\nYour function should return the average of marks obtained by the particular student correct to 2 decimal places.\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nalpha 100\\nbeta 90\\nalpha 80\\n') == '80.00'\nassert solution('6\\nfoo 90\\nbar 80\\nfoo 70\\nfoo 60\\nfoo 100\\n') == '75.00'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 90\\nalpha\\nbeta\\nalpha\\n\") == \"90.00\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\nalpha\\ntest') == \"50.0\"\nassert solution('5\\nbeta 71\\nalpha 82\\nalpha 74\\ntest') == \"74.0\"\nassert solution('3\\nalpha 100\\nbeta 50\\nalpha\\ntest') == \"100.0\"\n",
        "num_ids_2": 53,
        "num_ids_4": 79
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nalpha\\n20\\n') == '30.0'\n=====Explanation=====\nThe average of the marks obtained by the particular student is (20+30+40)/3 = (20+30+40)/3 = (20+30+40)/3 = 50.0\n>>>>>>> 9ad08f8f37bd9be1f8cb6f8eba844c7eafa6691e\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\nalpha 20\\nbeta 30 50\\nquery_name beta\\n') == '50.0'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\nMarry\n2\nMarry\n1\nF\n3\nF\n4\nF''') == 'Ms.Mary George\\nMr.Henry Davids'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nSam\\tSmith\\t20\\tM\") == \"Ms. Sam\\n\"\nassert solution(\"2\\nHenry\\tDavids\\t20\\tM\") == \"Mr. Henry Davids\\n\"\nassert solution(\"3\\nPaul\\tJohnson\\t19\\tM\") == \"Ms. Paul Johnson\\n\"\nassert solution(\"4\\nSam\\tSmith\\t20\\tM\") == \"Ms. Sam Smith\\n\"\nassert solution(\"5\\nSam\\tSmith\\t20\\tF\") == \"Mr. Sam Smith\\n\"\n",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n     Ava 1\n     Ana 10\n     Eme 5\n     James 10''') == \"Ms. Ana\\nMs. Eme\\nMs. James\\nMr. Ava\\n\"\n\n=====Test Case Examples=====\nInput\n1\nHina 1\nAnna 5\nEme 2\nJames 10\nOutput\nHina 1\nHina 2\nAna 3\nEme 4\nAva 5\n\n=====Explanation=====\nHere is the input.\n\n=====Note=====\nTo sort by age, sort the first name, last name and age\n''')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nAlice 20 M\nBob 18 M\n''') == '''\nAlice\n'''\n\nassert solution('''\n5\nAlice 20 M\nBob 2 M\nMary 40 F\nDavid 24 M\nSean 17 F\n''') == '''\nAlice\nBob\nDavid\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\nM 25 F\\nF 25 M') == 'M 25 F\\nF 25 M'\nassert solution('2\\nM 25 F\\nF 25 M') == 'M 25 F\\nF 25 M'\nassert solution('2\\nM 25 F\\nF 25 M') == 'M 25 F\\nF 25 M'\nassert solution('2\\nM 25 F\\nF 25 M') == 'M 25 F\\nF 25 M'\nassert solution('2\\nM 25 F\\nF 25 M') == 'M 25 F\\nF 25 M'\n\"\"\"\n\nimport math",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nMr. John\\n19\\nM\") == \"Mr. John\\n\"\nassert solution(\"2\\nMs. A\\n18\\nF\") == \"Ms. A\\n\"\nassert solution(\"3\\nMr. John\\n18\\nM\") == \"Mr. John\\n\"\nassert solution(\"4\\nMs. A\\n18\\nF\") == \"Ms. A\\n\"\nassert solution(\"5\\nMr. John\\n18\\nM\") == \"Mr. John\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == correct_ans\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nVinod\\tV\\t17\\tM') == 'Vinod\\tV\\t17\\tM'\nassert solution('3\\nMicheal\\tM\\t23\\tM') == 'Micheal\\tM\\t23\\tM'\nassert solution('4\\nDieter\\tD\\t42\\tM') == 'Dieter\\tD\\t42\\tM'\nassert solution('1\\nJens\\tJ\\t12\\tM') == 'Jens\\tJ\\t12\\tM'\n=====Solution=====\n",
        "num_ids_2": 70,
        "num_ids_4": 138
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nTom\\nSam\\nJack') == 'Mr. Jack\\nMr. Tom\\nMs. Sam'\nassert solution('2\\nHenry\\nDavids\\nM\\n') == 'Mr. Henry Davids\\nMs. Mary George'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\nSteve Martin\nSteve Martin\nMike Smith\nMike Smith\n''') == 'Mr. Steve Martin\\nMr. Mike Smith\\n'''\n\n=====Solution=====\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Submission=====\nYour submission is scored automatically. Any code you submit must be my\noriginal work.\n'''\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3\") == [\"0,0,0\",\"0,0,1\",\"0,0,2\",\"0,1,0\",\"0,1,1\",\"0,1,2\",\"1,0,0\",\"1,0,1\",\"1,0,2\",\"1,1,0\",\"1,1,1\",\"1,1,2\"]\nassert solution(\"5 5 1 4\") == [\"0,0,0\",\"0,0,1\",\"1,0,0\",\"1,0,1\",\"1,1,0\",\"2,0,0\",\"2,0,1\",\"2,1,0\",\"2,1,1\",\"3,0,0\",\"3,0,1\",\"3,1,0\",\"3,1,1\"]\nassert solution(\"1 1 5 4\") == [\"0,0,0\",\"0,0,1\",\"1,0,0\",\"1,0,1\",\"1,1,0\",\"2,0,0\",\"2,0,1\",\"2,1,0\",\"2,1,1\",\"3,0,0\",\"3,0,1\",\"3,1,0\",\"3,1,1\"]\n\n=====Output=====\n\n[\n  [0,0,0],\n  [0,0,1],\n  [0,0,2],\n  [0,1,0],\n  [0,1,1],\n  [0,1,2],\n  [1,0,0],\n  [1,0,1],\n  [1,0,2],\n  [1,1,0],\n  [1,1,1],\n  [1,1,2]\n]\n\n[\n  [0,0,0],\n  [0,0,1],\n  [0,0,2],\n  [0,1,0],\n  [0,1,1],\n  [1,0,0],\n  [1,0,1],\n  [1,1,0],\n  [1,1,1],\n  [1,1,2]\n]\n\n[\n  [0,0,0],\n  [0,0,1],\n  [0,0,2],\n  [0,1,0],\n  [0,1,1],\n  [1,0,0],\n  [1,0,1],\n  [1,1,0],\n  [1,1,1],\n  [1,1,2]\n]\n\n[\n  [0,0,0],\n  [0,0,1],\n  [0,0,2],\n  [0,1,0],\n  [0,1,1],\n  [1,0,0],\n  [1,0,1],\n  [1,1,0],\n  [1,1,1],\n  [1,1,2]\n]\n\n[\n  [0,0,0],\n  [0,0,1],\n  [0,0,2],\n  [0,1,0],\n  [0,1,1],\n  [1,0,0],\n  [1,0,1],\n  [1,1,0],\n  [1,1,1],\n  [1,1,2]\n]\n\"\"\"\n\nx = int(input())\ny = int(input())\nz = int(input())\nn = int(input())\n\nres = []\nfor i in range(x+1):\n    for j in range(y+1):\n        for k in range(z+1):\n            if (i + j + k)!= n:\n                res.append([i,j,k])\n\nprint(res)",
        "num_ids_2": 172,
        "num_ids_4": 261
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == expected\n\n=====Test Cases=====\nInput 1:\n3 1 1 2\nOutput 1:\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]\n\nInput 2:\n2 2 2 1\nOutput 2:\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1], [1, 1, 2]]\n'''\n\nfrom itertools import permutations",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n=====Output Format=====\nPrint an array of the elements that do not sum to n = 3\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n'''",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 1, 1, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n'''\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 2') == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]\n",
        "num_ids_2": 199,
        "num_ids_4": 199
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\"\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([x,y,z,n]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,2]]\n\nassert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n\nassert solution([1,2,3,4]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n\n=====Output Format=====\nPrint the list of elements that do not sum to n = 3\n\n=====Sample Input=====\n1\n2\n3\n4\n\n=====Expected Output=====\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n\n'''",
        "num_ids_2": 136,
        "num_ids_4": 204
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(x, y, z, n) == expected",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution([1,1,2,3]) == []\nassert solution([2,2,3,4]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution([1,2,3,4]) == []\n=====Output Format=====\nPrint an array of the elements that do not sum to n = 3\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\nTest Case 1\n\nInput\n\nOutput\n\nTest Case 2\n\nInput\n\nOutput\n\nTest Case 3\n\nInput\n\nOutput\n\nTest Case 4\n\nInput\n\nOutput\n\nTest Case 5\n\nInput\n\nOutput\n\nTest Case 6\n\nInput\n\nOutput\n\nTest Case 7\n\nInput\n\nOutput\n\nTest Case 8\n\nInput\n\nOutput\n\nTest Case 9\n\nInput\n\nOutput\n\nTest Case 10\n\nInput\n\nOutput\n\nTest Case 11\n\nInput\n\nOutput\n\nTest Case 12\n\nInput\n\nOutput\n\nTest Case 13\n\nInput\n\nOutput\n\nTest Case 14\n\nInput\n\nOutput\n\nTest Case 15\n\nInput\n\nOutput\n\nTest Case 16\n\nInput\n\nOutput\n\nTest Case 17\n\nInput\n\nOutput\n\nTest Case 18\n\nInput\n\nOutput\n\nTest Case 19\n\nInput\n\nOutput\n\nTest Case 20\n\nInput\n\nOutput\n\nTest Case 21\n\nInput\n\nOutput\n\nTest Case 22\n\nInput\n\nOutput\n\nTest Case 23\n\nInput\n\nOutput\n\nTest Case 24\n\nInput\n\nOutput\n\nTest Case 25\n\nInput\n\nOutput\n\nTest Case 26\n\nInput\n\nOutput\n\nTest Case 27\n\nInput\n\nOutput\n\nTest Case 28\n\nInput\n\nOutput\n\nTest Case 29\n\nInput\n\nOutput\n\nTest Case 30\n\nInput\n\nOutput\n\nTest Case 31\n\nInput\n\nOutput\n\nTest Case 32\n\nInput\n\nOutput\n\nTest Case 33\n\nInput\n\nOutput\n\nTest Case 34\n\nInput\n\nOutput\n\nTest Case 35\n\nInput\n\nOutput\n\nTest Case 36\n\nInput\n\nOutput\n\nTest Case 37\n\nInput\n\nOutput\n\nTest Case 38\n\nInput\n\nOutput\n\nTest Case 39\n\nInput\n\nOutput\n\nTest Case 40\n\nInput\n\nOutput\n\nTest Case 41\n\nInput\n\nOutput\n\nTest Case 42\n\nInput\n\nOutput\n\nTest Case 43\n\nInput\n\nOutput\n\nTest Case 44\n\nInput\n\nOutput\n\nTest Case 45\n\nInput\n\nOutput\n\nTest Case 46\n\nInput\n\nOutput\n\nTest Case 47\n\nInput\n\nOutput\n\nTest Case 48\n\nInput\n\nOutput\n\nTest Case 49\n\nInput\n\nOutput\n\nTest Case 50\n\nInput\n\nOutput\n\nTest Case 51\n\nInput\n\nOutput\n\nTest Case 52\n\nInput\n\nOutput\n\nTest Case 53\n\nInput\n\nOutput\n\nTest Case 54\n\nInput\n\nOutput\n\nTest Case 55\n\nInput\n\nOutput\n\nTest Case 56\n\nInput\n\nOutput\n\nTest Case 57\n\nInput\n\nOutput\n\nTest Case 58\n\nInput\n\nOutput\n\nTest Case 59\n\nInput\n\nOutput\n\nTest Case 60\n\nInput\n\nOutput\n\nTest Case 61\n\nInput\n\nOutput\n\nTest Case 62\n\nInput\n\nOutput\n\nTest Case 63\n\nInput\n\nOutput\n\nTest Case 64\n\nInput\n\nOutput\n\nTest Case 65\n\nInput\n\nOutput\n\nTest Case 66\n\nInput\n\nOutput\n\nTest Case 67\n\nInput\n\nOutput\n\nTest Case 68\n\nInput\n\nOutput\n\nTest Case 69\n\nInput\n\nOutput\n\nTest Case 70\n\nInput\n\nOutput\n\nTest Case 71\n\nInput\n\nOutput\n\nTest Case 72\n\nInput\n\nOutput\n\nTest Case 73\n\nInput\n\nOutput\n\nTest Case 74\n\nInput\n\nOutput\n\nTest Case 75\n\nInput\n\nOutput\n\nTest Case 76\n\nInput\n\nOutput\n\nTest Case 77\n\nInput\n\nOutput\n\nTest Case 78\n\nInput\n\nOutput\n\nTest Case 79\n\nInput\n\nOutput\n\nTest Case 80\n\nInput\n\nOutput\n\nTest Case 81\n\nInput\n\nOutput\n\nTest Case 82\n\nInput\n\nOutput\n\nTest Case 83\n\nInput\n\nOutput\n\nTest Case 84\n\nInput\n\nOutput\n\nTest Case 85\n\nInput\n\nOutput\n\nTest Case 86\n\nInput\n\nOutput\n\nTest Case 87\n\nInput\n\nOutput\n\nTest Case 88\n\nInput\n\nOutput\n\nTest Case 89\n\nInput\n\nOutput\n\nTest Case 90\n\nInput\n\nOutput\n\nTest Case 91\n\nInput\n\nOutput\n\nTest Case 92\n\nInput\n\nOutput\n\nTest Case 93\n\nInput\n\nOutput\n\nTest Case 94\n\nInput\n\nOutput\n\nTest Case 95\n\nInput\n\nOutput\n\nTest Case 96\n\nInput\n\nOutput\n\nTest Case 97\n\nInput\n\nOutput\n\nTest Case 98\n\nInput\n\nOutput\n\nTest Case 99\n\nInput\n\nOutput\n\nTest Case 100\n\nInput\n\nOutput\n\nTest Case 101\n\nInput\n\nOutput\n\nTest Case 102\n\nInput\n\nOutput\n\nTest Case 103\n\nInput\n\nOutput\n\nTest Case 104\n\nInput\n\nOutput\n\nTest Case 105\n\nInput\n\nOutput\n\nTest Case 106\n\nInput\n\nOutput\n\nTest Case 107\n\nInput\n\nOutput\n\nTest Case 108\n\nInput\n\nOutput\n\nTest Case 109\n\nInput\n\nOutput\n\nTest Case 110\n\nInput\n\nOutput\n\nTest Case 111\n\nInput\n\nOutput\n\nTest Case 112\n\nInput\n\nOutput\n\nTest Case 113\n\nInput\n\nOutput\n\nTest Case 114\n\nInput\n\nOutput\n\nTest Case 115\n\nInput\n\nOutput\n\nTest Case 116\n\nInput\n\nOutput\n\nTest Case 117\n\nInput\n\nOutput\n\nTest Case 118\n\nInput\n\nOutput\n\nTest Case 119\n\nInput\n\nOutput\n\nTest Case 120\n\nInput\n\nOutput\n\nTest Case 121\n\nInput\n\nOutput\n\nTest Case 122\n\nInput\n\nOutput\n\nTest Case 123\n\nInput\n\nOutput\n\nTest Case 124\n\nInput\n\nOutput\n\nTest Case 125\n\nInput\n\nOutput\n\nTest Case 126\n",
        "num_ids_2": 100,
        "num_ids_4": 200
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 1\") == \"0 1\"\nassert solution(\"1 2\") == \"3.00i\"\nassert solution(\"1 1 + 1 + 1\") == \"2.00 -1.00i 2.00 +1.00i\"\nassert solution(\"-1 1\") == \"-2.00i\"\nassert solution(\"1 -1\") == \"-2.00i\"\n",
        "num_ids_2": 26,
        "num_ids_4": 71
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.5+2.2i') == '1.5+2.2i'\nassert solution('3+1i') == '3+1i'\nassert solution('-4.3+5.3i') == '-4.3+5.3i'\nassert solution('1.8-7.9i') == '1.8-7.9i'\nassert solution('2.3+0.1i') == '2.3+0.1i'\n=====Type your code here=====\n",
        "num_ids_2": 40,
        "num_ids_4": 90
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.3+4.5i\") == \"1.3+4.5i\"\nassert solution(\"2.3+4.5i\") == \"1.3-4.5i\"\nassert solution(\"1.3+0.0i\") == \"0.00+0.0i\"\nassert solution(\"2.3+0.0i\") == \"2.3+0.0i\"\nassert solution(\"3.0+5.0i\") == \"0.00+5.0i\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1.00-2.00i\"\nassert solution(input()) == \"1.00-0.00i\"\nassert solution(input()) == \"1.00+0.00i\"\nassert solution(input()) == \"1.00-0.00i\"\nassert solution(input()) == \"1.00+0.00i\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0.00+0.00i''') == '0.00+0.00i'\nassert solution('''0.00+1.00i''') == '0.00-1.00i'\nassert solution('''0.00+-1.00i''') == '0.00-1.00i'\nassert solution('''1.00+1.00i''') == '1.00+1.00i'\nassert solution('''1.00+-1.00i''') == '1.00+-1.00i'\n",
        "num_ids_2": 54,
        "num_ids_4": 109
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '11.45+9.6i'\nassert solution(input()) == '0.00+0.00i'\nassert solution(input()) == '-2.00+0.00i'\nassert solution(input()) == '1.50+3.50i'\n=====Test cases=====\nInput 1:\n11.45 + 9.6i\nOutput 1:\n11.45+9.6i\n\nInput 2:\n0.00 + 0.00i\nOutput 2:\n0.00+0.00i\n\nInput 3:\n-2.00 + 0.00i\nOutput 3:\n-2.00+0.00i\n\nInput 4:\n1.50 + 3.50i\nOutput 4:\n1.50+3.50i\n\nInput 5:\nInput Format\nFirst line contains a single integer N.\nNext N lines contains the real and imaginary part of a number separated by a space.\n\nOutput Format\nPrint the result of the addition, subtraction, multiplication, division and modulus operations.\n\nNote: The input contains only positive numbers.\n\nSample Input\n2\n11.45 + 9.6i\n-2.00 + 0.00i\nSample Output\n11.45+9.6i\n-2.00+0.00i\n1.50+3.50i\n'''",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5\n1 2 3 4 5''') == '15.0-0.0i'\n=====Solution=====\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0.1+0.2j\") == \"0.3+0.4j\", \"First Example\"\nassert solution(\"2.1+4.2j\") == \"5.3+6.7j\", \"Second Example\"\nassert solution(\"-2.1+4.2j\") == \"-5.3+6.7j\", \"Third Example\"\nassert solution(\"1+1j\") == \"2.00+1.00i\", \"Fourth Example\"\nassert solution(\"1.1+1.1j\") == \"1.3+1.3j\", \"Fifth Example\"\n",
        "num_ids_2": 56,
        "num_ids_4": 109
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '2 2'\nassert solution('1 + 1i') == '1 -1i'\nassert solution('1.1+1.2i') == '1.1 -1.2i'\nassert solution('-1.1+1.2i') == '-1.1 -1.2i'\nassert solution('2.1+1.2i') == '2.1 -1.2i'\n",
        "num_ids_2": 28,
        "num_ids_4": 78
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1. 1.') == '1. 1.'\nassert solution('1. -1.') == '0. 0.'\nassert solution('2. -2.') == '2. 0.'\nassert solution('3. 2.+2i') == '3. 4.'\nassert solution('4. 3.+4i') == '4. 7.'\n\n=====Input Output Example=====\nExample Input 1\n\n1. 1.\n\nExample Output 1\n\n1. 1.\n\nExample Input 2\n\n1. -1.\n\nExample Output 2\n\n0. 0.\n\nExample Input 3\n\n2. -2.\n\nExample Output 3\n\n2. 0.\n\nExample Input 4\n\n3. 2.+2i\n\nExample Output 4\n\n3. 4.\n\nExample Input 5\n\n4. 3.+4i\n\nExample Output 5\n\n4. 7.\n'''",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nxyz\nabc\n''') == 'xaybzc'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"xyz\") == \"xaybzc\", \"input 1\"\nassert solution(\"abc\") == \"xaybzc\", \"input 2\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\", \"Sample test 1\"\nassert solution(\"abc\") == \"xaybzc\", \"Sample test 2\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nprint(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('xyx') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\nassert solution(\"\") == \"\"\nassert solution(\"asdfghjkl\") == \"\"\nassert solution(\"123456789\") == \"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0B\") == \"0\"\nassert solution(\"01B00\") == \"00\"\nassert solution(\"01B01\") == \"00\"\nassert solution(\"01B00B\") == \"00\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''0\n01\n0''') == '00'\nassert solution('''0\n1\n0''') == '01'\nassert solution('''0\n1\nB''') == '00'\nassert solution('''00\n01\nB''') == '01'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('01B0') == '00'\nprint(solution('01B0'))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"01B\") == \"00\"\nassert solution(\"01\") == \"00\"\nassert solution(\"1B0\") == \"01\"\nassert solution(\"1B\") == \"01\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"00\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"00\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\nprint(solution('01B0'))\nprint(solution('1B0'))\nprint(solution('01B00'))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '00'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n\n------------------------------------------------------------------------------------------------\n\nProblem 3:\n1. Write a program that computes the value of a+aa+aaa+aaaa+aaaaa+aaaaaa+aaaaaaaa+aaaaaaaaa...\n2. Assume that the value of a is 6. Write a program that computes the value of a+aa+aaa+aaaa+aaaaa+aaaaaa+aaaaaaaa+aaaaaaaaa...\n3. Given the value of a and b, print their sum in a single line.\n4. Write a program that computes the sum of the digits of a given number n (as in example above)\n5. Write a program that computes the sum of the digits of the numbers in a range (as in example above)\n6. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence (as in example above)\n7. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence in reversed order (as in example above)\n8. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 (as in example above)\n9. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reverse order (as in example above)\n10. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reverse order including the first and second terms.\n11. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms.\n12. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up.\n13. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up.\n14. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit.\n15. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n16. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n17. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less than 50, and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n18. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less than 50, and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n19. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less than 50, and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n20. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less than 50, and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n21. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less than 50, and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n\n------------------------------------------------------------------------------------------------\n\nProblem 4:\n1. Write a program that computes the value of a+aa+aaa+aaaa+aaaaa+aaaaaa+aaaaaaaa+aaaaaaaaa...\n2. Assume that the value of a is 6. Write a program that computes the value of a+aa+aaa+aaaa+aaaaa+aaaaaa+aaaaaaaa+aaaaaaaaa...\n3. Given the value of a and b, print their sum in a single line.\n4. Write a program that computes the sum of the digits of a given number n (as in example above)\n5. Write a program that computes the sum of the digits of the numbers in a range (as in example above)\n6. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence (as in example above)\n7. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence in reversed order (as in example above)\n8. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 (as in example above)\n9. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order (as in example above)\n10. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms.\n11. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms.\n12. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up.\n13. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit.\n14. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n15. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less than 50, and the sum of the digits of the numbers in the Fibonacci sequence less than 50.\n16. Write a program that computes the sum of the digits of the numbers in the Fibonacci sequence less than 50 in reversed order including the first and second terms, and summing them all up, and then prints the last digit, the sum of the digits of the numbers in the Fibonacci sequence less",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '2'\nassert solution('3\\n1 1 1') == '1'\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n5)Write a program in Python to find out whether a given number is a perfect number or not.\n\n-----------Explanation of Outputs------------------\n\nIf the given number is divisible by 1, 1. then return True, else return False.\n\n------------Code------------\n",
        "num_ids_2": 39,
        "num_ids_4": 54
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('4\\n1 1 2 3') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('5\\n3 4 4 4 1') == '3'\nassert solution('6\\n2 3 4 3 1') == '3'\nassert solution('4\\n2 2 4 1') == '2'\nassert solution('3\\n3 1 2 3') == '3'",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\nassert solution('2\\n1 1 1 1 1\\n') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\nassert solution('''6\n4 5 2 4 3 5\n''') == '5'\nassert solution('''1\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 5 4 3\") == \"4\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\") == \"10\"\nassert solution(\"5\\n1 1 2 3 4\") == \"5\"",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''ca\nca\nca''') == 'C'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'A'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'A'\nassert solution('ca') == 'C'\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''acb\naccc\ncc''') == 'C'\nassert solution('''abc\naccc\nca''') == 'B'\nassert solution('''abc\naccc\nca''') == 'A'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\nassert solution('bb') == 'A'\nassert solution('cc') == 'B'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 4\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 2 3 4 5 6\") == \"NO\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 10') == 'NO'\nassert solution('5 5 6') == 'NO'\nassert solution('5 5 8') == 'NO'\nassert solution('5 5 9') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['5', '5', '7']) == 'YES'\nassert solution(['1', '1', '1']) == 'YES'\nassert solution(['1', '1', '1', '1']) == 'YES'\nassert solution(['1', '1', '1', '1', '1']) == 'YES'\nassert solution(['1', '1', '1', '1', '1', '1']) == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 81
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5 7\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15''') == 'YES'\nassert solution('''1 2 3\n4 5 6\n7 8 9\n10 11 12\n13 14 15''') == 'NO'\nassert solution('''1 2 3 4\n6 7 8 9\n10 11 12 13\n14 15 16 17''') == 'NO'\n\nTLE\n'''\n) == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 7') == 'YES', 'Test 1 failed'\nassert solution('3 4 6') == 'NO', 'Test 2 failed'\nassert solution('1 3 5') == 'NO', 'Test 3 failed'\nassert solution('1 5 3') == 'YES', 'Test 4 failed'\nassert solution('1 4 3') == 'NO', 'Test 5 failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 7') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 7\n5 7 5''') == 'YES'\nassert solution('''1 1 1\n1 1 1''') == 'NO'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"11\"\nassert solution(\"6\") == \"10\"\n\n---\n(2) ",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"8\") == \"23\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '101'\n'''\nn = int(input())\nn -= 1\ni = 0\nfib_seq = [0,1]\nwhile n >= 0:\n    i += 1\n    fib_seq = [fib_seq[1],fib_seq[0]+fib_seq[1]]\n    n -= 1\nprint(fib_seq[1])",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"123456789\") == \"1489129\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '7'\nassert solution('5') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '12'\nassert solution('25') == '891'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n2''') == '7'\nprint(\"You passed the task!\")",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"2\") == \"7\"\nassert solution(\"10\") == \"87\"\nassert solution(\"16\") == \"343\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4\\n2\\n') == '7'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2\\n1\\n') == '7'\nassert solution('2\\n4\\n2\\n') == '5'\nassert solution('4\\n2\\n1\\n') == '7'\nassert solution('1\\n2\\n2\\n') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '7'\nassert solution([input() for _ in range(3)]) == '7'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"10\"\nassert solution(\"2\") == \"10\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n4\n2''') == '7'\nassert solution('''5\n1\n2''') == '5'\nassert solution('''6\n2\n3''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '12'\nassert solution('2') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '11'\nassert solution('2 1 2') == '12'\nassert solution('3') == '11'\nassert solution('3 2 3') == '10'\nassert solution('3 1 2') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '11'\nassert solution('10\\n0 0 0') == '0'\nassert solution('5\\n10 20 30 40') == '20'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '11'\nassert solution('12') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n') == '11'\nassert solution('2\\n1 2\\n') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"11\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '11'\nassert solution([3, 5, 7]) == '22'\nassert solution([5, 8, 13]) == '51'\nassert solution([1, 5, 7]) == '29'\nassert solution([5, 8, 6]) == '0'",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '11'\nassert solution('1\\n2\\n3') == '15'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 3 1\") == \"NO\"\nassert solution(\"10 3 10\") == \"NO\"\n\"\"\"\n\nr, g, b = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"2 3 1\") == \"NO\"\nassert solution(\"4 2 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('4 4 4') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 1') == 'NO'\n\"\"\"\n\nfrom math import sqrt",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 2') == 'NO'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n\"\"\"\nfrom typing import List\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"12 13 14\") == \"YES\"\nassert solution(\"13 14 15\") == \"NO\"\nassert solution(\"14 15 16\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n''') == 'YES'\nassert solution('''\n4 5 6\n''') == 'NO'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(['4', '3', '2']) == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('2 3 1') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3 11\\n1\") == \"30\"\nassert solution(\n    \"5 3 11\\n2\") == \"50\"\nassert solution(\n    \"5 3 11\\n3\") == \"66\"\nassert solution(\n    \"5 3 11\\n4\") == \"92\"\nassert solution(\n    \"5 3 11\\n5\") == \"102\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 11') == \"30\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 11\n1''') == '30'\nassert solution('''5 3 11\n2''') == '6'\nassert solution('''5 3 11\n3''') == '9'\nassert solution('''5 3 11\n4''') == '7'\nassert solution('''5 3 11\n5''') == '13'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11\\n1\\n\") == \"30\"\nassert solution(\"5 3 11\\n2\\n\") == \"15\"\nassert solution(\"5 3 11\\n3\\n\") == \"18\"\nassert solution(\"5 3 11\\n4\\n\") == \"15\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '35'\nassert solution('5 3 11\\n3') == '42'\nassert solution('5 3 11\\n4') == '45'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '17'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\") == \"30\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aabcba\") == \"Yes\"\nassert solution(\"abcba\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"ab\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"bccaccba\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaccaba') == 'Yes', \"First\"\nassert solution('aaabbccdd') == 'No', \"Second\"\nassert solution('abaacbddcab') == 'Yes', \"Third\"\n",
        "num_ids_2": 31,
        "num_ids_4": 49
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('y') == 'No'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''abaccaba''') == 'Yes'\nassert solution('''baabaababac''') == 'No'\nassert solution('''bbbaaabbbba''') == 'Yes'\nassert solution('''baabbbabbaaaaaabbbbbaaaabaaaaabab''') == 'Yes'\nassert solution('''abbbbbabbbbbbbabbaaaaabbbabbbbbbbabbbbbbbaaabaaab''') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 76
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaccaba') == 'Yes', 'Your function is not correct.'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '3'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n1 1\\n2 2\\n3 3\\n') == '3'\nassert solution('3 3\\n1 3\\n2 3\\n') == '2'\nassert solution('10 10\\n1 10\\n3 3\\n') == '3'",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n2 2\n3 3\n''') == '3'\n\"\"\"\n\nfrom math import inf\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        N, K = list(map(int, stdin.split()))\n        nums = sorted(list(map(int, stdin.split())))\n        return nums[K-1]\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 2\\n1 2\\n1 2\\n3 1\") == \"1\"\nassert solution(\"10 10\\n4 4\\n6 7\\n8 8\\n4 4\\n2 1\\n4 4\\n5 5\\n2 2\\n1 2\\n1 2\\n2 2\") == \"2\"\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n2 2\\n3 3') == '3'\nassert solution('3 4\\n1 1\\n2 2\\n3 3') == '3'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n''') == '3'\n\"\"\"\nWrite function solution which receive list of integers in the format of list and return integer.\nWrite assert tests for the correctness of your solution.\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '3'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2\n2 3\n3 4''') == '3'\nassert solution('''3 3\n1 1\n2 2''') == '2'\nassert solution('''3 4\n1 1\n2 2''') == '2'\nassert solution('''3 5\n1 1\n2 2\n3 3\n4 4''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n\nclass Solution(object):\n    def numWays(self, N: int, K: int) -> int:\n        memo = {}\n        def dp(N,K):\n            if N == 1: return K\n            if N == 2 and K == 2: return 2\n            if (N,K) in memo: return memo[(N,K)]\n            total = 0\n            if N > 2:\n                if K < 2: total += dp(N-1,K)\n                total += dp(N-2,K)\n                total *= K\n            if N > 1:\n                if K < 1: total += dp(N-1,K)\n                total += dp(N-1,K+1)\n                total *= K\n            memo[(N,K)] = total\n            return total\n        return dp(N,K)\n\n---\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 3\") == \"5\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('5 10') == '16'\nassert solution('100 100') == '2048'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"42\"\nassert solution(\"5 3\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n\"\"\"\n\nN, K = map(int, input().split())\n\nimport math\n\nMOD = 10 ** 9 + 7\n\ndp = [[1] * 3 for _ in range(K)]\ndp[0][0] = dp[0][1] = dp[0][2] = dp[1][0] = dp[1][1] = dp[1][2] = 1\n\nfor i in range(2, K):\n    dp[i][0] = dp[i - 1][1] + dp[i - 1][2]\n    dp[i][1] = dp[i - 1][0] + dp[i - 1][2]\n    dp[i][2] = dp[i - 1][0] + dp[i - 1][1]\n\nprint(math.comb(N, 2))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == 2\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 4') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 0') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\") == \"10\"\nassert solution(\"20 3\") == \"20\"\nassert solution(\"30 3\") == \"30\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nprint('Tests Successful!')\n'''\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 3\") == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 3\\n5 10 15\\n\") == \"10\"\nassert solution(\"10 10 10\\n5 3 2\\n\") == \"17\"\nassert solution(\"1 10 10\\n4 2 2\\n\") == \"25\"\nassert solution(\"15 20 10\\n2 10 2\\n\") == \"12\"\nassert solution(\"10 20 10\\n4 2 2\\n\") == \"12\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 3\\n5 10 15\\n\") == \"10\"\nassert solution(\"50 20\\n10 10 30 20\\n\") == \"20\"\nassert solution(\"50 10\\n10 30 20\\n\") == \"50\"",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 4') == '17'\nassert solution('20 5') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 5, 2, 7]) == \"15\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"10 10 10 10\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '15'\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 5, 2, 7]) == \"15\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9]) == \"18\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"-1 2\") == \"3\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 3 2 7') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 2 3\n1 2 4 5\n''') == '15'\nassert solution('''6 6 5 8\n6 5 8 4\n''') == '10'\nassert solution('''15 1 2 3\n1 2 4 5\n''') == '25'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 2 3') == \"15\"\nassert solution('4 5 4 4') == \"15\"\nassert solution('1 1 1 1') == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"8 1 2 4\") == \"8\"\nassert solution(\"1 2 3\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('2 2 3 4') == '2'\nassert solution('3 4 5 6') == '6'\nassert solution('4 5 6 7') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'AC x 3'\nassert solution('6') == 'AC x 1'\nassert solution('7') == 'AC x 2'\nassert solution('8') == 'AC x 0'\nassert solution('11') == 'WA x 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"6\\n\", \"AC\\n\", \"TLE\\n\", \"AC\\n\", \"AC\\n\", \"WA\\n\", \"TLE\\n\"]) == \"AC x 3\\n\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n', \"Wrong answer\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nAC\\nTLE\\nAC\\nAC\\nWA\\nTLE\\n\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"2\") == \"WA x 1\"\nassert solution(\"7\") == \"TLE x 2\"\nassert solution(\"1\") == \"RE x 0\"\nassert solution(\"5\") == \"AC x 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"AC x 1\\nWA x 1\"\nassert solution(\"3\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nAC\\nTLE\\nAC\\nAC\\nWA\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nAC\nWA''') == 'AC x 2'\nassert solution('''3\nAC\nAC\nWA''') == 'AC x 2'\nassert solution('''4\nAC\nWA\nTLE\nRE''') == 'AC x 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('12') == '24'\nassert solution('21') == '27'\nassert solution('22') == '24'\n\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('10') == '10'\nassert solution('30') == '27'\nassert solution('-1') == '0'\nassert solution('-22') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('12') == '3'\nassert solution('21') == '27'\nassert solution('01') == '00'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"21\") == \"27\", \"should be 27\"\nassert solution(\"12\") == \"6\", \"should be 6\"\nassert solution(\"2\") == \"7\", \"should be 7\"\nassert solution(\"23\") == \"27\", \"should be 27\"\nassert solution(\"\") == \"0\", \"should be 0\"\n\n----------------------------------------------------------------------\n\nWrite 4 lines of code to test the correctness of solution:\nHow many days do we have until Halloween on November 30th, 2020?\n\n-----Constraints-----\n - 1\u2264N\u226431\n - N is an integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\n\n-----Output-----\nIf we have x days until Halloween at N o'clock on November 30th, 2020, print x.\n\n-----Sample Input-----\n29\n\n-----Sample Output-----\n31\n\nWe have 31 days until Halloween at 29 o'clock on November 30th, 2020.\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"25\") == \"2\"\nassert solution(\"30\") == \"3\"\nassert solution(\"24\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('21') == '27'\nassert solution('22') == '28'\nassert solution('23') == '27'\nassert solution('24') == '26'\nassert solution('25') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"23\") == \"27\"\nassert solution(\"12\") == \"27\"\nassert solution(\"20\") == \"26\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '27'\nassert solution('0') == '27'\nassert solution('1') == '28'\nassert solution('2') == '29'\nassert solution('3') == '30'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\") == \"error\", \"Wrong solution\"\nassert solution(\"5 5\") == \"10\", \"Wrong solution\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 5') == 'error', 'Sample case failed'\nassert solution('10 6') == '9', 'Sample case failed'\nassert solution('0 0') == 'error', 'Sample case failed'\nassert solution('-1 -2') == '-3', 'Sample case failed'\nassert solution('-1 2') == '-3', 'Sample case failed'\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"error\"\n\n\nstdin = input()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '5'\nassert solution('9 2') == 'error'\nassert solution('3 5') == '8'\nassert solution('9 9') == 'error'\nassert solution('12 3') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '9'\nassert solution('1 2') == '3'\nassert solution('8 9') == 'error'\nassert solution('1 2 3') == 'error'\nassert solution('1 2 3 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '9'\nassert solution('101 5') == '10'\nassert solution('10 0') == 'error'\nassert solution('6 -5') == '5'\nassert solution('10 -5') == 'error'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 4\") == \"error\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '4'\nassert solution('2 2') == 'error'\nassert solution('5 5') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '10'\nassert solution('5 9') == 'error'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"1 3 7 9\") == \"8\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"6\"\nassert solution(\"1\") == \"1\"\n\nstdin = read_input()\nprint(solution(stdin))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 7 9') == '7'\nassert solution('4\\n0 0 0 0') == '0'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 2, 7, 9]) == \"7\"\nassert solution([5, 6, 9, 10]) == \"7\"\nassert solution([2, 2, 2, 2]) == \"2\"\nassert solution([4, 2, 3, 3]) == \"3\"\nassert solution([1, 2, 3, 4]) == \"4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"6 1 5 9 6 2\") == \"6\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '7'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\"\nassert solution(\"4\\n1 2 3 4\") == \"5\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"./test/test_short.txt\") == \"2\"\nassert solution(\"./test/test_long.txt\") == \"7\"\nassert solution(\"./test/test_extreme.txt\") == \"3\"\nassert solution(\"./test/test_extreme_2.txt\") == \"6\"\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"\nassert solution(\"1 5\") == \"No\"\nassert solution(\"1 8\") == \"Yes\"\nassert solution(\"1 10\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n6 6\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n7 7\n7 8\n7 9\n7 10\n7 11\n7 12\n8 8\n8 9\n8 10\n8 11\n8 12\n9 9\n9 10\n9 11\n9 12\n10 10\n10 11\n10 12\n11 11\n11 12\n12 12\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"3 4\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 5\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"5 6\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n\n2 3\n\n2 4\n\n''') == 'No'\n\nassert solution('''\n2 4\n\n2 3\n\n''') == 'Yes'\n\nassert solution('''\n2 4\n\n2 3\n\n3 1\n\n''') == 'Yes'\n\nassert solution('''\n2 3\n\n2 4\n\n3 1\n\n''') == 'Yes'\n\nassert solution('''\n2 4\n\n3 1\n\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3\\n') == 'Yes'\nassert solution('1 4\\n') == 'No'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == 'Yes', 'Check your work'\nassert solution('1 4') == 'No', 'Check your work'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"Even\"\nassert solution(\"2\") == \"Even\"\nassert solution(\"3\") == \"Odd\"\nassert solution(\"4\") == \"Even\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"Even\"\nassert solution(\"3 4\") == \"Odd\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Even\"\nprint('All test cases passed!')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 2\n\n---\n1 2\n\n\"\"\") == \"Even\"\nassert solution(\"\"\"1 1\n\n---\n1 1\n\n\"\"\") == \"Odd\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 1') == 'Even'\nassert solution('2 3') == 'Even'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'Even'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n') == 'Even'\nassert solution('1 2\\n') == 'Odd'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == 'Even'\nassert solution('2\\n') == 'Odd'\nassert solution('3\\n') == 'Even'\nassert solution('4\\n') == 'Odd'\nassert solution('5\\n') == 'Even'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Even'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"1 2\") == \"Odd\"\nassert solution(\"1 3\") == \"Odd\"\nassert solution(\"1 0\") == \"Odd\"\nassert solution(\"1\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6') == '2'\n'''\n\nN, M = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"2 5\") == \"2\"\nassert solution(\"4 6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 6''') == '2'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 6\\n') == '2'\nassert solution('1 10\\n') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 6\\n') == '2'\n\"\"\"\n\nN, M = list(map(int, input().split()))\n\nfrom collections import deque\n\ncnt = 0\n\nwhile True:\n    if N % 2 == 0:\n        break\n    cnt += 1\n    N //= 2\n\nfor i in range(cnt):\n    if M % 2 == 0:\n        break\n    M //= 2",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6\") == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6 9\"\nassert solution(\"3\") == \"6 9\"\nassert solution(\"2\") == \"6 9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6\\n9\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6\\n9'\nassert solution('4') == '10\\n10'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6 9\"\nassert solution(\"5\") == \"10 9 9 9 9\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 1 4\n2\n1 1\n2 3\n''') == '6 9'\nassert solution('''\n4\n1 1 1\n2 1\n1 1\n3 3\n''') == '8 9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"\"\"6\n9\n\"\"\"\nassert solution(\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"\"\"6\n9\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6 9'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n'\nassert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9\\n'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"2 1 4\\n\"\n    \"2\\n\"\n    \"1 1\\n\"\n    \"2 3\"\n    ) == \"6 9\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6\\n9\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('5 13') == '20'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 1') == '1000'\nassert solution('1 2') == '2000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2000'\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '2000'\nassert solution('8 8') == '2000'\nassert solution('1 3 4 5 6 7 8 9') == '2000'\n",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"10000 9\") == \"10001\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 4 5 6 7 8 9\\n2000\\n') == '2000'\nassert solution('10 20 20 30 40 50 60 70 80 90\\n1000\\n') == '2000'\n\nimport math\n\nn, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nans = math.ceil(n / k) * k\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"10 20 30 40 50 60 70 80 90 100 120 200 230 300 340 350 370 380 400 400 405 420 430 440 460 460 465 460 470 480 500 500 510 510 520 530 550 560 570 580 580 590 600 610 620 630 640 650 660 670 680 690 700 720 730 740 750 755 760 780 780 790 800 810 820 830 840 850 860 870 880 900 900 810 900 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 810 8",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"2000\"\nassert solution(\"1 2 3 4 5 6 7 8 9 0\") == \"2000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n1000 8\n1 3 4 5 6 7 8 9\"\"\") == \"2000\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"10 2\\n8 6\\n\") == \"10\"\nassert solution(\"10000 9\\n8 3 7 6 5 4 2 1\\n\") == \"20000\"\nassert solution(\"10000 8\\n9 8 7 5 6 4 3 2 1\\n\") == \"20000\"\n",
        "num_ids_2": 38,
        "num_ids_4": 87
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input) == '2'\nassert solution(input) == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '2'\nassert solution('2 3\\n1 3') == '1'\nassert solution('5 4\\n1 2 3 4 5') == '3'\nassert solution('6 5\\n1 2 3 4 5 6') == '4'\nassert solution('8 6\\n1 2 3 4 5 6 7 8') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 62
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"6 3\\n1 3\\n2 3\\n3 4\\n1 5\\n2 6\\n5 6\\n3 5\\n3 6\\n4 4\\n4 5\\n5 5\\n\") == \"3\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"8 4\") == \"2\"\nassert solution(\"16 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n''') == '10'\nassert solution('''5\n2\n''') == '7'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '4'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '5'\nassert solution('4') == '7'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"2\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '10'\nassert solution('5') == '18'\nassert solution('10') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '10'\nassert solution('3\\n2') == '8'\nassert solution('4\\n2') == '6'\n\"\"\"\n\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"10\"\nassert solution(\"3\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3\n\n''') == '10'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\", \"Wrong solution\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12\") == \"26\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"1+2+5\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\nassert solution('1') == '1'\nassert solution('12') == '12'\nassert solution('1+2') == '1+2'\nassert solution('1+2+3') == '1+2+3'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"123\") == \"125\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('125') == '176'\nassert solution('1+2+3') == '6'\nassert solution('1+1') == '2'\nassert solution('12+1') == '13'\nassert solution('123') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('125') == \"176\"\nassert solution('1+2') == \"3\"\nassert solution('1+2+4') == \"5\"\nassert solution('1+2+3') == \"6\"\nassert solution('1+2+3+5') == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4 5 6\") == \"1\"\nassert solution(\"2\\n2 3\") == \"0\"\nassert solution(\"6\\n2 1 3 4 5\") == \"1\"\n\"\"\"\nimport heapq\n\nn = int(input())\n\nheap_snuke = []\nheap_raccoon = []\n\nfor _ in range(n):\n    x = int(input())\n    heapq.heappush(heap_snuke, -x)\n    heapq.heappush(heap_raccoon, x)",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2 3 4 5 6') == '1'\nassert solution('2\\n1 2 3 4 5 6') == '1'\nassert solution('3\\n1 2 3 4 5 6') == '1'\nassert solution('4\\n1 2 3 4 5 6') == '1'\nassert solution('5\\n1 2 3 4 5 6') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1'\nassert solution('2\\n1 2') == '0'\nassert solution('6\\n1 2 3 4 5 6') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 49
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 3 4 5') == '1'\nassert solution('5\\n2 3 1 4 5') == '4'\nassert solution('6\\n1 2 3 4 5 6') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '1'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 3 4 5 6\\n') == '1'\nassert solution('5\\n-1 -2 -3 -4 -5\\n') == '4'\nassert solution('2\\n-1 -2\\n') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n''') == '9900'\nassert solution('''20\n''') == '10080'\nassert solution('''20\n''') == '15800'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '15800'\nassert solution('20') == '15800'\nassert solution('20') == '16000'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '0'\nassert solution('20') == '16000'\nassert solution('30') == '26000'\nassert solution('40') == '38000'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20') == '15800'\nassert solution('10') == '7500'\nassert solution('5') == '10000'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"15800\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '0'\nassert solution(\"20\") == '15800'\nassert solution(\"1\") == '800'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20\n''') == '15800'\n\n\"\"\"\n\nn = int(stdin)\n\nx = (n*800)-200\ny = x\n\nprint(x-y)\n\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"0\"\nassert solution(\"20\") == \"16000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"The empty string\"\nassert solution(\"ant\") == \"abc\", \"Should be abc\"\nassert solution(\"obe\") == \"abc\", \"Should be abc\"\nassert solution(\"rec\") == \"abc\", \"Should be abc\"\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nprint(\"Well done, all tests passed!\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ant\") == \"abc\", \"First\"\nassert solution(\"obe\") == \"abc\", \"Second\"\nassert solution(\"rec\") == \"abc\", \"Third\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\nassert solution('abcd') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('b') == 'ab'\nassert solution('c') == 'abc'\nassert solution('a b c') == 'abac'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ant\") == \"abc\", \"You cheated!\"\nassert solution(\"obe\") == \"abc\", \"You cheated!\"\nassert solution(\"rec\") == \"abc\", \"You cheated!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n0\n0''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"1\", \"2\", \"3\"]) == \"2\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0\n1''') == '1'\nassert solution('''\n0\n0\n0''') == '0'\nassert solution('''\n1\n1\n0''') == '2'\nassert solution('''\n1\n0\n1''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"1\", \"2\", \"3\"]) == \"2\"\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('0') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '48000'\nassert solution('5') == '48000'\nassert solution('3') == '48000'\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n5\\n4\\n5') == '48000'\nassert solution('1\\n3\\n5\\n4\\n5') == '70000'\nassert solution('1\\n4\\n5\\n4\\n5') == '80000'\nassert solution('1\\n2\\n3\\n4\\n5') == '50000'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"48000\"\nassert solution(\"10\") == \"48000\"\nassert solution(\"20\") == \"48000\"\nassert solution(\"30\") == \"48000\"\nassert solution(\"1\") == \"0\"\n\"\"\"\n\nn = int(input())\nk = int(input())\nx = int(input())\ny = int(input())\n\ntotal = x * k\ntotal = total + y\n\nprint(total)\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n10000\\n9000\\n') == '48000'\nassert solution('5\\n4\\n9000\\n100000\\n') == '140000'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"48000\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 10000 9000') == '48000'\nassert solution('4 5 800 1000') == '20000'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('20\\n10\\n10000\\n9000') == '40420'\nassert solution('12\\n10\\n9000\\n9000') == '40420'\nassert solution('12\\n10\\n10000\\n9000') == '40420'\nassert solution('15\\n10\\n10000\\n9000') == '40420'\n",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 10000 9999\") == \"48000\"\nassert solution(\"4 2 20000 25000\") == \"32000\"\nassert solution(\"2 1 1 1\") == \"1\"",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3\n10000\n9000\n\n''') == '48000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('2 + 3') == '5'\nassert solution('3 + 4') == '7'\nassert solution('4 + 5') == '9'\nassert solution('5 + 6') == '11'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 + 1\") == \"2\"\nassert solution(\"1 - 1\") == \"0\"\nassert solution(\"1 - 2\") == \"-1\"\nassert solution(\"2 - 2\") == \"0\"\n\"\"\"\n\nimport sys\nfrom io import StringIO\n\nsys.stdin = open(\"input.txt\", \"r\")\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 + 2 - 3\") == \"-1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"2 / 2\") == \"1\"\nassert solution(\"2 * 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"-1 + 2\") == \"1\"\nassert solution(\"-1 - 2\") == \"-3\"\nassert solution(\"1 - 2 + 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('1 * 2') == '2'\nassert solution('1 / 2') == '0.5'\nassert solution('1 // 2') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 / 2\") == \"0.5\"\nassert solution(\"1 ^ 2\") == \"1.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 + 2') == '3'\nprint(solution('1 + 2'))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1000''') == 'ABC'\nassert solution('''1200''') == 'ARC'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nSmeke has decided to participate in AtCoder Beginner Contest (ABC) if his current rating is less than 1200, and participate in AtCoder Regular Contest (ARC) otherwise.\n\n''') == 'ABC'\nassert solution('''\nSmeke has decided to participate in AtCoder Beginner Contest (ABC) if his current rating is less than 1200, and participate in AtCoder Regular Contest (ARC) otherwise.\n\n''') == 'ARC'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ABC', solution('1000')\nassert solution('1234') == 'ARC', solution('1234')\nassert solution('1234') == 'ARC', solution('1234')\nassert solution('-1234') == 'ARC', solution('-1234')\nassert solution('-1234') == 'ARC', solution('-1234')\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1200') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1200') == 'ARC'\nassert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1000''') == 'ABC'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000\") == \"ABC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1001') == 'ARC'\nassert solution('1000') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('0') == 'ARC'\nassert solution('12') == 'ARC'\nassert solution('3') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1201') == 'ABC'\nassert solution('1202') == 'ARC'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"4\", solution(\"2 2 1\")\nassert solution(\"10 10 10\") == \"10\", solution(\"10 10 10\")\nassert solution(\"15 15 15\") == \"15\", solution(\"15 15 15\")\nassert solution(\"100 100 100\") == \"200\", solution(\"100 100 100\")\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('700 600 780\\n') == '1300'\nassert solution('1000000 100000 100000\\n') == '1000000'\nassert solution('1000000 100000 100000\\n') == '1000000'\nassert solution('100000 100000 100000\\n') == '1000000'\nassert solution('100000 100000 100000\\n') == '1000000'\n\n\"\"\"\n\na, b, c = map(int, stdin.split())\nprint(min(a * 1000 + b * 500 + c * 100, a * 500 + b * 400 + c * 100))",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 8 10\") == \"1300\"\nassert solution(\"9 11\") == \"1480\"\nassert solution(\"7 2 3\") == \"1300\"\nassert solution(\"6 2 3\") == \"1300\"\nassert solution(\"8 2 3\") == \"1300\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('200 200 200') == '2020'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('1500 1 2') == '3000'\nassert solution('1500 1 3') == '4500'\nassert solution('1500 1 4') == '5500'\nassert solution('1234') == '4396'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"700 600 780\"\"\") == \"1300\"\nassert solution(\"\"\"200 50 50\"\"\") == \"75\"\nassert solution(\"\"\"200 60 80\"\"\") == \"120\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([300, 600, 780]) == \"1300\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"100 200 300\") == \"1480\"\nassert solution(\"1000 2000 3000\") == \"1380\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"2\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\na\nb''') == '###\\n##b\\n###'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\nabc\narc''') == '#####\\n#abc#\\n#arc#'\nassert solution('''\n1 2\na#\na#''') == '#a#'\nassert solution('''\n1 3\nab#\nac#''') == '#a#\\n#b#\\n#c#'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\nab\nc\n''') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\n\nsolution('5')\n\na = [1, 2, 3]\n\nb = ['a', 'b', 'c']\n\na.append(b)\n\na = ['1', '2', '3', '4', '5', '6']\n\na.pop(0)\n\na = ['1', '2', '3', '4', '5', '6']\n\na.remove('5')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('4\\nIIDI') == '1'\nassert solution('7\\nIDIIDID') == '2'\nassert solution('0\\nIDIIDI') == '2'\nassert solution('7\\nIIDID') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('10\\nIIDIDID') == '4'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nIIDID\\n\") == \"2\"\nassert solution(\"3\\nIIIII\\n\") == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nIIDID') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"50\") == \"5\"\nassert solution(\"99\") == \"5\"\nassert solution(\"01\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11009 11332') == '4'\n\"\"\"\nfrom math import log2, floor",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11009 11332') == '4'\n\nassert solution('11011 11111') == '1'\n\nassert solution('11211 11111') == '1'\n\nassert solution('11311 11111') == '1'\n\nassert solution('11011') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('11009 11331') == '3'\nassert solution('11009 11333') == '2'\nassert solution('11010 11133') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11009 11332') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11009 11332') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11009 11332') == '4'\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('11009 11332') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('10 3 2') == '3'\nassert solution('20 1 5') == '4'\nassert solution('20 1 2') == '2'\nassert solution('3 1 3') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 4\\n') == '3'\nassert solution('2 3 2\\n') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 4') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1 4''') == '3'\nassert solution('''5 2 5''') == '3'\nassert solution('''1 1 1''') == '2'\nassert solution('''2 1 1''') == '2'\nassert solution('''5 3 4''') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    3 1 4\n    ''') == '3'\n    '''\n    Three different colors: 1, 3, and 4.\n    '''\n    assert solution(\n    '''\n    1 2 3\n    ''') == '3'\n    '''\n    Three different colors: 1, 2, and 3.\n    '''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3 1 4'\n) == '3'\n\nprint(solution(\n    '3 1 4'\n))\n\n\"\"\"\nimport sys",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"10 2 4\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 2 4\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '3'\nassert solution('3 1 4') == '3'\nassert solution('3 1 5') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 2, 4]) == \"12\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 2 3 4 5''') == '12'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n') == '12'\n\nassert solution('2 5\\n') == '17'\n\nassert solution('3 1\\n') == '11'\n\nassert solution('4 2\\n') == '9'\n\"\"\"\n\nfrom typing import List\n\nclass Solution:\n    def __init__(self):\n        pass\n\n    def solution(self, stdin: str) -> str:\n        n, k = list(map(int, stdin.split()))\n        sticks = list(map(int, stdin.split()))\n        # print(n, k, sticks)\n\n        sticks.sort(reverse=True)\n        result = 0\n        for i in range(k):\n            result += sticks[i]\n            print(result)\n        return str(result)",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 3 4 5''') == '12'\nassert solution('''10 2\n1 3\n1 2 4\n1 5\n1 6 7\n1 8 9 10''') == '13'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '12'\nassert solution('10 2') == '20'\nassert solution('8 5') == '17'\nassert solution('9 3') == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"5 3\") == \"12\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '12'\nassert solution('10 10') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"12\"\nassert solution(\"5 3\") == \"12\"\nassert solution(\"5 1\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2 3 4\n''') == '12'\n\nassert solution('''5 3\n1 2 3 4 5\n''') == '12'\n\nassert solution('''6 4\n1 2 3 4 5 6\n''') == '18'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"5 2\\n1 2 3 4\") == \"10\"\nassert solution(\"4 4\\n1 2 3\") == \"6\"\nassert solution(\"5 5\\n1 2 3\") == \"8\"\nassert solution(\"10 10\\n1 2 3 4 5\") == \"15\"\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 5 3\") == \"A\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 7''') == 'B'\nassert solution('''5 6 7''') == 'A'\nassert solution('''1 2 3''') == 'A'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"A\"\nassert solution(\"5 2 7\") == \"B\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('1 2 3') == 'A'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"5 6 7\") == \"B\"\nassert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 1 1\") == \"A\"\nassert solution(\"1 2 1\") == \"A\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 7\\n\") == \"B\"\nassert solution(\"1 1 1\\n\") == \"A\"\nassert solution(\"10 2 10\\n\") == \"A\"\nassert solution(\"1 1 1\\n\") == \"A\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == 'A'\nassert solution('2 2 1') == 'B'\nassert solution('3 2 2') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 1 1\") == \"A\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('5 2 2') == 'A'\nassert solution('4 2 7') == 'A'\nassert solution('1 1 1') == 'A'\nassert solution('2 2 2') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 7\\n') == 'B'\nassert solution('4 3 4\\n') == 'A'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2017/01/07') == '2018/01/07'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/22') == '2018/01/22'\nassert solution('2017/01/24') == '2018/01/24'\nassert solution('2017/01/25') == '2017/01/25'\nassert solution('2017/01/26') == '2017/01/26'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/08') == '2018/01/08'\nassert solution('2017/02/07') == '2017/02/07'\nassert solution('2017/03/07') == '2017/03/07'\nassert solution('2017/04/07') == '2017/04/07'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/08') == '2018/01/08'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/22\") == \"2018/01/22\"\nassert solution(\"2017/01/12\") == \"2018/01/12\"\nassert solution(\"2017/01/01\") == \"2018/01/01\"\nassert solution(\"2017/01/29\") == \"2017/01/29\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/10') == '2018/01/10'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/18') == '2018/01/18'\nassert solution('2017/01/07 8') == '2017/01/07'\nassert solution('2017/01/07 8') == '2017/01/07'",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nprint(solution(\"2017/01/07\"))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'aac'\nassert solution('3') == 'aac'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nafds\\nasdfadf\") == \"adf\"\nassert solution(\"3\\nabc\\nabc\\nabc\") == \"\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"\"\nassert solution(\"3\") == \"aac\"\nassert solution(\"4\") == \"aac\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"aac\"\nassert solution(\"3\") == \"aac\"\nassert solution(\"3\") == \"aac\"\nassert solution(\"3\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\ncbaa\ndaacc\nacacac\"\"\") == \"aac\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac''') == 'acacac'\n\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"cbaa\"\nassert solution(\"2\\ncaa\\nacac\\n\") == \"acac\"\nassert solution(\"1\\nac\\nca\\n\") == \"ac\"\n",
        "num_ids_2": 33,
        "num_ids_4": 72
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '7'\nassert solution('1') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n24 30\n''') == '7'\nassert solution('''\n4\n2 3 4\n''') == '4'\nassert solution('''\n10\n1 100\n2 100\n3 100\n4 100\n5 100\n6 100\n7 100\n8 100\n9 100\n10 100\n''') == '10'\nassert solution('''\n1\n20 20\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('2\\n20 10 20 30 30 20 30 20 10 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20 10 30 20 30 20",
        "num_ids_2": 1794,
        "num_ids_4": 1794
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"1\") == \"7\"\nassert solution(\"1\") == \"7\"\nassert solution(\"1\") == \"7\"\nassert solution(\"1\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n24 30''') == '7'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2 5\n:\n6 8''') == '1'\nprint(solution('''1\n1 2\n:\n3 6'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1\\n2\\n3\\n4\\n5'\nassert solution('4') == '1\\n2\\n3\\n'\nassert solution('1') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 50
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\n\n\"\"\"\n\nN = int(input())\nl, r = input().split()\nprint(len(range(int(l),int(r)+1)))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"6\"\n\"\"\"\nimport math",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\n\"\"\"\n\nn, m = map(int, input().split())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '6'\nassert solution('3') == '1'\nassert solution('3 2') == '2'\nassert solution('7') == '21'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"6\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"20 20\") == \"40\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '6'\nassert solution('1 1') == '1'\nassert solution('2 2') == '4'\nassert solution('5 6') == '10'\n\"\"\"\nfrom itertools import combinations",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"6\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n''') == '6', \"Wrong\"\nassert solution('''\n6 6\n''') == '9', \"Wrong\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6'\nassert solution('20 1') == '0'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '6'\nassert solution('10 10') == '30'\n\n\"\"\"\n\nimport sys\nfrom math import sqrt\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"Possible\"\nassert solution(\"2 1\") == \"Impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"1 1\") == \"Possible\"\nassert solution(\"2 2\") == \"Possible\"\nassert solution(\"1 3\") == \"Impossible\"\nassert solution(\"3 2\") == \"Impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('2 3') == 'Impossible'\nassert solution('10 20') == 'Possible'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('4 5') == 'Impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 1\") == \"Impossible\"\nassert solution(\"5 5\") == \"Possible\"\n\ninput = stdin.readline().strip()\nA, B = map(int, input.split())",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('9 6') == 'Impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Possible\"\nassert solution(\"1 3\") == \"Impossible\"\nassert solution(\"2 2\") == \"Possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Possible\"\nassert solution(\"2 3\") == \"Possible\"\nassert solution(\"3 4\") == \"Impossible\"\nassert solution(\"0 0\") == \"Possible\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\n') == 'Possible'\nassert solution('1 2\\n') == 'Impossible'\nassert solution('3 4\\n') == 'Possible'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('?tc????') == 'atcoder'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"bcoder\"\nassert solution(\"????\") == \"UNRESTORABLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder?') == 'coder'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\nassert solution('coder?') == 'atcoder'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?') == 'UNRESTORABLE', \"Wrong\"\nassert solution('?tc????') == 'atcoder', \"Wrong\"\nassert solution('coder') == 'atcoder', \"Wrong\"\nassert solution('coder?') == 'atcoder', \"Wrong\"\nassert solution('codert') == 'atcoder', \"Wrong\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'tcoder'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"atcoder\"\n\"\"\"\n\ns = input()\nt = input()",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'unrestorable'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n\n--------------------------------------\n\nSample test case:\n\nInput:\n2002\n2017\n\nOutput:\n2032\n\n--------------------------------------\n\nSample test case:\n\nInput:\n500\n500\n\nOutput:\n500\n\n--------------------------------------\n\nSample test case:\n\nInput:\n500\n1000\n\nOutput:\n2000\n\n--------------------------------------\n\nSample test case:\n\nInput:\n2001\n2004\n\nOutput:\n2005\n\n--------------------------------------\n\nSample test case:\n\nInput:\n200\n200\n\nOutput:\n400\n\n--------------------------------------\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2002') == '2017'\n\nassert solution('2032') == '2017'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n\n\"\"\"\n\n\nfrom math import ceil\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\n\nIf your solution is efficient enough, it would be excellent for interviews!\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2002') == '2032'\nassert solution('2017') == '2017'\nassert solution('2032') == '2032'\nassert solution('2017') == '2017'\nassert solution('100') == '200'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '2032'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2001\") == \"2017\"\nassert solution(\"2007\") == \"2025\"\nassert solution(\"2002\") == \"2032\"\nassert solution(\"2004\") == \"2034\"\nassert solution(\"2017\") == \"2043\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''string\nstring\nstring''') == 6\nassert solution('''letter\nletter\nletter''') == 4\nassert solution('''aaaaaa\nstring\nstring''') == 0\nassert solution('''uncopyrightable\nstring\nstring''') == 13\nassert solution('''assesses\nstring\nstring''') == 1",
        "num_ids_2": 14,
        "num_ids_4": 32
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('a') == 1\nassert solution('aaaaaa') == 0\nassert solution('aaa') == 1\nassert solution('aaaaa') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n\n\"\"\"\nimport math\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'AC'\nassert solution(input()) == 'AC'\nassert solution(input()) == 'AC'\nassert solution(input()) == 'AC'\nassert solution(input()) == 'AC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100000000 500 3\n''') == 'TLE', 'First'\nassert solution('''\n100000000 50 3\n''') == 'AC', 'Second'\nassert solution('''\n100000000 10001 5\n''') == 'TLE', 'Third'\nassert solution('''\n100000000 10000 5\n''') == 'AC', 'Fourth'\nassert solution('''\n19931568 1000000 6\n''') == 'TLE', 'Fifth'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"100000000 500 3\") == \"AC\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"TLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '100000000 500 3') == 'TLE', 'First'\nassert solution(\n    '100000000 50 3') == 'AC', 'Second'\nassert solution(\n    '100000000 10001 5') == 'TLE', 'Third'\nassert solution(\n    '100000000 10000 5') == 'AC', 'Fourth'\nassert solution(\n    '19931568 1000000 6') == 'TLE', 'Fifth'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100000000 500 3\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE''') == 'AC'\n\nassert solution('''100000000 50 3\nSample Input 2:\n100000000 10001 5\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10000 5\nSample Output 3:\nAC\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nAC''') == 'AC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '100000000 500 3'\n) == 'AC', 'First'\nassert solution(\n    '100000000 50 3'\n) == 'AC', 'Second'\nassert solution(\n    '100000000 10001 5'\n) == 'TLE', 'Third'\nassert solution(\n    '100000000 10000 5'\n) == 'TLE', 'Fourth'\nassert solution(\n    '19931568 1000000 6'\n) == 'TLE', 'Fifth'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n100000000 500 3\n''') == 'TLE'\n\nassert solution('''\n100000000 50 3\n''') == 'AC'\n\nassert solution('''\n100000000 10001 5\n''') == 'TLE'\n\nassert solution('''\n100000000 10000 5\n''') == 'AC'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 2 3 4'\nassert solution('2 0 0 2') == '2 0 0 2'\nassert solution('2 0 0 2') == '2 0 0 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 16 8 2\\n4 64 32 4\\n2 64 32 4\\n1024 64 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 0 0 0\\n'\n",
        "num_ids_2": 115,
        "num_ids_4": 229
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"1024 64 0 0\"\nassert solution(\"2 0 0 2\") == \"0 0 0 4\"\nassert solution(\"2\") == \"0 0 0 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0'",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\n",
        "num_ids_2": 115,
        "num_ids_4": 229
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\") == \"2 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\"\n",
        "num_ids_2": 111,
        "num_ids_4": 221
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '''0 0 0 4\n4 16 8 2\n2 64 32 4\n0 0 2048 64\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''C2H6 2\nO\nC3H8''') == '0'\nassert solution('''CH3OH 1\nCH4''') == '1'\nassert solution('''C6H6OCH2O 10\nHCN''') == '0'\nassert solution('''C6H14 10\nC5H10''') == '12'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''H2\nO\nH\nH2\nCO\nH\nO2\nH\nO\nH\nH\nO2\nCO\nH\nH\nH\nO\nO\nH\nO\nH''') == '0'\n\nassert solution('''CC1CO1\nCC1CO1\nCC1CO1\nCC1CO1\nCC1CO1\nCC1CO1\nCC1CO1\nCC1CO1\nCC1CO1\nCC1CO1''') == '12'\n\nassert solution('''C2H6\nC2H6\nC2H6\nC2H6\nCC2H5\nCC2H4\nCC2H4\nCC2H4\nCC2H4\nCC2H3\nCC2H3\nCC2H3\nCC2H3''') == '6'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nO\\n') == '0'\nassert solution('C2H6 10\\nC3H8\\n') == '6'\nassert solution('CH3OH 1\\nCH4\\n') == '1'\nassert solution('C6H6OCH2O 10\\nHCN\\n') == '0'\nassert solution('C6H14 10\\nC5H10\\n') == '12'\n\n'''\n",
        "num_ids_2": 37,
        "num_ids_4": 80
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '1'\nassert solution('C3H8') == '1'\nassert solution('CH3OH 1') == '1'\nassert solution('CH4') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H 2\\nO') == '0'\nassert solution('C 2H 6\\nO') == '0'\nassert solution('C 3H 8') == '6'\nassert solution('CH 3OH 1\\nCH 4') == '1'\nassert solution('C 6H 6 OCH2O 10\\nHCN') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nH 2\nO\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\nCH3OH 1\nCH4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\nC6H6OCH2O 10\nHCN\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\nC6H14 10\nC5H10\n\"\"\") == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"6\"\nassert solution(sample_input_3) == \"1\"\nassert solution(sample_input_4) == \"0\"\nassert solution(sample_input_5) == \"12\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '0'\nassert solution(sample_input_2) == '6'\nassert solution(sample_input_3) == '1'\nassert solution(sample_input_4) == '0'\nassert solution(sample_input_5) == '12'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"C2H6 10\\nC3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C6H14 10\\nC5H10\") == \"12\"",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\"\n) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\"\n) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\n\"\"\"\n\n\n\"\"\"------SOLUTION------\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\n    \"ABC SECRET SOMECHORESARETOUGH\") == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nABC HAPPYBIRTHDAYCACEY\n\"\"\"\n) == \"PASS\"\nassert solution(\n\"\"\"\nABC TRAGICBIRTHDAYCACEY\n\"\"\"\n) == \"FAIL\"\nassert solution(\n\"\"\"\nABC HAPPYBIRTHDAY\n\"\"\"\n) == \"FAIL\"\nassert solution(\n\"\"\"\nSECRET SOMECHORESARETOUGH\n\"\"\"\n) == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\nprint('All test cases passed')\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"ABC HAPPYBIRTHDAYCACEY\n\"\"\"\n) == \"PASS\"\nassert solution(\n\"\"\"ABC SECRET SOMECHORESARETOUGH\n\"\"\"\n) == \"FAIL\"\nassert solution(\n\"\"\"ABC HAPPYBIRTHDAYCACEY\n\"\"\"\n) == \"PASS\"\nassert solution(\n\"\"\"ABC HAPPYBIRTHDAY\n\"\"\"\n) == \"FAIL\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"PASS\"\nassert solution(sample_input_2) == \"FAIL\"\nassert solution(sample_input_3) == \"FAIL\"\nassert solution(sample_input_4) == \"PASS\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''ABC HAPPYBIRTHDAYCACEY\n                    ''') == 'PASS'\nassert solution('''ABC HAPPYBIRTHDAYCACEY\n                    ''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAY\n                    ''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAY\n                    ''') == 'FAIL'\nassert solution('''ABC HAPPYBIRTHDAYCACEY\n                    ''') == 'PASS'\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT) == \"ok so far\"\nassert solution(INPUT_2) == \"ok so far\"\nassert solution(INPUT_3) == \"ok so far\"\nassert solution(INPUT_4) == \"ok so far\"",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"]\"\nassert solution(\"13\") == \"]\"\nassert solution(\"21\") == \"]\"\nassert solution(\"27\") == \"]\"\nassert solution(\"0\") == \"ok so far\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n([] [] ]\n''') == '] 7'\nassert solution('''\n([] [] )\n''') == '] 7'\nassert solution('''\n(([] [[]] ()) )\n''') == '] 20'\nassert solution('''\n[ { { () () } ]\n''') == '] 20'\nassert solution('''\n[ { [[()]] (({})) } ] () {}\n''') == 'ok so far'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n([] [] ]\n''') == '] 7'\nassert solution('''\n([] [[]] ())\n''') == '] 20'\nassert solution('''\n([]\n )\n''') == 'ok so far'\nassert solution('''\n([]\n )\n''') == 'ok so far'\nassert solution('''\n([]\n )\n''') == 'ok so far'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n([] [] )\n''') == '] 1'\nassert solution('''\n2\n([] [] )\n''') == 'ok so far'\nassert solution('''\n3\n([] [] )\n''') == 'ok so far'\nassert solution('''\n4\n([] [] )\n''') == 'ok so far'\nassert solution('''\n5\n([] [] )\n''') == 'ok so far'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ok so far\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"ok so far\"\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n([] [] ]\n''') == '] 7'\nassert solution('''20\n[ { { } ] ] ]\n''') == '] 20'\nassert solution('''25\n[ { (([]))) ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ] ]",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"ok so far\"\nassert solution(\"9\") == \"ok so far\"\nassert solution(\"10\") == \"ok so far\"\nassert solution(\"16\") == \"ok so far\"\nassert solution(\"200\") == \"ok so far\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '8\\n'\n    '([] [] ]\\n'\n) == '] 7'\n\nassert solution(\n    '13\\n'\n    '(([] [[]] ())\\n'\n) == '] 20'\n\nassert solution(\n    '21\\n'\n    '[ { { ()()()() ()} ]\\n'\n) == '] 20'\n\nassert solution(\n    '27\\n'\n    '[ { [[()]] (({})) } ] () {}\\n'\n) == 'ok so far'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\napple') == 'Fair Game'\nassert solution('5\\napple') == 'Player 1 lost'\nassert solution('3\\napple') == 'Player 1 lost'\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Player 2 lost\"\nassert solution(\"1\") == \"Fair Game\"\nassert solution(\"2\") == \"Player 1 lost\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"Player 2 lost\"\nassert solution(\"3\") == \"Player 2 lost\"\nassert solution(\"2\") == \"Player 1 lost\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"5\") == \"Fair Game\"\nassert solution(\"2\") == \"Player 2 lost\"\nassert solution(\"4\") == \"Fair Game\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5\\napple\\nextra\\napple\\nneat\\n'\n) == 'Fair Game', \"First\"\nassert solution(\n    '2\\napple\\nextra\\napple\\nneat\\n'\n) == 'Player 1 lost', \"Second\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Fair Game\", \"First\"\nassert solution(\"2\") == \"Player 2 lost\", \"Second\"\nassert solution(\"3\") == \"Player 1 lost\", \"Third\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"Fair Game\"\nassert solution(stdin=\"2\\napple\\nextra\\neat\") == \"Player 2 lost\"\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10010\"\nassert solution() == \"1010\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == '100000'\nassert solution('10') == '1010'\nassert solution('+') == '10010'\nassert solution('*') == '10010'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '100010'\nassert solution('10') == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"+\") == \"10010\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == '100000'\nassert solution('10') == '1010'\nassert solution('+') == '10010'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"+\") == \"10010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"+\") == \"1010\"\nassert solution(\"*\") == \"10100\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == '100000'\nassert solution('10') == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '100000'\nassert solution(input()) == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"+\") == \"10010\"\nassert solution(\"*\") == \"100010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 out\\n\") == \"3\"\nassert solution(\"8 in\\n\") == \"6\"\nassert solution(\"52 out\\n\") == \"8\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n\n\"\"\"\n\nn = int(input())\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\nassert solution(\"52 in\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\nIf $Y$ ends with e, then the extended name is $Y+\\texttt{x}+P$\nIf $Y$ ends with any other vowel (a,i,o, or u), we remove that final vowel from $Y$, and then extend $Y$ with $\\texttt{ex}+P$\nIf $Y$ already ends with ex, then the extended name is simply $Y+P$\n\n-----Hint-----\nIf you are given a string of length <= 1, then the base case has been reached.\n\nSolutions to these kinds of questions are generally tricky, so we encourage you to check your answers by printing them in the cell instead.\n\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox', 'TEST 1 FAILED'\nassert solution('alemaxe maxos') == 'alemaxexmaxos', 'TEST 2 FAILED'\nassert solution('pamoli toxes') == 'pamolextoxes', 'TEST 3 FAILED'\nassert solution('awkward ale mox') == 'awkwardaleexmox', 'TEST 4 FAILED'\n",
        "num_ids_2": 57,
        "num_ids_4": 111
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", 'Test 1'\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", 'Test 2'\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", 'Test 3'\nprint('\"Run\" is good. Great job!')\n\n\"\"\"",
        "num_ids_2": 49,
        "num_ids_4": 72
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '', 'EMPTY'\nassert solution('menolaxios mox') =='menolaxiosexmox', 'SINGLE'\nassert solution('alemaxe maxos') == 'alemaxexmaxos', 'EXAMPLE'\nprint('ALL TEST CASES PASSED')",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''menolaxios mox''') =='menolaxiosexmox'\nassert solution(\n'''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution(\n'''pamoli toxes''') == 'pamolextoxes'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2018\n''') == 'yes', 'January'\nassert solution('''\n2019\n''') == 'no', 'January'\nassert solution('''\n2020\n''') == 'yes', 'January'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2018\\n\") == \"yes\", \"2018\"\nassert solution(\"2019\\n\") == \"no\", \"2019\"\nassert solution(\"2020\\n\") == \"yes\", \"2020\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4''') == '64'\nassert solution('''10 10 10 20 0 10 10 10 10 10''') == '1820000'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '1820000'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '64'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\n",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n2\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 0\\n30 270 995 996 997 998 999\") == \"2 330\"\nassert solution(\"7 1\\n30 270 995 996 997 998 999\") == \"2 570\"\nassert solution(\"7 2\\n30 270 995 996 997 998 999\") == \"0 0\"\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 330\"\nassert solution(input()) == \"0 0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7 0\n30 270 995 996 997 998 999\n\"\"\") == \"2 330\"\nassert solution(\"\"\"\n7 1\n30 270 995 996 997 998 999\n\"\"\") == \"2 570\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 0\n30 270 995 996 997 998 999\n\"\"\") == \"2 330\"\nassert solution(\"\"\"\n7 1\n30 270 995 996 997 998 999\n\"\"\") == \"2 570\"\nassert solution(\"\"\"\n7 2\n30 270 995 996 997 998 999\n\"\"\") == \"0 0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 0\\n30 270 995 996 997 998 999\\n\"\n) == \"2 330\"\nassert solution(\n    \"7 1\\n30 270 995 996 997 998 999\\n\"\n) == \"2 570\"\nassert solution(\n    \"7 2\\n30 270 995 996 997 998 999\\n\"\n) == \"0 0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaa') == \"1\"\nassert solution('abb') == \"1\"\nassert solution('abc') == \"1\"\nassert solution('abab') == \"2\"\nassert solution('aba') == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nabababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '1'\nassert solution('aaaaaaaa') == '1'\nassert solution('aba') == '2'\nassert solution('abbba') == '3'\nassert solution('abbbaab') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == '1'\nassert solution('ab') == '2'\nassert solution('abc') == '2'\nassert solution('aba') == '2'\nassert solution('abababab') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aab\") == \"ab\"\nassert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbbbbbbbbbbbbbbbb\") == \"2\"\nassert solution(\"aaaabbbbbbbbbbbbbbb\") == \"3\"\nassert solution(\"abcdefgh\") == \"6\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 58
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"1\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 6\n1 2 4\n11 12 15 19 24 30\n''') == '1'\nassert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"5 10\\n1 2 3 4 5\\n11 12 15 19 24 30\") == \"0\"\nassert solution(\"6 10\\n1 2 3 4 5\\n11 12 15 19 24 30\") == \"1\"\n",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9''') == '1 2'\nprint(solution('''5 10\n1 2 4\n11 12 15 19 24 30\nSample Output 3:\n0\n1\n\nSample Input 4:\n7 7\n1 2 3 4 5 6 7 8 9\n
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution('5 10') == '1'\nassert solution('6 10') == '1'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\n\nassert solution('''3 6\n1 2 3\n11 12 15 19 24 30\n''') == '0'\n\nassert solution('''5 10\n1 2 4\n0 1 2 3 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\n\nassert solution('''3 6\n1 2 3\n0 1 2 3 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '1'\n\nassert solution('''1 1\n1\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 39,
        "num_ids_4": 67
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution(\"3 6\\n1 2 3 4 5\") == \"1\"\nassert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5551212\n5519876\n5055555''') == '0'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5551212\n''') == '1'\nassert solution('''\n5519876\n''') == '0'\nassert solution('''\n5055555\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5551212\\n\") == \"1\"\nassert solution(\"5519876\\n\") == \"0\"\nassert solution(\"5055555\\n\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5551212\\n') == '1'\nassert solution('5519876\\n') == '0'\nassert solution('5055555\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint('Yygul is cool')",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint('all tests passed')\n\n\"\"\"\n\nfrom math import gcd",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1/4\") == \"1/2\"\nassert solution(\"1/3\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-32/1\") == \"-5/9\"\nassert solution(\"30/5\") == \"15/10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0/1\"\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2/3') == '1/2'\nassert solution('2/0') == '2/0'\nassert solution('-1/3') == '-1/3'\nassert solution('-1/0') == '-1/1'",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\nprint('\"Run\" is good practice.')\nprint('Modify this function to handle fractional numbers.')",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''32/1''') == '0/1'\nassert solution('''33/1''') == '5/9'\nassert solution('''-40/1''') == '-40/1'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('7') == 'Inversion'\nassert solution('7') == 'Nonsense'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"Transposition\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nC D E F\nG A B C\nA D E C\nB F G''') == 'Transposition'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('7') == 'Retrograde'\nassert solution('3') == 'Nonsense'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"Transposition\"\nassert solution(\"7\") == \"Inversion\"\nassert solution(\"10\") == \"Nonsense\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''\n7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nC E G\\nD F# A\\n') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion'\nassert solution('5\\nE E E E E E E\\nD D D D D D D\\n') == 'Retrograde'\n",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\nC E G\nD F# A\n\"\"\") == \"Transposition\"\n\nassert solution(\"\"\"\n7\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Inversion\"\n\nassert solution(\"\"\"\n7\nA B C D E F G\nG F E D C B A\n\"\"\") == \"Retrograde\"\n\nassert solution(\"\"\"\n10\nA A C D D F F G G\nA A C D E D G G\nB A C D D E F F\nC E D D E D F G\nD C D E D E D G\nA A E E D D F F\nA A E D E D F F\n\"\"\") == \"Transposition\"\n\nassert solution(\"\"\"\n100\n
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Retrograde'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Inversion'\nassert solution('''10\nA A G G A A G\nG A G A G A G\nG A A G G A A\n''') == 'Nonsense'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == \"Transposition\"\nassert solution('3') == \"Inversion\"\nassert solution('7') == \"Retrograde\"\nassert solution('10') == \"Nonsense\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\nassert solution('''\nFergus evens it; \\\nc.o. it; \\\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n\n'''\n\uc81c\ucd9c \uc124\uba85\n\uccab \ubc88\uc9f8 \uc904\uc5d0\ub294 \uc2dc\ud5d8\uc5d0 \ucc38\uc5ec\ud55c \uc0ac\ub78c\uc758 \uc218 N(1\u2264N\u22641,000,000)\uc774 \uc8fc\uc5b4\uc9c4\ub2e4. \ub450 \ubc88\uc9f8 \uc904\ubd80\ud130 \ud55c \uc904\uc5d0 \ud55c \uc0ac\ub78c\uc758 \uc2dc\ud5d8 \uc810\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 N\uac1c\uc758 \uc815\uc218\ub85c \uc8fc\uc5b4\uc9c4\ub2e4. \ubaa8\ub4e0 \uc810\uc218\ub294 1 \uc774\uc0c1 100 \uc774\ud558\uc758 \uc815\uc218\uc774\ub2e4.\n\n\uccab \ubc88\uc9f8 \uc904\uc5d0\ub294 N \uba85\uc758 \uc0ac\ub78c\uc774 \uc2dc\ud5d8\uc5d0 \ucc38\uc5ec\ud558\uc600\ub2e4. \ub450 \ubc88\uc9f8 \uc904\ubd80\ud130 N+1 \ubc88\uc9f8 \uc904\uc5d0\ub294 \uc0ac\ub78c\uc774 \ud55c \ubc88\uc529 \uc2dc\ud5d8\ud55c \uc810\uc218\ub97c \ub098\ud0c0\ub0b4\ub294 \uc815\uc218\uac00 \uc8fc\uc5b4\uc9c4\ub2e4. \ubaa8\ub4e0 \uc810\uc218\ub294 1 \uc774\uc0c1 100 \uc774\ud558\uc758 \uc815\uc218\uc774\ub2e4.\n\n\uccab \ubc88\uc9f8 \uc904\uc758 \ub9c8\uc9c0\ub9c9 \uc815\uc218\ub294 \uc2dc\ud5d8\uc774 \ub05d\ub09c \uc0ac\ub78c\uc758 \ucd1d \uc810\uc218\uc774\ub2e4. \ub450 \ubc88\uc9f8 \uc904\uc758 \ub9c8\uc9c0\ub9c9 \uc815\uc218\ub294 \ud574\ub2f9 \uc0ac\ub78c\uc774 \uba87 \ubc88\uc774\uc5c8\ub294\uc9c0 \ucd9c\ub825\ud55c\ub2e4. \ucd9c\ub825\ud558\ub294 \uc815\uc218\ub294 \ub450 \ubc88\uc9f8 \uc904\uc758 \ub9c8\uc9c0\ub9c9 \uc815\uc218\uc758 \uc810\uc218\uc774\ub2e4.\n\n\ucd9c\ub825\n\uccab \ubc88\uc9f8 \uc904\uc5d0\ub294 \uc2dc\ud5d8\uc5d0 \ucc38\uc5ec\ud55c \uc0ac\ub78c\uc758 \uc218 N\uc744 \ucd9c\ub825\ud55c\ub2e4. \ub450 \ubc88\uc9f8 \uc904\ubd80\ud130 \uc21c\uc11c\ub300\ub85c N\uac1c\uc758 \uc904\uc5d0 \uac78\uccd0\uc11c \ud55c \uc904\uc5d0 \ud55c \uc0ac\ub78c\uc758 \uc2dc\ud5d8 \uc810\uc218\ub97c \ucd9c\ub825\ud55c\ub2e4.\n\n\uc608\uc81c \uc785\ub825 1\n2\n3\n2\n2\n3\n3\n\uc608\uc81c \ucd9c\ub825 1\n3\n7\n\uc608\uc81c \uc785\ub825 2\n3\n2\n1\n6\n3\n1\n1\n\uc608\uc81c \ucd9c\ub825 2\n5\n9\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', 'First'\nassert solution('Cat-a-pil-lar') == 'Catacillar', 'Second'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', 'Third'\n\nimport sys",
        "num_ids_2": 47,
        "num_ids_4": 73
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''I love ba-na-na\nSample Output 1:\nGah kove bababa\n\nSample Input 2:\nCat-a-pil-lar\nSample Output 2:\nCatacillar\n\nSample Input 3:\nCo-ding is the best\nSample Output 3:\nCociccah gs the bestuh''') == '''Gah kove bababa\n\nCatacillar'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\nprint(solution(input()))\n'''\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n'''\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '14'\nassert solution('4') == '16'\n\"\"\"\n\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == 6\nassert solution(4) == 16\nassert solution(3) == 14\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '6'\nassert solution('''\n4\n''') == '16'\nassert solution('''\n3\n''') == '14'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''4 10\n1 3 1 7\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '4'\nassert solution('4 10') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '4'\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'\n\n'''\nAnother way to solve the problem, using max function and min function:",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 6\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"5 10\n4 8 1 9 7\n\"\"\") == \"2\"\nassert solution(\"\"\"4 10\n1 3 1 7\n\"\"\") == \"4\"\nassert solution(\"\"\"5 10\n1 2 3 4 5\n\"\"\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n\nprint(solution(input))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'\nassert solution('''\n10 6\n1 2 3 4 5\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\"\nassert solution(\"4 10\") == \"4\"\nassert solution(\"5 6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''5 10\n1 3 1 7\n''') == '4'\nprint('Solution')\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n\nstdin = \"\"\"\n5 6\n1 2 3 4 5\n\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0\n''') == 'possible'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == 'possible'\nassert solution(input_2) == 'impossible'\nassert solution(input_3) == 'impossible'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0''') == 'possible'\nassert solution('''1 2\n1 0 0\n0 1 0''') == 'impossible'\n\n[input]\n3 3\n4 2 4\n1 2 3\n5 2 5\n[output]\nimpossible'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\nassert solution(\"\"\"1 2\n0 1 0\n1 0 1\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\nassert solution(\n    '1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\n\nassert solution('1 2\\n1 0 0\\n0 1 0\\n') == 'impossible'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\\n\") == \"possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible', \"First\"\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible', \"Second\"\nassert solution('''\n1 2\n0 1 1\n1 0 1\n''') == 'impossible', \"Third\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2 3\\n'\n) == '1.875'\n\nassert solution(\n    '6 2\\n'\n) == '4.25'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''2 3\n''') == '1.875'\nassert solution('''6 2\n''') == '4.25'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\nprint(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 0\n4 2 7\n1 4''') == '0 1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1 4'\nassert solution(stdin) == '1 6'\nassert solution(stdin) == '1 9'\n\n------------------\n\nWrite a program that can compute a few of the results of the following example problem.\n\nSample Input:\n1 1 0\nSample Output:\n0 0\n\nSample Input:\n4 2 7\nSample Output:\n1 4\n\nSample Input:\n3 0 0\nSample Output:\n1 6\n\nSample Input:\n3 2 1\nSample Output:\n1\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nassert solution('4 3 3') == '0 5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0 0\"\nassert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 0\\n') == '0 0'\nassert solution('4 2 7\\n') == '1 4'\nassert solution('3 0 0\\n') == '1 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n\"\"\"\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\nassert solution(\"3 3 2\") == \"2 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n\nimport sys\nassert sys.version_info >= (3, 7), \"This test requires at least Python 3.7\"\nfrom tests import test_all_are_equal\nimport importlib\n",
        "num_ids_2": 26,
        "num_ids_4": 63
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWWB\\nWBWB\\nWBBW\\nBBWB\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\"\n",
        "num_ids_2": 57,
        "num_ids_4": 100
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nWBBW\\nWBWB') == '1'\nassert solution('4\\nBWWB\\nWBWB\\nBWWB\\nWBWB') == '0'\nassert solution('4\\nBWBW\\nWBWB\\nBWWB\\nWBWB') == '0'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '0'\nassert solution('6\\nWBWWBB\\nWBWBWW\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '1'\n",
        "num_ids_2": 47,
        "num_ids_4": 118
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n') == '1'\nassert solution('4\\nBWWB\\nWBWB\\nWBBW\\nBWBW\\n') == '0'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWWB\\nWBWB\\nWBBW\\nBBWBW\") == \"0\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == \"0\"\n",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '0'\nassert solution('100') == '0'\nassert solution('123') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 2\") == \"2 1\"\nassert solution(\"2 6 3 4\") == \"3 4\"\nassert solution(\"2 4 1 3\") == \"3 2\"\nassert solution(\"1 2 1 3\") == \"3 2\"\nassert solution(\"1 4 5 8\") == \"3 7\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2 1'\nassert solution(input()) == '3 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 1 2''') == '2 1'\nassert solution('''2 6 3 4''') == '2 3'\nassert solution('''2 4 1 3''') == '1 3'\nassert solution('''1 2 1 3''') == '1 2'\nassert solution('''1 4 5 8''') == '3 7'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\n\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2 1\"\nassert solution(input()) == \"3 4\"\nassert solution(input()) == \"3 2\"\nassert solution(input()) == \"1 2\"\nassert solution(input()) == \"3 7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2') == '3 4'\nassert solution('2 6 3 4') == '3 2'\nassert solution('2 4 1 3') == '1 2'\nassert solution('1 2 1 3') == '2 1'\nassert solution('1 4 5 8') == '3 7'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"2 1\"\n\nassert solution(\n\"\"\"\n2 1\n5 2\n8 9\n2 9\n\"\"\") == \"2 9\"\n\nassert solution(\n\"\"\"\n4 6\n5 6\n2 7\n1 3\n\"\"\") == \"1 3\"\n\nprint(solution(\n\"\"\"\n1 1\n5 5\n5 5\n1 5\n1 4\n\"\"\") == \"1 4\")\n\nprint(solution(\n\"\"\"\n1 1\n3 3\n4 4\n3 4\n\"\"\") == \"3 4\")\n\nprint(solution(\n\"\"\"\n1 5\n2 2\n3 3\n4 4\n5 5\n\"\"\") == \"1 5\")\n\nprint(solution(\n\"\"\"\n3 7\n2 7\n1 6\n2 8\n1 4\n\"\"\") == \"1 4\")\n\nprint(solution(\n\"\"\"\n10 10\n1 5\n10 5\n10 8\n9 6\n11 7\n9 10\n5 8\n3 4\n7 8\n4 7\n8 5\n5 5\n1 2\n4 5\n10 10\n\"\"\") == \"1 4 5\")\n\nprint(solution(\n\"\"\"\n10 10\n1 5\n10 5\n10 8\n9 6\n11 7\n9 10\n5 8\n3 4\n7 8\n4 7\n8 5\n5 5\n1 2\n4 5\n10 10\n\"\"\") == \"3 7\")\n\nprint(solution(\n\"\"\"\n1 1\n2 2\n3 4\n5 4\n6 6\n\"\"\") == \"1 1\")\n\nprint(solution(\n\"\"\"\n1 2\n1 3\n1 5\n1 4\n2 4\n2 6\n3 5\n3 7\n4 7\n4 5\n4 8\n5 5\n5 6\n5 7\n6 7\n6 8\n7 7\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n9 9\n9 10\n10 10\n10 11\n11 11\n10 12\n11 12\n12 12\n12 11\n12 10\n11 9\n11 8\n11 7\n11 6\n11 5\n11 4\n11 3\n11 2\n11 1\n11 0\n12 0\n12 1\n12 2\n12 3\n12 4\n12 5\n12 6\n12 7\n12 8\n12 9\n12 10\n12 11\n13 13\n13 12\n13 11\n13 10\n13 9\n13 8\n13 7\n13 6\n13 5\n13 4\n13 3\n13 2\n13 1\n13 0\n13 -1\n12 -1\n11 -1\n10 -1\n9 -1\n8 -1\n7 -1\n6 -1\n5 -1\n4 -1\n3 -1\n2 -1\n1 -1\n0 -1\n\"\"\") == \"1 1\")\n\nprint(solution(\n\"\"\"\n10 10\n1 5\n10 5\n10 8\n9 6\n11 7\n9 10\n5 8\n3 4\n7 8\n4 7\n8 5\n5 5\n1 2\n4 5\n10 10\n\"\"\") == \"2 3\")\n\nprint(solution(\n\"\"\"\n10 10\n1 5\n10 5\n10 8\n9 6\n11 7\n9 10\n5 8\n3 4\n7 8\n4 7\n8 5\n5 5\n1 2\n4 5\n10 10\n\"\"\") == \"1 1\")\n\nprint(solution(\n\"\"\"\n10 10\n1 5\n10 5\n10 8\n9 6\n11 7\n9 10\n5 8\n3 4\n7 8\n4 7\n8 5\n5 5\n1 2\n4 5\n10 10\n\"\"\") == \"2 1\")\n\nprint(solution(\n\"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n\"\"\") == \"1 1\")\n\nprint(solution(\n\"\"\"\n5 5\n3 3\n4 4\n1 2\n3 4\n\"\"\") == \"1 4\")\n\nprint(solution(\n\"\"\"\n3 3\n1 4\n2 5\n\"\"\") == \"1 3\")\n\nprint(solution(\n\"\"\"\n1 1\n3 3\n4 4\n5 5\n\"\"\") == \"1 4\")\n\nprint(solution(\n\"\"\"\n5 5\n3 3\n4 4\n1 2\n3 4\n\"\"\") == \"4 3\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 3\n2 4\n3 3\n\"\"\") == \"3 3\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 3\n2 4\n3 3\n\"\"\") == \"2 4\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n1 4\n2 4\n3 4\n4 4\n\"\"\") == \"3 4\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"4 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n1 4\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"5 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n1 4\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"2 4\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n1 4\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"3 4\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"1 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"1 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"1 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"1 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\") == \"1 5\")\n\nprint(solution(\n\"\"\"\n5 5\n1 3\n2 4\n3 4\n4 5\n5 5\n\"\"\")",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 2 1\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1,2,3,4,5,6\") == \"true\"\nassert solution(\"1,2,3\") == \"false\"\nassert solution(\"1\") == \"false\"\n",
        "num_ids_2": 34,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"[[0,0]]\") == \"true\"\nassert solution(\"[[0,0],[]]\") == \"true\"\nassert solution(\"[[0,0],[0,0],[0,0]]\") == \"true\"\nassert solution(\"[[0,0],[1,0],[0,0]]\") == \"false\"\nassert solution(\"[[0,0],[0,0],[0,0]]\") == \"false\"\n",
        "num_ids_2": 29,
        "num_ids_4": 73
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n[3,2,0,-4]\n1\n[1,2]\n0\n''') == 'true'\nassert solution('''\n[3,2,0,-4]\n1\n[1,2]\n0\n''') == 'false'\nassert solution('''\n[-1]\n-1\n''') == 'false'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 -> 2 -> 0 -> -4\n-5\n\"\"\") == \"true\"\nassert solution(\"\"\"\n1 -> 2\n-5\n\"\"\") == \"false\"\nassert solution(\"\"\"\n1\n-5\n\"\"\") == \"false\"\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict\nimport heapq\n\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n    \n    def __eq__(self, other):\n        if not self.next and not other.next:\n            return True\n        elif not self.next or not other.next:\n            return False\n        elif self.val == other.val and self.next == other.next:\n            return True\n        else:\n            return False\n\nclass Solution:\n    def isCyclic(self, head: ListNode) -> bool:\n        if not head or not head.next:\n            return False\n        \n        slow = head\n        fast = head.next\n        seen = set()\n        while fast and fast.next and fast.next.next:\n            if fast in seen:\n                return True\n            seen.add(slow)\n            slow = fast\n            fast = fast.next.next\n        \n        return False",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'true'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 0 -4\n1\n1 2\n1 2\n1 2\n''') == 'true'\n\nassert solution('''\n3 2 0 -4\n1\n1 2\n2\n''') == 'true'\n\nassert solution('''\n1\n1\n1\n''') == 'false'\n\nassert solution('''\n0\n0\n''') == 'false'\n\nassert solution('''\n3\n2\n1\n1\n''') == 'true'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n-99\n\"\"\") == \"true\"\n\nassert solution(\"\"\"\n1\n\"\"\") == \"false\"\n\nassert solution(\"\"\"\n-99\n\"\"\") == \"false\"\n\nassert solution(\"\"\"\n3\n2\n0\n-4\n\"\"\") == \"true\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"[3,2,0,-4]\\n\") == \"true\"\nassert solution(\"[1,2]\\n\") == \"true\"\nassert solution(\"[1]\\n\") == \"false\"\n",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 7 11 15\") == \"0 1\"\nassert solution(\"2 7 11 15\") == \"0 1\"\nassert solution(\"8 5 18 14\") == \"3 4\"\nassert solution(\"3 5 6 4\") == \"0 1 2\"\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == [0, 1]\nassert solution('5') == ['1', '2']\nassert solution('6') == ['1', '3']\nassert solution('0') == []\nassert solution('0 1 2 3 4') == ['1', '2', '3', '4']\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2\\n4') == '0 1', \"Wrong\"\nassert solution('2\\n1\\n2') == '1 2', \"Wrong\"\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == \"2 1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4 5\\n8 9') == '0 1'\nassert solution('5\\n7 9\\n2 3\\n8 4') == '1 2'\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n3\n4\n7\n11\n15\n\"\"\") == \"0 1\"\nassert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n\"\"\") == \"0 1\"\n\"\"\"\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return i, j\n                else:\n                    pass\n    \n\"\"\"\n[2, 7, 11, 15]\n[9, 11]\n\"\"\"\n\"\"\"\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(i+1, len(nums)):\n                if nums[i] + nums[j] == target:\n                    return i, j\n                else:\n                    pass\n    \n\"\"\"\n\n\"\"\"\nFind longest chain of sums:\n\nhttps://leetcode.com/problems/longest-common-subsequence/\n\nclass Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        dp = [[0] * (len(text2) + 1) for _ in range(len(text1) + 1)]\n        for i in range(1, len(text1) + 1):\n            for j in range(1, len(text2) + 1):\n                if text1[i-1] == text2[j-1]:\n                    dp[i][j] = 1 + dp[i-1][j-1]\n                else:\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n        return dp[-1][-1]\n\"\"\"\n\n\"\"\"\nTest:\nclass Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        dp = [[0] * (len(text2) + 1) for _ in range(len(text1) + 1)]\n        for i in range(1, len(text1) + 1):\n            for j in range(1, len(text2) + 1):\n                if text1[i-1] == text2[j-1]:\n                    dp[i][j] = 1 + dp[i-1][j-1]\n                else:\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n        return dp[-1][-1]\n\"\"\"\n\n\"\"\"\nTest:\nclass Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        dp = [[0] * (len(text2) + 1) for _ in range(len(text1) + 1)]\n        for i in range(1, len(text1) + 1):\n            for j in range(1, len(text2) + 1):\n                if text1[i-1] == text2[j-1]:\n                    dp[i][j] = 1 + dp[i-1][j-1]\n                else:\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n        return dp[-1][-1]\n\"\"\"\n\n\"\"\"\nTest:\nclass Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        dp = [[0] * (len(text2) + 1) for _ in range(len(text1) + 1)]\n        for i in range(1, len(text1) + 1):\n            for j in range(1, len(text2) + 1):\n                if text1[i-1] == text2[j-1]:\n                    dp[i][j] = 1 + dp[i-1][j-1]\n                else:\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n        return dp[-1][-1]\n\"\"\"\n\n\"\"\"\nhttps://leetcode.com/problems/intersection-of-two-arrays/\n\nclass Solution:\n    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:\n        nums1_set = set(nums1)\n        nums2_set = set(nums2)\n        return list(nums1_set.intersection(nums2_set))\n\n\"\"\"\n\n\"\"\"\nhttps://leetcode.com/problems/count-and-say/\n\nclass Solution:\n    def countAndSay(self, n: int) -> str:\n        if n == 1:\n            return \"1\"\n        else:\n            n = n-1\n            ans = self.countAndSay(n)\n            counts = 0\n            count = 1\n            result = \"\"\n            for i in range(1, len(ans)):\n                if ans[i] == ans[i-1]:\n                    counts += 1\n                else:\n                    result += str(counts) + ans[i-1]\n                    counts = 1\n            result += str(counts) + ans[-1]\n            return result\n\n\"\"\"\n\n\"\"\"\nhttps://leetcode.com/problems/rotate-image/\n\nclass Solution:\n    def rotate(self, matrix: List[List[int]]) -> None:\n        for i in range(len(matrix)):\n            for j in range(i, len(matrix)):\n                matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]\n        for i in range(len(matrix)):\n            for j in range(int(len(matrix)/2)):\n                matrix[i][j], matrix[i][-j-1] = matrix[i][-j-1], matrix[i][j]\n\"\"\"\n\n\"\"\"\nhttps://leetcode.com/problems/move-zeroes/\n\nclass Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        i = 0\n        for j in range(len(nums)):\n            if nums[j]!= 0:\n                nums[i], nums[j] = nums[j], nums[i]\n                i += 1\n\"\"\"\n\n\"\"\"\nhttps://leetcode.com/problems/remove-element/\n\nclass Solution:\n    def removeElement(self, nums: List[int], val: int) -> int:\n        i = 0\n        n = len(nums)\n        while i < n:\n            if nums[i] == val:\n                nums.pop(i)\n                n -= 1\n            else:\n                i += 1\n        return n\n\"\"\"\n\n\"\"\"\nhttps://leetcode.com/problems/design-linked-list/\n\nclass ListNode:\n    def __init__(self, val=0, next=None):\n        self.val = val\n        self.next = next\n\nclass MyLinkedList:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.head = None\n        self.tail = None\n        self.size = 0\n\n    def get(self, index: int) -> int:\n        \"\"\"\n        Get the value of the index-th node in the linked list. If the index is invalid, return -1.\n        \"\"\"\n        if index >= self.size:\n            return -1\n        current = self.head\n        if index == 0:\n            return current.val\n        for i in range(index):\n            current = current.next\n        return current.val\n\n    def addAtHead(self, val: int) -> None:\n        \"\"\"\n        Add a node of value val before the first element of the",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2\\n7\\n11\\n') == '0 1'\nassert solution('5\\n-2\\n4\\n-1\\n3\\n') == '2 1'\nassert solution('7\\n-2\\n4\\n-1\\n3\\n') == '1 2'\nassert solution('8\\n-2\\n4\\n-1\\n3\\n') == '0 1'\nassert solution('8\\n-2\\n4\\n-1\\n3\\n') == '1 2'\n",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5\\n3 5 6\\n3 8 9\\n') == '1 2'\nassert solution('7 3\\n2 4 6\\n3 5 7\\n') == '0 1'\nassert solution('9 8\\n3 5 7\\n2 4 6\\n1 7 9\\n') == '2 3'\nassert solution('8 7\\n3 5 7\\n2 4 6\\n1 7 9\\n') == '1 3'\nassert solution('7 8\\n3 5 7\\n2 4 6\\n1 7 9\\n') == '1 3'\n",
        "num_ids_2": 48,
        "num_ids_4": 106
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n7\\n11\\n15\") == \"0 1\"\nassert solution(\"5\\n2\\n7\\n11\\n13\") == \"0 1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 4 5 3\\n3 4 5\\n6\\n7\\n\") == \"1 0\"\nassert solution(\"7\\n6 4 5\\n1 2 3\\n9 8\\n\") == \"0 2\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n1\n2\n''') == '0'\n\nassert solution('''4\n1\n2\n3\n''') == '1'\n\nassert solution('''10\n10\n2\n5\n4\n3\n5\n2\n1\n2\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('1') == '2'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n1\\n2\\n3\\n4') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\", \"Wrong Answer\"\nassert solution(\"2\") == \"1\", \"Wrong Answer\"\nassert solution(\"5\") == \"2\", \"Wrong Answer\"\nassert solution(\"6\") == \"3\", \"Wrong Answer\"\nassert solution(\"7\") == \"6\", \"Wrong Answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n''') == 'impossible'\nassert solution('''2\n1 2\n3 2\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2 2 1\n''') == '4'\nassert solution('''2\n3 7\n''') == 'impossible'\nprint(solution('''3\n3 7\n'''))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '4'\nassert solution('3') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3 7\n''') == '4'\nassert solution('''\n1\n2 7\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"3 2 2 1\") == \"4\"\nassert solution(\"1 2 2 1\") == \"impossible\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2 2 1') == '4'\nassert solution('1\\n3 7') == 'impossible'\n\nSolution Approach\n\nSuppose that the socks are of types 1, 2, 3, 4, 5, 6, 7, 8, 9, and 10.\n\nLet's say that we want to pair the top two socks to the top of the pile, and the bottom two of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 1. We want to move the first top and the second top of the pile to the bottom of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 2. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 3. We want to move the first top of the pile to the bottom of the pile, and the second top of the pile to the bottom of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 4. We want to move the top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 5. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 6. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 7. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 8. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 9. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 10. We want to move the third top of the pile to the bottom of the pile, and the fourth top of the pile to the bottom of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 1. We want to move the third top of the pile to the top of the pile, and the fourth top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 2. We want to move the top of the pile to the top of the pile, and the fourth top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 3. We want to move the top of the pile to the top of the pile, and the fourth top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 4. We want to move the top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 5. We want to move the top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 6. We want to move the top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 7. We want to move the top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 8. We want to move the top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 9. We want to move the top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 10. We want to move the top of the pile to the top of the pile.\n\nWe can see that in total there are 10 possible moves that we need to take in order to make the pile move to the pile, except that they are not all possible.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 1. We want to move the third top of the pile to the top of the pile, and the fourth top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 2. We want to move the third top of the pile to the top of the pile, and the fourth top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 3. We want to move the third top of the pile to the top of the pile, and the fourth top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 4. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 5. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 6. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 7. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 8. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 9. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the bottom two socks of the pile, which are both of type 10. We want to move the third top of the pile to the top of the pile.\n\nLet's say we pick the top two socks of the pile, which are both of type 1. We want to move the top of",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2 2 1\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3 7') == 'impossible'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123450995 1') == '123451000'\n\nassert solution('123450995 2') == '123450998'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 1\n''') == '10'\nassert solution('''123450995 1\n''') == '123451000'\nassert solution('''184 1\n''') == '180'",
        "num_ids_2": 19,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123450995 1') == '123451000'\nassert solution('184 1') == '180'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n20\n''') == '20'\nassert solution('''4 1\n2\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n184 1\n''') == '180'\nassert solution('''\n123450995 1\n''') == '123451000'\nassert solution('''\n163480995 1\n''') == '163500'\nassert solution('''\n54700995 1\n''') == '5755'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([7, 0]) == \"700\"\nassert solution([5, 0]) == \"50\"\nassert solution([10, 0]) == \"100\"\nassert solution([1, 0]) == \"1\"\nassert solution([100, 0]) == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('112 180') == '123450995'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"18 0\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"100000000 1\") == \"100000000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0.000000\"\nassert solution(\"2\") == \"0.000000\"\nassert solution(\"3\") == \"0.000000\"\nassert solution(\"1 1\") == \"0.000000\"\nassert solution(\"2 2\") == \"1.000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1 2\n1 0\n2 1\n0 1\n0 0\n1 1\n2 2\n3 3\n1 2\n2 2\n''') == '0.000000'\nassert solution('''\n10\n-5 1\n0 1\n5 1\n-2 1\n1 0\n-1 1\n1 1\n2 2\n3 3\n1 2\n2 2\n''') == '0.666666'\nassert solution('''\n5\n-10 -1\n0 0\n10 0\n-1 -1\n1 0\n''') == '0.5'\nassert solution('''\n5\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '0.5'\nassert solution('''\n10\n1 1\n1 2\n2 1\n1 1\n2 2\n1 1\n1 0\n2 1\n1 1\n1 0\n1 0\n1 1\n''') == '0.5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1') == '0.000000'\nassert solution('2\\n2 2') == '0.000000'\nassert solution('3\\n3 3') == '0.000000'\nprint('You are awesome! All test cases passed!')\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1\n2 2\n3 3\n''') == '0.000000'\nprint('all tests passed')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n1 1\n2 2\n3 3\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"3\n-1 -1\n-1 1\n-1 -1\n\"\"\") == \"0.50000\"\nassert solution(\"\"\"3\n0 0\n0 0\n0 0\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"3\n1 1\n-1 1\n1 1\n\"\"\") == \"1.50000\"\nassert solution(\"\"\"3\n1 1\n1 -1\n1 1\n\"\"\") == \"1.250000\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n10\n0 1\n1 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\") == \"0.000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3\\n1 1') == '0.000000'\nassert solution('3\\n0 1') == '0.000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('3\\n-1 -1\\n1 0\\n1 1') == '0.000000'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '0.000000'\n\n'''",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('3') == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1\\n2\\n3\\n4'\nassert solution('5') == '1\\n2\\n3\\n4\\n5'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4 6'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 4 6 8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\n\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2 4 6 8'\nassert solution('2 4 2 1 3') == '1 2'\nassert solution('4 6 1 2 3 4') == '2 4'\nassert solution('5 2 5 3 4 5') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 4\\n3 6 8 1\\n2 6 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 4 8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n\n---Input---\nInput contains the number of lines of inputs to be read.\n\n---Output---\nThe function should output the answer to the problem.\n\nSample Testcase 1\nSample Input 1:\n2\n\nSample Output 1:\n3\n\nSample Testcase 2\nSample Input 2:\n3\n\nSample Output 2:\n6\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5\") == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"8\"\nassert solution([1, 2, 3]) == \"12\"\nassert solution([1, 1, 1]) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('3\\n3\\n2') == '8'\nprint('\"Run\" is good practice.')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1.6666666666666667\"\nassert solution(\"3 5 1 2\") == \"2.5\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n3 0 2') == '1.66666667'\nassert solution('3\\n1 -1 4') == '2.5'\nprint(solution(input()))",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 0 2\n''') == '1.6666666666666667'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.6'\nassert solution('3 10 20 30 40 50') == '2.5'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n3 0 2\\n1 -1 4\\n\") == \"2.5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1\\n') == '1.66666667'\nassert solution('3\\n1 0 2\\n') == '2.5'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 0 2') == '1.6666666666666667'\nassert solution('2\\n1 -1 4') == '2.5'\nprint('all test cases passed')\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n0 1 0\n''') == '0.5'\nassert solution('''3\n1 0 2\n''') == '1.0'\nassert solution('''6\n0 -1 3 4 2 -1\n''') == '0.6666666666666667'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n1 2 1 3 2 4 1 3 3 2\n''') == '3.3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '5'\nassert solution('7 3') == '6'\nassert solution('15 12') == '7'\n\nprint('All test cases passed.')",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"15 12\") == \"7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3\\n') == '6'\nassert solution('15 12\\n') == '7'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '6'\nassert solution('7 3') == '6'\nassert solution('15 12') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '7'\nassert solution('5') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 3\n''') == '6'\nassert solution('''\n15 12\n''') == '7'\nassert solution('''\n7 7\n''') == '6'\nassert solution('''\n10 10\n''') == '7'\nassert solution('''\n100 100\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 3\n''') == '6'\nassert solution('''\n15 12\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1\\n5\\n3') == '6'\nassert solution('5\\n10\\n10\\n5\\n3') == '6'\nassert solution('4\\n1\\n10\\n5\\n3') == '8'\nassert solution('3\\n5\\n5\\n3') == '8'\nassert solution('6\\n100\\n100\\n100\\n100\\n100\\n100\\n100') == '80'\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"123864 123865\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"198765 198769\") == \"1 2 3 4 5 6 7 8 9\"",
        "num_ids_2": 49,
        "num_ids_4": 70
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\n\nassert solution('''\n198765 198769\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('') == '0'",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\nassert solution(\"1238764 123864\") == \"0\"\nassert solution(\"98765 45610\") == \"0\"\nassert solution(\"1987 65432\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\nassert solution(\"12 5 7\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"123456 123457\n\"\"\") == \"1\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_from_stream(from_file('input.txt'))) == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\nassert solution(\"1234567 890123\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == '0.50000000'\nassert solution(\"3\") == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n''') == '0.50000000'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n\n-- Python3 --\nimport sys\nimport math",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.50000000'\nprint('Congratulations!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"180\\n\") == \"triple 20\\ndouble 15\\nsingle 9\"\nassert solution(\"96\\n\") == \"triple 19\\ndouble 15\\nsingle 9\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n180\n''') == 'triple 20\n\nassert solution('''\n96\n''') == 'triple 19\n''') == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n180\n''') == 'triple 20'\nassert solution('''\n96\n''') == 'triple 19'\nassert solution('''\n180\n''') == 'triple 20'\nassert solution('''\n96\n''') == 'triple 19'\nassert solution('''\n90\n''') == 'triple 19'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    180\n    '''\n) == 'impossible'\nassert solution(\n    '''\n    96\n    '''\n) == 'triple 19'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"180\") == \"single 20\"\nassert solution(\"96\") == \"triple 19\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n2\n3\n4\n5\n1\n6\n7''') =='single 9'\nassert solution('''15\n5\n3\n2\n1\n4\n7\n6''') == 'double 11'\nassert solution('''108\n8\n2\n3\n4\n5\n1\n6''') == 'impossible'\nassert solution('''96\n8\n2\n3\n4\n5\n1\n6''') =='single 11'\nassert solution('''108\n8\n2\n3\n4\n5\n1\n6''') == 'impossible'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == 'impossible'\nassert solution('''\n2\n''') == 'impossible'\nassert solution('''\n2\n2\n2\n''') == 'impossible'\nassert solution('''\n20\n''') == 'triple 20'\nassert solution('''\n18\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\nassert solution('5 2 2') == '36'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6 8 5\\n\") == \"48\"\n\nassert solution(\n    \"8 4 7\\n\") == \"336\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n6\\n4') == '168'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 2''') == '36'\nassert solution('''10 4 7''') == '168'\nassert solution('''10 10 7''') == '252'\nassert solution('''10 100 7''') == '0'\nassert solution('''100 100 7''') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\nassert solution('5 2 2') == '36'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 7') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 2\n2 4 5 4 6 5''') == '36'\nassert solution('''7 8 1\n7 7 7 7 6''') == '49'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 2 5') == '12'\nassert solution('7 3 6') == '18'\nassert solution('5 2 3') == '12'\nassert solution('3 5 2') == '12'\nassert solution('6 6 8') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(samples[0]) == \"5\"\nassert solution(samples[1]) == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n3 10\\n\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\\n\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"1\"\nassert solution(input_data) == \"1\"\nassert solution(input_data) == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 10\n5 8\n2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n7\n3 8\n5 8\n2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n2\n3\n4\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n3 10\n5 8\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n2\n3 8\n5 8\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 3, 10, 3, 8, 5, 8]) == 7\nassert solution([2, 3, 8, 5, 8, 10, 10]) == 1\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == \"\"\n\nassert solution(\"1\\n\") == \"\"\n\nassert solution(\"3 10\\n\") == \"\"\n\nassert solution(\"3 8\\n\") == \"\"\n\nassert solution(\"5 8\\n\") == \"\"",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3 10\n5 8\n''') == '7'\nassert solution('''\n2\n3 8\n5 8\n''') == '1'\nassert solution('''\n3\n1 5\n1 5\n''') == '1'\nassert solution('''\n1\n1 10\n1 10\n''') == '1'\nassert solution('''\n2\n3 8\n5 8\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"7\"\nassert solution(\"2 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\nSimon says go swimming.\nGo swimming.\nSimon says play with your heart.\nPlay with your heart.\n\"\"\") == \"swimming play with your heart\"\n\nassert solution(\"\"\"\n1\nSimon says touch your nose.\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n1\nSimon says go swimming.\nGo swimming.\n\"\"\") == \"go swimming\"\n\nassert solution(\"\"\"\n10\nSimon says go swimming.\nGo swimming.\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\nLower your left hand.\nSimon says play with your heart.\nPlay with your heart.\n\"\"\") == \"raise your right hand lower your left hand play with your heart\"\n\nassert solution(\"\"\"\n10\nSimon says go swimming.\nGo swimming.\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\nLower your left hand.\nSimon says play with your heart.\nPlay with your heart.\n\"\"\") == \"go swimming lower your left hand play with your heart\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nSimon says smile.') =='smile.'\nassert solution('2\\nSimon says raise your right hand.') =='raise your right hand.'\nassert solution('3\\nSimon says raise your left hand.') =='raise your left hand.'\n",
        "num_ids_2": 39,
        "num_ids_4": 61
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\nSimon says smile.\n\"\"\") == \" smile.\"\nassert solution(\"\"\"\n2\nSimon says raise your right hand.\nLower your right hand.\n\"\"\") == \" raise your right hand.\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nSimon says move your right hand.\nmove your right hand.\nSimon says lift your left foot.\nlift your left foot.\n''') == '''move your right hand.\n move your right hand.\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') =='smile.'\nassert solution('3') == 'raise your right hand.'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') == 'raise your right hand.'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nSimon says smile.\\nLower your right hand.\\nSimon says raise your left hand.') =='smile.\\n raise your left hand.'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') =='smile'\nassert solution('2') == 'raise your right hand'\nassert solution('3') == 'raise your left hand'\n'''\nfrom collections import defaultdict\n\nn = int(input())\ngame = defaultdict(str)\nfor i in range(n):\n    l = input().split()\n    if l[0] == \"Simon says\":\n        game[l[2] + \" \" + l[3]] += \"\\n\"\n    else:\n        game[l[0]] += \"\\n\"\n    game[l[0]] = game[l[0]][:-1]\nfor k, v in game.items():\n    print(k + \" \" + v)\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"smile.\"\nassert solution(\"2\") == \"raise your left hand.\"\nassert solution(\"3\") == \"raise your right hand.\"\nassert solution(\"3\") == \"raise your right hand.\"\nassert solution(\"3\") == \"raise your right hand.\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n\n--Link--\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '0 0 4 6 10 12 16 18') == '5'\nassert solution(\n    '1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\\n\") == '5'\nassert solution(\"1 2 4 6 10 12 16 18\\n\") == '0'\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == \"5\"\nassert solution('1 2 4 6 10 12 16 18') == \"0\"\nassert solution('1 2 3 6 10 12 16 18') == \"7\"\nassert solution('1 2 3 4 6 10 12 16 18') == \"7\"\nassert solution('1 2 3 4 5 6 10 12 16 18') == \"7\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\nAA\nAT\nTT\nTC\n''') == '2'\nassert solution('''5 2\nAA\nAT\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == \"3\"\nassert solution('''4 1\nA\nA\nG\nT''') == \"2\"\nprint(solution('''5 3\nACAC\nGCAC\nTCAC'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\nAA\nAT\nTT\nTC''') == '3'\n\nassert solution('''3 1\nA\nA\nG''') == '2'\n\nassert solution('''6 2\nAA\nAT\nTT\nTC\nGA\nGT\n''') == '5'\n\nassert solution('''7 3\nAA\nAT\nTT\nTC\nGA\nGT\nAA\nAC\n''') == '4'\n\nassert solution('''6 1\nA\nA\nG\nT\nSample Output 3:\n6\n0 2\n0 3\n0 4\n0 5\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == '8'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''5 4\nAAA\nAAA\nAAA\nAAA\nAAA''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nprint(solution(input))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 3'\nassert solution('4 1\\nA\\nA\\nG\\nT') == '0 1'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 1\nA\nA\nG\nT\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 2\nAA\nAT\nTT\nTC\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 1\n0 1\n1 2\n2 3\n\"\"\") == \"0 2 3\"\n\nassert solution(\"\"\"\n2 1\n0 1\n0 2\n\"\"\") == \"0 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'\nassert solution('aaaaaaaaaaaa') == 'a'\nassert solution('ababababab') == 'b'\nassert solution('ababababab') == '-'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Dr. Chaz will have 81 pieces of chicken left over!'\nassert solution(input()) == 'Dr. Chaz needs 23 more piece[s] of chicken!'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"Dr. Chaz needs 2 more piece[s] of chicken!\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20 100\n2 3\n''') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('''1 20\n2 3\n''') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nprint(solution.__doc__)\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 2') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz needs 1 more piece[s] of chicken!'\nprint('Day 08 - Part 1 - Chicken Buffet (Leetcode):')\nprint(solution(input()))\nprint('')\nprint('Day 08 - Part 2 - Chicken Buffet (Leetcode):')\nprint(solution(input()))\nprint('')\nprint('Day 08 - Part 3 - Chicken Buffet (Leetcode):')\nprint(solution(input()))\n",
        "num_ids_2": 44,
        "num_ids_4": 67
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('3 4') == 'Dr. Chaz needs 4 more piece[s] of chicken!'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '-1'\nassert solution('3 20') == '2'\nassert solution('100 200') == '-1'\nassert solution('3 10') == '0'\nassert solution('30 30') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 20') == '0'\nassert solution('3 30') == '-2'\nassert solution('5 30') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 1 1\\n2 2 2\\n3 2 1') == '-2'\nassert solution('5 10\\n1 1 2\\n2 2 2\\n3 2 1') == '0'\nassert solution('5 20\\n1 1 1\\n2 2 2\\n3 2 1') == '1'\nassert solution('5 50\\n1 1 1\\n2 2 2\\n3 2 1') == '1'\n",
        "num_ids_2": 53,
        "num_ids_4": 105
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\nassert solution('1 10') == '-2'\nassert solution('1 10 10') == '0'\nassert solution('1 10 10 10') == '0'\nassert solution('1 10 10 10 10 10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 1000\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''3 1\n1 1 1\n2 2 2\n3 2 1\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2\\n2 2 2\\n3 2 1\") == \"-2\"\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == \"0\"\nassert solution(\"1 1\\n2 2\\n3 2\\n4 4\") == \"1\"\n",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 100\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\nprint('all tests passed')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '-2'\nassert solution('2 10') == '0'\nassert solution('3 10') == '0'\nassert solution('3 30') == '0'\nassert solution('4 1 1') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala','sample test 1'\nassert solution('4 4\\nluka\\no#a#\\nkula\\n#a#s\\n') == 'as','sample test 2'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\n\"\"\"\n\nR, C = list(map(int, input().split()))\n\nletters = {\n    'a': '#',\n    'b': '_',\n    'c': '_',\n    'd': '#',\n    'e': '#',\n    'f': '_',\n    'g': '_',\n    'h': '_',\n    'i': '_',\n    'j': '_',\n    'k': '_',\n    'l': '_',\n    'm': '#',\n    'n': '_',\n    'o': '#',\n    'p': '_',\n    'q': '_',\n    'r': '#',\n    's': '_',\n    't': '_',\n    'u': '_',\n    'v': '#',\n    'w': '_',\n    'x': '_',\n    'y': '_',\n    'z': '_',\n}\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#a#\nq#a#''') == 'kala'\n\nassert solution('''3 3\nala\nkla\njup\n\nSample Input 3:\n10 10\naaa\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc\naaa\nbbb\nccc",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n3 3\nluka\no#a#\nkula\ni#as\n''') == 'as'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'luka', 'First Test'\nassert solution('2 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'as', 'Second Test'\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\n\nassert solution(\"NSEW\") == \"4\"\n\nsolution(input())\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"NESWE\") == \"NESWE\"\n\nassert solution(\"EWNES\") == \"NESWE\"\n\nassert solution(\"NSEW\") == \"NESWE\"\n\nassert solution(\"WNES\") == \"NESWE\"\n\nassert solution(\"WNESNW\") == \"NESWE\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"WNESWEENWNWM\") == \"10\"\nassert solution(\"NNSEW\") == \"5\"\nassert solution(\"N\") == \"0\"\nassert solution(\"NNSE\") == \"0\"\nassert solution(\"NSWE\") == \"4\"\n\n\"\"\"\n\nfrom itertools import product\nimport re",
        "num_ids_2": 27,
        "num_ids_4": 48
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''NNWSEWNEWMMM\n                EENNN\n                NNESENWMMM\n                WNNEENWWMMM\n                WWSWWWWWWW\n                ENWW\n                NNEN\n                ''') == '14'\nassert solution('''NWWW\n                NNNN\n                NNNN\n                NNNN\n                NWWW\n                ''') == '10'\nassert solution('''EENNENNEN\n                ENWWW\n                ENWWW\n                WENNN\n                ENWWW\n                ''') == '6'\nassert solution('''WNWMWE\n                NNNN\n                NNESEN\n                NNESEN\n                WNWMWE\n                ''') == '5'\nassert solution('''S\n                NS\n                NS\n                NS\n                S\n                ''') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('WNEENWEENE') == '11'\nassert solution('NSEW') == '4'\nprint('Tests passed.')\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\nWNEENWEENEENE\n''') == '10'\n\nassert solution(\n'''\nNSEW\n''') == '4'\n\nassert solution(\n'''\nW\n''') == '1'\n\nassert solution(\n'''\nS\n''') == '1'\n\nassert solution(\n'''\nN\n''') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SSS\") == \"SSS\"\nassert solution(\"NSEW\") == \"NSWE\"\nassert solution(\"EEN\") == \"EEN\"\nassert solution(\"NSEWN\") == \"NSEWN\"\nassert solution(\"NNNN\") == \"NNNN\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''WNEENWEENEEN\n    ''') == '10'\nassert solution('''NSEW\n    ''') == '4'\nprint('Day 4')\nprint('1.1')\nprint('SOLUTION 1')\nprint('2.1')\nprint('SOLUTION 2')\nprint('3.1')\nprint('SOLUTION 3')\nprint('4.1')\nprint('SOLUTION 4')\nprint('5.1')\nprint('SOLUTION 5')\nprint('6.1')\nprint('SOLUTION 6')\nprint('7.1')\nprint('SOLUTION 7')\nprint('8.1')\nprint('SOLUTION 8')\nprint('9.1')\nprint('SOLUTION 9')\nprint('10.1')\nprint('SOLUTION 10')\nprint('11.1')\nprint('SOLUTION 11')\nprint('12.1')\nprint('SOLUTION 12')\nprint('13.1')\nprint('SOLUTION 13')\nprint('14.1')\nprint('SOLUTION 14')\nprint('15.1')\nprint('SOLUTION 15')\nprint('16.1')\nprint('SOLUTION 16')\nprint('17.1')\nprint('SOLUTION 17')\nprint('18.1')\nprint('SOLUTION 18')\nprint('19.1')\nprint('SOLUTION 19')\nprint('20.1')\nprint('SOLUTION 20')\nprint('21.1')\nprint('SOLUTION 21')\nprint('22.1')\nprint('SOLUTION 22')\nprint('23.1')\nprint('SOLUTION 23')\nprint('24.1')\nprint('SOLUTION 24')\nprint('25.1')\nprint('SOLUTION 25')\nprint('26.1')\nprint('SOLUTION 26')\nprint('27.1')\nprint('SOLUTION 27')\nprint('28.1')\nprint('SOLUTION 28')\nprint('29.1')\nprint('SOLUTION 29')\nprint('30.1')\nprint('SOLUTION 30')\nprint('31.1')\nprint('SOLUTION 31')\nprint('32.1')\nprint('SOLUTION 32')\nprint('33.1')\nprint('SOLUTION 33')\nprint('34.1')\nprint('SOLUTION 34')\nprint('35.1')\nprint('SOLUTION 35')\nprint('36.1')\nprint('SOLUTION 36')\nprint('37.1')\nprint('SOLUTION 37')\nprint('38.1')\nprint('SOLUTION 38')\nprint('39.1')\nprint('SOLUTION 39')\nprint('40.1')\nprint('SOLUTION 40')\nprint('41.1')\nprint('SOLUTION 41')\nprint('42.1')\nprint('SOLUTION 42')\nprint('43.1')\nprint('SOLUTION 43')\nprint('44.1')\nprint('SOLUTION 44')\nprint('45.1')\nprint('SOLUTION 45')\nprint('46.1')\nprint('SOLUTION 46')\nprint('47.1')\nprint('SOLUTION 47')\nprint('48.1')\nprint('SOLUTION 48')\nprint('49.1')\nprint('SOLUTION 49')\nprint('50.1')\nprint('SOLUTION 50')\nprint('51.1')\nprint('SOLUTION 51')\nprint('52.1')\nprint('SOLUTION 52')\nprint('53.1')\nprint('SOLUTION 53')\nprint('54.1')\nprint('SOLUTION 54')\nprint('55.1')\nprint('SOLUTION 55')\nprint('56.1')\nprint('SOLUTION 56')\nprint('57.1')\nprint('SOLUTION 57')\nprint('58.1')\nprint('SOLUTION 58')\nprint('59.1')\nprint('SOLUTION 59')\nprint('60.1')\nprint('SOLUTION 60')\nprint('61.1')\nprint('SOLUTION 61')\nprint('62.1')\nprint('SOLUTION 62')\nprint('63.1')\nprint('SOLUTION 63')\nprint('64.1')\nprint('SOLUTION 64')\nprint('65.1')\nprint('SOLUTION 65')\nprint('66.1')\nprint('SOLUTION 66')\nprint('67.1')\nprint('SOLUTION 67')\nprint('68.1')\nprint('SOLUTION 68')\nprint('69.1')\nprint('SOLUTION 69')\nprint('70.1')\nprint('SOLUTION 70')\nprint('71.1')\nprint('SOLUTION 71')\nprint('72.1')\nprint('SOLUTION 72')\nprint('73.1')\nprint('SOLUTION 73')\nprint('74.1')\nprint('SOLUTION 74')\nprint('75.1')\nprint('SOLUTION 75')\nprint('76.1')\nprint('SOLUTION 76')\nprint('77.1')\nprint('SOLUTION 77')\nprint('78.1')\nprint('SOLUTION 78')\nprint('79.1')\nprint('SOLUTION 79')\nprint('80.1')\nprint('SOLUTION 80')\nprint('81.1')\nprint('SOLUTION 81')\nprint('82.1')\nprint('SOLUTION 82')\nprint('83.1')\nprint('SOLUTION 83')\nprint('84.1')\nprint('SOLUTION 84')\nprint('85.1')\nprint('SOLUTION 85')\nprint('86.1')\nprint('SOLUTION 86')\nprint('87.1')\nprint('SOLUTION 87')\nprint('88.1')\nprint('SOLUTION 88')\nprint('89.1')\nprint('SOLUTION 89')\nprint('90.1')\nprint('SOLUTION 90')\nprint('91.1')\nprint('SOLUTION 91')\nprint('92.1')\nprint('SOLUTION 92')\nprint('93.1')\nprint('SOLUTION 93')\nprint('94.1')\nprint('SOLUTION 94')\nprint('95.1')\nprint('SOLUTION 95')\nprint('96.1')\nprint('SOLUTION 96')\nprint('97.1')\nprint('SOLUTION 97')\nprint('98.1')\nprint('SOLUTION 98')\nprint('99.1')\nprint('SOLUTION 99')\nprint('100.1')\nprint('SOLUTION 100')\nprint('101.1')\nprint('SOLUTION 101')\nprint('102.1')\nprint('SOLUTION 102')\nprint('103.1')\nprint('SOLUTION 103')\nprint('104.1')\nprint('SOLUTION 104')\nprint('105.1')\nprint('SOLUTION",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('WNEENWEENEEN') == '10'\nassert solution('NSEW') == '4'\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nassert solution('0 4 2 2') == '0 + 4 = 2 * 2'\nassert solution('0 4 2 2') == '0 / 4 = 2 - 2'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"First\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Second\"\nassert solution('0 0 0 0') == 'problems ahead', \"Third\"\nassert solution('1 1 1 1') == 'problems ahead', \"Fourth\"\n",
        "num_ids_2": 44,
        "num_ids_4": 80
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', 'First'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', 'Second'\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', \"First\"\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', \"Second\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\nproblems ahead\\n'\n",
        "num_ids_2": 78,
        "num_ids_4": 131
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\nassert solution(\"0 -4 2 2\") == \"0 + 4 = 2 * 2\"\nassert solution(\"0 / 4 2 2\") == \"0 + 4 = 2 - 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 3, 4]) == \"1 - 2 = 3 - 4\", \"First\"\nassert solution([0, 4, 2, 2]) == \"0 * 4 = 2 - 2\", \"Second\"\nprint('Done!')\n'''",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"0 - 2 = 2 - 2\\n1 / 2 = 3 / 4\\n0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2 3 4\n\"\"\") == \"\"\"\n1 - 2 = 3 - 4\n1 / 2 = 3 / 4\n\n\"\"\"\nassert solution(\"\"\"\n0 4 2 2\n\"\"\") == \"\"\"\n0 * 4 = 2 - 2\n0 + 4 = 2 * 2\n0 + 4 = 2 + 2\n0 / 4 = 2 - 2\n\n\"\"\"\nassert solution(\"\"\"\n3 4 2 3\n\"\"\") == \"\"\"\n3 * 4 = 6 - 3\n3 - 4 = 6 + 3\n3 + 4 = 6 - 3\n3 / 4 = 6 - 3\n\n\"\"\"\nassert solution(\"\"\"\n5 3 2 1\n\"\"\") == \"\"\"\n5 * 3 = 15 - 5\n5 - 3 = 15 + 5\n5 + 3 = 15 - 5\n5 / 3 = 15 - 5\n\n\"\"\"\nassert solution(\"\"\"\n0 2 2\n\"\"\") == \"\"\"\nproblems ahead\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABBA') == '4'\nassert solution('CCBB') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\\nMAMA\\n.T..\\n.A..\"",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\nassert solution(\"HAT\") == \".....\"\nassert solution(\"MAMA\") == \"..M..\\n..A..\\n..M..\"\nassert solution(\"BA\") == \"....\\n....\"\n",
        "num_ids_2": 64,
        "num_ids_4": 98
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.'*10 + 'BANANA' + '.'*10\nassert solution('MAMA TATA') == '.'*10 + 'MAMA' + '.'*10",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n10 14\n13 17\n25 26\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n2\n1 365\n20 28\n\"\"\") == \"365\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\n\nassert solution_with_set() == \"10\"\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"2\") == \"365\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''5\n1 365\n20 28\n25 26\n20 30\n30 35\n''') == '30'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n10 14\n13 17\n25 26\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2\n1 365\n20 28\n\"\"\") == \"365\"\nprint('All tests passed!')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''2\n1 365\n20 28\n''') == '365'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"3\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"0 1\"\nassert solution('4') == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '0 1'\nassert solution('4\\n') == '2 3'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n''') == '0 1 0'\nassert solution('''\n4\n''') == '1 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '2 3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '0 1'\nassert solution(\"4\") == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\") == \"A 1 197\"\n\nassert solution(\"\"\"\n5 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\nSample Output 2:\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372\n\"\"\") == \"A 0 99\"\n\nassert solution(\"\"\"\n6 4\n1 100 100\n2 100 100\n3 100 100\n4 100 100\n5 100 100\n6 100 100\nSample Output 2:\nA 0 99\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n\"\"\") == \"A 0 99\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'B 100 49\\nA 1 197\\nA 49 100\\nA 0 99\\n0.1965897693'\nassert solution('5 4') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\\n\") == \"B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\"\nprint(solution(\"5 3\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\\n\"))\nassert solution(\"4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99\\n\") == \"A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\"\n",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\nassert solution('2 5') == 'A 0 99'\nassert solution('5 1') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"4 4\") == \"A 0 99\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'A 100 49'\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == 'A 0 99'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'A 1 197'\nassert solution('1 100') == 'B 100 49'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n5 100\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '168'\nassert solution('3') == '15'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"168\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '168'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1\n4\n3\n5\n''') == '168'\nassert solution('''\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n1\n''') == '1'\nassert solution('''\n2\n3\n2\n''') == '4'\nassert solution('''\n4\n5\n4\n3\n2\n''') == '6'\nassert solution('''\n3\n5\n5\n4\n4\n''') == '6'\nassert solution('''\n5\n5\n3\n5\n3\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '25', \"Wrong answer!\"\nassert solution('5') == '125', \"Wrong answer!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('3') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"168\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n0') == 'ABCDEF'\nassert solution('1\\nA\\nA') == 'A'\nassert solution('3 3\\nA\\nA\\n') == 'AA'\nassert solution('3 3\\nA\\nA\\n1') == 'AAA'\n",
        "num_ids_2": 43,
        "num_ids_4": 78
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'CBADEF'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CBADEF'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2\\n') == 'CDBEAF', \"Should be CDBEAF\"\nassert solution('3 3\\nABC\\nDEF\\n0\\n') == 'CBADEF', \"Should be CBADEF\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('5 3\\nGSAGBBGS\\nGSAGBBGS\\nGSAGBBGS\\nGSAGBBGS\\nGSAGBBGS') == 'SBBGBBSG'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"CBADEF\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'CBADEF','simple test case 1'\nassert solution('5 5') == 'CDEBFACBD','simple test case 2'\nassert solution('4 4') == 'CDBAEFCD','simple test case 3'\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'\nassert solution('3 3') == 'DEFACA'\nassert solution('5 5') == 'DEACFE'\nassert solution('3 2') == 'ADEFB'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'CBADEF', \"First\"\nassert solution('3 3') == 'CDBEAF', \"Second\"\nassert solution('3 3') == 'DEFACE', \"Third\"\nassert solution('3 3') == 'ABCDEF', \"Fourth\"",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5') == '4'\nassert solution('3\\n5') == '4'\nassert solution('1\\n3') == '1'\nassert solution('3\\n1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n3\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '1'\n\nassert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '4'\n\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '4'\n\nassert solution('''10\n2\n10 T\n10 T\n''') == '10'\n\nassert solution('''10\n20\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T\n100 T",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '4'\nassert solution('2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N') == '3'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\n'\n    '5\\n'\n    '20 T\\n'\n    '50 T\\n'\n    '80 T\\n'\n    '50 T\\n'\n    '30 T\\n'\n) == '5'\nassert solution(\n    '2\\n'\n    '5\\n'\n    '100 T\\n'\n    '100 N\\n'\n    '100 T\\n'\n    '100 T\\n'\n    '100 N\\n'\n) == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '4', 'Sample Test'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1', \"base\"\nassert solution('2') == '4', \"rotate\"\nassert solution('3') == '5', \"skip\"\nassert solution('4') == '4', \"skip\"\nassert solution('5') == '4', \"skip\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n\nassert solution(input_string='''\n3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\nSample Output 3:\n4\n''') == \"4\"\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 3\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 4\n''') == '22'\nassert solution('''\n10 3\n''') == '37\n''')\nassert solution('''\n100 100\n''') == '7396",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 8\n''') == '22'\nassert solution('''\n4 3\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"6 8\") == \"22\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n4 1 5''') == '6'\nassert solution('''9 3\n6 5 7 8 1''') == '22'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4') == '0'\nassert solution('3 3') == '1'\nassert solution('6 5 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\nassert solution('1 4\\n4 3 2 1') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 1 3\\n4 3 2 1\") == \"0\"\nassert solution(\"3 4\\n2 1 3\\n3 4 5\\n6 7 8\\n\") == \"1\"\nprint(solution(input()))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"4 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''\n1 4\n4 3 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4') == '0'\nassert solution('3 3') == '1'\nassert solution('5 5') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"28\"\nassert solution(\"10\") == \"16\"\nassert solution(\"8\") == \"12\"\nassert solution(\"16\") == \"24\"\nassert solution(\"18\") == \"28\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\n\nassert solution('''10\n3\n10\n2\n12\nSample Output 3:\n16\n''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '28'\nassert solution('10') == '16'\nassert solution('3') == '28'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\n3\n4\n6\n2\n12\nSample Output 3:\n16''') == '28', 'First'\n\nassert solution('''10\n3\n10\n2\n12\nSample Output 4:\n16''') == '28', 'Second'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5\n4\n6\n3\n''') == '28'\nprint('Solution = ', solution('''\n10\n3\n10\n2\n12\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\n\nassert solution('''10\n3\n10\n2''') == '16'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n3\\n4\\n6\\n2') == '28'\nassert solution('10\\n3\\n10\\n2') == '16'\nassert solution('10\\n3\\n10\\n12') == '16'\nprint('all test cases passed')\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '8'\nassert solution('3') == '10'\nassert solution('5') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n12\n''') == '16', 'Sample Test 1'\nassert solution('''\n100\n100\n''') == '200', 'Sample Test 2'\nassert solution('''\n100\n''') == '200', 'Sample Test 3'\nassert solution('''\n10\n''') == '28', 'Sample Test 4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(t1) == \"28\"\nprint(solution(t1))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"amiss\") == \"hiss\"\nassert solution(\"\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''he's is, o's o, oo's is, oe's is, oh's is, ohe's is, ohs is, hs is, hs is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is''') == \"hiss\"\nassert solution('''he's is, o's o, oo's is, oe's is, oh's is, ohe's is, ohs is, hs is, hs is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is, hiss is''') == \"no hiss\"'''",
        "num_ids_2": 177,
        "num_ids_4": 177
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('mommys') == 'hiss'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('hiss') == 'hiss'\nassert solution('amiss') == 'hiss'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) in [\"hiss\", \"no hiss\"]\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('octopuses') == 'no hiss'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\npython\npython\npython\n''') == '3'\n\nassert solution('''5\nblockchain\ncryptography\nlinux\nmachine-learning\n''') == '5'\n\nassert solution('''7\nc++\nC++\nc\nc#\nc#\nC\npython\npython\n''') == '6'\n\nassert solution('''20\npython\npython\nc++\nc\nc#\nC\nC++\nC#\nC#\nc\nc\nc++\npython\nc\nc#\nC\nC++\nC#\nc\n''') == '20'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '3'\n\nassert solution('''\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '3'\nassert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux''') == '5'\nassert solution('''4\nc\nc#\n''') == '2'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '3'\n\nassert solution('''\nlinux\nblockchain\nArtificial intelligence\nMachine-Learning\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == \"3\"\n\nassert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == \"5\"\n\nassert solution('''6\nc++\nC++\nc\nc#\n''') == \"1\"\n\nassert solution('''7\nc++\nC++\nc\nc#\nc#\nblockchain\nCryptography\nCrypto\nCryptoMath\nCryptoMath\nArtificial\nArtificial intelligence\nMachine-learning\nMachine-learning\n''') == \"4\"\n\nassert solution('''12\nc++\nC++\nc\nc#\nlinux\nlinux\nLinux\nblockchain\nCryptography\nCrypto\nCryptoMath\nCryptoMath\nArtificial\nArtificial intelligence\nMachine-learning\nMachine-learning\n''') == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''c++\nc\nc#\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux''') == \"3\"\nassert solution('''c++\nc#\nc\nc#\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux''') == \"4\"\nassert solution('''c++\nc\nc#\nc\nc#\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux''') == \"5\"\n\n### Notes",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\nc++\nc\n''') == \"3\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nc++\nC++\nc\nc#\n''') == '3'\nassert solution('''5\ncryptography\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nc++\\nC++\\ncryptography') == '3'\nassert solution('4\\nc#\\nC#\\nblockchain') == '5'\nassert solution('5\\nlinux\\nArtificial intelligence\\nMachine-Learning\\n') == '5'\n\n'''\n",
        "num_ids_2": 42,
        "num_ids_4": 67
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '3'\n\n'''\nWrite your code below and put the answer into the answer variable.\n\n'''\nanswer = None\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('TCGTTCTTC') == '61'",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('180') == '90'\nassert solution('315') == '90'\nassert solution('0') == '0'\nassert solution('45') == '90'\nassert solution('-90') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"-45\") == \"90\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"45\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('-180') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('-135') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"45\") == \"90\"\nprint(\"YOUR CODE IS CORRECT!\")\nprint(\"PRESS ANY KEY TO CONTINUE\")\ninput()",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('-45') == '270'\nassert solution('-90') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n\nimport inspect\nimport sys\nimport os\nfrom collections import Counter\ncurrentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))\nparentdir = os.path.dirname(currentdir)\nsys.path.insert(0, parentdir)\nimport pytest\nfrom error import InputError",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 23 18 13 99') == '3'\nassert solution('5 1 23 18 13 99') == '1'\nassert solution('5 1 23 18 13 99') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1\\n\"\n    \"23\\n\"\n    \"18\\n\"\n    \"13\\n\"\n    \"99\\n\"\n) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('5 1 2 3 4') == '2'\nassert solution('5 1 2 3 4 5 6 7') == '1'\nassert solution('5 1 2 3 4 5 6 7 8 9 10 11') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 62
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 23 18 13 99') == '3'\n\nassert solution('1') == '1'\n\nassert solution('2') == '1'\n\nassert solution('3') == '1'\n\nassert solution('4') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['5', '1', '23', '18', '13', '99']) == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WWBWBB') == '1'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWBBWBB\") == \"1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBWBB\") == \"1\"\nprint(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBWB') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nWWWWBBW\n''') == '1'\nassert solution('''\nWWWWBBW\n''') == '0'\nprint('Congratulations, have a nice day!')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"BWBWBW\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''BWBWBWB\nBWBWBWB\nBWBWBWB\nBBBBBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBBBBBWB\nBWBWBWB\nBWBWBWB''') == '1'\nassert solution('''WWWWBBW\nWWWWBBW\nWWWWBBW\nWWWWBBW\nWWWWBBW\nWWWWBBW\nWWWWBBW\nWWWWBBW\nBBBBBWB\nBWBWBWB\nBWBWBWB''') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''WWBWBBW''') == '1'\nassert solution('''WWWWBBW''') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1 1\") == \"1.299038105676658\"\nassert solution(\"3 3 3 3\") == \"9\"\nprint('Tests passed')",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 3 3\n''') == '9'\nassert solution('''1 2 1 1\n''') == '1.299038105676658'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 5 5') == '9'\nassert solution('10 10 10 10') == '20.0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 1 1') == '1.299038105676658'\nassert solution('10 10 10 10') == '17.903810567665'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint('Congratulations, have a nice day!')",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 2\") == \"1.299038105676658\"\nassert solution(\"0 0 0 0\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooooobert\") == \"robert\"\nassert solution(\"robert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('robert') == 'robert'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"rrrooobbbert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('robbert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\n\nSample Input 3:\nrrrooobbert\nSample Output 3:\nrobert\n\nSample Input 4:\nrobertapalaxiamethostenes\nSample Output 4:\nrobert\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roboobert') == 'robert'\nassert solution('roobbbert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooboobert') == 'roob'\nassert solution('roobooobert') == 'roob'\nassert solution('roobooobot') == 'roob'\nassert solution('roobooobottt') == 'roob'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('rrooooobert') == 'robert'\nassert solution('rroooobbert') == 'robert'\n\ninput = \"robert\"\noutput = \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"108 4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 1 4\\n') == '8\\n'\nassert solution('10 1000 10\\n') == 'Impossible\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1000 9 7\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '1 1 1'\nassert solution('''1000 9 7\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == 'Impossible'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nassert solution(\"1000 900 800 7\") == \"Impossible\"\nprint(solution(*(input().split())))\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1000 9 7\n9 2 3''') == '108 4'\nassert solution('''1000 900 7\n9 5 2''') == 'Impossible'\nassert solution('''1000 300 7\n500 500 3''') == 'Impossible'\nassert solution('''1000 300 7\n500 500 3''') == 'Impossible'\nassert solution('''1000 300 7\n500 500 3''') == 'Impossible'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == 'Impossible'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4 4\\n'\n    '#..#\\n'\n    '..X.\\n'\n    '..X.\\n'\n    '#XX#\\n'\n) == '1\\n1\\n2\\n1\\n0'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n...#\n...X.\n...X.\n...XX''') == '1'\n\nassert solution('''4 4\n....\n....\n....\n....\nSample Output 3:\n9\n0\n0\n0\n0\n\n''') == '0'\n\nassert solution('''2 1\n...#\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"1\"\nassert solution(\"3 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '1'\nassert solution('5 5') == '0'\nassert solution('3 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"4 4\\n#..#\\n..X.\\n..X.\\n#XX#\") == \"1\"\nassert solution(\"4 4\\n.X.\\n..X.\\n.X.\\n.X.\\n.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.X.\\nX.",
        "num_ids_2": 39,
        "num_ids_4": 1514
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '1'\nassert solution('4 4') == '1'\nassert solution('4 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n.#..\n..X.\n..X.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1953566'\nprint(solution('5'))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n42\n32\n12\n\"\"\") == \"1953566\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == '1953566'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n212\n1253''') == '1953566'\nassert solution('''5\n23\n17\n43\n52\n22''') == '102'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\nassert solution('''\n5\n23\n17\n43\n52\n22\n''') == '102'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"\nprint(\"You're awesome!\")\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, \"Should be able to recreate output\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '0.000000 0.000000 0.000000'\nassert solution('1 1 1') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('3 3 3') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\n\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\", \"Should be 0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\", \"Should be 0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\"\nassert solution(\n    \"9 9 9\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"\nassert solution(\n    \"0 0 0\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"\nassert solution(\n    \"0 0 0\\n3 2 1\\n\") == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000'\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a<bc<') == 'b', 'TEST FAILED'\nassert solution('foss<<rritun') == 'forritun', 'TEST FAILED'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('foss<<rritun') == 'forritun'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a<bc<') == 'b'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n\n\"\"\"\n\nimport re",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''a<bc<''') == 'b'\nassert solution('''foss<<rritun''') == 'forritun'\nassert solution('''pqrtuvwxyz<<<>>zz''') == 'pqrtwybz'\nassert solution('''a<bc<\nfoss<<rritun''') == 'forritun'\n",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n\nIn a text editor, if you enter more than one character in a line, the editor will delete the characters from the last line to the first one, as if you had just clicked the backspace key.\n\nIn a text editor, if you press the backspace key twice consecutively, the editor will delete two characters from the current line, and if you press the backspace key three times consecutively, it will delete three characters from the current line.\n\nGiven a string s, return the minimum number of lines needed to write s to an empty text editor.\n\nNotes:\ns will be either empty or only contain lowercase letters from the English alphabet.\nThe editor will never delete more than one character from a line, or start writing at the beginning of a new line.\nThe editor always starts writing from the second line.\nThe editor always starts writing with a new line character in the first line.\n\nclass Solution:\n    def minLines(self, s: str, n: int) -> int:\n        cur = 1\n        while len(s) > 0:\n            if n > 0:\n                s = s[1:]\n                n -= 1\n            else:\n                s = s[1:]\n                cur += 1\n                n += 1\n        return cur\n\nsolution('foss<<rritun', 3)\n\n'foss<<rritun'\n\nsolution('', 10)\n\n''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\na<bc<\n''') == 'b'\nassert solution('''\nfoss<<rritun\n''') == 'forritun'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''a<bc<\nfoss<<rritun''') == 'forritun'\nassert solution('''\nfoss<<rritun''') == 'forritun'\nassert solution('''\nfoss\n<rritun''') == 'foss'\nassert solution('''a<bc<\nfoss<rritun''') == 'forritun'\nassert solution('''\nfoss\n<rritun''') == 'foss'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Knuth-Morris-Pratt\nMirko-Slavko''') == 'MS'\nprint('solution() finished. Have a nice day!')\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''KMP''') == 'KMP'\nassert solution('KMP') == 'KMP'\nassert solution('KMP-MS') == 'KMP-MS'\nassert solution('Knuth-Morris-Pratt') == 'Knuth-Morris-Pratt'\nassert solution('Mirko-Slavko') == 'Mirko-Slavko'",
        "num_ids_2": 27,
        "num_ids_4": 67
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"KNUTH-MORIS-PRATT\") == \"KMP\"\nassert solution(\"MIRKO-SLAVKO\") == \"MS\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 0') == 'Province or Gold'\nassert solution('0 1 0') == 'Estate or Copper'\n\"\"\"\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 0') == \"Estate or Copper\"\nassert solution('2 1 0') == \"Province or Gold\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 0') == 'Province or Gold'\nassert solution('0 1 0') == 'Estate or Copper'\nassert solution('0 1 1') == 'Estate or Copper'\nassert solution('0 1 1 2 3 4 5') == 'Estate or Copper'",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'Gold or Silver or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 0\n''') == 'Estate or Copper'\nassert solution('''\n0 1 0\n''') == 'Province or Gold'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 1 0\n1''') == 'Province or Gold'\nassert solution('''2 1 0\n1''') == 'Province or Estate'\n\nprint(solution('''0 1 0\n1'''))\nprint(solution('''2 1 0\n1'''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 1 0\n0 1 0''') == 'Estate or Copper'\nassert solution('''2 1 0\n0 1 0''') == 'Province or Gold'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"Province or Gold\"\nassert solution(\"2 2 3\") == \"Estate or Copper\"\nassert solution(\"0 2 3\") == \"Estate or Copper\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n40 50\\n50 60') == 'impossible', \"x\"\nassert solution('2\\n10 50\\n50 60') == 'impossible', \"x\"\nassert solution('2\\n10 10\\n20 20') == 'impossible', \"x\"\nassert solution('3\\n50 50 50\\n50 50 50') == 'impossible', \"x\"\n",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('2 3') == 'impossible'\nassert solution('3 4') == '90.00'\nassert solution('4 5') == '80.0'\nassert solution('5 6') == '75.71428571428571'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n90\\n') == '90.00'\nassert solution('2\\n70 50\\n') == '90.00'\nassert solution('10\\n80 90\\n') == '75.7142857'\n",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n70 50') == '90.00'\nassert solution('10 3\\n80 90') == '75.7142857'\nprint('Congratulations! Your solution is correct.')",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1\\n80 90') == '75.7142857'\nassert solution('4 1\\n10 20') == 'impossible'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('10 3') == '75.7142857'\nassert solution('3 2') == 'impossible'\nassert solution('5 6') == 'impossible'",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'\nprint('Tests passed')\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 1\n70 50\n\"\"\") == \"90.00\"\nassert solution(\"\"\"\n10 3\n80 90\n\"\"\") == \"75.7142857\"\nassert solution(\"\"\"\n100 100\n10 100\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2,3,1,5,4,7,6') == '4,5,7'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '4'\nassert solution('''7\n2 3 1 5 4 7 6\n''') == '2 3 5 7'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4'\nassert solution('5\\n1 2 3 4 5') == '5'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 3 2 3 4 5\") == \"4, 2, 3, 5\"\nassert solution(\"5 1 2 3 4 5\") == \"5, 1, 2, 3, 4, 5\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 5 4 7 6\") == \"4 3 5 7\"\nassert solution(\"7\") == \"7\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4 3 5 7'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7\n2 3 1 5 4 7 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '5 1 2 3 4'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 1 5 4 7 6\n''') == '2,3,5,7'\n\nassert solution('''\n5\n1 2 3 4 5\n''') == '1,2,3,5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9 25\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 10\") == \"23 25\"\nassert solution(\"1 2\") == \"2 4\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 1\n0 10\n0 50\n1 3\n1 6\n1 7\n2 5\n2 8''') == '9 23'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\nassert solution('23 45') == '9 25'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 10\n9 25''') == '9 25'\nassert solution('''0 30\n23 45''') == '23 45'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000000') == '1.000000', \"Wrong answer\"\nassert solution('2.000000') == '1.414214', \"Wrong answer\"\nassert solution('0.36788') == '1.000000', \"Wrong answer\"\nprint('Almost there!')\n",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n\"\"\"\n\nn = float(input())",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.000000'\nassert solution('2.000000') == '1.414214'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.0') == '1.0'\nassert solution('1.00000000000000000') == '1.00000000000000000'\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('3.000000') == '1.414214'\nassert solution('5.000000') == '1.414214'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n\n-------Task-------\nConvert an infinite sequence of real numbers into a sequence of integers.\n\nInput\n\nThe first line of input contains a number $N$ which represents the sequence's length and the second line contains a sequence of real numbers in the format described below.\n\nOutput\n\nOutput a sequence of integers, such that $^\\infty a=N$ if $a<0$, otherwise $^\\infty a=N$ where $a$ is an element of the input sequence.\n\nConstraints\n\nN is a natural number, and the sequence contains no NaN or infinity.\n\nSample Input 1\n\n5\n0\n1\n2\n3\n0.1\nSample Output 1\n\n[0, 1, 2, 3, 5]\nSample Input 2\n\n5\n1\n1\n1\n1\n1\nSample Output 2\n\n[0, 1, 1, 1, 1, 1]\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.414214'\nassert solution('0.000000') == '0.000000'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nprint('SUCCESS')\n\n------Task------\nGiven a positive integer $N$, write a program to compute $\\frac{1}{1+\\cdots +\\cdots + N}$.\n\nNote that N may be 0, or can be an integer with 0 or 1 digits.\n\n-----Input-----\nThe first line of input contains a single integer $N$.\n\n-----Output-----\nOutput a single line containing a real number $a$, such that $\\frac{1}{1+\\cdots +\\cdots + N}=a.$, or output '-1' if $a=-1$. Your answer will be considered correct if its absolute or relative error doesn\u2019t exceed $10^{-5}$.\n\n-----Examples-----\nSample Input 1:\n0\nSample Output 1:\n1.0\n\nSample Input 2:\n1\nSample Output 2:\n0.999999\n\nSample Input 3:\n-1\nSample Output 3:\n-1.0\n\nSample Input 4:\n0\nSample Output 4:\n1.0\n\nSample Input 5:\n11\nSample Output 5:\n1.1111111111111\n\nSample Input 6:\n10000000\nSample Output 6:\n1.0000000000000001\n\nSample Input 7:\n0.000000\nSample Output 7:\n-1.0\n\nSample Input 8:\n0.000000\nSample Output 8:\n1.0\n\nSample Input 9:\n0.000000\nSample Output 9:\n0.0\n\nSample Input 10:\n0.000000\nSample Output 10:\n1.0\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3:2,1'\nassert solution('50') == '50:2,1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1:'\nassert solution('2') == '2:1,2'\nassert solution('3') == '3:2,1'\nassert solution('51') == '51:6,5'\nassert solution('52') == '52:7,6'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3:\n2,1\n''') == '3:2,1'\nassert solution('''50\n50:\n2,1\n''') == '50:2,1'\nassert solution('''5\n5:\n3,2\n5,4\n6,5\n10,10\n13,12\n17,16\n25,25\n''') == '5:3,2;2,2;5,4;5,5;6,5;10,10;13,12;17,16;25,25'\nassert solution('''51\n51:\n6,5\n5,6\n6,7\n''') == '51:6,5;6,7;6,6;5,6'\nassert solution('''51\n51:\n6,5\n7,7\n7,6\n6,7\n6,6\n''') == '51:6,5;7,7;7,6;6,7;7,6;6,7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '0:1'\nassert solution('50') == '50:1'\n\n\"\"\"\n\n\nclass Solution:\n    def solve(self, S: str):\n        if int(S) == 0:\n            return '0:1'\n        if int(S) == 1:\n            return '0:1'\n        ans = []\n\n        def backtrack(cnt, position):\n            if cnt == int(S):\n                if position == cnt:\n                    ans.append(str(position))\n                else:\n                    ans.append(str(position))\n                    ans.append(str(position))\n                return\n\n            if position == 0:\n                backtrack(cnt + 1, 1)\n            else:\n                for star in range(1, int(S) + 1):\n                    if star < position:\n                        continue\n                    backtrack(cnt + 1, position - star)\n            return\n\n        backtrack(0, 1)\n        return ','.join(sorted(ans))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"100\") == \"100:\"\nassert solution(\"50,50\") == \"50:2,1\"\nassert solution(\"50,50,50\") == \"50:2,1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('51') == '51:'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2,1'\nassert solution('50') == '2,1'\nassert solution('2,2') == '2,2'\nassert solution('3,2') == '2,2'\nassert solution('5,4') == '2,2'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    THE RAIN IN SPAIN\n    IN THE RAIN AND THE SNOW\n''') == 'yes', '''Sample Test #1: Correct Output'\n'''\nassert solution('''\n    TREES ARE FORGETFUL\n''') == 'no', '''Sample Test #2: Incorrect Output\n'''\nassert solution('''\n    THE RAIN IN SPAIN IN THE PLAIN\n''') == 'yes', '''Sample Test #3: Correct Output\n'''\nassert solution('''\n    THE RAIN IN SPAIN\n''') == 'no', '''Sample Test #4: Incorrect Output\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nassert solution('THIS IS A TEST') == 'yes'\nassert solution('THIS IS A TEST AGAIN') == 'no'\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\nTHE RAIN IN SPAIN\n\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN IN THE PLAIN\n\n''') == 'no'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\nassert solution('THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN') == 'yes'\nassert solution('THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN THE RAIN IN SPAIN') == 'no'\n\n\"\"\"\n",
        "num_ids_2": 33,
        "num_ids_4": 128
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\nfrom collections import deque\nfrom collections import defaultdict",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''RRBBBLLR''') == 'SSKKKHHS'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == \"SSKKKHHS\"\nassert solution(input_string2) == \"CHCS\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n\nassert solution('''\n1 2 1\n''') == '1\\nFizz\\nBuzz\\nFizz\\n'\nassert solution('''\n1 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n\n\"\"\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 4, 7]) == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 7\\n\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\\n\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == 'It hadn\u2019t snowed this early in 1 years!'\n\nassert solution('2\\n0') == 'It had never snowed this early!'\n\nassert solution('3\\n3') == 'It hadn\u2019t snowed this early in 3 years!'\n\nassert solution('4\\n0') == 'It had never snowed this early!'\n",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n3 3 3 2\n''') == \"It hadn't snowed this early in 3 years!\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10\\n0 100') == 'It hadn't snowed this early in 0 years!'\nassert solution('4 2\\n3 3 3 2') == 'It hadn't snowed this early in 3 years!'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'It hadn't snowed this early in 1 years!'\nassert solution('2 10') == 'It hadn't snowed this early in 0 years!'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2\\n3 3 3 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10\\n0 100') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n1\\n2') == 'It hadn\\'t snowed this early in 2 years!'\nassert solution('4\\n3\\n3\\n2') == 'It hadn\\'t snowed this early in 3 years!'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"4 2\") == \"It had never snowed this early!\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2', \"Should be '2'\"\nassert solution('1 10') == '1', \"Should be '1'\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\nSample Input 2:\n10 10\nSample Output 2:\n7\n''') == '7'\nassert solution('''\n10 10\nSample Input 2:\n10 10\nSample Output 2:\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1', \"First\"\nassert solution('1 1') == '0', \"Second\"\nassert solution('10 10') == '7', \"Third\"\nassert solution('10 10') == '7', \"Fourth\"\nassert solution('1 1') == '0', \"Fifth\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('10000 2') == '2'\nassert solution('10000 10') == '7'\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n3''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 2\") == \"2\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"100 30\") == \"87\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"7\"\nassert solution(\"1 1\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n\n------------------------------------",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"bok\nkoaski\n\"\"\") == \"kakosi\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == 'kakosi'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'a'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\nassert solution('d') == 'd'\nassert solution('e') == 'e'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hello\") == \"hello\"\nassert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n\"\"\"\n\nimport numpy as np",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '8 2'\nassert solution('6') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10\\n\") == \"7 4\"\nassert solution(\"2\\n9\\n\") == \"7 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2 1'\nassert solution('10') == '3 2'\nassert solution('20') == '3 3'\nassert solution('40') == '4 4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8 3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6 3\"\nassert solution(\"6\") == \"8 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2 2'\nassert solution('2 2') == '4 4'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == '1'\nassert solution(\"10\\n\") == '1'\nassert solution(\"6\\n\") == '8 2'\nassert solution(\"7\\n\") == '8 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet eat') == 'YES'\nassert solution('5') == 'NO'\nassert solution('tasty sprout') == 'YES'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eet\") == \"NO\"\nassert solution(\"apple\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"aut acht\") == \"YES\"\nassert solution(\"ought oubt outte out oute\") == \"YES\"\nassert solution(\"tasty sprout\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 51
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"eet\") == \"NO\"\nassert solution(\"eet\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'NO'\n\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('eet eat') == 'NO'\nassert solution('tasty sprout') == 'YES'\nassert solution('difficult route') == 'YES'\nassert solution('worried and fraxxed') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nstair\n2\nerres airs ears ares aires\neet eat\n2\napples and pears\nplates of meat\n''') == 'YES\\nYES\\nYES\\nNO'\nassert solution('''\ndrought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and fraught\nforever in doubt\napples and pears\n''') == 'YES\\nYES\\nNO\\nNO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nstairs\n2\nerres airs ears ares aires aires ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares ares ares aires aires ares are",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"drought\") == \"NO\"\nassert solution(\"stairs\") == \"YES\"\nassert solution(\"pip\") == \"NO\"\nassert solution(\"worried and fearful\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"eet eat\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"tasty sprout\") == \"YES\"\nassert solution(\"difficult route\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE'\nprint(solution('''\n        HANGMAN\n        ABCDEFGHIJKLMNOPQRSTUVWXYZ\n        '''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"INCREASING\"\nassert solution(\"10\") == \"NEITHER\"\nassert solution(\"11\") == \"NEITHER\"\nassert solution(\"21\") == \"NEITHER\"\nassert solution(\"31\") == \"NEITHER\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'INCREASING', \"First Example\"\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER', \"Second Example\"\nassert solution('''\n100\nMARY\nJOE\nBOB\nALI\n''') == 'INCREASING', \"Third Example\"\nassert solution('''\n100\nBOB\nJOE\nBOB\nALI\n''') == 'INCREASING', \"Fourth Example\"\nassert solution('''\n1\n''') == 'NEITHER', \"Fifth Example\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"INCREASING\"\nassert solution(\"11\") == \"NEITHER\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('10') == 'NEITHER'\n\n''''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"DECREASING\"\nassert solution(\"11\") == \"NEITHER\"\nassert solution(\"2\") == \"INCREASING\"\nassert solution(\"1\") == \"INCREASING\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM''') == \"DECREASING\"\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == \"NEITHER\"\n''')\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'INCREASING', 'Wrong result for stdin: 5'\nassert solution('11') == 'NEITHER', 'Wrong result for stdin: 11'\nassert solution('2') == 'DECREASING', 'Wrong result for stdin: 2'\n",
        "num_ids_2": 45,
        "num_ids_4": 68
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'INCREASING'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"DECREASING\"\nassert solution(\"5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"\nassert solution(\"5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"INCREASING\"\nassert solution(\"5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"INCREASING\"\nassert solution(\"5\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"INCREASING\"\n",
        "num_ids_2": 68,
        "num_ids_4": 198
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 10 13\n    John\n    Kelly\n    George\n    Kelly 1\n    George 2\n    Kelly 1\n    John 2\n    George 1\n    John 3\n    Kelly 3\n    Kelly 1\n    George 3\n    George 1\n    John 3\n    George 3\n    Kelly 1\n''') == 'George wins!'\nassert solution('''4 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n''') == 'Nina wins!'\nassert solution('''5 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n''') == 'Jess wins!'\nassert solution('''6 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n''') == 'Nina wins!'\nassert solution('''7 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n''') == 'Nina wins!'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('1 20') == 'No winner!'",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!'\n\nassert solution('''\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 10 13\\nJohn\\nKelly\\nGeorge\") == \"George wins!\"\nassert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\") == \"Nina wins!\"\nassert solution(\"5 10 13\\nBob\\nNina\\nJess\\nTim\\nNina\\nBob\") == \"Nina wins!\"\nassert solution(\"6 10 13\\nBob\\nNina\\nJess\\nTim\\nNina\\nBob\\nNina\\nJess\") == \"Nina wins!\"\nassert solution(\"7 10 13\\nBob\\nNina\\nJess\\nTim\\nNina\\nBob\\nNina\\nJess\") == \"Nina wins!\"\n",
        "num_ids_2": 49,
        "num_ids_4": 124
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10 13\\nJohn\\nKelly\\nGeorge') == 'George wins!'\nassert solution('4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina\\nBob\\nNina\\nJess\\nNina\\nBob\\n') == 'Nina wins!'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10 13') == \"George wins!\"\nassert solution('4 10 13') == \"Nina wins!\"\nassert solution('5 10 13') == \"No winner!\"",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2.0\"\nassert solution(\"3 3 0 2 7 6\") == \"2.0\"\nassert solution(\"10 0 0 2 7 6\") == \"2.0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 0 0 2 7 6\n''') == '2.0'\nassert solution('''\n7 3 0 0 5 4\n''') == '2.0'\nassert solution('''\n11 2 5 -2 7 -1\n''') == '0.0'\nassert solution('''\n-1 -2 -3 -4 -5 -6\n''') == '1.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 3 0 0 5 4\n''') == '2.0'\nassert solution('''\n20 0 0 2 7 6\n''') == '2.0'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 0 0 4 5') == '2.0'\nassert solution('4 0 0 1 2') == '2.0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('147') == '147'\nassert solution('321') == '321'\nassert solution('321') == '321'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('7') == '9'\nassert solution('4') == '1'\nassert solution('11') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2147483647\") == \"0\"\nassert solution(\"1234\") == \"1235\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"165\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '11'\nassert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('1234') == '1234'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '6'\nassert solution('6999') == '6999'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n43\n2\n6\n8\n9\n7\n''') == '0'\nassert solution('''\n42\n1\n2\n7\n5\n3\n''') == '0'\nassert solution('''\n63\n3\n4\n8\n6\n1\n7\n''') == '165'\nassert solution('''\n123\n7\n8\n9\n3\n4\n5\n''') == '165'\nassert solution('''\n345678\n5\n6\n7\n8\n9\n''') == '165'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"321\") == \"321\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"1235\") == \"1235\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\") == \"4\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"3 3\\n6 2 3 4\\n6 2 4 3 4\\n8 1 2 3\\n6 2 3 4 5\\n7 2 5 4 5\\n8 1 2 3\\n\") == \"6\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n\") == \"4\"\nassert solution(\"10 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\\n\") == \"3\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"150000 100000 160000 100000 180000\\n\"\n    \"190000 170000 140000 160000\\n\"\n) == \"4\"\n\nassert solution(\n    \"4 4\\n\"\n    \"180000 185000 199999 100000\\n\"\n    \"199999 180000 170000 120000\\n\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n\") == \"4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(t1) == \"4\"\nassert solution(t2) == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == '4'\nassert solution('5 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == '3'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('4 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n\nimport sys",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"42\") == \"1\"\nassert solution(\"84\") == \"1\"\nassert solution(\"252\") == \"6\"\nassert solution(\"420\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"1\"\nassert solution(\"42\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('42\\n84\\n252\\n420\\n840\\n126') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '0'\nassert solution('3') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('42') == '6'\nassert solution('84') == '2'\nassert solution('252') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\"\"\") == \"10\"\n\nassert solution(\n    \"\"\"0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\"\"\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == \"10\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == \"1\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([13,3]) == \"yes\"\nassert solution([1,0]) == \"yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13 3') == 'yes', solution('13 3')\nassert solution('1 0') == 'no', solution('1 0')",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 0') == 'yes'\nassert solution('5 6') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'no'\nassert solution('1 0') == 'yes'\nassert solution('10 10') == 'yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == 'yes'\nassert solution('1 0') == 'no'\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"\nprint(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0\") == \"yes\"\nassert solution(\"3 3\") == \"yes\"\nassert solution(\"4 5\") == \"no\"\nassert solution(\"8 7\") == \"no\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples[0]) == \"12 12 11 13\", \"Wrong!\"\nassert solution(samples[1]) == \"GRESKA\", \"Wrong!\"\nassert solution(samples[2]) == \"12 12 11 13\", \"Wrong!\"\nassert solution(samples[3]) == \"12 12 11 13\", \"Wrong!\"\nassert solution(samples[4]) == \"12 12 11 13\", \"Wrong!\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''\n5 6 4\n........\n.*.*.*\n........\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''\n3 5 3\n......\n.*.*.\n......\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n\nimport unittest\n\n\nclass TestRacket(unittest.TestCase):\n    def test_solution(self):\n        self.",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1', solution('''3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''')\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2', solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''')\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1'\nassert solution('''\n5 5 3\n.....\n**..**\n.....\n*.***\n''') == '1'\nassert solution('''\n10 10 3\n.....\n**...*\n.....\n.*.*.*\n''') == '3'\nassert solution('''\n10 10 3\n*.*.*\n***\n**.*\n''') == '4'\nassert solution('''\n10 10 3\n*.*.*\n**.*\n.*.*\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\nassert solution('3 4 2') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nprint('TEST DONE')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\") == \"1\", \"First Test\"\nassert solution(\"7 6 4\") == \"2\", \"Second Test\"\nassert solution(\"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\") == \"1\", \"Third Test\"",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''10 3 3\n....*....\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n''') == '0'\nassert solution('''7 5 3\n.....\n.*.*.\n.....\n.*.*.\n.....\n*.*.*.\n.....\n*.*.*.\n*.*.*.\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5 3\n.**.\n**.*\n.***\n''') == '1'\nassert solution('''7 6 4\n.....\n.**.\n.....\n*.*.*\n......\n*.*.*\n*.*.*\n''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''AC AD AH AS KD\n                    2C 4D 4H 2D 2H''') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"4\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 43
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''AC AD AH AS KD''') == \"4\"\nassert solution('''2C 4D 4H 2D 2H''') == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('6 5\\n0 0 0 0 0 0\\n') == '7'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'\nassert solution('4\\n1 1 1 1\\n') == '4'\n\n## Solution",
        "num_ids_2": 40,
        "num_ids_4": 58
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '5'\nassert solution('1 2 1 1 0 1') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''5 1\n0 0 0 0 0\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('3 3\\n0 0 0\\n') == '6'\n\nprint(solution())\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '5'\nassert solution('4 1') == '1'\nassert solution('3 1') == '1'\nassert solution('2 1') == '2'\nassert solution('2 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''5 1\n0 0 0 0 0\n''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n2 2\n1 1\n1 1''') == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n0 0 0 0 0 0\\n') == '7'\nassert solution('5 1\\n0 0 0 0 0\\n') == '5'\nassert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nAll your base are belong to us.\nWhat's the Frequency, Kenneth?''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 '\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nA New Alphabet has been developed for Internet communications. While the glyphs of the new alphabet don\u2019t necessarily improve communications in any meaningful way, they certainly make us feel cooler.\n\nYou are tasked with creating a translation program to speed up the switch to our more elite New Alphabet by automatically translating ASCII plaintext symbols to our new symbol set.\n\nThe new alphabet is a one-to-many translation (one character of the English alphabet translates to anywhere between $1$ and $6$ other characters), with each character translation as follows:\n\nOriginal\n\nNew\n\nEnglish Description\n\na\n\n@\n\nat symbol\n\nn\n\n[]\\[]\n\nbrackets, backslash, brackets\n\nb\n\n8\n\ndigit eight\n\no\n\n0\n\ndigit zero\n\nc\n\n(\n\nopen parenthesis\n\np\n\n|D\n\nbar, capital D\n\nd\n\n|)\n\nbar, close parenthesis\n\nq\n\n(,)\n\nparenthesis, comma, parenthesis\n\ne\n\n3\n\ndigit three\n\nr\n\n|Z\n\nbar, capital Z\n\nf",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('All your base are belong to us.\\n') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 '\nassert solution('What\\'s the Frequency, Kenneth?\\n') == '\\/\\/[-]@\\'][''$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?'\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Hello World!') == '-3110 \\\\/\\/0|Z1|!)'\nassert solution('What's the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$ '\\[]6 \\']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\nassert solution('abc123') == 'a6b3c3'\nassert solution('ABC') == 'A6'\nassert solution('a.A.') == 'A6'\n",
        "num_ids_2": 90,
        "num_ids_4": 117
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 \\'][\\'0 |_|$.\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a b - z\") == \"A B \\\\u0332 Z \\\\u0332\"\nassert solution(\"A B - Z\") == \"\\\\u0332 A \\\\u0332 \\\\u0332 Z \\\\u0332\"\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a1b2\") == \"ab1b2\", \"First\"\nassert solution(\"a3b4\") == \"aab3b4\", \"Second\"\nassert solution(\"a5b6\") == \"aabb5b6\", \"Third\"\nassert solution(\"a7b8\") == \"abab7b8\", \"Fourth\"\nassert solution(\"a9b10\") == \"aabbb9b10\", \"Fifth\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ab\\ncd\\nef\\ngh\\n') == '@1`Z0|
        "num_ids_2": 1244,
        "num_ids_4": 1244
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('What\\'s the Frequency, Kenneth?') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n                                                     '`/\\][''$ ']['[-]3 #|Z3(,)|_|
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Alice'\nassert solution(input()) == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3''') == 'Bob'\nassert solution('''3\n4\n5''') == 'Alice'\nassert solution('''5\n5\n4\n3\n2''') == 'Alice'\nassert solution('''4\n3\n5\n4\n1\n2''') == 'Bob'\nassert solution('''12\n13\n14\n15\n16\n17\n18''') == 'Alice'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Bob'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n1\nSample Output 1:\nAlice\n\nSample Input 2:\n2\nSample Output 2:\nBob\n'''\n) == \"Bob\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters', 'Wrong solution'\nassert solution('7') == 'thirty is the number of letters here', 'Wrong solution'\n\nSample Input 3:\n20\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n$\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"this sentence has thirtyone letters\"\nassert solution(\"7\") == \"thirty is the number of letters here\"\n\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"thirty is the number of letters here\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n$\nthis\nsentence\nhas\n$\nletters\n''') == \"this sentence has thirtyone letters\"\nassert solution('''\n7\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == \"thirty is the number of letters here\"\nassert solution('''\n2\n$\none\n$\n''') == \"one\"\n\nassert solution('''\n6\n$\none\n$\ntwo\n$\nthree\n$\nfour\n''') == \"onethreefour\"\n\nassert solution('''\n5\n$\none\n$\ntwo\n$\nthree\n''') == \"onetwothree\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\n\nassert solution('7') == 'thirty is the number of letters here'\n\nassert solution('5') == 'this sentence has thirtyone letters'\n\nassert solution('7') == 'thirty is the number of letters here'\n\nassert solution('5') == 'this sentence has thirtyone letters'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('10') == 'ten'\nassert solution('2') == 'one'\nassert solution('5') == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"ten\"\nassert solution(\"9\") == \"nine\"\nassert solution(\"22\") == \"twenty\"\nassert solution(\"13\") == \"thirteen\"\nassert solution(\"17\") == \"seventeen\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'one'\nassert solution('2') == 'two'\nassert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('5') == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'one'\nassert solution('2') == 'two'\nassert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('5') == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"eight\"\nassert solution(\"5\") == \"five\"\nassert solution(\"3\") == \"three\"\nassert solution(\"1\") == \"one\"\nassert solution(\"0\") == \"zero\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A\\nb\\nc\\n\\n\\n') == '0'\nassert solution('E\\na\\nb\\n\\n\\n\\n') == '5'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB''') == '0'\nassert solution('''A\n\nb\n\nc\n\nb\n\nC''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"0\"\nassert solution(\"Aa\") == \"1\"\nassert solution(\"Aba\") == \"1\"\nassert solution(\"Abcd\") == \"2\"\nassert solution(\"ABcd\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\nprint('All test cases passed.')\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3''') == 'Odd 6'\nassert solution('''3 3''') == 'Even 6'\n''')",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Odd 6'\n\nassert solution('1 2') == 'Even 1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4') == 'Even 2'\nassert solution('2 2\\n2 2') == 'Odd 6'\nassert solution('1 2\\n2 2') == 'Not a moose'\nprint('All test cases passed')\n",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == \"Odd 6\"\nassert solution('3 3') == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == \"Odd 6\"\nassert solution('3 3') == \"Even 6\"\nassert solution('1 0') == \"Not a moose\"\nassert solution('1 1') == \"Odd 1\"\nassert solution('2 2') == \"Even 1\"\nprint('Congratulations! All test cases passed!')\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '2',\n    '3',\n    'abc',\n    'def',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    'pqrs',\n    'tuv',\n    'wxyz',\n])) == '2'\n\nprint(solution(input()))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('solution.py') == '1'\n\nassert solution('solution.py') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"123456789\") == 12\nassert solution(\"1\") == 1\nassert solution(\"2\") == 1\nassert solution(\"3\") == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 34
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n5\n\na\n\n2\n\n3\n\n4\n\n5\n''') == '1'\n\nassert solution('''\n2\n\n4\n\na\n\n2\n\n3\n\n4\n\n5\n''') == '2'\n\nassert solution('''\n4\n\n10\n\np\n\n7\n\nf\n\n8\n\nq\n\n9\n''') == '4'\n\nassert solution('''\n4\n\n1\n\n4\n\n7\n\nf\n\n8\n\nq\n\n9\n''') == '1'\n\nassert solution('''\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\ntomo\nmono\ndak\n''') == '1'\n\nassert solution('''\n2\nja\nla\n52\n''') == '2'\n\nassert solution('''\n4\njab\ncb\ndb\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(''.join(map(str, range(1, 10)))) == '22'\nassert solution('tomo') == '1'\nassert solution('mono') == '1'\nassert solution('dak') == '2'\nassert solution('6666') == '2'\nprint('Tests passed')\n",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n12345') == '2'\nassert solution('5\\n4\\n567') == '1'\nassert solution('5\\n2\\n2\\n2\\n2') == '0'\nassert solution('5\\n5\\n12\\n2\\n2') == '1'\nassert solution('5\\n5\\n5\\n5\\n5') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 78
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''A''') == '..#..'\nassert solution('''DOG''') == '..#...#...*..'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"...#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n\n---Input---\nInput contains at least 1 and at most 15 capital letters of the English alphabet.\n\n---Output---\nOutput has at least 5 lines, but no more than 10, and at most 15 lines, but no more than 5.\n\n---Examples---\nInput 1:\n\nOutput 1:\n\nInput 2:\n\nOutput 2:\n\n\"\"\"\n\n\nimport math\nfrom collections import defaultdict\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n'\nassert solution('DOGo') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\\n'\n",
        "num_ids_2": 93,
        "num_ids_4": 151
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\nprint(solution(input()))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6.28'\nassert solution('21') == '1385.442360'\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3.141593\"\nprint(solution(\"1\"))\nprint(solution(\"21\"))\n\n--------------------------------------------------------------\n11. Write a program that takes two sets of integers in a single line, finds their union and difference, and prints their union and difference.\n\nInput:\n3\n5\n7\nOutput:\nUnion: 5 6\nDifference: 1 2\n\nInput:\n5\n7\nOutput:\nUnion: 5 6 7\nDifference: 1 2 3 4 5\n\nInput:\n11\n3\nOutput:\nUnion: 3 12\nDifference: 1 2 3 4 5 6 7 8 9 10 11\n\nInput:\n5\n7\nOutput:\nUnion: 5 6 7\nDifference: 1 2 3 4 5 6 7 8 9 10 11\n\nInput:\n11\n1\nOutput:\nUnion: 1 11\nDifference: 2 3 4 5 6 7 8 9 10 11\n\nInput:\n1\n2\nOutput:\nUnion: 2 1\nDifference: 3 4 5 6 7 8 9 10 11\n\nInput:\n1\n3\nOutput:\nUnion: 3 1\nDifference: 4 5 6 7 8 9 10 11\n\nInput:\n2\n2\nOutput:\nUnion: 2 2\nDifference: 1 1\n\nInput:\n2\n1\nOutput:\nUnion: 1 1\nDifference: 2 2\n\nInput:\n2\n2\nOutput:\nUnion: 2 2\nDifference: 2 2\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 2 2\n\nInput:\n3\n4\nOutput:\nUnion: 3 4\nDifference: 1 1 2 3\n\nInput:\n1\n4\nOutput:\nUnion: 1 1 1 1\nDifference: 2 3 4\n\nInput:\n4\n1\nOutput:\nUnion: 4 1\nDifference: 1 1 1 1\n\nInput:\n4\n4\nOutput:\nUnion: 4 4\nDifference: 1 1 1 1\n\nInput:\n4\n4\nOutput:\nUnion: 4 4\nDifference: 1 1 1 1\n\nInput:\n3\n3\nOutput:\nUnion: 3 3\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n2\nOutput:\nUnion: 1 2\nDifference: 1 1\n\nInput:\n3\n4\nOutput:\nUnion: 3 4\nDifference: 1 1 1 1\n\nInput:\n1\n2\nOutput:\nUnion: 1 2\nDifference: 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1\n\nInput:\n3\n3\nOutput:\nUnion: 3 3\nDifference: 1 1 1 1\n\nInput:\n3\n3\nOutput:\nUnion: 3 3\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n5\n1\nOutput:\nUnion: 5 1\nDifference: 4 5 6 7 8 9 10 11\n\nInput:\n1\n2\nOutput:\nUnion: 1 2\nDifference: 1 1\n\nInput:\n1\n2\nOutput:\nUnion: 1 2\nDifference: 1 1\n\nInput:\n3\n1\nOutput:\nUnion: 3 1\nDifference: 2 3 4 5 6 7 8 9 10 11\n\nInput:\n1\n3\nOutput:\nUnion: 1 3\nDifference: 2 3 4 5 6 7 8 9 10 11\n\nInput:\n1\n3\nOutput:\nUnion: 1 3\nDifference: 2 3 4 5 6 7 8 9 10 11\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 2 2\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 2 2\n\nInput:\n1\n3\nOutput:\nUnion: 1 3\nDifference: 2 3 4 5 6 7 8 9 10 11\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 2 2\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 2 2\n\nInput:\n3\n2\nOutput:\nUnion: 3 2\nDifference: 1 1 1 1\n\nInput:\n1\n2\nOutput:\nUnion: 1 1 2\nDifference: 1 1 1 1\n\nInput:\n2\n1\nOutput:\nUnion: 2 1\nDifference: 1 1 1 1\n\nInput:\n2\n2\nOutput:\nUnion: 2 2\nDifference: 1 1 1 1\n\nInput:\n2\n2\nOutput:\nUnion: 2 2\nDifference: 1 1 1 1\n\nInput:\n2\n2\nOutput:\nUnion: 2 2\nDifference: 1 1 1 1\n\nInput:\n2\n2\nOutput:\nUnion: 2 2\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n3\n3\nOutput:\nUnion: 3 3\nDifference: 1 1 1 1\n\nInput:\n3\n3\nOutput:\nUnion: 3 3\nDifference: 1 1 1 1\n\nInput:\n4\n4\nOutput:\nUnion: 4 4\nDifference: 1 1 1 1\n\nInput:\n4\n4\nOutput:\nUnion: 4 4\nDifference: 1 1 1 1\n\nInput:\n4\n4\nOutput:\nUnion: 4 4\nDifference: 1 1 1 1\n\nInput:\n5\n5\nOutput:\nUnion: 5 5\nDifference: 1 1 1 1\n\nInput:\n5\n5\nOutput:\nUnion: 5 5\nDifference: 1 1 1 1\n\nInput:\n5\n5\nOutput:\nUnion: 5 5\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n1\n1\nOutput:\nUnion: 1 1\nDifference: 1 1 1 1\n\nInput:\n3\n4\nOutput:\nUnion: 3 4\nDifference: 1 1 1 1\n\nInput:\n3\n4\nOutput:\nUnion: 3 4\nDifference: 1 1 1 1\n\nInput:\n4\n3\nOutput:\nUnion: 4 3\nDifference: 1 1 1 1\n\nInput:\n4\n3\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n''') == '3.141593'\nassert solution('''\n21\n''') == '1385.442360'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\nSample Input 1:\n2\nSample Output 1:\n3.141593\n2.000000\n\nSample Input 2:\n21\nSample Output 2:\n1385.442360\n882.000000''') == '3.141593\\n882.000000'\n\nassert solution('''21\nSample Input 1:\n2\nSample Output 1:\n1385.442360\n882.000000''') == '1385.442360\\n882.000000'\n\nassert solution('''2\nSample Input 1:\n1\nSample Output 1:\n3.141593\n2.000000''') == '3.141593\\n2.000000'\n\nassert solution('''21\nSample Input 1:\n2\nSample Output 1:\n1385.442360\n882.000000''') == '1385.442360\\n882.000000'\n\nassert solution('''1\nSample Input 1:\n2\nSample Output 1:\n3.141593\n2.000000''') == '3.141593\\n2.000000'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '3.141593'\nassert solution('21\\n') == '1385.442360'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n-1 -2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 -2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 -2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n129 44 394 253 147\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 -2 3\\n') == '2'\nassert solution('5\\n129 44 394 253 147\\n') == '0'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3\\n'\n    '-2 3\\n'\n    ) == '2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 -2 3') == '2'\nassert solution('10\\n-100000 -500000 50000 -3') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n2\n3\n1\n-1''') == '6'\nprint(solution('''4\n2\n3\n1\n-1'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n\") == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '4'\n\nstdin = \"\"\"\n5\n129 44 394 253 147\n\"\"\"\nimport re\nimport sys\n\nsys.stdin = open(\"input.txt\", \"r\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3\\n-5 -6 7\\n') == '0'\nassert solution('3\\n1 -2 3\\n-5 -6 7\\n') == '2'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n-2 -1 5 3') == '1'\nprint(solution('''4\n-2 -1 5 3'''))\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '6'\nassert solution('''\n3\n4 1 2\n''') == '8'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '40'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('3 2 2') == '8'\nassert solution('3 4 1 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '8'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '9'\nassert solution('3') == '12'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t) == \"8\"\n\nassert solution([3, 2, 2]) == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '8'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''\n1 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\nassert solution('''\n5 5 4\n1111\n1S01\n1011\n0U11\n1112\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\") == \"2\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"1S01\") == \"1\"\nassert solution(\"1011\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0R11\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0R01\") == \"NOT POSSIBLE\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 61,
        "num_ids_4": 125
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'\nassert solution('''2 2 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0U11\") == \"2\"\nassert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 5'\n    ) == '4'\nassert solution(\n    '7 5'\n    ) == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 2 1 1') == '4'\nassert solution('7 5') == '3'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"4\"\nassert solution(\"7 5\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n3 1 2 1 1') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2 1 1\") == \"4\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"10 10\") == \"9\"\nassert solution(\"15 5\") == \"9\"\n\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 5') == '4'\nassert solution('6 6') == '1'\nassert solution('12 23') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"7 5\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2 1 1\") == \"4\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"3 1 2 1 1\") == \"4\"\nassert solution(\"4 5\") == \"3\"",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\n\nassert solution(\n'''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '15'\n\nassert solution(\n'''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\n3\nPPSSS''') == '10'\n\nassert solution(\n'''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\n3\nPPSSS''') == '15'\n\nassert solution(\n'''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\n3\nPPSSS''') == '5'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '0'\nassert solution(\"SSPPR\") == '5'\nassert solution(\"SSPPR\") == '10'\nassert solution(\"RRSSP\") == '15'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('5') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP\\n') == '10'\nprint('solution() is working!')",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n\") == \"5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"4\") == \"14\"\n\nimport sys\nR, N = sys.stdin.readline().split()\nR, N = int(R), int(N)\n\nposs_scores = {'R': 2, 'S': 1, 'P': 3}\ns = 0\nmax_score = 0\n\nfor i in range(R):\n    data = stdin.readline().split()\n    \n    score = 0\n    for j in range(len(data)):\n        score += poss_scores[data[j]]\n    \n    if score > max_score:\n        max_score = score\n    \n    s += score\n\nprint(s)\nprint(max_score)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\nassert solution('3') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n3\n5\n10\n13''') =='still running'\nassert solution('''10\n20\n35\n50\n65\n80\n100\n125\n150\n175''') == '6'\nassert solution('''1\n3\n5\n10\n13\n15''') =='still running'\nassert solution('''1\n3\n5\n10\n13\n20\n30''') =='still running'\nassert solution('''1\n3\n5\n10\n13\n20\n30\n40''') =='still running'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') =='still running'\nassert solution('2') == '4'\nassert solution('7') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\nassert solution('10') == '9'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\nassert solution('6') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('2') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"still running\"\n\nstdin = \"2\"\nstdout = \"still running\"\nassert solution(stdin) == stdout\n\nstdin = \"5\"\nstdout = \"4\"\nassert solution(stdin) == stdout\n\nstdin = \"2\"\nstdout = \"still running\"\nassert solution(stdin) == stdout\n\nstdin = \"5\"\nstdout = \"4\"\nassert solution(stdin) == stdout",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2\\n') == '0.6'\nassert solution('6\\n1 3 2 2 3') == 'impossible'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 1 3 2 3') == '0.6'\nassert solution('2\\n2 2') == 'impossible'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3 4\\n1 2 3') == '0.3333333333333335'\nassert solution('4\\n3 2 1 4\\n1 2 3') == 'impossible'\nassert solution('3\\n2 1 2\\n1 2 3') == '0.5'\nassert solution('3\\n4 5 6\\n1 3 2 3') == '0.3333333333333335'\n",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"6\") == \"0.6\"\nassert solution(\"10\") == \"impossible\"\n\nstdin = \"\"\"\n4\n2 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n13 15\n14 16\n15 17\n16 18\n16 19\n17 20\n18 21\n18 22\n19 23\n20 24\n21 25\n22 26\n22 27\n23 28\n23 29\n24 30\n24 31\n25 32\n25 33\n26 34\n26 35\n27 36\n27 37\n28 38\n28 39\n29 40\n29 41\n30 42\n30 43\n31 44\n31 45\n32 46\n32 47\n33 48\n33 49\n34 50\n34 51\n35 52\n35 53\n36 54\n36 55\n37 56\n37 57\n38 58\n38 59\n39 60\n39 61\n40 62\n40 63\n41 64\n41 65\n42 66\n42 67\n43 68\n43 69\n44 70\n44 71\n45 72\n45 73\n46 74\n46 75\n47 76\n47 77\n48 78\n48 79\n49 80\n49 81\n50 82\n50 83\n51 84\n51 85\n52 86\n52 87\n53 88\n53 89\n54 90\n54 91\n55 92\n55 93\n56 94\n56 95\n57 96\n57 97\n58 98\n58 99\n59 100\n59 101\n60 102\n60 103\n61 104\n61 105\n62 106\n62 107\n63 108\n63 109\n64 110\n64 111\n65 112\n65 113\n66 114\n66 115\n67 116\n67 117\n68 118\n68 119\n69 120\n69 121\n70 122\n70 123\n71 124\n71 125\n72 126\n72 127\n73 128\n73 129\n74 130\n74 131\n75 132\n75 133\n76 134\n76 135\n77 136\n77 137\n78 138\n78 139\n79 140\n79 141\n80 142\n80 143\n81 144\n81 145\n82 146\n82 147\n83 148\n83 149\n84 150\n84 151\n85 152\n85 153\n86 154\n86 155\n87 156\n87 157\n88 158\n88 159\n89 160\n89 161\n90 162\n90 163\n91 164\n91 165\n92 166\n92 167\n93 168\n93 169\n94 170\n94 171\n95 172\n95 173\n96 174\n96 175\n97 176\n97 177\n98 178\n98 179\n99 180\n99 181\n100 182\n100 183\n101 184\n101 185\n102 186\n102 187\n103 188\n103 189\n104 190\n104 191\n105 192\n105 193\n106 194\n106 195\n107 196\n107 197\n108 198\n108 199\n109 200\n109 201\n110 202\n110 203\n111 204\n111 205\n112 206\n112 207\n113 208\n113 209\n114 210\n114 211\n115 212\n115 213\n116 214\n116 215\n117 216\n117 217\n118 218\n118 219\n119 220\n119 221\n120 222\n120 223\n121 224\n121 225\n122 226\n122 227\n123 228\n123 229\n124 230\n124 231\n125 232\n125 233\n126 234\n126 235\n127 236\n127 237\n128 238\n128 239\n129 240\n129 241\n130 242\n130 243\n131 244\n131 245\n132 246\n132 247\n133 248\n133 249\n134 250\n134 251\n135 252\n135 253\n136 254\n136 255\n137 256\n137 257\n138 258\n138 259\n139 260\n139 261\n140 262\n140 263\n141 264\n141 265\n142 266\n142 267\n143 268\n143 269\n144 270\n144 271\n145 272\n145 273\n146 274\n146 275\n147 276\n147 277\n148 278\n148 279\n149 280\n149 281\n150 282\n150 283\n151 284\n151 285\n152 286\n152 287\n153 288\n153 289\n154 290\n154 291\n155 292\n155 293\n156 294\n156 295\n157 296\n157 297\n158 298\n158 299\n159 300\n159 301\n160 302\n160 303\n161 304\n161 305\n162 306\n162 307\n163 308\n163 309\n164 310\n164 311\n165 312\n165 313\n166 314\n166 315\n167 316\n167 317\n168 318\n168 319\n169 320\n169 321\n170 322\n170 323\n171 324\n171 325\n172 326\n172 327\n173 328\n173 329\n174 330\n174 331\n175 332\n175 333\n176 334\n176 335\n177 336\n177 337\n178 338\n178 339\n179 340\n179 341\n180 342\n180 343\n181 344\n181 345\n182 346\n182 347\n183 348\n183 349\n184 350\n184 351\n185 352\n185 353\n186 354\n186 355\n187 356\n187 357\n188 358\n188 359\n189 360\n189 361\n190 362\n190 363\n191 364\n191 365\n192 366\n192 367\n193 368\n193 369\n194 370\n194 371\n195 372\n195 373\n196 374\n196 375\n197 376\n197 377\n198 378\n198 379\n199 380\n199 381\n200 382\n200 383\n201 384\n201 385\n202 386\n202 387\n203 388\n203 389\n204 390\n204 391\n205 392\n205 393\n206 394\n206 395\n207 396\n207 397\n208 398\n208 399\n209 400\n209 401\n210 402\n210 403\n211 404\n211 405\n212 406\n212 407\n213 408\n213 409\n214 410\n214 411\n215 412\n215 413\n216 414\n216 415\n217 416\n217 417\n218 418\n218 419\n219 420\n219 421\n220 422\n220 423\n221 424\n221 425\n222 426\n222 427\n223 428\n223 429\n224 430\n224 431\n225 432\n225 433\n226 434\n226 435\n227 436\n227 437\n228 438\n228 439\n229 440\n229 441\n230 442\n230 443\n231 444\n231 445\n232 446\n232 447\n233 448\n233 449\n234 450\n234 451\n235 462\n235 463\n236 464\n236 465\n237 466\n237 467\n238 468\n238 469\n239 470\n239 471\n240 472\n240 473\n241 474\n241 475\n242 476\n242 477\n243 478\n243 479\n244 480\n244 481\n245 482\n245 483\n246 484\n246 485\n247 486\n247 487\n248 488\n248 489\n249 490\n249 491\n250 492\n250 493\n251 494\n251 495\n252 496\n252 497\n253 498\n253 499",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 3 2 2 3\\n') == '0.6'\nassert solution('2\\n2 2\\n') == 'impossible'\nassert solution('3\\n2 2\\n') == '0.3'\nassert solution('5\\n1 2 3 4 5\\n') == '0.1'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n6 1 3 2 2 3\n''') == '0.6'\nassert solution('''\n2\n2 2\n''') == 'impossible'\nassert solution('''\n10\n3 1 1 1 2\n''') == '0.9'\nassert solution('''\n10\n3 1 4 1 4\n''') == 'impossible'\nassert solution('''\n6\n10 5 8 5 1\n''') == '0.9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n7 1 3 2 2 3\n''') == '0.6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\n\nassert solution('2') == 'impossible'\n\nassert solution('2 2') == '0.6'",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n4 1 2 3 2 3\n''') == '0.5', 'Wrong!'\nassert solution('''\n8\n8 1 8 8 8 2 2\n''') == '0.3333333333333333', 'Wrong!'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '0.5'\nassert solution('6\\n6 1 3 2 2 3') == '0.6'\nprint('all tests passed')\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\\n\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\\n\") == \"Tie\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 4 1 4\n1 6 1 6\n\"\"\") == \"Emma\"\nassert solution(\"\"\"1 8 1 8\n1 10 2 5\n\"\"\") == \"Tie\"\nassert solution(\"\"\"1 4 1 4\n1 6 1 6\n\"\"\") == \"Tie\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nprint(solution('''1 4 1 4\n1 6 1 6'''))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 6 1 6') == 'Tie'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4 1 4\") == 'Emma'\nassert solution(\"1 6 1 6\") == 'Tie'\nassert solution(\"1 8 1 8\") == 'Tie'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Gunnar\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 6 1 6') == 'Tie'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Emma\"\nassert solution(\"1 4 1 4\") == \"Emma\"\nassert solution(\"1 6 1 6\") == \"Emma\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 1 4') == \"Emma\"\nassert solution('1 6 1 6') == \"Gunnar\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 8 1 8') == 'Tie'\nprint(solution.__doc__)\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2 3\nmumble\n''') =='makes sense', 'First Test Cases'\nassert solution('''\n8\n1 2 3 mumble mumble 7 mumble 8\n''') =='something is fishy', 'Second Test Cases'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') =='makes sense'\nassert solution('8') =='something is fishy'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"makes sense\"\nassert solution(\"8\") == \"something is fishy\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\nmumble\nmumble\nmumble''') =='something is fishy'\nprint('\\n\\n-------------------------------------------------------')\n\nimport unittest\nfrom typing import List\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 mumble 5\\n1 2 3 mumble 7 mumble 8') =='makes sense'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 mumble 5\n''') == \"makes sense\"\nassert solution('''\n8\n1 2 3 mumble mumble 7 mumble 8\n''') == \"something is fishy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') =='makes sense'\nassert solution('8') =='something is fishy'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3\n1 2 3\n1 2 3\n''') =='makes sense'\nassert solution('''\n8\n1 2 3 mumble mumble 7 mumble 8\n1 2 3 mumble mumble 7 mumble 8\n1 2 3 mumble mumble 7 mumble 8\n1 2 3 mumble mumble 7 mumble 8\n1 2 3 mumble mumble 7 mumble 8\n1 2 3 mumble mumble 7 mumble 8\n1 2 3 mumble mumble 7 mumble 8\n''') =='something is fishy'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 mumble 5\n1 2 3 mumble 7 mumble 8''') =='something is fishy'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n'''",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 9 25 49 81\") == \"2 121\"\n\nassert solution(\"3 1 2 3\") == \"3\"\n\nassert solution(\"1 2 3\") == \"1\"\n\nassert solution(\"1 1 1 1\") == \"2\"\n\nassert solution(\"7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\") == \"3 43\"",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n6\\n9\\n12\\n15') == '1 18'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 2 2') == '1 2'\nassert solution('1 4 1 2\\n4 5 1 6\\n2 8 1 10') == '1 2'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6 6'\nassert solution('4 9 25 49 81') == '121 121'\nassert solution('5 0') == '1 1'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'CORRECT'\nassert solution('2\\n2 3\\n1 0\\n0 2\\n3 1\\nSample Output 2:') == 'INCORRECT'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 2\\n3 1') == 'CORRECT'\nassert solution('4 1\\n2 3\\n1 0\\n0 2\\n3 1') == 'INCORRECT'\nassert solution('4 2\\n2 2\\n1 1\\n0 0\\n3 3') == 'INCORRECT'\nassert solution('4 3\\n2 2\\n1 1\\n0 0\\n3 3') == 'CORRECT'\n",
        "num_ids_2": 49,
        "num_ids_4": 106
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\") == \"CORRECT\"\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\") == \"CORRECT\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n2 3\n1 0\n0 2\n3 1\n\"\"\") == \"CORRECT\"\nassert solution(\"\"\"\n1\n0 1\n\"\"\") == \"INCORRECT\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n0 3') == \"INCORRECT\"\nassert solution('3\\n0 1\\n2 3') == \"INCORRECT\"\nassert solution('10\\n3 4\\n5 6\\n7 8\\n9 0\\n1 2\\n3 4\\n6 7\\n8 9\\n2 5\\n4 7\\n0 8\\n9 1\\n1 6\\n6 9\\n0 5\\n8 4\\n7 3') == \"CORRECT\"\nassert solution('100\\n40 50\\n60 70\\n90 100\\n30 20\\n10 30\\n60 30\\n70 20\\n90 40\\n30 40\\n30 30\\n40 20\\n60 50\\n80 50\\n20 20\\n70 50\\n70 50\\n50 20\\n40 20\\n40 40\\n20 40\\n20 30\\n40 20\\n30 30\\n20 50\\n40 50\\n20 70\\n30 70\\n30 50\\n40 20\\n40 20\\n50 50\\n50 50\\n40 30\\n30 30\\n30 30\\n40 50\\n40 30\\n20 40\\n30 50\\n40 50\\n50 40\\n60 30\\n20 30\\n70 30\\n30 70\\n30 20\\n50 20\\n30 50\\n50 40\\n50 50\\n50 50\\n30 50\\n40 50\\n50 20\\n50 40\\n50 20\\n50 30\\n50 40\\n40 30\\n50 50\\n50 30\\n50 40\\n30 30\\n30 30\\n40 50\\n20 30\\n20 50\\n30 50\\n30 50\\n30 50\\n40 20\\n50 50\\n60 20\\n40 20\\n20 30\\n50 40\\n30 50\\n20 30\\n40 30\\n30 30\\n30 30\\n50 50\\n20 30\\n20 50\\n30 50\\n30 50\\n30 50\\n40 50\\n50 50\\n20 40\\n40 50\\n20 20\\n40 40\\n40 30\\n30 50\\n20 30\\n40 50\\n40 30\\n30 50\\n20 30\\n30 20\\n50 30\\n30 30\\n30 30\\n20 30\\n20 30\\n30 50\\n50 50\\n50 50\\n30 30\\n40 30\\n20 30\\n20 30\\n50 40\\n30 40\\n20 40\\n30 50\\n40 30\\n30 40\\n50 30\\n30 50\\n30 50\\n40 50\\n40 50\\n30 50\\n40 50\\n40 50\\n50 40\\n50 50\\n50 50\\n50 50\\n30 50\\n40 50\\n50 20\\n40 20\\n20 30\\n30 30\\n20 40\\n40 30\\n30 50\\n20 50\\n30 50\\n30 50\\n20 50\\n30 50\\n40 20\\n40 20\\n20 30\\n30 40\\n30 50\\n20 50\\n30 50\\n20 50\\n30 50\\n40 50\\n50 50\\n50 50\\n30 50\\n40 50\\n50 30\\n40 30\\n20 50\\n30 30\\n20 50\\n30 50\\n30 50\\n30 50\\n40 50\\n50 50\\n50 50\\n30 50\\n40 50\\n50 20\\n40 20\\n20 30\\n30 40\\n20 50\\n30 50\\n20 50\\n30 50\\n40 50\\n30 50\\n40 50\\n20 30\\n30 40\\n20 40\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n30 50\\n20 50\\n30 50\\n40 50\\n50 50\\n20 20\\n40 30\\n30 30\\n20 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 30\\n30 50\\n40 50\\n30 50\\n20 30\\n30 50\\n40 50\\n20 50\\n30 50\\n30 50\\n20 50\\n30 50\\n40 50\\n50 50\\n40 20\\n20 20\\n30 30\\n40 40\\n30 50\\n20 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n20 20\\n30 30\\n20 40\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n50 50\\n20 50\\n20 20\\n30 30\\n40 40\\n30 50\\n20 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n50 50\\n20 50\\n30 50\\n40 50\\n20 30\\n30 30\\n20 40\\n40 30\\n30 50\\n20 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n50 50\\n20 50\\n30 50\\n40 50\\n20 30\\n30 30\\n20 40\\n40 30\\n30 50\\n20 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n50 50\\n20 50\\n30 50\\n40 50\\n20 20\\n30 30\\n20 40\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n20 50\\n30 50\\n40 50\\n30 50\\n20 50\\n30 50\\n40 50\\n50 50\\n20 50\\n30 50\\n40 50\\n20 20\\n30 30\\n",
        "num_ids_2": 40,
        "num_ids_4": 1458
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"INCORRECT\", \"Empty input\"\nassert solution(\"1\") == \"INCORRECT\", \"Wrong input\"\nassert solution(\"4\") == \"INCORRECT\", \"Wrong input\"\nassert solution(\"10\") == \"CORRECT\", \"Wrong input\"\nassert solution(\"10 6\") == \"CORRECT\", \"Wrong input\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 1\\n2 3\\n\") == \"INCORRECT\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 0\\n0 2\\n3 1\\n\") == \"CORRECT\"\nassert solution(\"4 6\\n2 3\\n1 0\\n0 2\\n3 1\\n\") == \"INCORRECT\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\",
        "num_ids_2": 1458,
        "num_ids_4": 1458
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0 1 1 1\\n1 0 1 0 1\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'\nassert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'\nassert solution('10\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'\n",
        "num_ids_2": 98,
        "num_ids_4": 147
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2 3 1 11'\nprint(solution())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n') == '1 2 3 1 11'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1 1 1 1\"\nassert solution(\"5\") == \"1 1 1 1 1\"",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 2 3 1 11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\\n') == '1 2 3 1 11'\nprint(solution(input()))\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 1 1\n1 0 1\n1 1 0\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n\"\"\") == \"1 2 3 1 11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == 'Thursday'\nassert solution('''17 1''') == 'Saturday'\nassert solution('''17 17''') == 'Tuesday'\nassert solution('''17 2''') == 'Monday'\nassert solution('''20 2''') == 'Wednesday'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n'''\nimport datetime",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Thursday\"\nassert solution(input(\"\")) == \"Saturday\"\nassert solution(input(\"Day Month\")) == \"Thursday\"\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1, 1) == \"Thursday\"\nassert solution(17, 1) == \"Saturday\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1\n''') == \"Tuesday\"\nassert solution('''\n7 1\n''') == \"Sunday\"\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n100\\n500\\n') == '129\\n480'\nassert solution('10000\\n100000\\n1000\\n') == '1000\\n10000'\nassert solution('1000\\n10000\\n1000\\n') == '10000\\n10000'\n",
        "num_ids_2": 42,
        "num_ids_4": 85
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('4') == '129'\nassert solution('500') == '480'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('100') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('100') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\n100\\n4\\n') == '4\\n40'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('100\\n500\\n12\\n') == '129\\n480'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('123') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n100\n4\n''') == '4'\nassert solution('''\n100\n500\n12\n''') == '129'\nassert solution('''\n1\n100\n4\n''') == '129'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n100\\n100\\n') == '129\\n480'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '4'\nassert solution('4') == '40'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n5 1\n3 3\n4''') == \"4.0\"\nassert solution('''4 5\n1 4\n2 5\n3 6\n4 5\n5 3''') == \"6.0\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('5 1') == '5'\nassert solution('3 3') == '3'\nassert solution('3 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '4.0'\nassert solution('5 4') == '6.0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('3 2') == '6.0'\nassert solution('3 1') == '5.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4') == '4.0'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n') == '6.0'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2.0\"\nassert solution(\"4 3\") == \"6.0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n\"\"\") == \"6.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('3 2') == '6.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n5 1\\n3 3\\n4\") == \"4.0\"\nassert solution(\"4 1\\n5 1\\n3 3\\n4\") == \"6.0\"\nassert solution(\"4 1\\n5 4\\n1 6\\n3\") == \"6.0\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\") == \"6.0\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n3\n10\n2\n3\n5\n2\n3\n10\n3\n1\n10\n''') == '7'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('3999999') == '2'\nassert solution('99999999') == '7'\nassert solution('999999999') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('30') == '7'\nassert solution('2') == '2'\nassert solution('100') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n15\n''') == '2'\nassert solution('''30\n''') == '7'\nassert solution('''3\n5\n''') == '2'\nassert solution('''2\n2\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"50\") == \"9\"\nassert solution(\"20\") == \"10\"\nassert solution(\"300\") == \"26\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('30') == '7'\nassert solution('23') == '1'\nprint('All test cases passed')\n\nhttps://www.hackerrank.com/challenges/perf-or-perf/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('27') == '3'\nassert solution('125') == '4'\nassert solution('50') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('30') == '7'\nassert solution('20') == '4'\nassert solution('10') == '5'\nassert solution('3') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '2'\nassert solution('''\n30\n''') == '7'\nassert solution('''\n200\n''') == '41'\nassert solution('''\n50\n''') == '9'\nassert solution('''\n100\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'HE GOT AWAY!'\nassert solution('N-FBI1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"N-FBI1\") == \"1\", \"1st example\"\nassert solution(\"9A-USKOK\") == \"1\", \"2nd example\"\nassert solution(\"I-NTERPOL\") == \"1\", \"3rd example\"\nassert solution(\"G-MI6\") == \"1\", \"4th example\"\nassert solution(\"RF-KGB1\") == \"1\", \"5th example\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n\"\"\") == \"1\"\nassert solution(\"\"\"N321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n\"\"\") == \"HE GOT AWAY!\"\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1 2 5\"\n\"\"\"\n\nfrom itertools import product\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"2\"\nassert solution(\"G-MI6\") == \"2\"\nassert solution(\"RF-KGB1\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n''') == '1'\nassert solution('''\nN-FBI1\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n''') == 'HE GOT AWAY!'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\"\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\nassert solution('N1234-TEST\\nTEST-N1234\\nN-TEST\\nF-TEST\\n') == 'HE GOT AWAY!'\nprint('All tests passed!')\n",
        "num_ids_2": 93,
        "num_ids_4": 133
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8.0\"\nassert solution(\"3\") == \"6.843530573929037\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 3 3\n4 5 4\n\"\"\") == \"8.0\"\nassert solution(\"\"\"\n2\n3 3 3\n4 5 4\n\"\"\") == \"6.843530573929037\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 3 3\n4 4 5\n''') == '8.0'\n\nassert solution('''\n3\n2 2 2\n4 4 4\n5 5 5\n''') == '13.181818181818182'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"8.0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '8.0'\nassert solution('2') == '6.843530573929037'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3') == \"8.0\"\nassert solution('5 5 5') == \"20.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '8.0'\nassert solution('3') == '6.843530573929037'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3') == '1.5'\nassert solution('2\\n5 5') == '3'\nassert solution('3\\n6 6') == '4.5'\nassert solution('4\\n7 7') == '5.0'\nassert solution('5\\n8 8') == '6.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == \"8.0\"\nassert solution('2\\n3 3 3\\n4 5 4') == \"6.843530573929037\"\n\"\"\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('23') == '2'\nassert solution('4') == '4'\nassert solution('23456789101112131415') == '3344'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"11\") == \"13\"\nassert solution(\"75\") == \"77\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27\nassert solution(1) == 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('5') == '8'\nassert solution('6') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('55') == '7'\nassert solution('120') == '121'\nassert solution('125') == '127'\nassert solution('160') == '169'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('100') == '100'\nassert solution('10001') == '10000'\nassert solution('10000101') == '10000101'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15') == '15'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('23') == '23'\nassert solution('24') == '24'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '7'\nassert solution('5') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(24) == 24\nassert solution(25) == 27",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1+2+3+4+5+6+7+8+9') == '188'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1+9+8+4''') == '7'\nassert solution('''1+9+8+4+5+6''') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nprint('Congratulations! All test cases passed.')\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+1+1+1+1+1+1+1+1\") == \"10\"\n",
        "num_ids_2": 42,
        "num_ids_4": 68
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\nprint('Congratulations! All test cases passed.')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 5 -2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nprint(solution(sys.stdin))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\nprint('Congratulations! All test cases passed.')\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 4') == '5 -2 4'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 1') == '1 1 2'\nassert solution('3 2\\n2 1') == '1 2 3'\nassert solution('2 1\\n2 1') == '1 1 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1 1 2 1 1 1\") == \"1 1 2 1 1 1\"\nassert solution(\"1 2 2 2 2 2 2 2 2 2\") == \"1 2 2 2 2 2 2 2 2 2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 76
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n4 5 6') == '1 2 3 4 5 6'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '2 2 2 1 1'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '1 1 1 3 3 3 2 2 2'\n\nfrom collections import Counter\n\nn, c = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\na.sort()\n\nans = []\n\ncount = Counter(a)\n\nfor i in count:\n    ans += (count[i],)\n\nprint(*ans)",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 2 2 1 1'\n\nassert solution('''6 2\n1 2 4 3 5 3\n''') == '1 2 3 4 3 5'\n\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2'\n\nassert solution('''15 3\n1 2 2 2 1 3 2 1 2 2 2 2 3 2 2 2 2 1 2 3 2 1 1 3 2 2 2 2 1 3 2 2 1 2 2 2 2 1 1 3 2 2 1 2 2 2 1 3 2 2 2 1 1 2 2 2 2 2 1 3 2 2 1 1 3 2 2 1 2 2 2 2 2 1 2 3 2 2 1 1 2 2 2 2 2 1 2 3 2 2 1 1 3 2 2 2 1 1 2 2 2 2 2 1 2 3 2 2 1 1 2 2 2 2 1 1 3 2 2 1 1 2 2 2 2 1 2 3 2 2 1 1 3 2 2 2 1 1 2 2 2 2 1 2 3 2 2 1 1 2 2 2 2 2 1 2 3 2 2 1 1 1 2 2 2 2 1 1 2 2 2 2 1 1 1 2 2 2 2 2 1 2 3 2 2 1 1 2 2 2 2 1 1 2 2 2 2 1 2 3 2 2 1 1 2 2 2 2 1 1 1 3 2 2 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 2 1 2 3 2 2 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 2 2 2 2 1 1 2 2 2 2 1 1 3 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 2 3 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 2 3 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 3 2 2 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2 2 1 1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''25 13\n1 25\n''') == '25'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == None\nassert solution(\"1 100\") == \"100\"\n\nassert solution(\"1 5\") == \"7\"\n\nassert solution(\"3 6\") == \"14\"\n\nassert solution(\"3 1\") == \"1\"",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20 21\n5 10\n''') == '875'\nassert solution('''\n30 50\n10 20\n''') == '100'\nassert solution('''\n10 10\n5 10\n''') == '10'\nassert solution('''\n10 10\n1 2\n''') == '1'\nassert solution('''\n10 10\n1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''38 24\n    1 100''') == '875'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15 10') == '875'\nassert solution('2 1') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 100') == '100'\nassert solution('38 24') == '875'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 5\n6\n''') == '1'\nassert solution('''2 2\n10\n''') == '10'\nassert solution('''4 6\n7\n''') == '5'\nassert solution('''2 4\n9\n''') == '4'\nassert solution('''10 1\n2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('5 5') == '2'\n\nimport sys\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 1') == '875'\nassert solution('12 4') == '12'\nassert solution('12 8') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n\n## There are many possible solutions to this problem. \n## We are looking for the most optimal solution. \n## For example, the input \"231\" can be printed as\n## \"231\" or as \"1231\". This is because we can print the \n## most significant digit, the leftmost digit, in the second \n## case and we do not have to print the rest of the digits.\n## (The digits are irrelevant.)\n\n## The approach is pretty simple. It is essentially swapping \n## the most significant digit and the leftmost digit to the right side \n## of the string.\n## The function takes in a string and returns a string. \n\n## The code for the solution is below:",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2738 3947\n''') == '543'\n\nassert solution('''\n1121\n''') == '124'\n\nassert solution('''\n1221\n''') == '121'\n\nassert solution('''\n''') == '1'\n\nassert solution('''\n1034\n''') == '434'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('33333333333') == '33333333333'\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('-3 -1') == '2'\nassert solution('101') == '5'\nassert solution('857') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''567 890\n1\n\n''') == '982'\nassert solution('''4682 567\n''') == '567 890'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''11 131''') == 'programming'\nassert solution('''7 96''') == 'contest'\n''')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''11 131\nprogramming''') == 'programming'\nassert solution('''7 96\ncontest''') == 'contest'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([11, 131]) == \"programming\"\nassert solution([7, 96]) == \"contest\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 1') == 'programming'\nassert solution('3 4') == 'impossible'\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([11, 131]) == \"programming\"\nassert solution([7, 96]) == \"contest\"\nassert solution([11, 131, 9]) == \"contest\"\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n\n'''\n\nimport re\n\nl, w = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\n'''\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n''') == '''BBABABABABABA\nBBBABABABABA\nBBABABABABAB\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^'''\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == '''BBABABABABABB'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n''') == '.''^'\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == 'BBABABABABAC'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 2 'X'\\nX^\\n--\\n\") == \".^\\n--\\n\"\nassert solution(\n    \"3 12 'A'\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n\") == \"BBABABABABAB\\nBBABABABABAB\\nBBABABABABAB\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2 'X'\nX^\n--\n''') == '''.^\n--'''\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n''') == '''BBABABABABABA\nBABABABABABAC\nBABABABABABAB\n'''\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n''') == '''BBABABABABABA\nBABABABABABAC\nBABABABABABAB\n'''\n\nassert solution('''\n3 10 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n''') == '''BBABABABABAC\nBABABABABABB\nBABABABABABB\n'''\n\nassert solution('''\n3 6 'A'\nABABABABABAC\nBABABABABAB\nABABABABABAB\n''') == '''BBABABABABABA\nBABABABABABA\nBABABABABABA\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 \"X\"\\nX^\\n--\\n') == '.^\\n--\\n'\nassert solution('2 2 \"A\"\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n') == 'BBABABABABAB\\nBBABABABABAB\\nBBABABABABAB\\n'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n\n''') == '.''X''.'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n''') == 'BBABABABABAC'\nassert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n\n''') == '''.^''.'''\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n''') == '''BBBABABABABA'''\nassert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n\n''') == '''.^''.'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"X^\"\nassert solution(\"\"\"3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"BBABABABABABA\"\nassert solution(\"\"\"6 6 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\nABABABABABAB\nABABABABABAB\nABABABABABAB\n\"\"\") == \"ABABABABABAB\"\nassert solution(\"\"\"6 6 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"X^\"\nassert solution(\"\"\"3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"BBABABABABAB\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 2 'X'\"\"\") == \"\"\".X\"\"\"\"\"\"\nassert solution(\"\"\"3 12 'A'\"\"\") == \"\"\"BABABABABABB\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 'X'\nX^\n''') == '.^'\n\nassert solution('''\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == 'BBABABABABAC'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == '1 2 3'\nassert solution('1 2 3 4 0 1') == '1 2 3'\n",
        "num_ids_2": 23,
        "num_ids_4": 40
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4 4 14\n''') == '1 0 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\nassert solution('0 0 4') == '0 0 4'\nassert solution('100 80 60 240') == '0 0 4'\nassert solution('2 4 4 14') == '1 0 3'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\nassert solution('5 0 1') == '5 0 1'\nassert solution('7 0 0') == '7 0 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2 4 4 14\n''') == '1 0 3\n'''\n1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n'''\nassert solution(\n'''\n100 80 60 240\n''') == '0 0 4\n'''\n0 0 4\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"3\"\nassert solution('4') == \"6\"\nassert solution('5') == \"12\"\nassert solution('6') == \"18\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('7') == '12'\nassert solution('8') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'good job'\nassert solution('9') == 'good job'\nassert solution('4') == 'good job'\nassert solution('5') == 'good job'\nassert solution('7') == 'good job'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == 'good job'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('7') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n9\n2\n4\n5\n7\n8\n9\n10\n11\n13\n\"\"\") == \"1 3 6 12\"\nassert solution(\"\"\"\n5\n7\n8\n10\n11\n\"\"\") == \"3 6 10\"\nassert solution(\"\"\"\n3\n9\n10\n11\n\"\"\") == \"5 6 7 10\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'good job'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('8') == '7'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1 3 6'\nassert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1 3 6'\nassert solution('2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1 3 6'\nassert solution('5\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1 3 6'",
        "num_ids_2": 78,
        "num_ids_4": 153
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"good job\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1 3 6 12\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == \"6\"\nassert solution('2') == \"1\"\nassert solution('10') == \"12\"\nassert solution('11') == \"3\"\nassert solution('12') == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') == 'good job'\nassert solution('''\n8\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') =='missing numbers are 1, 3, 6, 12, 13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n10000000.0 5200000.0 40075000.0 272.1') == '157079.04857106 15.598261092309'\nassert solution('5\\n50.0000000000000 10.0000000000000 5.0000000000000 2.0000000000000') == '1314.807634361498'\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nprint(solution(input()))\n\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10000 10.9 1 2') == '9.9321956714419e-05 9.9321956714419e-05'\n\"\"\"\n\nimport math\nimport re\nimport sys\nfrom typing import List, Tuple\n\nimport pytest\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 8.9 500 75000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 10.9 500 75000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 10.9 500 75000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 7.9 500 75000 272.1\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 8.9 40075000 272.1\n\"\"\"\n) == \"157079.04857106 15.598261092309\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"5 1.5 2 10\") == \"6.25\"\nassert solution(\"8 1.1 2 10\") == \"11.0\"\nassert solution(\"3 1.1 2 10\") == \"4.35\"\nassert solution(\"1 1.1 2 10\") == \"0.0\"",
        "num_ids_2": 49,
        "num_ids_4": 83
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n1000000 1000000 2.3\n''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2\n4\n3\n2\n''') == '0'\n\nassert solution('''\n2\n2\n2\n2\n''') == '1'\n\nassert solution('''\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '2'\n\nassert solution('''\n11\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '3'\n\nassert solution('''\n12\n1\n2\n2\n3\n2\n1\n2\n2\n1\n2\n1\n1\n2\n1\n1\n2\n2\n1\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution('3\\n') == '4'\nassert solution('3\\n') == '4'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nA\\nA\\nA\\n') == '3'\nassert solution('2\\nB\\nB\\nA\\n') == '1'\nassert solution('3\\nA\\nB\\nB\\n') == '0'\nassert solution('4\\nA\\nB\\nC\\n') == '0'\nassert solution('5\\nA\\nC\\nD\\nC\\n') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\", \"1st example\"\nassert solution(\"2\") == \"2\", \"2nd example\"\nassert solution(\"3\") == \"3\", \"3rd example\"\nassert solution(\"4\") == \"4\", \"4th example\"\nassert solution(\"5\") == \"5\", \"5th example\"\n\"\"\"\nimport os\nimport sys",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\nC\nA\nB\n''') == '3'\n\nassert solution('''\n1\nA\n2\nB\n''') == '3'\n\nassert solution('''\n5\nA\nB\nC\nD\nE\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\nA\nB\nC\nA\n''') == '3'\nassert solution('''4\nA\nA\nC\nB\n''') == '1'\n'''\n    pass\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\n\") == \"3\"\nassert solution(\"4\\nA\\nB\\nC\\n\") == \"2\"\nassert solution(\"4\\nA\\nB\\nD\\n\") == \"1\"\nassert solution(\"5\\nA\\nB\\nC\\nD\\n\") == \"0\"\n\"\"\"\nimport math\n",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\nA\nA\nA\n''') == \"3\"\nassert solution('''\n1\nA\nD\n''') == \"0\"\n\n-----Explanation of the second sample input-----\nBecause of the `A` on the $1$st line of the answer sheet, only one correct answer is found. So it's a bad answer.\n\n-----Examples-----\nSample Input:\n3\nA\nB\nC\nSample Output:\n0\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nA\\nA\\nA\\nA') == '3'\nassert solution('2\\nA\\nA\\nA') == '3'\nassert solution('4\\nA\\nB\\nC\\nD\\n') == '4'\nassert solution('4\\nA\\nB\\nC\\nD') == '0'\nassert solution('4\\nA\\nB\\nC\\nD') == '0'\n",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nA\\nA\\nA\\n') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\n\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\nA\nA\nB\n''') == \"2\"\n\nassert solution('''\n2\nA\nA\nA\n''') == \"1\"\n\nassert solution('''\n3\nA\nA\nA\n''') == \"1\"\n\nassert solution('''\n4\nA\nA\nA\n''') == \"2\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '....xx...xx...xx'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\nxx..xx\"\nassert solution(\"3 3 1 4\\n.x.\\nxx.x\\nxx.x\\n.xx.\\n\") == \"..xxx..\\nxxx..xx\\nxxx..xx\\nxxx..xx\"\n",
        "num_ids_2": 99,
        "num_ids_4": 99
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\nxx..xx\\n\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..\\nxx..xx\\n..xx..\\n'\n\nassert solution('''\n5 5 1 3\nx.\nxx\nxx\nxx\nxx\n''') == 'xxx.xxx.xxx.xxx\\nxxx.xxx.xxx.xxx\\nxxx.xxx.xxx.xxx\\nxxx.xxx.xxx.xxx\\nxxx.xxx.xxx.xxx\\n'\n\nassert solution('''\n1 4 1 4\nx.\nxx\nxx\nxx\n''') == 'xx\\nxx\\nxx\\nxx\\n'\n\nassert solution('''\n3 3 2 2\n.x.\nx.x\nx.x\n''') == '..xx\\nxx\\nxx\\n'\n\nassert solution('''\n10 3 2 1\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\n''') == 'xx\\nxx\\nxx\\nxx\\nxx\\nxx\\nxx\\nxx\\nxx\\nxx\\nxx\\nxx\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '..xx..'\nassert solution('3 3 3 1') == '..xx..'\nassert solution('2 2 3 1') == '..xx..'\nassert solution('3 3 2 1') == '..xx..'\nassert solution('1 2 1 2') == '..xx..'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([[3, 3, 1, 2], '.x.', 'x.x', 'x.x']) == '..xx..\\nxx..xx\\n..xx..'\n\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\n\nassert solution('''\n5 5 1 2\n.x.\nx.x\n.x.\nx.x\n.x.\n''') == 'xx..xx'\n\nassert solution('''\n3 3 1 2\n.x.\nx.x\nx.x\n''') == '..xx..'\n\nassert solution('''\n3 3 1 2\n.x.\nx.x\nx.x\n''') == 'xx..xx'\n\nassert solution('''\n5 5 1 2\n.x.\nx.x\n.x.\nx.x\n.x.\n''') == 'xx..xx'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3 1 2\\n\"\n    \"..xx..\\n\"\n    \"xx..xx\\n\"\n    \"..xx..\\n\"\n) == (\n    \"..xx..\\n\"\n    \"xx..xx\\n\"\n    \"..xx..\\n\"\n)\n\nassert solution(\n    \"1 1 1\\n\"\n    \".\"\n    \"x\"\n    \"\\n\"\n) == (\n    \"x\"\n    \"x\"\n    \"x\"\n)\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 1 2') == '..xx..'\nassert solution('4 2 1 2') == 'xx..xx'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\") == \"xxx\"\nassert solution(\"1 2 4\") == \"xx\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"F 0 13 20\") == \"15 20\"\nassert solution(\"B 0 13 20\") == \"12 13 20\"\nassert solution(\"F 60 -10 13 20\") == \"14 13 20\"\nassert solution(\"B 60 -10 13 20\") == \"14 13 20\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"B 60 9 13\") == \"13 19\"\nassert solution(\"F 60 -12 13\") == \"13\"\nassert solution(\"B 60 -13 13\") == \"13 13\"\n\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"14 20\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('F 60 13 20 F') == '12 20'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"F 60 13 20\\n\") == \"14 20\"\nassert solution(\"B 60 13 20\\n\") == \"13 20\"\nassert solution(\"F -60 13 20\\n\") == \"13 20\"\nassert solution(\"B -60 13 20\\n\") == \"14 20\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"F 60 13 20\\n\"\n) == \"14 20\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nF 60 13 20\n''') == '14 20'\n\nassert solution('''\nB 60 13 20\n''') == '13 20'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nF 60 13 20\n''') == '14 20'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nF 60 13 20\n''') == '14 20'\nassert solution('''\nF 60 -13 -20\n''') == '24 -13 20'\nassert solution('''\nB 60 13 20\n''') == '24 13 20'\nassert solution('''\nB 60 -13 -20\n''') == '24 -13 20'\n'''\nThis has a solution, but the input looks a bit too short. Can you simplify it?\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"OCT 31\") == 'yup'\nassert solution(\"OCT 30\") == 'nope'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"yup\"\nassert solution(input) == \"yup\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 1\") == \"nope\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"yup\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'yup'\nassert solution('OCT 31') == 'yup'\nassert solution('FEB 9, 2014') == 'nope'\nassert solution('FEB 10, 2014') == 'nope'",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 1') == 'nope'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''OCT 31\nyup''') == 'yup'\nassert solution('''OCT 20\nnope''') == 'nope'\n\n'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 1') == 'nope'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('FEB 9') == 'yup'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"##########\\n#honi#########\\n#oker#########\\n#nera#########\\n#irak#########\\n##########\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '''#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '#.#.#.#.\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak#.'\nassert solution('3 4') == '#.honi#.\\n.oker#.\\n#.nera#.\\n.irak#.'\nassert solution('6 6') == '#.#.#.#.#\\n.#.honi#.\\n.#ker#.\\n.nera#.\\n.#irak#.\\n.#malk#.\\n#.erak#.'\n",
        "num_ids_2": 78,
        "num_ids_4": 135
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.#\\n#.#.#.#.#'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 4\\n2 2 2 2\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"\nassert solution(\"3 6\\n3 3 3 3\\n9 9 9\\n9 9 9\\n9 9 9\\n9 9 9\\n9 9 9\\n9 9 9\\n9 9 9\\n9 9 9\\n9 9 9\\n\") == \"#.#.#.#.\\n.honi#.\\n.nera#.\\n.#irak.#\\n.#honi#.\\n.#nera#.\\n.#irak.#\\n.#.honi#.\\n.#.nera#.\\n.#.irak.#\\n#.#.#.#.#\"\n",
        "num_ids_2": 74,
        "num_ids_4": 211
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 4\n2 2 2 2\nhoni\noker\nnera\nirak\nSample Output:\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\\n.honi#.\\n#.oker.#\\n#.nera#.\\n#.irak.#\\n#.#.#.#.\\n#.#.#.#.'\nassert solution('5 5\\n1 1 1 1\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa') == 'aaaa\\naaaa\\n#aaaa#\\n#aaaa#\\n#aaaa#\\naaaa\\naaaa\\n#aaaa#\\naaaa\\n#aaaa#'\nassert solution('4 4\\n1 1 1 1\\nhoni\\noker\\nnera\\nirak') == '#.honi.\\n#.oker.\\n#.nera.\\n#.irak.'\nassert solution('4 4\\n1 1 1 1\\nhoni\\noker\\nnera\\nirak') == '#.honi.\\n#.oker.\\n#.nera.\\n#.irak.'\n",
        "num_ids_2": 145,
        "num_ids_4": 253
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.##'\n\n\"\"\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n4 5 6') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.#'\n",
        "num_ids_2": 144,
        "num_ids_4": 244
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Ra1,Nb1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Bc1,Qd1,Ra1,Rh1,Ra1,Qd1,Rh1,Kd1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Kd1,Ra1,Rh1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1,Bc1,Nb1,Ra1,Kd1,Ra1,Kd1,Ra1,Qd1,Nb1,Ra1,Qd1",
        "num_ids_2": 1423,
        "num_ids_4": 1423
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:P.|:P.|.P.|:P.|:P.|:P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|.P.|:::|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''')\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nprint(solution(input()))",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\") == \"White: Rq1,Qh2,Qg3,Qf4,Qd5,Qe6,Qb7,Qp8,Qp9,Qp10,Qp11,Qp12\\nBlack: Rg4,Qf5,Qe6,Qp7,Qp8,Qp9,Qp10,Qp11,Qp12,Qp13,Qp14,Qp15,Qp16,Qp17,Qp18,Qp19,Qp20\\n\"",
        "num_ids_2": 234,
        "num_ids_4": 234
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: a2,b2,c2,d2,e2,f2,g2,h2,i2,j2,k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2\") == \"Black: k2,l2,m2,n2,o2,p2,q2,r2,s2,t2,u2,v2,w2,x2,y2,z2\"\nassert solution(\"White: Nb1,Nc1,Nd1,Nf1,Ng1,Nh1,Ni1,Ni1,Nj1,Nk1,Nl1,Nm1,Nn1,No1,Np1,Nq1,Nr1,Ns1,Nt1,Nu1,Nv1,Nw1,Nx1,Ny1,Nz1\") == \"Black: Nb1,Nc1,Nd1,Nf1,Ng1,Nh1,Ni1,Ni1,Nj1,Nk1,Nl1,Nm1,Nn1,No1,Np1,Nq1,Nr1,Ns1,Nt1,Nu1,Nv1,Nw1,Nx1,Ny1,Nz1\"\nassert solution(\"White: Nc6,Nd6,Nf6,Ng6,Nh6,Ni6,Ni6,Nj6,Nk6,Nl6,Nm6,Nn6,No6,Np6,Nq6,Nr6,Ns6,Nt6,Nu6,Nv6,Nw6,Nx6,Ny6,Nz6\") == \"Black: Nc6,Nd6,Nf6,Ng6,Nh6,Ni6,Ni6,Nj6,Nk6,Nl6,Nm6,Nn6,No6,Np6,Nq6,Nr6,Ns6,Nt6,Nu6,Nv6,Nw6,Nx6,Ny6,Nz6\"\n",
        "num_ids_2": 244,
        "num_ids_4": 640
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"+---+---+---+---+---+---+---+---+\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n\"\"\"\n\nimport re\nimport sys\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:P.|:P.|.P.|:P.|:P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P.|:P.|:P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\nWhite: 1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1\\nBlack: 1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1\"",
        "num_ids_2": 623,
        "num_ids_4": 623
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White:Kee,Qdee,Raee,Rhee,Bcee,Bfee,Nbee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,Heee,Aeee,Ceee,Deee,Feee,Geee,",
        "num_ids_2": 1422,
        "num_ids_4": 1422
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Diablo is happy!'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4.000000 1.000000\") == \"Diablo is happy!\"\nassert solution(\"1.000000 4.000000\") == \"Need more materials!\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('10.00002 1.00002') == 'Need more materials!'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == 'Diablo is happy!'\nassert solution(input_string_2) == 'Need more materials!'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.000000 2.000000\") == \"Diablo is happy!\"\nassert solution(\"3.000000 4.000000\") == \"Need more materials!\"\nassert solution(\"1.000000 8.000000\") == \"Need more materials!\"\nassert solution(\"1.000000 1.000000\") == \"Need more materials!\"\nassert solution(\"0.000000 0.000000\") == \"Diablo is happy!\"",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('4.000000 2.000000') == 'Need more materials!'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Need more materials!\"\nassert solution(\"20.000000 8.000000\") == \"Diablo is happy!\"\nassert solution(\"20.000000 20.000000\") == \"Need more materials!\"\nassert solution(\"5.000000 100.000000\") == \"Need more materials!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('6.000000 5.000000') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5.000000 3.000000\") == \"Need more materials!\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"1.000001 4.000000\") == \"Need more materials!\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n2\\n1\\n') == '6'\nassert solution('10\\n1\\n10\\n2\\n1') == 'use the stairs'\n'''\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"20 10 20 10 20\") == \"use the stairs\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 2 4 3 2\") == \"use the stairs\"\nassert solution(\"3 3 3 4 5\") == \"3\"\nassert solution(\"7 3 3 4 5\") == \"use the stairs\"\nassert solution(\"1 10 1 2 1\") == \"use the stairs\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"use the stairs\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 1 1 1') == 'use the stairs'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 10 10 3 4\") == \"use the stairs\"\nassert solution(\"1000 1 1000 1 1\") == \"use the stairs\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 2 1') == 'use the stairs'\nassert solution('10000 1 100000 100000 10000') == '10000 1 100000 100000 10000'\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution
        "num_ids_2": 1549,
        "num_ids_4": 1549
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 0 2 1') == \"6\"\nassert solution('10 1 10 2 1') == \"6\"\nassert solution('5 1 0 2 1') == \"use the stairs\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1 1 10 2 1') == '6'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n500\n120\n75\n250\n175\n''') == '128.8'\n\nassert solution('''\n3\n500\n120\n75\nSample Output:\n89.06666666666666\n''') == '89.06666666666666'\n\nassert solution('''\n5\n500\n120\n75\n250\n175\nSample Output:\n128.8\n''') == '128.8'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1,2,3,4,5\\n1,1\\n3,2,3,4,5\\n4,5\\n5,5\\n\") == \"8.0\"\nassert solution(\"3\\n1,2,3\\n1,1\\n3,2,3\\n4,5\\n5,5\\n\") == \"7.0\"\nassert solution(\"4\\n1,2,3,4\\n1,1\\n3,2,3,4\\n4,5\\n5,5\\n\") == \"9.0\"\nassert solution(\"10\\n1,1,1,1,1,1,1,1,1,1\\n2,2,2,2,2,2,2,2,2,2\\n3,3,3,3,3,3,3,3,3,3\\n4,4,4,4,4,4,4,4,4,4\\n5,5,5,5,5,5,5,5,5,5\\n\") == \"7.8\"\n",
        "num_ids_2": 94,
        "num_ids_4": 260
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n') == '89.06666666666666'\n\nassert solution('1\\n1\\n3\\n4\\n5\\n') == '89.06666666666666'\n\nassert solution('3\\n500\\n120\\n75\\n') == '128.8'\n\nassert solution('20\\n4.1\\n4.2\\n5.2\\n2.5\\n') == '49.5'\n",
        "num_ids_2": 61,
        "num_ids_4": 118
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('5\\n50\\n55\\n45\\n45\\n45') == '89.06666666666666'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n500\\n120\\n75\\n') == '128.8'\nassert solution('6\\n500\\n120\\n75\\n0\\n200\\n') == '99.83333333333334'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n500\\n120\\n75\\n') == '128.8'\nassert solution('10\\n100\\n120\\n50\\n') == '89.06666666666666'\nprint('All tests passed.')",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"4\") == \"89.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '128.8'\nassert solution('5') == '89.06666666666666'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('6\\n5200\\n4875\\n6125\\n7250\\n5500\\n7500\\n6875') == '89.06666666666666'\nassert solution('10\\n1000\\n1200\\n1000\\n1200\\n1000\\n1200\\n1000\\n1200\\n1000\\n1200') == '100.0'\n",
        "num_ids_2": 64,
        "num_ids_4": 106
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n500\n120\n75\n1000\n876''') == '89.06666666666666'\nassert solution('''6\n120\n100\n85\n75\n85\n20''') == '74.33333333333334'\nassert solution('''2\n10\n10''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4'\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 45 65 84 346') == '4'\nassert solution('5 1 45 65 84 346') == '5'\nassert solution('3 1 9 8 4') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 45 65 84 346\n''') == '4'\nassert solution('''\n7\n1 20 43 50 75 200\n''') == '5'\nassert solution('''\n5\n1 20 45 50 75 200\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 45 65 84 346\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('10\\n1 4 5 8 10 9 7 0 3 2 6 7 3') == '3'\nassert solution('16\\n4 1 2 4 3 4 4 3 2 1 4 5 8 9 3 3 2 6 8 7 7 5 5 5 3') == '1'",
        "num_ids_2": 47,
        "num_ids_4": 84
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 45 65 84 346') == '4'\nassert solution('5 1 45 65 84 346') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nassert solution('''10\n1 100 500 400\n3 8 60 500\n4 5 10 500\n7 5 10 500\n5 5 5 5''') == '4'\nassert solution('''6\n1 1 2 2 3 3\n4 3 2 1''') == '6'\nassert solution('''5\n1 1 2 2 3 3\n4 3 2 1\n5 5 5 5''') == '5'\n''') == '4'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n#######\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n8\\n#######\\n#P.GTG#\\n..TGG#\\n#######') == '1'\nassert solution('3\\n1\\n#######\\n#P.GTG#\\n') == '0'\nassert solution('3\\n1\\n#######\\n#P.GTG#\\n###############') == '0'\nassert solution('3\\n1\\n#######\\n#P.GTG#\\n#.......#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#') == '1'\nassert solution('3\\n1\\n#######\\n#P.GTG#\\n#.......#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#.#') == '0'\n\"\"\"\n",
        "num_ids_2": 62,
        "num_ids_4": 177
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 4\n#######\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n#######\\n#P.GTG#\\n#######\\n#G.TGG#\\n#######') == '1'\nassert solution('3 3\\n#######\\n#P.GTG#\\n#######\\n#G.TGG#\\n#######') == '0'\nassert solution('20 20\\n#######\\n#P.GTG#\\n#######\\n#G.TGG#\\n#######') == '5'\n",
        "num_ids_2": 78,
        "num_ids_4": 117
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n###\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 4\n###G#\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('6 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('6 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '0'",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('3 3\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##') == '5'\nassert solution('2 2\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#\\n#G#') == '8'\nassert solution('3 3\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##\\n###G###\\n##G##') == '0'\nassert solution('1 1\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###') == '2'\n",
        "num_ids_2": 100,
        "num_ids_4": 252
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '7 4\\n'\n    '#######\\n'\n    '#P.GTG#\\n'\n    '#..TGG#\\n'\n    '#######\\n'\n) == '1'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 10\") == \"10\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13 50\\n____$$$_______$$$______$$$________$$$______$$$____\\n____$$$_______$$$______$$$________$$$______$$$____\\n_____$_________$________$__________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n_$____$$____$__$__$___$_$__$____$__$__$___$_$__$__\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$____$_____$___$____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n= solution(stdin)",
        "num_ids_2": 295,
        "num_ids_4": 295
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13 50') == '5'\nassert solution('100 50') == '100'\nassert solution('120 50') == '120'\nassert solution('130 50') == '130'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    '_$$$___$$_$$_$$___$$_$$___$$_$$_$$_$$_$$___$$_$$_$$_$$_$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '_$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$',\n    '__$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$$___$$',\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'\n\nprint(solution('''\n14 10\n_$_$$$__$__$__$$$_$$$___$__$$$__$$__$__$$$__$$$__$_\n_$__$$__$__$__$__$___$$__$___$__$__$__$__$__$___$$__\n__$$$__$$__$__$__$___$___$$__$___$__$__$__$___$$__$\n__$$$__$$__$__$___$___$$__$___$__$__$__$$__$___$$__\n__$$$__$$__$__$___$$__$__$$__$__$__$$__$__$$__$__$__\n_$$$__$$$__$__$$__$___$$__$___$$__$__$$__$__$$__$$__\n_$$$__$$$__$$__$__$___$$__$____$$__$__$$__$__$$__$__\n___$$$__$$__$__$$__$___$$__$____$$__$__$$__$__$$__$__\n___$$$__$$__$__$$__$___$$__$____$$__$__$$__$__$$__$__\n___$$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__$$__\n__$$$__$$__$$__$__$$__$___$$__$____$$__$__$$__$__$$__\n__$$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$__$__\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__$$\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n__$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n__$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n___$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__\n___$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__\n___$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__\n__$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__\n__$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__$\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n_$$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$__$$\n__$$__$$__$$__$$__$$__$___$$__$____$$__$__$$__$$__\n__$$$__$$__$$__$$__$$__$___$$__$____",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5 50\\n____$$$_______$$$______$$$______$$$______$$$____\\n____$$$_______$$$______$$$______$$$______$$$____\\n_____$_________$________$________$________$_____\\n___$_$_$_____$_$_$____$_$_$______$_$_$___\\n__$__$_$____$__$__$___$_$__$____$__$__$__\\n_$____$$____$__$__$___$_$__$____$__$__$__$_\\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____\\n_____$_$______$_$_____$_$_________$_$_____$_$_____\\n____$___$____$___$____$___$______$___$____$___$___\\n___$____$___$_____$___$____$___$_____$___$_____$__\\n__$_____$___$_____$___$_____$___$_____$___$_____$_\\n__$_____$___$_____$___$_____$___$_____$___$_____$_'\n    ) == '5'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('5\\n1') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n    '$',\n    '_',\n    '$',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_',\n    '_",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i like noodles\") == \"iyay like noodle antcay eatinlay\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay', 'Checker'\n\"\"\"\n\nimport re",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt').read()) == 'iyay antcay eakspay igpay atinlay'\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''pig latin\n''') == 'igpay atinlay'\n\n'''\npig latin\n'''\n'''\ni can speak pig latin\n'''\n'''\niyay antcay eakspay igpay atinlay\n'''\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open('test.txt').read()) == 'iyay antcay eakspay igpay atinlay'\n\"\"\"\n\nfrom itertools import groupby\n\nnums = input()\n\nnums = nums.split()\nwords = list(filter(lambda x: True if x.isalpha() else False, nums))\n\nfor i in range(len(words)):\n    if words[i].isupper():\n        i -= 1\n        words.insert(i, 'yay')\n    else:\n        words[i] = 'ay' + words[i]\n\nresult = \" \".join(words)\nprint(result)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('i cant speak pig latin') == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble', 'Anywhere is fine I guess'\nassert solution('''1\n1\nq\npotatoes\nsalad\n''') == 'Anywhere is fine I guess', 'Anywhere is fine I guess'\nassert solution('''5\n4\nabc\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"nymble\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nq\\npotatoes') == \"nymble\"\nassert solution('2\\nq\\npancakes') == \"Anywhere is fine I guess\"\nassert solution('3\\nnymble\\npancakes\\nsalad') == \"nymble\"",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n1\n1\n1\n1\n''') == 'Anywhere is fine I guess'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\nq\\npotatoes\") == \"nymble\"\nassert solution(\"2\\nq\\npotatoes\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\nq\\npancakes\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\nnymble\\nq\") == \"Anywhere is fine I guess\"\nassert solution(\"2\\nnymble\\nq\\npotatoes\") == \"nymble\"\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n\nassert solution('''\n5\n2\np\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'anywhere is fine I guess'\n\nassert solution('''\n2\n3\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'anywhere is fine I guess'\n\nassert solution('''\n1\n5\np\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n\nassert solution('''\n2\n2\np\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nq\\npea soup\\npancakes\\n\") == \"nymble\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n1\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n1\nq\npotatoes\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n3\n4\n\"\"\") == \"Anywhere is fine I guess\"\nassert solution(\"\"\"\n3\n5\n10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n4\n4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n5\n5\n\"\"\") == \"4\"\n\n\"\"\"\n\n)\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2\\n10') == '2'\nassert solution('0\\n1\\n2') == '1'\nassert solution('5\\n0\\n20') == '3'\n\nassert solution('100\\n100\\n100') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"2 5 8\") == \"3\"\nassert solution(\"1 3 10\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 0 15\n''') == '3'\nassert solution('''\n100 1 2\n''') == '2'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"5 20 0\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('1 0 3') == '1'\nassert solution('1 0 0') == '1'\nassert solution('1 0 1') == '2'\nassert solution('1 0 2') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 100\n2\n1''') == '1'\nassert solution('''5 0 15\n1\n1''') == '3'\nassert solution('''5 1 15\n3\n1''') == '2'\nassert solution('''5 2 100\n1\n1''') == '4'\nassert solution('''5 2 1\n4\n1''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 0 15''') == '3'\nassert solution('''1 2 3''') == '3'\nassert solution('''2 6 8''') == '2'\nassert solution('''4 9 10''') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 2 3\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 15\") == \"19\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"-1 -1\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1.5\"\nassert solution(\"-1 -1\") == \"1\"\nassert solution(\"4 5\") == \"7\"\n\"\"\"\nimport math\n\nR1, S = map(int, input().split())\n\nresult = (S + math.floor(R1/2)) // 2\n\nprint(result)",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 15\") == \"19\"\n\nThe number $S$ is called the mean of two numbers $R_1$ and $R_2$ if $S$ is equal to $(R_1+R_2)/2$. Mirko\u2019s birthday present for Slavko was two integers $R_1$ and $R_2$. Slavko promptly calculated their mean which also happened to be an integer but then lost $R_2$! Help Slavko restore $R_2$.\n\n-----Input-----\nThe first and only line of input contains two integers $R_1$ and $S$, both between $-1000$ and $1000$.\n\n-----Output-----\nOutput $R_2$ on a single line.",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 15') == '19'\nassert solution('11 -15') == '0'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '6'\nassert solution('15 8') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''11\n15''') == '19'\nassert solution('''-1\n2''') == '2'\nassert solution('''-1000\n-2000''') == '-1000'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 9\") == \"11\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"-1 0\") == \"0\"\nassert solution(\"-1 -1\") == \"0\"\nassert solution(\"-1 -1 -1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '19'\nassert solution('11 15') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 15') == '19'\nassert solution('20 100') == '50'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East West') == 'No'\nassert solution('North East West') == 'No'\nassert solution('North East West') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('North East') == 'Yes'\nassert solution('North South') == 'No'\nassert solution('South North') == 'Yes'\nassert solution('South South') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nNorth\nEast\nSouth\nEast\nNorth\nNorth\nNorth\nNorth\n''') == 'Yes'\n\nassert solution('''\nEast\nNorth\nWest\nNorth\nNorth\nSouth\nEast\nEast\nNorth\nNorth\n''') == 'Yes'\n\nassert solution('''\nNorth\nEast\nEast\nNorth\nEast\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North East South\") == \"No\"\nassert solution(\"North South East\") == \"Yes\"\nassert solution(\"North North South South\") == \"Yes\"\nassert solution(\"North North North East\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"North South East\"\n    \"East South East\"\n    \"South South East\"\n) == \"Yes\"\n\nassert solution(\n    \"North South East\"\n    \"East North South\"\n    \"North South East\"\n) == \"Yes\"\n\nassert solution(\n    \"North South East\"\n    \"East South East\"\n    \"North North East\"\n) == \"No\"\n\nassert solution(\n    \"North South East\"\n    \"East South East\"\n    \"North North East\"\n) == \"No\"\n\nassert solution(\n    \"North South East\"\n    \"East North South\"\n    \"North North East\"\n) == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West South East') == 'No'\nassert solution('North East South East') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"South West East\") == \"Yes\"\nassert solution(\"North West South East\") == \"Yes\"\nassert solution(\"North South West East\") == \"Yes\"\nassert solution(\"North East South West\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('North South West') == 'No'\nassert solution('North East West') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('North South East South East') == 'No'\nassert solution('North East South East') == 'No'\nassert solution('North') == 'No'\nassert solution('North North North North North North North') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 16\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 16\\nagain\\npirpumsemoystoal\\n\") == \"marywasnosyagain\"\nassert solution(\"3 5\\nmary\\nalice\\n\") == \"alice\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal\n''') == \"marywasnosyagain\"\nassert solution('''5 8\na\nm\nr\ny\np\nu\nm\ne\n''') == \"marywasnosyagain\"\n\"\"\"\nThe smallest number needed to encrypt is $1$ and the largest is $26$.\nThe alphabet contains $26$ letters and the encoding method is linear.\nThe algorithm is based on the idea that the key is a permutation of the alphabet.\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 16 \\n again \\n pirpumse','marywasnosyagain') == 'again'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 16 \\n again\\n pirpumse\\n') =='marywasnosyagain'\nassert solution('5 7 \\n first\\n second\\n') == 'firstsecond'\nprint('Congratulations, have a nice day!')\n'''\n\nimport time",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(t_stdin) == \"marywasnosyagain\"\nassert solution(f_stdin) == \"mariaszoxaayytoal\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\nassert solution('''\n5 9\nejfubpyqyol\n''') == 'ehjnkoumv'\nassert solution('''\n10 100\nsdcrfvwbrjllt\n''') =='mfjwxcvbglhlr'\nassert solution('''\n11 6\nehthgtmpsyhxb\n''') =='sjavmqykysx'\nassert solution('''\n12 5\nabhlddobcxz\n''') == 'lspoibcszf'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 3\nagain\npirpumsemoystoal\n\"\"\") == \"marywasnosyagain\"\n\"\"\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 16\\n\"\n                \"again\\n\"\n                \"pirpumsemoystoal\") == \"marywasnosyagain\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Either\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Even', 'Wrong result'\nassert solution('3') == 'Odd', 'Wrong result'\nassert solution('9') == 'Either', 'Wrong result'\n\n'''\nimport math",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Even'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Either'\nassert solution('5') == 'Even'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Odd\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Either\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Odd\"\nassert solution(\"4\") == \"Odd\"\nassert solution(\"5\") == \"Odd\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Even'\nassert solution('3') == 'Odd'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Even\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Either\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'Either'\nassert solution('1') == 'Either'\nassert solution('10') == 'Even'\nassert solution('100') == 'Odd'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Even'\nassert solution('4') == 'Odd'\nassert solution('5') == 'Either'\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Even'\nassert solution('3') == 'Odd'\n\nassert solution('1') == 'Either'\nassert solution('0') == 'Either'\n\nprint(solution('5'))",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '2'\nassert solution('1') == '1'\nassert solution('-1234567') == '5'\nassert solution('12345678') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '1'\nassert solution('314') == '3'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"314\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5926\") == \"4\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '5'\nassert solution('100\\n10\\n100\\n50\\n50') == '4'\nassert solution('1\\n3\\n2\\n7\\n100') == '4'\nassert solution('1\\n7\\n7\\n60\\n50') == '3'\nassert solution('1\\n7\\n7\\n60\\n50\\n1') == '5'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897\\n') == '3\\n1\\n4\\n1'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"314\") == \"3\"\nassert solution(\"1\\n314\") == \"3\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('314') == '3'\nassert solution('5926') == '4'\nassert solution('5') == '1'\nassert solution('35897') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'\n\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n10\n314\n1\n5926\n5\n35897\n\"\"\") == \"3\"\nassert solution(r\"\"\"\n100\n314\n1\n5926\n5\n35897\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n10000\n314\n1\n5926\n5\n35897\n\"\"\") == \"5\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\nt\nt\nk\n''') == 'yes'\n\nassert solution('''10 3\nt\nt\nk\n''') == 'no'\n\nassert solution('''5 3\nt\nt\nk\n''') == 'no'\n\nassert solution('''10 3\nt\nt\nk\n''') == 'yes'\n\nassert solution('''6 3\nt\nt\nt\nw\nw\n''') == 'no'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 3\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n5 2\nr i\no p\nc t\nt r\nn o\n''') == 'no'\nassert solution('''\n6 4\ni a\na s\nt i\nt s\no t\nr e\ns t\n''') == 'no'\nassert solution('''\n4 4\nc i\nt t\ne i\nr e\n''') == 'no'\nassert solution('''\n10 3\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 4\nt t\ne e\ni t\n''') == 'yes'\nassert solution('''\n3 4\na a\nk p\n''') == 'no'\nassert solution('''\n3 4\nt r\ne e\ni t\n''') == 'no'\nassert solution('''\n1 4\nt r\n''') == 'yes'\nassert solution('''\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nwe we\\ncan the\\nwork people\\nit of\\nthe out the\\n\") == \"yes\"\nassert solution(\"9 5\\nk l\\nr o\\nt e\\nt i r\\nc t\\no t\\nk t\\nh h\\nout o\\nt he\\ncan the\\nwork people\\nthe o\\nt the\\nt he\\nout the\\nt he\\nout the\\n\") == \"yes\"\nassert solution(\"9 5\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nwe we\\nc o\\nwork p\\ncan the\\nit of\\nout the\\nthe out the\\n\") == \"no\"\n",
        "num_ids_2": 135,
        "num_ids_4": 200
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9 5\") == \"yes\"\nassert solution(\"c t\") == \"no\"\nassert solution(\"i r\") == \"no\"\nassert solution(\"k p\") == \"yes\"\nassert solution(\"o c\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3\\ncc c\\nt') == 'yes'\nassert solution('2 3\\nt i\\nc r\\n') == 'no'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'yes\\n'\nassert solution('9 5') == 'no\\n'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == \"yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1 1\nc\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == 'yes'\n\nassert solution(\n\"\"\"\n9 5\nt i r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == 'no'\n\nassert solution(\n\"\"\"\n10 1\nt i r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == 'no'\n\nassert solution(\n\"\"\"\n10 2\nw i r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == 'yes'\n\nassert solution(\n\"\"\"\n10 3\nt i r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == 'yes'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 2\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == \"2\"\nprint(\"Solution:\")\nprint(solution(input))\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\") == \"2\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\") == \"4\"\n",
        "num_ids_2": 60,
        "num_ids_4": 105
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\ncarrots?\\nbunnies\\n\") == \"1\"\nprint(\"First Test Passed!\")\n\nassert solution(\"2 4\\ncarrots?\\ncat\\nbunnies\\ncat\\n\") == \"3\"\nprint(\"Second Test Passed!\")\n\nassert solution(\"10 5\\ncarrots?\\ncat\\nbunnies\\ncat\\ncat\\ncat\\ncat\\ncat\\ncat\\ncat\\ncat\\n\") == \"10\"\nprint(\"Third Test Passed!\")\n\nassert solution(\"2 2\\ncarrots?\\ncat\\ncat\\n\") == \"2\"\nprint(\"Fourth Test Passed!\")\n\nassert solution(\"2 10\\ncarrots?\\ncat\\ncat\\n\") == \"20\"\nprint(\"Fifth Test Passed!\")",
        "num_ids_2": 50,
        "num_ids_4": 123
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"carrots?\nbunnies\n\"\"\") == \"1\"\nassert solution(\"\"\"carrots?\nbunny\n\"\"\") == \"0\"\nassert solution(\"\"\"carrots?\ncarrots\n\"\"\") == \"1\"\nassert solution(\"\"\"carrots?\ncarrots\n\"\"\") == \"0\"\nassert solution(\"\"\"carrots?\ncarrots\nbunnies\n\"\"\") == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 1\\nbunnies?') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 100') == '1'\nassert solution('1 100 ') == '100'\nassert solution('1 100 ') == '100'\nassert solution('1 1000') == '1000'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\ncarrots?') == '1'\nassert solution('2 1\\nbunnies?') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\ncarrots?') == '1'\nassert solution('2\\nbunnies?') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|') == 'White: Rr,Bb,Qq,Nn,Kk,Bb,Qq,Rr,Kq,Nn,Bb,Nn,Bb,Kk,Nn,Kq,Bq,Nn,Bq,Qq,Bq,Nn,Qn,Bq,Rq,Nq,Nn,Rr,Qq,Rr,Qq,Bb,Rr,Nq,Bq,Qn,Qn,Rn,Nn,Rq,Nq,Qq,Nq,Rr,Qq,Rq,Nr,Kq,Kq,Kq,Kr,Nn,Kq,Nq,Nq,Nn,Kr,Kr,Kq,Nr,Rn,Rq,Rq,Nn,Nq,Rr,Qq,Rr,Qq,Rr,Qr,Rr,Qq,Rq,Nq,Qq,Rn,Qn,Nq,Nq,Rn,Nr,Rq,Nr,Rr,Nq,Nq,Qn,Qn,Qn,Qn,Nr,Nr,Nq,Nq,Nq,Nq,Nq,Nq,Nr,Nr,Nr,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn,Qn",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|') == 'White: Kqr,Bkr,Qkr,Bkn,Nkr,Nrn,Rrn\\nBlack: Kqb,Bqb,Qqb,Bqn,Nqn,Nrn,Rrn'\n",
        "num_ids_2": 218,
        "num_ids_4": 218
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: rr1,bb1,qq1,kq1,nn1,rr2,bb2,qq2,kq2,nn2\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: pp1,pp2,pp3,pp4,pp5,pp6,pp7,pp8\"\nassert solution(\"|...|:::|...|:::|...|:::|...|:::|...|\") == \"White: a1,b1,c1,d1,e1,f1,g1,h1,a2,b2,c2,d2,e2,f2,g2,h2\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|...|\") == \"White: a3,b3,c3,d3,e3,f3,g3,h3,a4,b4,c4,d4,e4,f4,g4,h4\"\n",
        "num_ids_2": 148,
        "num_ids_4": 293
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b4,f4,g4,h4,a5,f5,g5,h5,a6,e6,b6,f6,g6,h6,a7,f7,g7,h7,a8,e8,b8,f8,g8,h8\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,a6,b6,c6,d6,e6,f6,g6,h6,a5,e5,b5,f5,g5,h5,a4,e4,b4,f4,g4,h4,a3,e3,b3,f3,g3,h3,a2,e2,b2,f2,g2,h2,a1,e1,b1,f1,g1,h1\\n'''):\n    pass\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n    ) == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n'''\n\nassert solution(\n'''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n'''\n    ) == '''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n    '''\n    ) == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Bg5,Nf6,Bf7,Bg7,a8,e8,f8,g8,h8,a9,e9,f9,g9,h9,a10,e10,f10,g10,h10,a11,e11,f11,g11,h11,a12,e12,f12,g12,h12,a13,e13,f13,g13,h13,a14,e14,f14,g14,h14,a15,e15,f15,g15,h15,a16,e16,f16,g16,h16,a17,e17,f17,g17,h17,a18,e18,f18,g18,h18,a19,e19,f19,g19,h19,a20,e20,f20,g20,h20,a21,e21,f21,g21,h21,a22,e22,f22,g22,h22,a23,e23,f23,g23,h23,a24,e24,f24,g24,h24,a25,e25,f25,g25,h25,a26,e26,f26,g26,h26,a27,e27,f27,g27,h27,a28,e28,f28,g28,h28,a29,e29,f29,g29,h29,a30,e30,f30,g30,h30,a31,e31,f31,g31,h31,a32,e32,f32,g32,h32,a33,e33,f33,g33,h33,a34,e34,f34,g34,h34,a35,e35,f35,g35,h35,a36,e36,f36,g36,h36,a37,e37,f37,g37,h37,a38,e38,f38,g38,h38,a39,e39,f39,g39,h39,a40,e40,f40,g40,h40,a41,e41,f41,g41,h41,a42,e42,f42,g42,h42,a43,e43,f43,g43,h43,a44,e44,f44,g44,h44,a45,e45,f45,g45,h45,a46,e46,f46,g46,h46,a47,e47,f47,g47,h47,a48,e48,f48,g48,h48,a49,e49,f49,g49,h49,a50,e50,f50,g50,h50,a51,e51,f51,g51,h51,a52,e52,f52,g52,h52,a53,e53,f53,g53,h53,a54,e54,f54,g54,h54,a55,e55,f55,g55,h55,a56,e56,f56,g56,h56,a57,e57,f57,g57,h57,a58,e58,f58,g58,h58,a59,e59,f59,g59,h59,a60,e60,f60,g60,h60,a61,e61,f61,g61,h61,a62,e62,f62,g62,h62,a63,e63,f63,g63,h63,a64,e64,f64,g",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n\n'''\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|..|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\"\"\"\n    ) == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b3,d4,f4,h4,a5,e5,b5,d5,f5,h5,a6,e6,b6,d6,f6,h6,a7,e7,b7,d7,f7,h7,a8,e8,b8,d8,f8,h8,a9,e9,b9,d9,f9,h9,a10,e10,b10,d10,f10,h10,a11,e11,b11,d11,f11,h11,a12,e12,b12,d12,f12,h12,a13,e13,b13,d13,f13,h13,a14,e14,b14,d14,f14,h14,a15,e15,b15,d15,f15,h15,a16,e16,b16,d16,f16,h16,a17,e17,b17,d17,f17,h17,a18,e18,b18,d18,f18,h18,a19,e19,b19,d19,f19,h19,a20,e20,b20,d20,f20,h20,a21,e21,b21,d21,f21,h21,a22,e22,b22,d22,f22,h22,a23,e23,b23,d23,f23,h23,a24,e24,b24,d24,f24,h24,a25,e25,b25,d25,f25,h25,a26,e26,b26,d26,f26,h26,a27,e27,b27,d27,f27,h27,a28,e28,b28,d28,f28,h28,a29,e29,b29,d29,f29,h29,a30,e30,b30,d30,f30,h30,a31,e31,b31,d31,f31,h",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Kd1,Rd1,Qc1,Qb1,Nb1,Nn1,Ra1,Rh1,Bc1,Bf1,Nc1,Ne1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Kc8,Qd8,Rf8,Qg8,Nc8,Nc6,Nf6,Nn7,Nb6,Ne7,Kc7,Qb7,Qh7,Qg7,Qf7,Ne7,Ne6,Kf6,Kg6,Kh6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 250,
        "num_ids_4": 250
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('5 4') == 'Your wish is granted!'\nassert solution('8 5') == 'Your wish is granted!'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\n\nSample Input:\n9 5\nSample Output:\nYour will be a flying monkey!\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\",\"Your wish is granted!\",\"You will become a flying monkey!\"\nassert solution(\"4 5\") == \"You will become a flying monkey!\",\"Your wish is granted!\",\"You will become a flying monkey!\"\nassert solution(\"1 6\") == \"Your wish is granted!\",\"Your wish is granted!\",\"You will become a flying monkey!\"\n",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 9') == 'Your wish is granted!'\nassert solution('9 9') == 'Your wish is granted!'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"6 4\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n\") == \"Your wish is granted!\"\nassert solution(\"8 3\\n\") == \"You will become a flying monkey!\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('4 4') == 'You will become a flying monkey!'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3') == \"Your wish is granted!\"\nassert solution('11 4') == \"Your wish is granted!\"\nassert solution('8 12') == \"Your wish is granted!\"\n\"\"\"\n\na = input().split()\na = [int(i) for i in a]\nn, k = a",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3\\n') == 'Your wish is granted!'\nassert solution('18 8\\n') == 'You will become a flying monkey!'\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n1 3 5 9\n''') == 'Your wish is granted!'\nassert solution('''\n8 7\n7 1 4 2\n''') == 'You will become a flying monkey!'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"16\") == \"16\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Old MacDonald had a farm, and on that farm he had a square-shaped pasture, and on that pasture he had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy?''') == '16'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == '16'\nassert solution('123456789') == '10'\nassert solution('1000000') == '2'\nassert solution('0') == '1'\n'''\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n16') == '16'\nassert solution('1\\n16') == '16'\nassert solution('100\\n1234') == '1234'\n\"\"\"\nimport math\n\na = int(input())\n\nfence_length = math.ceil(a/16)*16\nprint(fence_length)",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''Old MacDonald had a farm, and on that farm she had a square-shaped pasture, and on that pasture she had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy? ''') == '16'\nassert solution('''Old MacDonald had a farm, and on that farm she had a square-shaped pasture, and on that pasture she had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy? ''') == '30'\nassert solution('''Old MacDonald had a farm, and on that farm she had a square-shaped pasture, and on that pasture she had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy? ''') == '85'\nassert solution('''Old MacDonald had a farm, and on that farm she had a square-shaped pasture, and on that pasture she had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy? ''') == '85'\nassert solution('''Old MacDonald had a farm, and on that farm she had a square-shaped pasture, and on that pasture she had a cow that was prone to escape. So now Old MacDonald wants to set up a fence around the pasture. Given the area of the pasture, how long a fence does Old MacDonald need to buy? ''') == '115'\n",
        "num_ids_2": 154,
        "num_ids_4": 308
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == '16'\nassert solution('16.1') == '16'\nassert solution('16.00') == '16'\nassert solution('16.00001') == '16'\nassert solution('16.000001') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('16') == '16'\nassert solution('123') == '123'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == \"16\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16') == '16'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '16'\nassert solution('10') == '36'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"4\"\nprint('PASSED!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4'\nassert solution('2 3 4 5 6\\n1 2 3 4 5 6') == '6'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10\n30 50\n20\n2\n''') == '1', \"First\"\n\nassert solution('''\n6\n180\n45 30 55 20 80 20\n30 50\n20\n2\n''') == '4', \"Second\"\n\nassert solution('''\n1\n10\n10\n''') == '1', \"Third\"\n\nassert solution('''\n2\n1\n1\n''') == '1', \"Fourth\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nprint(\"You're all set!\")\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20\\n') == '4'\nassert solution('1 1\\n1\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 5 10') == '2'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 180\\n\"\n    \"45 30 55 20 80 20\"\n) == \"4\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''6 100\n1 2 3 4 5 6''') == '6'\nassert solution('''6 1\n1 2 3 4 5 6''') == '5'\nassert solution('''6 1\n1 2 3 4 5''') == '5'\nassert solution('''6 1\n1''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3\n    25\n    10\n    \"\"\") == \"79\"\n\nassert solution(\n    \"\"\"\n    10\n    16\n    23\n    11\n    14\n    15\n    16\n    16\n    16\n    16\n    \"\"\") == \"80\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"60\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n21\") == \"79\"\nassert solution(\"3\\n34\") == \"79\"\nassert solution(\"4\\n18\") == \"89\"\nassert solution(\"5\\n9\") == \"89\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '120'\nassert solution('7') == '1420'\nassert solution('10') == '17980'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n4\\n6\\n') == '79\\n'\nassert solution('4\\n8\\n15\\n19\\n') == '97\\n'\nassert solution('10\\n100\\n') == '105\\n'",
        "num_ids_2": 46,
        "num_ids_4": 63
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n12\\n10\\n20') == '80'\nassert solution('5\\n40\\n30\\n20\\n50') == '50'\nassert solution('2\\n30\\n20') == '60'\nassert solution('1\\n50') == '60'\nassert solution('2\\n30') == '50'\n",
        "num_ids_2": 41,
        "num_ids_4": 70
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3'\nassert solution('4') == '12'\nassert solution('5') == '55'\n\"\"\"\n\nfrom math import factorial",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('8 3 1 5') == '4 0 0'\nassert solution('20 3 2 3') == '3 0 0'\nassert solution('20 3 2 3') == '0 1 0'\nassert solution('16 3 2 2') == '0 1 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('1000000000 3 3 0') == '1000000000 3 3 0'\nassert solution('2 3 0') == '1 1 0'\nassert solution('1000000000 0 0') == '0 0 0'\nassert solution('0 0 0') == '0 0 0'\n",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 3 3 4\\n\"\n    \"0 1 4\\n\"\n    ) == \"2 3 0\"\n\"\"\"\n\nimport math\nimport random\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 3 4\n0 1 4\n''') == '2 3 0'\n\nassert solution('''\n5 3 3 4\n0 1 4\n''') == 'impossible'\nassert solution('''\n5 3 3 4\n0 1 4\n1 2 3\n1 3 4\n1 4 5\n''') == '1 3 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 1 1\n1\n1 1 1\n1 2 1\n1 3 1\n1 4 2\n2 1 1\n1 1 2\n2 1 2\n1 2 3\n3 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 2\n1 4 2\n2 1 1\n1 1 2\n1 2 3\n1 3 2\n1 4 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 2 2\n1 1 2\n1 2 3\n1 3 3\n2 3 1\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3\n2 3 2\n1 1 2\n1 2 3\n1 3 3\n2 1 1\n1 1 2\n1 2 3\n1 3 3\n2 2 1\n1 1 2\n1 2 3\n1 3 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '2 3 0'\nassert solution('3 3 3 4') == '2 0 1'\nassert solution('3 3 3 4') == '4 3 0 1'\nassert solution('1 2 3 4') == '1 0 0 1'\nassert solution('5 3 3 4') == '1 4 0 2 3'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 3 3 4\\n\"\n    \"0 1 4\\n\"\n    ) == \"2 3 0\"\nassert solution(\n    \"2 2 2 2\\n\"\n    \"0 1 2\\n\"\n    ) == \"1 1 2\"\nassert solution(\n    \"10 10 10 10\\n\"\n    \"0 1 2 3 4 5 6 7 8 9 10\\n\"\n    ) == \"9 9 9 0 1 1 1 2 2 1 3 3\"\nassert solution(\n    \"7 3 6\\n\"\n    \"2 4 5\\n\"\n    \"1 2 3\\n\"\n    \"1 1 1\\n\"\n    \"1 2 1\\n\"\n    \"1 4 1\\n\"\n    \"1 5 1\\n\"\n    \"1 6 1\\n\"\n    \"1 7 1\\n\"\n    \"1 8 1\\n\"\n    ) == \"1 2 4 2 1 1 1 1 2 2 1 3 3\"\nassert solution(\n    \"20 20 20\\n\"\n    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\"\n    ) == \"18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('5 3 2 4') == '2 0 1'\nassert solution('10 10 10 10') == '1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('10 10 10 10 1 1 1 1 1 1') == '0 0 1 1 1 0 0 0 0 0 0 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 85
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('5 3 3 5') == '4 3 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 1 2 2 2 7') == '1 0 1 0 0 0 1'\nassert solution('0 1 1 1 1 1 1 1') == '1 0 1 1 1 1 1 1'\nassert solution('0 0 0 0 0 0 0 0') == '0 0 0 0 0 0 0 0'\nassert solution('0 0 0 0 0 0 0 0 0 0 0') == '0 0 0 0 0 0 0 0 0'",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 0 0 0 0 1\") == \"1 1 1 1 1 7\"\nassert solution(\"0 0 0 0 0 0\") == \"1 1 1 1 1 7\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 40,
        "num_ids_4": 1777
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"1 -1 2 2 2 2 -1\") == \"0 0 0 0 0 1\"\nassert solution(\"0 -1 1 -1 -1 -1 1 -1\") == \"0 0 0 0 0 1\"\nassert solution(\"0 0 1 1 2 2\") == \"0 0 0 0 1 2\"\nassert solution(\"-1 -1 2 1 2\") == \"0 0 0 0 1 2\"\n",
        "num_ids_2": 43,
        "num_ids_4": 90
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\n'''",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 0 0 0 0 1\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 1 2 2 2 7''') == '1 0 0 0 0 1'\nassert solution('''1 3 3 4 5 7''') == '1 0 0 0 0 1'\nassert solution('''0 0 0 0 0 0''') == '0 0 0 0 0 0'\n'''\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"0 1 2 2 2 7\nSample Input 2:\n1 2 3 4 5 6 7\nSample Output 2:\n0 0 0 0 0 1\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 0 0 0 0 1\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n\nSample Input:\n2\nabcdef 1.0\nxyz123 4.0\nSample Output:\n1.0\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 0.8\\n0.5 0.2 0.1\\n') == '2.3199'\n\n''''''\n\n\n'''\nWorst Case: N = 500, N = 500 * 1.0 = 500\nBest Case: N = 100, N = 1.0\n'''",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(''.join(sample_input)) == '1.3334'\nassert solution(''.join(test_input)) == '2.0004'\n'''\n\nfrom math import exp, log",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n12345\\n0.5') == '0.5'\nassert solution('2\\nqwerty\\n0.5') == '1.0000'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n123456 0.6666\nqwerty 0.3333\nqwerty 1.0000''') == '0.3333'\nprint(\"All test cases passed\")\n\n'''\n--- Part Two ---\nNow you have a list of passwords that you know is correct, but you don't know the password in which they were found.\n\nThe list of passwords contains a bunch of newline-delimited password lists, and each password list has two lines. The first line is the password itself, and the second line is the password's probability that the user is correct.\n\nWrite a function that takes the correct password and a list of incorrect passwords, and returns the best password in the list, according to the probability distribution of the given password.\n\nYou can assume that there are no duplicate passwords in the given list, and that the sum of all passwords in the list equals to one.\n\nThe sum of probabilities of all passwords in the given list should be 1.\n\nIt is guaranteed that the password is the correct one.\n\nIf the given password is not the correct one, return the second-highest probability password in the given list. If there are no second-highest probabilities, then return the second-lowest probability password.\n\nNote that the given password and the correct password have equal probabilities.\n\nSample Input:\n2\n123456 0.6666\nqwerty 0.3333\nSample Output:\nqwerty\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\nassert solution(\"\"\"\n1\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3333\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\nassert solution('5\\n123467 0.6667\\nqwerty 0.3334\\nqwerty 0.3667\\nqwerty 0.1167\\n') == '1.3167'\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n\n'''",
        "num_ids_2": 46,
        "num_ids_4": 61
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.1\\n
        "num_ids_2": 1616,
        "num_ids_4": 1616
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(f'2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3334'\nassert solution(f'1\\nqwerty 0.3334\\n') == '0'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n1 2 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 1\n5 5\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2\\n') == '1\\n'\nassert solution('1 1 2 2\\n') == '1\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 4') == '1'\nassert solution('1\\n1 2 4') == '2'\nassert solution('1\\n1 2 4\\n1 2 4') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 50
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''4\n3\n2\n1''') == '2'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 2 3') == \"1\"\nassert solution('3 1\\n1 2 3 4 5') == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n1 2 4\n''') == '1'\nassert solution('''\n100 1\n2 3 4 5\n''') == '1'\nassert solution('''\n100 2\n3 4 5 6\n''') == '3'\nassert solution('''\n100 3\n5 6 7 8\n''') == '6'\nassert solution('''\n100 4\n8 7 6 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 1\n4 1\n4 1\n4 1\n''') == '1'\nassert solution('''\n5 1\n4 1\n4 2\n4 3\n4 4\n''') == '4'\nassert solution('''\n100 1\n1\n''') == '1'\nassert solution('''\n100 1\n1\n''') == '1'\nassert solution('''\n10 1\n1\n''') == '1'\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n1 2\\n') == '1'\nassert solution('1 1\\n1 2\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '2'\nassert solution('5 1') == '1'\nassert solution('10 1') == '1'\nassert solution('10 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '1'\nassert solution('2 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\nG:                                                                \nF: ----------------------------------------------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''G:\nF: -----------------------------------------*-------------\nE:       *   *          *             *   *                \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('27') == 'G:       \\nF: -------------------------------------*\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*---------------- \\nC: * *     *      * *     **    * *           *         ** ** \\nB: --------------------------**-----------------*-----*------ \\nA: \\ng: -----------------------------------------------*---------- \\nf: \\ne: ---------------------------------------------------------- \\nd: \\nc: \\nb: \\na: ---------------------------------------------------------- \\n'",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('27') == 'G:       F: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                           \\ne: ----------------------------------------------------------\\nd:                                           \\nc:                                           \\nb:                                           \\na: ----------------------------------------------------------\\n'\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"27\") == \"G:      *      *      *      *    *      *      *      *      *    *      *      *      *      *      *      *      *      *      *\\nF:      *      *      *      *    *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nE:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nD:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nC:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nB:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nA:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\ng:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nf:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\ne:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nd:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nc:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\nb:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\na:      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *      *\\n\"\n",
        "num_ids_2": 589,
        "num_ids_4": 589
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''G:\nF:-------------------------------------*--------------------\nE:       *   *          *             *   *                \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nC D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''G:                                    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                   \nc:                                                   \nb:                                                   \na: ----------------------------------------------------------'''\nassert solution('''\n2\nE D E D2 E D E D2 E D E D2 E D E D2\n''') == '''g: ----------------------------------\nf:                    *        *        *        *\ne: ------------------*-------*-------*-------*-------------\nd:                    *        *        *        *\nc: ------------------*-------*-------*-------*-------------\nb:                    *        *        *        *\na: ------------------*-------*-------*-------*-------------'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"27\") == \"\"\"G:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\nassert solution(\"30\") == \"\"\"G:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                            \ne: ----------------------------------------------------------\nd:                                                            \nc:                                                            \nb:                                                            \na: ----------------------------------------------------------\"\"\"\nassert solution(\"29\") == \"\"\"G:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\"\"\"\n\n\"\"\"\n%%\n3\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n\nG:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\n\nG:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\n\nG:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\n\nG:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\n\"\"\"\n\n\"\"\"\n---\n\nG:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------\n\nG:    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"G:    F: \\nE:    *\\nD: ----*-------*-----\\nC: * *    *    * *    **\\nB: --------------------------*-----*------\\nA:                                \\ng: -----------------------------------------------*----------\\nf:                                    \\ne: ----------------------------------------------------------\\nd:                                    \\nc:                                    \\nb:                                    \\na: ----------------------------------------------------------\"\nassert solution(\"1\") == \"G:    F: \\nE:    *\\nD:    *\\nC:    *\\nB:    *\\nA:    *\"\n\nimport math",
        "num_ids_2": 142,
        "num_ids_4": 142
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'possible'\nassert solution('1 2 3') == 'impossible'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 1 1 1 1\n1 2 1 3 4 5\n4 2 1 3 4 5\n1 3 2 1 4 5\n1 4 3 2 1 5\n4 1 1 3 2 5''') == 'possible'\nassert solution('''5\n1 1 1 1 1\n1 2 1 3 4 5\n4 2 1 3 4 5\n1 3 2 1 4 5\n1 4 3 2 1 5\n4 1 1 3 2 5''') == 'impossible'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'possible'\nassert solution('1 1 1') == 'impossible'\nassert solution('3 1 1') == 'possible'\nassert solution('3 2 1') == 'impossible'\nassert solution('3 1 2') == 'impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2 1\") == \"impossible\"\nassert solution(\"2\\n2 2 1\") == \"impossible\"\nassert solution(\"2\\n2 2 1\") == \"impossible\"\n\n###\n\nl1 = [int(x) for x in stdin.strip().split()]\nl2 = [int(x) for x in stdin.strip().split()]",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'impossible'\nassert solution('3') == 'possible'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n4 5 6\") == \"possible\"\nassert solution(\"1\\n3 5 2\\n\") == \"impossible\"\nassert solution(\"2 3 1\\n4 5 2\\n\") == \"possible\"\nassert solution(\"5 4 3 1\\n1 2 3 4\\n5 6 7 8\\n1 2 3 4 5\\n\") == \"impossible\"\nassert solution(\"1\\n2 2 2\\n\") == \"impossible\"",
        "num_ids_2": 36,
        "num_ids_4": 91
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == 'possible'\nassert solution('2 1 1\\n1 1 1\\n1 1 1\\n') == 'impossible'\nassert solution('10 1 1\\n1 1 1\\n1 1 1\\n') == 'impossible'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n2 3\\n1 1\\n2 2\\n1 1\\n2 3') == 'possible'\nassert solution('2\\n1 2\\n3 4\\n5 6\\n3 1\\n2 1\\n1 5\\n1 4\\n1 2\\n1 1\\n1 3\\n2 3\\n1 1\\n3 1\\n1 1\\n1 3\\n1 1\\n3 1\\n1 5\\n1 5\\n2 1\\n1 5\\n2 5\\n2 3\\n2 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n2 1\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n2 1\\n1 1\\n1 5\\n1 1\\n2 3\\n1 1\\n1 1\\n1 3\\n2 3\\n1 1\\n2 1\\n1 1\\n1 2\\n2 1\\n1 1\\n1 1\\n1 3\\n1 2\\n1 1\\n1 1\\n1 2\\n2 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 3\\n1 3\\n1 1\\n1 1\\n1 1\\n1 5\\n1 2\\n1 1\\n1 1\\n1 3\\n1 1\\n2 1\\n1 1\\n1 2\\n1 1\\n1 3\\n1 2\\n2 3\\n1 1\\n2 3\\n1 2\\n2 3\\n2 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 3\\n2 3\\n1 1\\n2 3\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n",
        "num_ids_2": 1658,
        "num_ids_4": 1658
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1 1\n1 2 3\n2 2 2\n''') == 'possible'\n\nassert solution('''\n3\n1 2 1\n3 1 2\n4 1 3\n''') == 'impossible'\n\nassert solution('''\n3\n1 2 1\n2 1 3\n4 1 2\n''') == 'impossible'\n\nassert solution('''\n3\n1 2 1\n2 1 3\n1 4 1\n''') == 'impossible'\n\nassert solution('''\n1\n1\n1\n''') == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n3\n1 1 3\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n2 2\n\"\"\") == \"impossible\"\n\n'''\nfrom math import sqrt\nn = int(input())\nsticks = list(map(int, input().split()))\ns = sum(sticks)\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == '3'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('10\\n3 3 3 2 1 2 2 1 1 3') == '2'\nassert solution('10\\n4 3 3 2 1 2 1 2 1 3') == '1'\nassert solution('10\\n4 3 3 2 1 2 1 1 1 3') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('2') == '1'\nassert solution('100') == '100'\nassert solution('-7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n'''\nfrom collections import deque",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('10\\n2 1 2 3 1 4 4 2 3') == '4'\nassert solution('20\\n2 1 2 2 3 2 3 2 1 2 2 2 1 2 1') == '4'\n\n'''",
        "num_ids_2": 43,
        "num_ids_4": 70
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('6\\n2 1 3 2 4 1 3') == '2'\nassert solution('6\\n7 3 1 4 2 3') == '3'\n",
        "num_ids_2": 41,
        "num_ids_4": 59
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('2\\n') == '2'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'ASHMEADE'\nassert solution('4') == 'ASHMEADE'\nassert solution('5') == 'ASHMEADE'\nassert solution('6') == 'ASHMEADE'\nassert solution('7') == 'ASHMEADE'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'ASHMEADE'\nassert solution('4') == 'ASHMEADE BLAKE POWELL'\nassert solution('5') == 'ASHMEADE BLAKE POWELL CARTER FRATER'",
        "num_ids_2": 29,
        "num_ids_4": 50
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == '35.54'\nassert solution(\"4\") == '2.86'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n\n'''\nThe coach of the national athletics team would like to have each sprint relay represent a small country in terms of the leg it would need to take to represent the national team.\n\nIn the nation, such a relay is called a sprint relay. If the team is to represent their national team, they are chosen at random from among the runners available in the relay. If the team is to represent another nation, they are selected at random from among those that are not yet on the relay. Each runner may be selected at most once, and the least expensive one may be chosen.\n\nGiven the times for the runners to run the legs of the relay, determine the name of the runner that runs the $4$ fastest runners and the name of the runner that runs the $100$ m runners.\n\nInput\nThe input is a line containing the times for each runner to run the legs of the relay in the form of two space separated integers, $a_ 1$ \\le a_ 2 \\le a_ 3 \\le a_ 4 \\le a_ 5 \\le a_ 6 \\le a_ 7 \\le a_ 8$, and the times for each runner to run the legs of the relay in the form of two space separated integers, $b_ 1$ \\le b_ 2 \\le b_ 3 \\le b_ 4 \\le b_ 5 \\le b_ 6 \\le b_ 7 \\le b_ 8$. Each runner\u2019s name consists of between $2$ and $20$ (inclusive) uppercase letters \u2018A\u2019-\u2018Z\u2019, and no two runners have the same name.\n\nOutput\nThe output is the runner\u2019s name, followed by the name of the runner that runs the fastest, followed by the names of the runners that run the second fastest, followed by the names of the runners that run the third fastest, and so on. The runner that runs the fastest should be displayed first.\n\nInput / Output\nInput\nThe input consists of $n$ lines, each line containing two space separated integers, $a_ i$ \\le a_ i \\le a_ j$ \\le a_ i \\le a_ k$, and $b_ i$ \\le b_ i \\le b_ j$ \\le b_ i \\le b_ k$.\n\nOutput\nThe output consists of lines of the form:\n\nrun_a_i\nrun_a_j\nrun_a_k\n...\nrun_b_i\nrun_b_j\nrun_b_k\n...\nwhere, for each runner, run_i is the runner\u2019s name, and run_j is the runner that runs the fastest among runners who are not on the relay.\n\nInput:\n8\nASHMEADE 8.90\nBLAKE 9.69\nBOLT 9.58\nCARTER 9.78\nFRATER 9.88\nPOWELL 9.72\n\nOutput:\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n1\nASHMEADE 10.90\nBLAKE 8.25\nBOLT 9.78\nCARTER 8.93\nFRATER 8.92\nPOWELL 8.61\nSAMPLE OUTPUT\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nSAMPLE OUTPUT\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n2\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nSAMPLE OUTPUT\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n10\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nASHMEADE 8.90\nBLAKE 9.69\nBOLT 9.58\nCARTER 9.78\nFRATER 9.88\nPOWELL 9.72\nSAMPLE OUTPUT\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n100\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nSAMPLE OUTPUT\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nSAMPLE OUTPUT\nASHMEADE\nBLAKE\nBOLT\nCARTER\nFRATER\nPOWELL\n\nSAMPLE INPUT \n100\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE\\nBOLT\\nPOWELL\\nFRATER\\nCARTER\\nASHMEADE'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nABABABABA\\n1\\nBBABBAAAB\\n2\\nBCABABBA\\n3\\nCBABAABB\") == \"11.75\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54':\n    print('Correct')\n\nassert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '20.07':\n    print('Correct')\n\nassert solution('''\n4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nPOWELL 9.72 8.61\n''') == '20.07':\n    print('Correct')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"35.54\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72') == 'BLAKE'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"35.54\"\nassert solution() == \"CARTER\"\nassert solution() == \"BOLT\"\nassert solution() == \"POWELL\"\nassert solution() == \"ASHMEADE\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''7\n1 5\n3 2\n5 4\n6 7\n4 3\n3 5\n2 4\n6 5\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(stdin=\"2\\n2\\n4\") == \"1\"\nassert solution(stdin=\"5\\n6\\n6\") == \"0\"\nprint(solution())\n",
        "num_ids_2": 27,
        "num_ids_4": 46
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 4\\n5 6') == '2'\nassert solution('1 2\\n2 4\\n5 6') == '3'\nassert solution('2 5\\n3 4\\n4 5') == '1'\nassert solution('1 2\\n2 4\\n5 6') == '2'\nassert solution('2 5\\n3 4\\n4 5') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2\n2 4\n5 6\n3 7\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n2 4\\n5 6') == '2'\n\"\"\"\n\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '3'\nassert solution('3 5') == '2'\nassert solution('4 5') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n3\n-1 -1\n-3 4\n5 6\n''') == '2'\nassert solution('''\n3\n1 2\n1 4\n1 5\n''') == '3'\nassert solution('''\n10\n1 2\n1 4\n1 5\n1 6\n1 8\n1 9\n2 3\n3 5\n5 7\n8 9\n10 11\n11 12\n13 14\n13 15\n14 16\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 4') == '2'\nassert solution('5 6') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 2\\n2 4\\n5 6\\n') == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('hey') == 'hee'\nassert solution('How are you?') == 'Hore yu?'\nassert solution('Have a good day!') == 'Have a good day!'\nassert solution('He said later!') == 'Later!'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 18,
        "num_ids_4": 51
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heye\"\nassert solution(\"I like to like to like to like to like to like\") == \"Iiiii like to like to like to like to like to like to like\"\nassert solution(\"You are beautiful\") == \"Youiiii ee yyyy ee bb\"\nassert solution(\"We have no names\") == \"Weeee wee\"",
        "num_ids_2": 47,
        "num_ids_4": 86
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''hey\ny'all\nsee you\n''') == 'heey'\n\nassert solution('''hey\ny'all\nsee you\n''') == 'heeyy'\n\nassert solution('''hey\nsee you\n''') == 'hey'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"hi\") == \"hihihi\"\nassert solution(\"he\") == \"hehehehehehehe\"\nassert solution(\"he\") == \"hehehehehehehe\"\nassert solution(\"he\") == \"hehehehehehehe\"\n",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"hi\") == \"hi\"\nassert solution(\"j\") == \"j\"\nassert solution(\"jg\") == \"jg\"\nassert solution(\"jgh\") == \"jgh\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hey') == 'hee'\nassert solution('hey') == 'heyy'\nassert solution('bye') == 'byey'\nassert solution('alligator') == 'allyooey'\nassert solution('wazzup') == 'waazzup'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hey') == 'heye'\nassert solution('heyheyheyhey') == 'heheyeheheye'\nassert solution('hello') == 'hello'\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('hey') == 'heyhey'\nassert solution('heyyy') == 'heyheyhey'\nassert solution('heeey') == 'heeyhey'\nassert solution('heeey') == 'heyhey'\nassert solution('heyyyyy') == 'heyyyyyy'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''hey\n\n''') == 'hee'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heyhow are you\") == \"how are you\"\nprint(\"YOUR CODE IS CORRECT!\")\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"2\") == \"1 3\"\nassert solution(\"3\") == \"1 2 4\"\nassert solution(\"4\") == \"1 3 4\"\nassert solution(\"5\") == \"1 4\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4\\n', \"expected false\"\nassert solution('6\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n3 4 4 0') == '1 2\\n1 3\\n1 4\\n', \"expected false\"\nassert solution('7\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n3 4 4 0\\n4 5 5 0') == '1 2\\n1 3\\n1 4\\n', \"expected false\"\n",
        "num_ids_2": 104,
        "num_ids_4": 165
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2\\n1 3\\n1 4'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"4\\n0 0 0 0\\n1 1 1 1\\n1 2 2 2\\n2 3 3 3\\n3 4 4 4\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"3\\n0 1 1\\n1 2 2\\n1 2 3\") == \"1 2\"\nassert solution(\"6\\n0 1 1 1 1 1\\n1 2 2 2 2 2\\n1 3 3 3 3 3\\n2 4 4 4 4 4\\n3 5 5 5 5 5\\n4 6 6 6 6 6\\n5 7 7 7 7 7\\n6 8 8 8 8 8\\n7 9 9 9 9 9\") == \"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\"\nprint('All test cases passed!')\n",
        "num_ids_2": 92,
        "num_ids_4": 229
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2\\n1 3\\n1 4\\n'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 2\\n1 3\\n1 4\\n2 3\\n2 4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1 1 1 2\") == \"1 2\"\nassert solution(\"1 1 1 2 1 1 2\") == \"1 2\"",
        "num_ids_2": 15,
        "num_ids_4": 46
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\nassert solution('''\n5\n0 1 1 2 2\n1 0 2 3 3\n1 2 0 3 4\n2 3 0 4 5\n3 4 4 0 5\n''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\\n6 10\\n7 8\\n7 9\\n7 10\\n8 9\\n8 10\\n9 10\\n'''\nassert solution('''\n3\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\n\nassert solution('''6\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n'\n\nassert solution('''15\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n4 5 5 0\n5 4 4 0\n4 5 5 0\n3 5 3 0\n2 5 2 0\n2 5 2 0\n2 5 2 0\n1 5 1 0\n1 5 1 0\n1 5 1 0\n0 5 0 0\n''') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 11\\n2 12\\n2 13\\n2 14\\n2 15\\n3 16\\n3 17\\n3 18\\n3 19\\n3 20\\n3 21\\n3 22\\n3 23\\n3 24\\n4 25\\n4 26\\n4 27\\n4 28\\n4 29\\n4 30\\n4 31\\n4 32\\n4 33\\n4 34\\n4 35\\n4 36\\n4 37\\n4 38\\n4 39\\n5 40\\n5 41\\n5 42\\n5 43\\n5 44\\n5 45\\n5 46\\n5 47\\n5 48\\n5 49\\n5 50\\n5 51\\n5 52\\n5 53\\n5 54\\n5 55\\n5 56\\n5 57\\n5 58\\n5 59\\n5 60\\n5 61\\n5 62\\n5 63\\n5 64\\n5 65\\n5 66\\n5 67\\n5 68\\n5 69\\n5 70\\n5 71\\n5 72\\n5 73\\n5 74\\n5 75\\n5 76\\n5 77\\n5 78\\n5 79\\n5 80\\n5 81\\n5 82\\n5 83\\n5 84\\n5 85\\n5 86\\n5 87\\n5 88\\n5 89\\n5 90\\n5 91\\n5 92\\n5 93\\n5 94\\n5 95\\n5 96\\n5 97\\n5 98\\n5 99\\n5 100\\n5 101\\n5 102\\n5 103\\n5 104\\n5 105\\n5 106\\n5 107\\n5 108\\n5 109\\n5 110\\n5 111\\n5 112\\n5 113\\n5 114\\n5 115\\n5 116\\n5 117\\n5 118\\n5 119\\n5 120\\n5 121\\n5 122\\n5 123\\n5 124\\n5 125\\n5 126\\n5 127\\n5 128\\n5 129\\n5 130\\n5 131\\n5 132\\n5 133\\n5 134\\n5 135\\n5 136\\n5 137\\n5 138\\n5 139\\n5 140\\n5 141\\n5 142\\n5 143\\n5 144\\n5 145\\n5 146\\n5 147\\n5 148\\n5 149\\n5 150\\n5 151\\n5 152\\n5 153\\n5 154\\n5 155\\n5 156\\n5 157\\n5 158\\n5 159\\n5 160\\n5 161\\n5 162\\n5 163\\n5 164\\n5 165\\n5 166\\n5 167\\n5 168\\n5 169\\n5 170\\n5 171\\n5 172\\n5 173\\n5 174\\n5 175\\n5 176\\n5 177\\n5 178\\n5 179\\n5 180\\n5 181\\n5 182\\n5 183\\n5 184\\n5 185\\n5 186\\n5 187\\n5 188\\n5 189\\n5 190\\n5 191\\n5 192\\n5 193\\n5 194\\n5 195\\n5 196\\n5 197\\n5 198\\n5 199\\n5 200\\n5 201\\n5 202\\n5 203\\n5 204\\n5 205\\n5 206\\n5 207\\n5 208\\n5 209\\n5 210\\n5 211\\n5 212\\n5 213\\n5 214\\n5 215\\n5 216\\n5 217\\n5 218\\n5 219\\n5 220\\n5 221\\n5 222\\n5 223\\n5 224\\n5 225\\n5 226\\n5 227\\n5 228\\n5 229\\n5 230\\n5 231\\n5 232\\n5 233\\n5 234\\n5 235\\n5 236\\n5 237\\n5 238\\n5 239\\n5 240\\n5 241\\n5 242\\n5 243\\n5 244\\n5 245\\n5 246\\n5 247\\n5 248\\n5 249\\n5 250\\n5 251\\n5 252\\n5 253\\n5 254\\n5 255\\n5 256\\n5 257\\n5 258\\n5 259\\n5 260\\n5 261\\n5 262\\n5 263\\n5 264\\n5 265\\n5 266\\n5 267\\n5 268\\n5 269\\n5 270\\n5 271\\n5 272\\n5 273\\n5 274\\n5 275\\n5 276\\n5 277\\n5 278\\n5 279\\n5 280\\n5 281\\n5 282\\n5 283\\n5 284\\n5 285\\n5 286\\n5 287\\n5 288\\n5 289\\n5 290\\n5 291\\n5 292\\n5 293\\n5 294\\n5 295\\n5 296\\n5 297\\n5 298\\n5 299\\n5 300\\n5 301\\n5 302\\n5 303\\n5 304\\n5 305\\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"ABCD\") == \"EWPGAJRB\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPGAJRBEWPGAJRBEWPGAJRBEWPGAJRBEWPGAJRB''') == 'ABCD'\nassert solution
        "num_ids_2": 56,
        "num_ids_4": 1604
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\", \"Should be ABCD\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution(\"EWPGAJRBAABA\") == \"ABCD\"\nassert solution(\"ABCDEFG\") == \"ABCD\"\nassert solution(\"EWPGAJRBAABAE\") == \"ABCD\"\nassert solution(\"ABCDEFGAAA\") == \"ABCDEFG\"\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPGAJRB''') == 'ABCD'\n''')\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('EWPGAGJRB') == 'ABCD'\nassert solution('EWPGAJRB') == 'ABCD'\n'''\nimport string\n\nstdin = input()",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abc') == 'a'\nassert solution('aaaaa') == 'b'\nassert solution('abca') == 'c'\nassert solution('abcaab') == 'a'",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"add\") == \"da\"\nassert solution(\"abcd\") == \"dcba\"\nassert solution(\"edcba\") == \"cbade\"\nassert solution(\"abacdeff\") == \"acbdef\"\nassert solution(\"abacdeffg\") == \"acbdefg\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"cab\") == \"bc\"\nassert solution(\"cac\") == \"c\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abc') == 'a'\nassert solution('abbc') == 'c'\nassert solution('abbdd') == 'd'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abcd') == 'abc', 'First'\nassert solution('aabbc') == 'bc', 'Second'\nassert solution('aaabbb') == 'bb', 'Third'\nassert solution('aabbbb') == 'bbb', 'Fourth'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abcd') == 'abcd'\nassert solution('abcd') == 'abcd'\nassert solution('ab') == 'a'\nassert solution('abba') == 'ab'\nassert solution('abccde') == 'abcd'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abcd') == 'abcd', 'Basic Test Case'\nassert solution('aabbbc') == 'abcd', 'Basic Test Case'\nassert solution('aaab') == 'ab', 'Basic Test Case'\nassert solution('aaabbb') == 'ba', 'Basic Test Case'\nassert solution('aaba') == 'a', 'Basic Test Case'\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cba\") == \"bac\"\nassert solution(\"abcd\") == \"acdb\"\nassert solution(\"dcb\") == \"dcbd\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abc') == 'acb'\nassert solution('abcd') == 'abcd'\nassert solution('aa') == 'a'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaah\\nh') == 'go'\nassert solution('aaah\\naaah') == 'no'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'go'\n>>> \n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\n\nassert solution('''h\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh\nh''') == 'no'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaah\") == \"go\", \"aaah\"\nassert solution(\"aaaaah\") == \"no\", \"aaaaah\"\nassert solution(\"h\") == \"no\", \"h\"\nassert solution(\"a\") == \"go\", \"a\"\nassert solution(\"h\") == \"no\", \"h\"\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\nassert solution('''aaaaah\naaaaah''') == 'no'\nprint('all tests passed')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''aaah\naaaaah''') == 'no'\n\nassert solution('''aaah\nhh''') == 'go'\n\nassert solution('''aaah\naaaaah\naaah\naaaaah''') == 'go'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaah\") == \"no\"\nassert solution(\"aaaaah\") == \"go\"\nassert solution(\"aah\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A1B1C2A2C1A1B1C2A1C1') == 'B'\nassert solution
        "num_ids_2": 54,
        "num_ids_4": 1657
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution
        "num_ids_2": 33,
        "num_ids_4": 1657
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n\nINPUT:\n2\nA2B1A2B2A1A2A2A2\n
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'B'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'B'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''A2B1A2B2A1A2A2A2''') == 'A'\nassert solution('''A2B1A2B2A1A2A2A2A2A2''') == 'B'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2B1B1A2A2A2A2') == 'B'\nassert solution('A2B1A2B2A1B2A2') == 'B'\n",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B2B1A1A2A2A2A2\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B2A1A2A2A2A2A2\") == \"B\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"B\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"AAABBA\") == \"A\"\nassert solution(\"AAABBAA\") == \"A\"\n",
        "num_ids_2": 37,
        "num_ids_4": 50
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2A1A2B2A1A2A2A2') == 'B'\nprint('Solution: ', solution(input()))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"21\"\nassert solution(\"1 2 2\") == \"3\"\nassert solution(\"1 2 3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5') == '21'\nassert solution('6 5') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2\\n2 3') == \"1\"\nassert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == \"21\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"21\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\") == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 2 4') == '21'\nassert solution('6 5') == '11'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\\n') == '21'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('6 5\\n4 3 2 4\\n3 2 1\\n3 4 4\\n2 3 5\\n1 2 5\\n5 3 4\\n5 6 6\\n1 5 2\\n2 5 3\\n3 5 4\\n4 5 2\\n4 5 5') == '17'\nassert solution('5 5\\n4 3 2 4\\n3 2 1\\n3 4 4\\n2 3 5\\n1 2 5\\n5 3 4\\n5 6 6\\n1 5 2\\n2 5 3\\n3 5 4\\n4 5 2\\n4 5 5') == '14'\nassert solution('5 5\\n1 1 2\\n2 2 2\\n3 2 3\\n2 3 3\\n1 4 4\\n2 4 4\\n3 4 4\\n1 4 5\\n2 4 5\\n3 4 5\\n4 4 5') == '16'\n",
        "num_ids_2": 120,
        "num_ids_4": 258
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 4\\n1 2\\n2 3\\n') == '21'\nassert solution('4\\n2 4 2\\n1 2\\n2 3\\n') == '4'\nassert solution('4\\n2 3 4\\n1 2\\n3 2\\n') == '3'\nassert solution('4\\n2 4 2\\n1 2\\n3 2\\n') == '0'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D HHHeellloWooorrrrlld!!') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D HHHeellloWooorrrrlld!!') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\n\nSample Input:\nD H3e2l3o1W1o3r4l2d1!2\nSample Output:\nHHHeellloWooorrrrlld!!\n\n'''",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"E H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\", \"Should be HHHeellloWooorrrrlld!!\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"E\") == \"H3e2l3o1W1o3r4l2d1!\"\nassert solution(\"D\") == \"HHHeellloWooorrrrlld!!\n\nstdin = \"E\"\nprint(solution(stdin))\n\nstdin = \"D\"\nprint(solution(stdin))\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '', 'Empty input'\nassert solution('HELLO') == 'HHe2l2o1', 'Simple test'\nassert solution('YOUREWANTHEBOOL') == 'H3e2l3o1W1o3r4l2d1!2', 'RLE'\nprint('All tests passed')\n",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Alice\"\n\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2'\n) == 'Bob'\nassert solution(\n    '1'\n) == 'Alice'\nassert solution(\n    '10'\n) == 'Alice'\nassert solution(\n    '4'\n) == 'Bob'\nassert solution(\n    '7'\n) == 'Alice'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Alice'\nassert solution('3') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'Alice'\nassert solution('2\\n') == 'Alice'\nassert solution('3\\n') == 'Bob'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Bob\"\nassert solution(\"10000000\") == \"Alice\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5') == 'Alice'\nassert solution('8\\n11') == 'Alice'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"Alice\"\nassert solution(\"1\\n3\") == \"Bob\"\nassert solution(\"2\\n3\") == \"Alice\"\nassert solution(\"2\\n4\") == \"Bob\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Alice'\nassert solution('4') == 'Bob'\nassert solution('6') == 'Bob'\nassert solution('10') == 'Bob'\nassert solution('11') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n''') == \"Alice\"\nassert solution('''\n5\n''') == \"Bob\"\nassert solution('''\n6\n''') == \"Bob\"\n'''\nassert solution('''\n7\n''') == \"Bob\"\nassert solution('''\n8\n''') == \"Bob\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Alice'\nassert solution('4') == 'Bob'\nassert solution('8') == 'Alice'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\", \"Should return the equation from the example\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"1+3=5\"\nassert solution(\"-1 2 3\") == \"-1+2=5\"\n\nInput:\n8 5 4\nOutput:\n8+4-5=1\n\nInput:\n10 4 6\nOutput:\n10+4=14\n\nInput:\n5 3 5\nOutput:\n5+3=8\n\nInput:\n1 1 2\nOutput:\n1+1=2\n\nInput:\n2 2 1\nOutput:\n1+1=2\n\nInput:\n0 1 1\nOutput:\n0+1=1\n\nInput:\n-5 5 -2\nOutput:\n-5-5=-2\n\nInput:\n3 3 4\nOutput:\n3+3=6\n\nInput:\n5 2 4\nOutput:\n5+2=7\n\nInput:\n0 1 2\nOutput:\n0+1=1\n\nInput:\n3 2 4\nOutput:\n3+2=5\n\nInput:\n1 2 1\nOutput:\n1+1=2\n\nInput:\n0 1 2\nOutput:\n0+1=1\n\nInput:\n1 2 1\nOutput:\n1+1=2\n\nInput:\n0 1 2\nOutput:\n0+1=1\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 8') == '5+3=8', \"3+5=8\"\nassert solution('1 1 1 1') == '1+1=1', \"1+1=1\"\nassert solution('1 1 1 2') == '1+1=2', \"1+1=2\"\nassert solution('1 1 2 1') == '1+1=2', \"1+1=2\"\n\"\"\"",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 5 4\") == \"1+5=6\"\nassert solution(\"1 1 1\") == \"1+1+1=3\"\nassert solution(\"-2 -2 -2\") == \"1-2-2=0\"\nassert solution(\"-2 -2 -2\") == \"1-2-2=0\"\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('5 3 7') == '5+3=8'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 5 5\") == \"5+5=10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('-5 3 8') == '-5+3=8'\nassert solution('5 -3 8') == '5-3=8'\nassert solution('-5 -3 8') == '-5-3=8'\nassert solution('5 + 3 8') == '5+3=8'\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('3 4 -1') == '3-4=1'\nprint('You are good!')\n---",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 8') == \"5+3=8\"\nassert solution('2 3 5') == \"2+3=5\"\nassert solution('1 3 2') == \"1+3=3\"\nassert solution('4 2 5') == \"4+2=6\"\nassert solution('4 5 2') == \"4+5=9\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"8\\n3 2 2 1 1 3 1 1\"\n) == \"YES\"\nassert solution(\n    \"8\\n3 2 2 1 1 2 3\"\n) == \"NO\"\nassert solution(\n    \"8\\n3 2 2 1 1 2 3\\n\"\n) == \"YES\"\nassert solution(\n    \"8\\n3 2 2 1 1 2 3\\n\\n\"\n) == \"NO\"\nassert solution(\n    \"8\\n3 2 2 1 1 2 3\\n\\n\"\n) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\n3 2 2 1 1 3 1 1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8\n3 2 2 1 1 3 1 1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n3\n2 2 1 1 3 1 1\n\"\"\") == 'YES'\nassert solution(r\"\"\"\n4\n2 2 2 1 1\n\"\"\") == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution('1\\n2 2\\n1 2') == 'YES'\nassert solution('2\\n3 2 1') == 'NO'\n\nprint(solution())\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\ngoth\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"ghost\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\ngoldfish\\n') == 'ghost'\nassert solution('2\\nghost\\n') == 'ghost'\nassert solution('5\\nghost\\nghost\\nmummy\\nwitch\\n') =='mummy'\nassert solution('6\\ngoldfish\\ngoldfish\\n') == 'witch'\nassert solution('8\\ndemon\\ngoldfish\\n') =='mummy'\n",
        "num_ids_2": 31,
        "num_ids_4": 76
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\ngolden\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n') =='mummy'\n\n\"\"\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') =='mummy'\nassert solution('10') == 'ghost'\nassert solution('10') == 'witch'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n' +\n                'ghost\\n' +\n                'mummy\\n' +\n                'witch\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n') == 'demon'\n\nassert solution('5\\n' +\n                'ghost\\n' +\n                'mummy\\n' +\n                'witch\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n') == 'ghost'\n\nassert solution('5\\n' +\n                'ghost\\n' +\n                'mummy\\n' +\n                'witch\\n' +\n                'witch\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n') == 'witch'\n\nassert solution('10\\n' +\n                'ghost\\n' +\n                'mummy\\n' +\n                'witch\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n') =='mummy'\n\nassert solution('10\\n' +\n                'ghost\\n' +\n                'mummy\\n' +\n                'witch\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon\\n' +\n                'demon",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'ghost'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'demon'\n\nassert solution('''\n6\nghost\nmummy\nwitch\ndemon\nghost\n''') == 'ghost'\n\nassert solution('''\n9\nghost\nmummy\nwitch\ndemon\ndemon\nmummy\nghost\ndemon\n''') == 'ghost'\n\nassert solution('''\n10\nmummy\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') =='mummy'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"mummy\"\nassert solution(\"3\") == \"mummy\"\nassert solution(\"5\") == \"mummy\"\nassert solution(\"6\") == \"ghost\"\nassert solution(\"7\") == \"mummy\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"mummy\", \"Your code produced \\\"mummy\\\".\"\nassert solution(\"20\") == \"mummy\", \"Your code produced \\\"mummy\\\".\"\nassert solution(\"5\") == \"ghost\", \"Your code produced \\\"ghost\\\".\"\nassert solution(\"20\") == \"ghost\", \"Your code produced \\\"ghost\\\".\"\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"ghost\"\nassert solution(\"mummy\") == \"mummy\"\nassert solution(\"witch\") == \"witch\"\nassert solution(\"demon\") == \"demon\"\nassert solution(\"ghost\") == \"ghost\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nGeorge_Winston Summer Lullaby 215\") == \"\", \"Empty\"\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nGeorge_Winston Summer Lullaby 215\") == \"\", \"Empty\"\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nGeorge_Winston Summer Lullaby 215\") == \"\", \"Empty\"\nassert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nGeorge_Winston Summer Lullaby 215\") == \"\", \"Empty\"\n",
        "num_ids_2": 128,
        "num_ids_4": 362
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"\\n\\nAlbum Artist Song_Title Length_seconds\\nJames Taylor Dad_Loves_His_Work Hard_Times 192\\nJames Taylor Dad_Loves_His_Work London_Town 236\\nJames Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge Winston Summer Lullaby 215\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1220,
        "num_ids_4": 1220
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\")\nassert solution(\"1\\",
        "num_ids_2": 1214,
        "num_ids_4": 1220
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n\\n3\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n\\n3\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n\\n3\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n\\n3\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n\\n3\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n\\n3\\ntest\\n5\\nartist\\nalbum\\nsong_title\\nlength_seconds\") == \"George_Winston Summer Lullaby 215 James_Taylor Dad_Loves_His_Work Hard_Times 192 James_Taylor Dad_Loves_His_Work London_Town 236 James_Taylor Dad_Loves_His_Work Summers_Here 163 Tchaikovsky Piano_Favorites November 163\"\nassert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n3\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work",
        "num_ids_2": 1220,
        "num_ids_4": 1220
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\ntachaikovsky\\n5\\ntachaikovsky\\n3\\nartist\\nalbum\\nsong_title\\nlength_seconds\\n0\\n\") == \"5\\ntachaikovsky\\n5\\ntachaikovsky\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n5\\ntachaikovsky\\n5\\ntachaikovsky\\nJames_Taylor Dad_Loves_His_Work Hard",
        "num_ids_2": 1220,
        "num_ids_4": 1220
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n\"\"\") == \"\"\"\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\".strip()\n\n\nimport sys",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '\\nArtist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n'\n\nassert solution('2') == '\\nArtist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n'\n\nassert solution('4') == '\\nArtist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n\\n'\n\nassert solution('3') == '\\nArtist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\\n'\n",
        "num_ids_2": 174,
        "num_ids_4": 359
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\n\") == \"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\n\"\nprint(\"All Tests Passed\")",
        "num_ids_2": 236,
        "num_ids_4": 236
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"",
        "num_ids_2": 171,
        "num_ids_4": 171
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 5 5 5 5 5\") == \"YES\"\nassert solution(\"5\\n5 5 5 5 5 5\") == \"NO\"\nassert solution(\"5\\n10 10 10 10 10 10\") == \"YES\"\n\"\"\"\n\nh, w, n = map(int, input().split())\nbrick_len = list(map(int, input().split()))\nbrick_len.sort(reverse=True)\nprint(\"YES\" if h == w else \"NO\")\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"2 10 7\\n10 10 10 10 10 10 10\") == \"NO\"\nprint(\"Congratulations! Your solutions works for the input you provided!\")\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6') == 'YES'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n3 10 7\n10 10 10 10 10 10\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n2 10 7\n5 1 2 5 5 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 10 7\n5 5 5 5 5 5''') == 'YES'\nassert solution('''2 10 7\n8 5 5 5 5 5 5''') == 'NO''''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 10 7\\n\"\n    \"5 5 5 5 5 5 5\"\n) == \"YES\"\n\nassert solution(\n    \"10 10 10 10 10 10 10\\n\"\n    \"5 5 5 5 5 5 5\"\n) == \"NO\"\n\nassert solution(\n    \"50 10 50 10 50 10 50\\n\"\n    \"10 10 10 10 10 10 10\"\n) == \"YES\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"YES\"\nprint(solution(input_))\n\nExplanation\n\nLars completed the wall. The output is YES.\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n2 10 7\n3 2 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Not Effective\"\nassert solution(\"3\") == \"50.0\"\nassert solution(\"4\") == \"50.0\"\nassert solution(\"5\") == \"66.6\"\nassert solution(\"6\") == \"66.6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('12') == '50.000000'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Not Effective\"\nassert solution(\"5\") == \"50.000000\"\nassert solution(\"1000000000\") == \"Not Effective\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == 'Not Effective\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n\"\"\"\n) == \"Not Effective\"\nassert solution(\n\"\"\"\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n\"\"\"\n) == \"50.000000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Not Effective'\nassert solution('1') == '66.67'\n\n'''\nimport sys\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"Not Effective\"\nassert solution(\"4\") == \"66.666667\"\nassert solution(\"3\") == \"50.000000\"\nassert solution(\"100\") == \"Not Effective\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nNYNY\nNNNY\nNYYY\nYYNN\n''') == 'Not Effective'\nassert solution('''\n5\nNYNY\nNNYY\nNYYY\nYYNN\nYYNY\nSample Output:\nNot Effective\n50.000000\n50.000000\n50.000000\n50.000000\n''') == '50.000000'\nassert solution('''\n5\nNYNY\nNNYY\nNYYY\nYYNN\nYYYY\nSample Output:\nNot Effective\n50.000000\n50.000000\n50.000000\n50.000000\n''') == '50.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\n\nassert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNYY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == 'Not Effective'\n\nassert solution('''\n1\nNNNN\nSample Output:\nNot Effective\n1.0\n''') == 'Not Effective'\n\nassert solution('''\n5\nNYNY\nNNNN\nNYYY\nNYYN\nNNNY\nSample Output:\nNot Effective\n1.5\n''') == 'Not Effective'\n\nassert solution('''\n2\nNYNY\nNNNN\nSample Output:\nNot Effective\n0.5\n''') == 'Not Effective'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\nA\n2\n2\n1\n1\n''') == 'Goran'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nBAACC\n''') == 'Bruno'\n\nassert solution('''5\nBAACC\n''') == 'Adrian'\n\nassert solution('''5\nBAACC\n''') == 'Adrian'\n\nassert solution('''5\nBAACC\n''') == 'Adrian'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nBAACC\\n') == 'Bruno'\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"B\"\nassert solution(\"5\") == \"B\"\nassert solution(\"10\") == \"A\"\nassert solution(\"50\") == \"C\"\nassert solution(\"100\") == \"C\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution(input()) == 'Bruno'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right''') == '543'\nassert solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong''') == '502'\nassert solution('''5 A wrong\n10 C wrong\n15 B wrong\n30 D wrong\n50 E wrong\n100 F wrong\n200 A wrong\n250 C wrong\n300 D wrong''') == '636'\nassert solution('''1 E right\n1 C wrong\n2 D wrong\n4 C wrong\n4 D wrong\n4 D wrong''') == '6'\nassert solution('''1 E right\n2 C wrong\n4 D wrong\n4 D wrong\n5 E wrong\n10 F wrong\n15 C wrong\n15 D wrong\n16 E wrong\n16 E wrong\n16 C wrong\n16 D wrong''') == '845'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '3 543'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '3 543'\nassert solution('5 A right\\nB E wrong\\nC D wrong\\n-1\\n') == '5 454'\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '543'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n\"\"\") == \"543\"\n\nassert solution(\"\"\"\n7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n\"\"\") == \"502\"\n\nassert solution(\"\"\"\n7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n\"\"\") == \"502\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '543'\nassert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\n''') == '543'\nassert solution('''\n5 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\n''') == '543'\nassert solution('''\n4 A right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\n''') == '433'\nassert solution('''\n4 A right\n5 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1\n''') == '433'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == '543'\nassert solution(\"1 1 wrong\\n1 1 right\\n-1\") == '2'\n\"\"\"\n\nimport heapq\n\nn = int(input())\n\nheap = []\n\nfor i in range(n):\n    x, y, z = input().split()\n    if x == '-1':\n        break\n    else:\n        heapq.heappush(heap, (-int(x), y, int(z)))\n\nwhile heap:\n    _, char, time = heapq.heappop(heap)\n    time += 20\n    if time >= 300:\n        time = -1\n    print(time)\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '0'\nassert solution('') == '0'\nassert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\nassert solution('5 E right\\n10 A wrong\\n20 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '4 513'\n",
        "num_ids_2": 20,
        "num_ids_4": 126
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\nassert solution('10 0\\n') == '-1'\n",
        "num_ids_2": 147,
        "num_ids_4": 147
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5') == '5'\nassert solution('100 100\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1",
        "num_ids_2": 1510,
        "num_ids_4": 1510
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n9 9\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\n",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 4 1 5 2 4 2 1\\n1 5 3 4 5 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1 5\") == \"5\"\nassert solution(\"3 3\\n3 4 1 5 2 4 2 1\\n1 5 3 4 5 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1 5\") == \"5\"\nassert solution(\"3 3\\n1 2 3 4\\n5 2 1 3\\n1 1 4\\n2 2 4 5\\n2 2 1 3\\n4 4 3 2\\n5 4 5 2 3\\n5 5 2 3 2\\n3 4 4 1\\n1 4 3 3 2\\n1 5 3 2 4\\n4 1 5 4 1\\n4 1 3 3 4\\n5 5 2 3 2\\n1 4 3 2 4\\n2 4 5 3 5\\n5 3 4 1 2\\n1 1 1 1\\n2 5 1 4\\n2 2 4 5\\n3 2 5 3\\n2 1 3 4\\n3 4 1 1\\n5 2 1 4\\n1 1 4 1\\n1 5 4 2\\n4 2 3 3\\n1 4 1 1\\n2 5 1 5\\n5 3 2 3\\n4 1 5 5\\n2 3 5 4\\n2 5 3 5\\n1 1 2 5\\n3 2 3 1\\n2 3 1 3\\n4 2 4 2\\n5 5 3 2\\n2 1 2 1\\n1 5 1 1\\n4 4 5 2\\n1 2 3 5\\n2 1 4 2\\n3 3 5 4\\n2 4 2 3\\n2 1 2 5\\n5 2 4 1\\n1 2 1 5\\n5 1 5 5\\n4 5 3 2\\n5 1 3 5\\n2 5 1 4\\n2 3 4 5\\n3 2 5 4\\n5 5 4 2\\n4 5 3 2\\n5 4 1 4\\n3 5 5 4\\n4 1 5 5\\n5 2 4 2\\n2 5 1 2\\n2 1 5 2\\n4 5 2 3\\n2 5 4 3\\n5 2 4 3\\n1 5 3 2\\n4 1 4 2\\n2 5 3 4\\n4 4 1 3\\n5 3 1 4\\n4 5 3 4\\n4 3 4 1\\n2 2 5 1\\n4 1 5 5\\n5 1 3 2\\n2 2 2 3\\n3 4 4 2\\n5 1 2 4\\n4 2 3 3\\n4 4 4 3\\n4 5 2 1\\n4 5 2 1\\n5 2 2 3\\n5 3 2 4\\n2 5 2 5\\n4 3 2 4\\n2 5 3 4\\n5 5 3 2\\n1 2 5 2\\n4 5 4 4\\n5 3 1 2\\n5 2 5 3\\n2 1 5 5\\n5 1 5 1\\n5 3 1 4\\n5 5 1 1\\n5 3 4 2\\n5 2 5 2\\n3 5 4 4\\n5 1 4 2\\n4 5 5 1\\n3 2 5 4\\n5 2 4 4\\n4 1 4 1\\n4 3 2 5\\n4 5 3 1\\n1 1 5 2\\n4 1 5 2\\n2 1 3 2\\n3 3 4 5\\n5 3 4 2\\n1 1 3 2\\n3 2 5 3\\n1 4 1 4\\n5 3 4 3\\n4 3 3 2\\n2 1 1 2\\n1 4 1 5\\n3 4 5 4\\n3 4 3 2\\n1 5 1 4\\n5 4 2 4\\n2 4 2 4\\n5 3 3 2\\n5 3 5 4\\n1 4 1 4\\n5 4 1 4\\n4 5 2 2\\n5 2 4 2\\n1 2 2 1\\n5 5 1 3\\n4 4 2 4\\n3 2 3 4\\n2 5 2 3\\n3 2 5 3\\n3 5 2 3\\n3 2 1 4\\n5 3 4 1\\n4 3 3 3\\n1 2 2 3\\n1 1 2 4\\n4 2 3 4\\n2 5 5 5\\n1 4 1 5\\n5 2 1 5\\n2 2 1 3\\n2 5 3 4\\n3 4 1 5\\n1 2 1 4\\n5 5 4 4\\n4 5 1 1\\n1 1 5 1\\n2 4 1 4\\n3 5 2 2\\n4 4 2 4\\n2 5 2 3\\n3 1 5 4\\n1 5 2 4\\n2 5 2 1\\n2 5 4 1\\n2 4 5 2\\n3 4 1 5\\n4 5 1 4\\n5 4 2 1\\n5 3 4 5\\n3 4 2 5\\n5 5 2 4\\n2 5 4 2\\n3 4 5 1\\n1 4 4 4\\n5 2 5 4\\n4 5 2 4\\n5 1 4 3\\n2 1 5 4\\n2 3 3 4\\n3 4 5 4\\n5 3 4 3\\n5 2 4 1\\n5 3 2 4\\n4 5 4 2\\n1 5 4 2\\n2 3 3 2\\n4 3 1 3\\n3 4 3 1\\n2 1 3 2\\n2 5 5 5\\n4 5 1 4\\n4 1 1 1\\n2 3 5 3\\n3 5 2 2\\n2 5 4 1\\n5 2 5 2\\n1 4 2 4\\n5 1 4 4\\n5 1 4 3\\n5 2 1 5\\n3 5 2 1\\n4 5 3 3\\n5 1 4 1\\n1 2 1 4\\n2 3 2 3\\n3 5 5 3\\n4 2 1 4\\n3 2 1 2\\n5 3 1 1\\n5 3 2 4\\n3 2 4 5\\n4 2 2 2\\n1 5 2 5\\n5",
        "num_ids_2": 238,
        "num_ids_4": 1510
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 5') == '5'\nassert solution('5 6') == '-1'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 5\") == \"5\"\nassert solution(\"10 5\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"10 5\\n\"\n    \"5 1 3 4 2 4 2 1 2 1\\n\"\n    \"4 5 3 4 1 5 3 1 1 4\\n\"\n    \"5 2 1 5 5 3 5 2 3 2\\n\"\n    \"5 5 2 3 2 3 1 5 5 5\\n\"\n    \"3 4 2 4 2 2 4 4 2 3\\n\"\n    \"1 5 1 1 2 5 4 1 5 3\\n\"\n    \"2 2 4 1 2 5 1 4 3 5\\n\"\n    \"5 3 2 1 4 3 5 2 3 1\\n\"\n    \"3 4 2 5 2 5 3 4 4 2\\n\"\n) == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n7\\n5\\n5\") == \"gunilla has a point\"\nassert solution(\"2\\n1\\n7\\n5\\n5\\n5\\n5\") == \"edward is right\"\nassert solution(\"3\\n1\\n5\\n5\\n5\\n5\") == \"gunilla has a point\"\nassert solution(\"4\\n1\\n5\\n5\\n5\\n5\\n5\\n5\") == \"gunilla has a point\"\nassert solution(\"5\\n1\\n5\\n5\\n5\\n5\\n5\\n5\\n5\") == \"edward is right\"\n",
        "num_ids_2": 54,
        "num_ids_4": 118
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 7\n5 5\n''') == 'gunilla has a point'\nassert solution('''2 1\n4 4\n''') == 'edward has a point'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 7\n5 5\n1 9\n8 9\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n4\n1 5\n1 2\n5 6\n3 5\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n5\n1 5\n1 2\n5 6\n3 5\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n4\n1 2\n1 4\n2 4\n3 4\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n1\n1 4\n1 2\n1 5\n1 6\n\"\"\") == \"gunilla has a point\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward is right'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 7\n5 5\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n2 3\n1 6\n\"\"\") == \"edward has a point\"\nassert solution(\"\"\"\n1 1\n3 4\n\"\"\") == \"gunilla has a point\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 7\n5 5''') == 'gunilla has a point'\nassert solution('''1 5\n3 3\nSample Input:\n2\n1 7\n3 5\nSample Output:\nedward is right\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward is right'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n10 8\n9 8\n8 5\n7 4\n''') == 'gunilla has a point'\nassert solution('''\n4 4\n11 2\n10 3\n8 9\n''') == 'edward has a point'\nassert solution('''\n3 3\n5 3\n7 2\n''') == 'edward has a point'\n'''\nTest #1\n'''\n\nassert solution('''\n8 4\n10 8\n9 8\n8 5\n7 4\n''') == 'gunilla has a point'\n\nassert solution('''\n4 4\n11 2\n10 3\n8 9\n''') == 'edward has a point'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 7\\n5 5') == 'gunilla has a point'\nassert solution('5\\n2 3\\n10 10') == 'gunilla has a point'\n'''",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(['1 7', '5 5']) == 'gunilla has a point'\nassert solution(['1 1', '2 2', '3 3']) == 'gunilla has a point'\nassert solution(['1 1', '2 2', '3 3', '4 4', '5 5']) == 'gunilla has a point'\nassert solution(['2 1', '2 1']) == 'gunilla has a point'\nassert solution(['1 2', '2 2', '3 3', '4 4', '5 5', '6 6']) == 'gunilla has a point'\n",
        "num_ids_2": 46,
        "num_ids_4": 100
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4'",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4 4 4 4 2 2 2 4\"\nassert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10\") == \"4 4 4 4 2 2 2 4\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\n\nassert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n5 6\\ns 5\\ns 6\\ns 10\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\n\nassert solution(\n    \"2 4\\nt 3 4\\n\") == \"2\\n2\\n\"\n\nassert solution(\n    \"2 5\\nt 1 5\\n\") == \"2\\n2\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n\"\"\"\n    ) == \"4\"\nassert solution(\n\"\"\"\n5 9\nt 1 5\nt 2 6\nt 3 7\nt 4 8\nt 5 8\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\n\"\"\"\n    ) == \"5\"\nassert solution(\n\"\"\"\n5 10\nt 1 5\nt 2 6\nt 3 7\nt 4 8\nt 5 9\nt 6 10\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\n\"\"\"\n    ) == \"10\"\nassert solution(\n\"\"\"\n5 11\nt 1 5\nt 2 6\nt 3 7\nt 4 8\nt 5 9\nt 6 10\nt 7 11\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\ns 11\n\"\"\"\n    ) == \"11\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\nt 5 6\\ns 5\\ns 6\\ns 10') == '4 4 4 4\\n4\\n4\\n4\\n2\\n2\\n2\\n4\\n4\\n'\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 11') == '4'\nassert solution('10 11') == '4'\nassert solution('10 11') == '4'\nassert solution('10 11') == '4'\nassert solution('10 11') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\nt 1 2\nt 1 3\nt 1 4\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\nt 1 2\nt 1 3\nt 1 4\nt 2 3\nt 2 4\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\nt 1 2\nt 1 3\nt 1 4\nt 2 3\nt 2 4\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 10\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 11') == '4'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1') == '4'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015'\n\n---Input---\nThe input consists of:\n - one line with one integer $n$ ($1 \\leq n \\leq 10^5$), the number of trips Grandpa Bernie went on;\n - $n$ lines each containing the name $s$ ($1 \\leq |s| \\leq 20$) of a country and an integer $y$ ($1 \\leq y \\leq 10^6$) representing a trip to country $s$ that Grandpa Bernie went on in year $y$;\n - one line with one integer $q$ ($1 \\leq q \\leq 10^5$), the number of queries;\n - $q$ lines each containing the name $s$ of a country and an integer $k$ representing a query for the $k$:th time Grandpa Bernie went to country $s$.\n\nEach country name only consists of letters from the English alphabet. It is also guaranteed that, for each query asking for the $k$:th trip to country $s$, $k$ is at least $1$ and no greater than the number of times Grandpa Bernie went to country $s$. In particular, it is guaranteed that Grandpa Bernie has visited country $s$ at least once.\n\n-----Output-----\nFor each query for the $k$:th trip Grandpa Bernie went to a country $s$, output a single line containing the year in which Grandpa Bernie went on that trip.\n\nNote that in the input, $k$ is not an integer, but a name of a country.\n\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015'",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '1982'\nassert solution('''\n2\nSweden 1\nIceland 1\nIceland 2\n''') == '1983'\nassert solution('''\n1\nSweden 1\nIceland 1\nIceland 2\n''') == '1982'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '2015'\nassert solution(solution.__doc__) == '1982'\nassert solution(solution.__doc__) == '2016'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n') == '1982'\nprint(solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n'))\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\") == \"2015\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nIceland 2016\\n2\\nIceland 1982\\n3\\nIceland 2') == '1982'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1984'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\\n') == '2015'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a\nab\na\nb\na\nb\nab\n''') == '10'\nassert solution('''$\na\na\na\na\na\na\na\n''') == '9'\n\n'''\nThe input is as follows:\n\nabbcccddddeeeee\n\nThe output is as follows:\n\n10\n\n'''\n\n'''\nThe input is as follows:\n\nab\n\nThe output is as follows:\n\n2\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abbcccddddeeeee') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abbcccddddeeeee') == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abcddddcddeeeee') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abbcccddddeeeee') == '10'\n\nassert solution('fghijklmnopqrstuvwxyz') == '28'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '1'\nassert solution('abbcccddddeeeee') == '10'\nassert solution('aaaaa') == '0'\nassert solution('aa') == '0'\nassert solution('c') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering. will save the world from inefficiency.. is a.. and its. humanity'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Engineering\nwill save the world from inefficiency''') == \"Engineering. will save the world from inefficiency\"\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering will save the world from inefficiency.'\n\nprint('solution() is working!')",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering. will save the world from inefficiency.\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering... and its humanity'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering will save the world from inefficiency.'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency is a blight on the world and its humanity.'\nassert solution('Inefficency is a blight on the world and its humanity') == 'Inefficency is a blight on the world and its humanity.'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency is a blight on the world and its humanity.'\nassert solution('Engineering is a blight on the world and humanity') == 'Engineering is a blight on the world and humanity.'\n",
        "num_ids_2": 58,
        "num_ids_4": 124
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering. will save. the world from inefficiency. and its. humanity'\n\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its. humanity'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its humanity\nSample Input 2:\nf'{i} {i}'\nSample Output 2:\nf'{i} {i}'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency... and its humanity'\nassert solution('Engineering will save the world from inefficiency') == 'Engineering will save the world from inefficiency.'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency is a blight on the world and its humanity.'",
        "num_ids_2": 70,
        "num_ids_4": 102
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\n'''\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') =='satisfactory'\nassert solution('-1 2 3') == 'unsatisfactory'\nassert solution('1 -2 3') =='satisfactory'\nassert solution('1 -2 -3') == 'unsatisfactory'\nassert solution('1 2 -3') == 'unsatisfactory'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"satisfactory\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\nassert solution('''\n5 1\n0\n0\n1\n0\nSample Output:\nsatisfactory\n''') == 'unsatisfactory'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\n\nassert solution('''\n2 1\n-1 -2\n''') =='satisfactory'\n\nassert solution('''\n2 1\n1 -1\n''') =='satisfactory'\n\nassert solution('''\n3 2\n-1 2\n-1 -2\n1 -2\n''') =='satisfactory'\n\nassert solution('''\n2 1\n1 -1\n''') =='satisfactory'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''4\n0 1 2\n1 0 2\n2 1 0\n1 2 0''') =='satisfactory'\nassert solution('''9\n-1 -2 -3\n-1 -2 3\n-1 3 -2\n-1 3 2\n2 -1 3\n2 -1 -3\n2 3 -1\n2 3 2''') =='satisfactory'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 4\n-1 2 -3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 1 5 3 4 6 6''') == '4'\nassert solution('''8 1 1 1 5 3 4 6 6''') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1 1\n''') == '3'\nassert solution('''8\n1 1 1 5 3 4 6 6\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6\n1 1 1 5 3 4 6 6\"\"\") == \"4\"\nassert solution(\"\"\"5\n1 1 1 5 3 4 6 6\"\"\") == \"1\"\nprint(\"Your solution:\")\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('7\\n1 1 1 5 3 4 6 6') == 'none'\nassert solution('10\\n1 1 1 5 3 4 6 6') == '5'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"none\"\nassert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"none\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('5 5 5 5 5 5 5') == '5'\nassert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('3 1 2 3 1 5 4') == '4'\nassert solution('3 3 1 2 3 1 5 4') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"none\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1 5 3 4 6 6\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 36
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1 5 3 4 6 6\n''') == '4', 'First'\nassert solution('''\n8\n1 1 1 5 3 4 6 6\n''') == '4', 'Second'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"08:00:00\"\nassert solution(input()) == \"08:00:00\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\nprint('ok')\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20:00:00', '04:00:00') == '08:00:00'\nassert solution('23:50:00', '21:00:00') == '23:50:00'\nassert solution('00:00:00', '00:00:00') == '00:00:00'\nassert solution('00:00:00', '23:50:00') == '23:50:00'\nassert solution('23:50:00', '00:00:00') == '00:00:00'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\nassert solution(\"12\") == \"11\"\nassert solution(\"13\") == \"10\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\n\"\"\"\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2\\n3\\n1\\n1\\n2\\n1\\n3\\n1\\n2\\n3\\n3\") == \"4\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n6') == '4'\nassert solution('16\\n36') == '4'\nassert solution('1\\n1') == '2'\nassert solution('1\\n2') == '3'\nassert solution('1\\n4') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 7') == '3'\nassert solution('6 4') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n6') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    2 6\n    3 1\n    3 2\n    3 3\n    3 4\n    3 5\n    3 6\n    4 1\n    4 2\n    4 3\n    4 4\n    4 5\n    4 6\n    5 1\n    5 2\n    5 3\n    5 4\n    5 5\n    5 6\n    6 1\n    6 2\n    6 3\n    6 4\n    6 5\n    6 6\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n    0 0\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    2 6\n    3 1\n    3 2\n    3 3\n    3 4\n    3 5\n    3 6\n    4 1\n    4 2\n    4 3\n    4 4\n    4 5\n    4 6\n    5 1\n    5 2\n    5 3\n    5 4\n    5 5\n    5 6\n    6 1\n    6 2\n    6 3\n    6 4\n    6 5\n    6 6\n\"\"\") == \"7\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('31 6') == '4'\nassert solution('28 11') == '2'\nassert solution('5 5') == '3'\n\"\"\"\n\n\nfrom math import log, sqrt, floor",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2.6666666666666665'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n''') == \"2.718281828459045\nassert solution('''\n2\n''') == \"2.718281828459045\nassert solution('''\n3\n''') == \"2.718281828459045\n'''\nInput\n4\nOutput\n1.707963267948966\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('0') == '1'\nassert solution('1') == '1.1'\nassert solution('2') == '1.2'\nassert solution('3') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2.6666666666666665'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2.0'\nassert solution('3') == '2.7391304347826086'\nassert solution('10') == '2.82842712475'\nassert solution('100') == '2.3333333333333333'",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2.718281828459045'\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '2.0'\nassert solution('3') == '2.0'\nassert solution('4') == '3.0'\nassert solution('5') == '4.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2.718281828459045'\nassert solution('2') == '1.389149659861907'\nassert solution('3') == '2.718281828459045'\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**5)",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2.6666666666666665\"\nassert solution(\"10\") == \"11.0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2.82842712475'\nassert solution('10') == '2.71828182846'\nassert solution('100') == '2.71828182846'\nassert solution('1000') == '2.71828182846'\nassert solution('10000') == '2.71828182846'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"1 4 7\") == \"opponent\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3 7\n''') == 'paul'\nassert solution('''\n10 10 10\n''') == 'opponent'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"1 3 4\") == \"opponent\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('5 3 9') == 'opponent'\nassert solution('5 3 7 8') == 'paul'\nassert solution('5 3 7 9') == 'opponent'\n\n'''\n\n'''\nthe first try did not work so it was trying to do it with a for loop",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('4 5 7') == 'opponent'\nassert solution('5 5 7') == 'both'\nassert solution('4 4 7') == 'both'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"opponent\"\nassert solution(input(\"\")) == \"paul\"\n\n<input>\n7 8 9\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"10 3 5\") == \"opponent\"\nassert solution(\"1 0 0\") == \"opponent\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 6') == 'opponent'\nassert solution('3 3 2') == 'paul'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'paul'\nassert solution(input()) == 'opponent'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'paul'\nassert solution('5 2 7') == 'opponent'\nassert solution('5 1 7') == 'paul'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '5'\nassert solution('10') == '10'\nassert solution('11') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('1000000') == '1000'\nassert solution('1000000000') == '1000000'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\", \"123\"\nassert solution(\"123a\") == \"No\", \"123a\"\nassert solution(\"123456\") == \"Yes\", \"123456\"\nassert solution(\"12345678\") == \"No\", \"12345678\"\nassert solution(\"0123456789\") == \"No\", \"0123456789\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('12d3') == 'No'\nassert solution('123') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5\\n5\\n1') == 'Yes', 'First'\nassert solution('5\\n5\\n5\\n5') == 'No', 'Second'\nassert solution('1\\n1\\n1\\n1') == 'Yes', 'Third'\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('a123') == 'No'\nassert solution('123aa') == 'Yes'\nassert solution('123ab') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"123\"\n) == \"No\"\nassert solution(\n    \"123a\"\n) == \"No\"\nassert solution(\n    \"12345678\"\n) == \"Yes\"\nassert solution(\n    \"12a34b\"\n) == \"Yes\"\nassert solution(\n    \"1234567890\"\n) == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123') == 'No'\nassert solution('1234') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\", \"Empty string\"\nassert solution(\"123\") == \"Yes\", \"One character\"\nassert solution(\"123a\") == \"Yes\", \"One character and a space\"\nassert solution(\"12345\") == \"Yes\", \"Five characters\"\nassert solution(\"1234567\") == \"Yes\", \"Five characters\"\n",
        "num_ids_2": 27,
        "num_ids_4": 60
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123') == 'Yes'\nassert solution('123a') == 'No'\n\"\"\"\nimport re\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123') == 'Yes'\nassert solution('123a') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"\nassert solution(\"123b\") == \"No\"\nassert solution(\"123c\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_input_1) == \"zelena paprika\"\nassert solution(test_input_2) == \"zelena paprika\"\nassert solution(test_input_3) == \"zelena paprika\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nzepelepenapa papapripikapa\n''') == 'zelena paprika'\nassert solution('''\npapapripikapa\n''') == 'paprika paprika'\nassert solution('''\npapapripikapa zelena paprika\n''') == 'papapripikapa paprika'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'zelena paprika'\n\nprint(solution(input))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''zepelepenapa papapripikapa''') == 'zelena paprika'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"papapripikapa\") == \"papelena papa peppa papelena papa\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n\nimport sys\nimport re\n\ns = sys.stdin.readline()\nm = re.findall(r'\\w+', s)\nprint(' '.join([m[i]+m[i] for i in range(len(m))]))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"-20 5\") == \"IMPOSSIBLE\"\nassert solution(\"-19 -14\") == \"ALL GOOD\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n32 2\n\"\"\") == \"-32\"\nassert solution(\"\"\"\n-32 -10\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\n-32 -1\n\"\"\") == \"IMPOSSIBLE\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32 2') == \"-32\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('32 2') == '-32'\nassert solution('-33 1') == 'IMPOSSIBLE'\nassert solution('-32 3') == 'IMPOSSIBLE'\nassert solution('33 2') == 'IMPOSSIBLE'\nassert solution('-32 0') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16 0') == \"IMPOSSIBLE\"\nassert solution('-5 0') == \"ALL GOOD\"\nassert solution('0 0') == \"IMPOSSIBLE\"\nassert solution('100 0') == \"IMPOSSIBLE\"\nassert solution('-5 0') == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32 2') == '-32'\nassert solution('2 2') == 'IMPOSSIBLE'\nassert solution('-32 -32') == 'IMPOSSIBLE'\nassert solution('-23 -23') == 'ALL GOOD'\nassert solution('23 23') == 'ALL GOOD'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"30 3\") == \"IMPOSSIBLE\"\nassert solution(\"-30 -2\") == \"-30\"\nassert solution(\"-3 -2\") == \"IMPOSSIBLE\"\nassert solution(\"-10 -20\") == \"IMPOSSIBLE\"\nassert solution(\"100 10\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"IMPOSSIBLE\"\nassert solution(\"4 2\") == \"-32\"\nassert solution(\"0 1\") == \"ALL GOOD\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 2\") == \"IMPOSSIBLE\"\n\"\"\"\nimport math\n\nX = int(input())\nY = int(input())\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 12') == '20 12'\nassert solution('10 -2') == '30'\nassert solution('-1 -2') == '-30'\nassert solution('20 8') == '10'\nassert solution('-5 6') == '-5 6'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"32 -2\") == \"32\"\nassert solution(\"-32 2\") == \"32\"\nassert solution(\"-32 -2\") == \"IMPOSSIBLE\"\nassert solution(\"-32 32\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 23,
        "num_ids_4": 51
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"2 2 3 3\n1 3 4\n\"\"\"\n) == \"both\"\nassert solution(\n    \"\"\"2 2 3 3\n1 4 5\n\"\"\"\n) == \"one\"\nassert solution(\n    \"\"\"2 2 3 3\n1 3 4\n\"\"\"\n) == \"none\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s1) == 'both'\nassert solution(s2) == 'both'\nassert solution(s3) == 'none'\nassert solution(s4) == 'one'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"1 3 4\") == \"none\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"3 3 3\") == \"both\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('1 3 4') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"2 2 4\") == \"none\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2 2 3 3\\n1 3 4\\n') == 'both\\none\\none'\nprint('You passed this test!')",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2 2 3 3\\n'\n    '1 3 4'\n    ) == 'both\\none\\none'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == \"10\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 5') == '4', 'wrong'\nassert solution('2 1 4') == '1', 'wrong'\nassert solution('1 3 5') == '3', 'wrong'\nassert solution('-1 -3 -5') == '-6', 'wrong'\nassert solution('-1 1 -5') == '2', 'wrong'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 6 8\") == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == '10'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 10\nassert solution([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1]) == -1\nassert solution([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0]) == 0\nassert solution([-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 10\n",
        "num_ids_2": 41,
        "num_ids_4": 116
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6 7\") == \"10\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 4 3\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"4 4 3 3 2\") == \"5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 4') == '10'\nassert solution('4 4 5') == '10'\nassert solution('-8 -2 -1') == '-10'\n",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('5 10 20 45') == '35'\nassert solution('1 4 5') == '4'\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('-1 -2 0') == '1'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('-5 6 7') == '10'\nassert solution('-10 1 2') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('-4 -6 -8') == '10'\nassert solution('4 6 8 10') == '10'\nassert solution('-4 -6 -8 10') == '10'\nassert solution('4 6 8 10 9') == '10'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('500 70') == '533'\nassert solution('500 30') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 10\n8 5''') == '5'\nassert solution('''5 10\n5 5''') == '5'\nassert solution('''4 4\n7 4''') == '1'\nassert solution('''3 8\n3 2''') == '1'\nassert solution('''3 5\n3 5''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('500 70') == '533'\nassert solution('100 100') == '502'\nassert solution('800 1000') == '1701'\nassert solution('1520 1520') == '49'\nassert solution('20 25') == '9'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '533'\nassert solution([1,1,1,1]) == '6'\nassert solution([5,70,60,90]) == '88'\nassert solution([10,10,90,90]) == '111'",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5\\n') == '1'\nassert solution('10 20\\n') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('500 70\\n') == '533'\nassert solution('1000 50\\n') == '532'\nassert solution('1000 50\\n') == '533'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '533'\n\"\"\"\n\nimport math",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('500 70') == '533'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"500 80\") == \"566\"\nassert solution(\"900 80\") == \"1007\"\n\n------------------\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.0'\nassert solution('2') == '0.0'\nassert solution('3') == '0.0'\nassert solution('4') == '0.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '39.0'\nassert solution('2') == '30.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('100 60') == '30.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '39.0'\nassert solution('2') == '30.0'\nassert solution('3') == '0.0'\nassert solution('4') == '0.0'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('10 8') == '30.0'\nassert solution('10 9') == '42.0'\nassert solution('10 10') == '42.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10\\n100 10\\n') == '39.0'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 9\") == \"39.0\"\nassert solution(\"100 60\") == \"30.0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4 10\n5 9\n6 6\n''') == '30.0'\nassert solution('''\n1\n1 1\n''') == '1.0'\nassert solution('''\n1\n100 100\n''') == '99.0'\nassert solution('''\n3\n3 3\n2 3\n1 4\n''') == '1.3333333333333333'\nassert solution('''\n3\n3 4\n2 4\n1 3\n''') == '1.25'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n69 60\\n100 60') == '39.0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 9\n69 60\n100 60\n\"\"\") == '39.0'\n\nassert solution(\n\"\"\"\n3 1\n20 9\n30 60\n40 60\n\"\"\") == '30.0'\n\nassert solution(\n\"\"\"\n5 2\n9 26\n2 9\n30 60\n40 60\n50 60\n\"\"\") == '37.0'\n\nassert solution(\n\"\"\"\n3\n30 20\n20 30\n60 30\n\"\"\") == '33.0'\n\nassert solution(\n\"\"\"\n4\n50 5\n5 60\n20 5\n5 60\n\"\"\") == '23.0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n23 27 31 28 30\n''') == '2 28'\n\nassert solution('''5\n1 2 3 4 5\n''') == '1 2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n23 27 31 28 30\\n') == '2 28'\nassert solution('4\\n-20 -20 -20\\n') == '1 -20'\nassert solution('3\\n1 1 1\\n') == '1 1 1'\n",
        "num_ids_2": 42,
        "num_ids_4": 61
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\nassert solution('4\\n10 20 30 40') == '1 40'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n3') == '2'\nassert solution('3\\n4') == '2'\nassert solution('4\\n5') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n23 27 31 28 30\nSample Input 2:\n10\n-20 -10 -12 -10 -15 -20 -10 -15 -15 -10\nSample Output 2:\n1 4\n''') == '2 4'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n23 27 31 28 30\nSample Input:\n6\n10 12 23 20 15 18\nSample Output:\n4 12''') == '4 12'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\\\n5\n23 27 31 28 30\n\"\"\") == \"2 28\"\nassert solution(\"\"\"\\\n5\n-20 -25 -15 -5 -20\n\"\"\") == \"2 5\"\nassert solution(\"\"\"\\\n5\n40 40 30 30 20\n\"\"\") == \"2 5\"\nassert solution(\"\"\"\\\n5\n-20 -25 -15 -5 -20\n\"\"\") == \"4 5\"\nassert solution(\"\"\"\\\n5\n-20 -25 -15 -5 -20\n\"\"\") == \"1 5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 20 25 30\") == \"2 30\"\nassert solution(\"3\\n30 20 25 30\") == \"2 20\"\nassert solution(\"3\\n28 20 25 30\") == \"2 28\"\nassert solution(\"3\\n30 20 25 30\") == \"2 28\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n5\n-4\n5\n10\n5\n-1\n\"\"\") == \"3 7\"\n\nassert solution(\"\"\"\n2\n5\n-1\n5\n10\n5\n-2\n\"\"\") == \"2 5\"\n\nassert solution(\"\"\"\n5\n25\n-2\n25\n10\n25\n-3\n\"\"\") == \"5 10\"\n\nassert solution(\"\"\"\n4\n-8\n-5\n-7\n-2\n\"\"\") == \"4 2\"\n\nassert solution(\"\"\"\n4\n-13\n-14\n-4\n-3\n\"\"\") == \"3 2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '1'\nassert solution('3 2') == '1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6\\n1 2 3') == '2'\nassert solution('5 5\\n4 2 1 2 1') == '3'\nassert solution('4 6\\n1 1 1 3 2 3') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('3 2 4') == '3'\nassert solution('2 2 2 2') == '1'\nassert solution('3 4 5 6') == '2'\nassert solution('1 2 3 4 5') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6') == '2'\nassert solution('5 2') == '1'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3\n''') == '2'\nassert solution('''\n1 1 1\n''') == '1'\nassert solution('''\n1 2 1\n''') == '2'\nassert solution('''\n2 2 3\n''') == '2'\nassert solution('''\n2 2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 7\n1 2 1 2 2\n\"\"\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('5 5 5') == '3'\nassert solution('10 10 10') == '0'\nassert solution('20 20 20') == '0'\nassert solution('10 10 10 10') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 2\n0 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 9\n1 2 3 4 5\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1 2\\n1 2\\n') == '2'\nassert solution('3 4\\n2 1 2\\n1 2 3\\n2 3 4\\n') == '3'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n3 6\n1 2 3\n2 4 5\n3 5 6\n\"\"\") == \"2\"\nprint(solution(r\"\"\"\n2\n3\n3\n\"\"\"))\nassert solution(r\"\"\"\n4\n4 4 4 4\n4 4 2 3\n4 3 3 3\n\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nMWWMWMMWM') == '9'\nassert solution('2\\nMWMMWWWWMW') == '1'\nassert solution('3\\nMWWMMWMMWWM') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"9\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\nMWWMWMMWM\\n\") == \"9\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"9\"\nassert solution(\"5\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nWMW\\nMMW\\nMMMM\\n\") == \"9\"\nassert solution(\"1\\nMWWMMMM\\n\") == \"10\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '10'\nassert solution('3') == '9'\nassert solution('4') == '8'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"7\"\nassert solution(\"3\") == \"4\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '9'\nassert solution('0') == '0'\n\"\"\"\nfrom collections import deque\n\nclass Solution:\n    def solution(self, stdin):\n        people = deque(stdin.split('\\n'))\n        diff = 100000000000000000\n        while len(people) > 1:\n            a = int(people.popleft())\n            b = int(people.popleft())\n            diff = min(diff, abs(a-b))\n            if diff == abs(a-b):\n                people.popleft()\n                people.popleft()\n        return str(diff)\n\nassert Solution().solution(input()) == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('1\\n8 -2 3 undo 2') == '3'\nassert solution('8\\n-2 3 undo 2') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 -2 2\n1 -3 -1\n1 -4 4''') == '0'\nassert solution('''5\n4 -1 1 undo 1\n4 1 2 undo 1\n4 2 3 undo 1\n4 3 -3 undo 1\n4 -1 -2 undo 1\n5 1 -2''') == '3'\nassert solution('''5\n3 2 4 1 undo 1\n4 3 2 1 undo 2\n4 1 1 undo 2\n3 3 -1 undo 2\n1 2 1 undo 2\n2 3 -2''') == '1'\nassert solution('''3\n4 -2 -1 undo 1\n3 1 2 undo 2\n4 2 3 undo 3''') == '2'\nassert solution('''5\n4 -1 1 undo 1\n4 1 2 undo 2\n4 2 3 undo 3\n4 3 4 undo 4\n4 -1 -2 undo 5''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2''') == '3'\nassert solution('''10 8\n6 -3 1 undo 6 undo 5 undo 8 undo 4 undo -9 undo -8 undo undo 3 undo -4 undo -3 undo 2 undo -1 undo''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution('8 -2 3 undo 2') == '3'\nassert solution('5 -1 2 undo 1') == '0'\nprint('Congratulations!')",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2\n''') == '3'\nassert solution('''5 1\n1\n''') == '1'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('3 5\\n8 -2 3 undo 2') == '2'\nassert solution('10 10\\n2 1 -1 undo 1') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('5 4\\n1 2 3 4 -1') == '1'\nassert solution('5 4\\n8 -2 -3 4') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 4\\n5 1 undo 2\\n3 1 undo 3\") == \"2\"\nassert solution(\"5 4\\n5 -1 undo 1\\n3 1 undo 3\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2\") == \"0\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6 7\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 1\n1 2\n''') == '6 7'\nassert solution('''\n3\n1 2 3\n3 2 1\n''') == '7 6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n3 2 1\") == \"6 7\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 2 3\\n\"\n    \"3 2 1\"\n) == \"6 7\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 3\n1 2 3\n3 2 1\n\"\"\") == \"6 7\"\nassert solution(\"\"\"\n3 4\n1 2 3\n3 2 1\n\"\"\") == \"7 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\nassert solution('''\n3 5\n1 3 3 3 1\n2 5 2\n2 1 1\n''') == '3 4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6 7\"\nassert solution(\"1 2 3\") == \"6 7\"\nassert solution(\"3 2 1\") == \"6 7\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '6 7'\nassert solution('3 2 1') == '7 6'\n\"\"\"\n\nfrom collections import deque\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"1 2 3\\n\"\n    \"3 2 1\"\n) == \"6 7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"6 7\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8\\nals when correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\n') == '64 correct\\n'\nassert solution('20\\nals mollen mollen mollen mollen mollen mollen mollen\\nmollen moles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nm",
        "num_ids_2": 1498,
        "num_ids_4": 1498
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\nI am confused\n''') == '''6 correct\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''\n64 correct\n665 incorrect\n'''\n\nassert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''\n64 correct\n665 incorrect\n'''\n\nassert solution('''\n7\nmollen moles\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''\n66 correct\n665 incorrect\n'''\n\nassert solution('''\n7\nmoles\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''\n66 correct\n665 incorrect\n'''\n\nassert solution('''\n7\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '''\n66 correct\n665 incorrect\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '65 incorrect'\nassert solution('''\n5\nklaar klaar klaar klaar klaar klaar\n3\nklaar klaar klaar klaar klaar correct\nklaar klaar klaar klaar klaar incorrect\nklaar klaar klaar klaar klaar correct\nklaar klaar klaar klaar klaar correct\nklaar klaar klaar klaar klaar correct\n''') == '19 incorrect'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\") == \"64 incorrect\\n65 correct\"\nassert solution(\"7\\nals mollen mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\nmolten omit correct\") == \"64 incorrect\\n65 incorrect\\n66 correct\"\n",
        "num_ids_2": 122,
        "num_ids_4": 122
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n') == '64 incorrect\\n665 correct'\nassert solution('3\\nwhen wrong\\nwhen wrong\\n') == '2 incorrect\\n2 incorrect'\nassert solution('3\\nwhen wrong\\nwhen wrong\\n') == '2 incorrect\\n2 incorrect'\nassert solution('10\\nals when correct\\nwhen wrong\\nwhen wrong\\nwhen wrong\\nwhen wrong\\nwhen wrong\\nwhen wrong\\nwhen wrong\\nwhen wrong\\n') == '11 correct\\n11 incorrect'\n",
        "num_ids_2": 63,
        "num_ids_4": 142
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '64 correct\\n665 incorrect'\nassert solution('5') == '0 correct\\n1 incorrect\\n2 incorrect\\n3 incorrect\\n4 incorrect\\n'\nassert solution('8') == '0 correct\\n1 incorrect\\n2 incorrect\\n3 incorrect\\n4 incorrect\\n5 incorrect\\n6 incorrect\\n7 incorrect'\n",
        "num_ids_2": 44,
        "num_ids_4": 83
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"correct\"\nassert solution(\"als mollen mollen mollen mollen mollen mollen mollen mollen\") == \"correct\"\nassert solution(\"als when correct\") == \"correct\"\nassert solution(\"mollen moles correct\") == \"correct\"\nassert solution(\"mollen destroy correct\") == \"correct\"\n",
        "num_ids_2": 35,
        "num_ids_4": 61
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '6'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n3 4\n3\n2''') == '7'\nassert solution('''4\n2 3 4 3\n3\n2''') == '7'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\nassert solution('''\n10\n2 3 4 3 5 6 7 8 9 10\n''') == '11'\nassert solution('''\n8\n2 5 4 6 2 3 1\n''') == '7'\nassert solution('''\n9\n1 2 3 4 5 6 7 8\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"\nassert solution(\"4\\n1 2 3 4\") == \"7\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3 4 3') == '7'\nassert solution('10 2 3 4 3') == '9'\nassert solution('10 2 3 4 3') == '9'\nassert solution('1000000 1000000') == '999'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '7'\nassert solution('4') == '4'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"7\"\n\nSample Input 2:\n2\n1 2 3\nSample Output 2:\n2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3 4\\n') == '7'\nassert solution('10\\n4 1 3 2\\n') == '5'\nprint('The local tests are done. Click return to continue.')\ninput()\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\n\nassert solution('''\n4\n2 3 4 4\n''') == '7'\n\nassert solution('''\n6\n1 2 3 3 3 3\n''') == '5'\n\nassert solution('''\n2\n1 1\n''') == '1'\n\nassert solution('''\n6\n2 3 3 2 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 4 3') == '7'\n\nstdin = input()\nx = int(stdin)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n3 4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 6.0\\n1.0 4.0'\n",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n1\\n0\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1431,
        "num_ids_4": 1431
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n-1 1\n-1 1\n2 1\n2 1\n2 2\n\"\"\") == \"\"\"\n0.0 0.0\n2.0 2.0\n0.0 4.0\n\"\"\".strip()\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n1 1\n0 2''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''1\n0 1\n0 1''') == '1.0 1.0\\n1.0 1.0\\n0.0 2.0'\nassert solution('''4\n0 0\n1 1\n0 2\n4\nSample Output:\n0.0 0.0\n2.0 2.0\n0.0 4.0\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''3\n0 0\n1 1\n0 2\n4\nSample Output:\n0.0 0.0\n2.0 2.0\n0.0 4.0\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3\n    0 0\n    1 1\n    0 2\n    4\n    \"\"\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n\nassert solution('''\n3\n0 0\n1 1\n0 2\n1 4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n\nassert solution('''\n3\n0 0\n1 1\n0 2\n0 0\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n\nassert solution('''\n3\n-2 -3\n-3 3\n-4 4\n''') == '-2 -3\\n-3 3\\n-4 4'\n\nassert solution('''\n3\n2 -2\n0 3\n4 4\n''') == '2 -2\\n0 3\\n4 4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0 4.0'\nassert solution('4\\n0.1 0.1\\n0.2 0.2\\n0.3 0.3\\n0.4 0.4') == '0.5 0.5'\nassert solution('5\\n0.4 0.4\\n0.5 0.5\\n0.6 0.6\\n0.7 0.7\\n0.8 0.8') == '0.9 0.9'\n",
        "num_ids_2": 80,
        "num_ids_4": 135
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n4 5 6') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '101'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n''') == '1'\nassert solution('''\n3\n''') == '2'\nassert solution('''\n5\n''') == '3'\nassert solution('''\n7\n''') == '4'\nassert solution('''\n12\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('5\\n') == '4'\nassert solution('12\\n') == '9'\nassert solution('5\\n') == '4'\nassert solution('15\\n') == '12'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n8 9''') == '18', \"Should be 18\"\nassert solution('''5 1\n9 8''') == '16', \"Should be 16\"\nassert solution('''3 1\n4 7\nSample Input:\n1 6\n4\nSample Output:\n3\n''') == '3', \"Should be 3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '34'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '34'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n4 5') == '5'\nassert solution('12 16\\n4 5') == '17'\nassert solution('1 2\\n2 5') == '1'\nassert solution('0 1\\n2 5') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"34\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '34', solution(\"1 2\")\nassert solution('2 2') == '4', solution(\"3 2\")\nassert solution('1 3') == '3', solution(\"2 3\")\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1\n12 16\n\"\"\") == \"34\"\n\nassert solution(\"\"\"\n10 1\n12 24\n\"\"\") == \"18\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n12 16\") == \"34\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '34'\nassert solution(['3', '1']) == '34'\nassert solution(['12', '16']) == '34'\nassert solution(['0', '1']) == '0'\nassert solution(['0', '2']) == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 5\n6 12\n''') == '16'\nassert solution('''\n2 5\n10 12\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2 1 1') == '3'\nassert solution('1\\n2 3') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3 1\n''') == '3'\n\nassert solution('''\n3\n1 2 3\n''') == '2'\n\nassert solution('''\n4\n1 2 3 1\n''') == '3'\n\nassert solution('''\n1\n1 1 1\n''') == '3'\n\nassert solution('''\n1\n1 1 1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 3 1\n''') == '3'\nprint(solution('''4\n1 2 3 1\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3 1') == '3'\n\nassert solution('5\\n0 1 3 1 1') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1\\n') == '3', \"Should be 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    1 2 3 1\n    ''') == '3'\nassert solution('''\n    6\n    1 2 3 1 2 3\n    ''') == '2'\nassert solution('''\n    10\n    1 2 3 1 2 3 1 2 3 1\n    ''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 3 1\n''') == '3'\nassert solution('''\n4\n1 2 3 1\n1\n''') == '3'\nassert solution('''\n4\n1 2 3 1\n2\n''') == '2'\nassert solution('''\n4\n1 2 3 1\n3\n''') == '1'\nassert solution('''\n4\n1 2 3 1\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 3 1\n''') == '3', 'test 1 failed'\nassert solution('''4\n1 2 3 1\n1 3 4 1\n1 2 5 1\n1 5 6 1\n''') == '1', 'test 2 failed'\nassert solution('''4\n1 2 3 1\n1 3 4 1\n1 2 5 1\n1 5 6 1\n''') == '0', 'test 3 failed'\nassert solution('''4\n1 2 3 1\n1 3 4 1\n1 5 6 1\n1 2 5 1\n''') == '5', 'test 4 failed'\nassert solution('''4\n1 2 3 1\n1 3 4 1\n1 5 6 1\n1 2 5 1\n''') == '1', 'test 5 failed'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"12.000\") == \"1240\"\nassert solution(\"912.000\") == \"9120\"\nassert solution(\"12.1\") == \"12\"\nassert solution(\"0.0\") == \"1088\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1088'\n\nassert solution('1.0') == '1088'\n\nassert solution('1.2') == '1088'\n\nassert solution('3.9') == '1089'\n\nassert solution('3.912') == '1089'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == \"1088\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '1.0'\nassert solution('0.1') == '0.1'\nassert solution('1.0') == '1.0'\nassert solution('2.0') == '2.0'\nassert solution('10.2') == '10.2'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"1.3333\") == \"957\"\nassert solution(\"1.0000\") == \"1088\"\nassert solution(\"1234.000\") == \"2248\"\nassert solution(\"1234\") == \"2248\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0.0') == '1'\nassert solution('1.0') == '10'\nassert solution('2.0') == '21'\nassert solution('5.0') == '59'\nassert solution('6.0') == '60'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.0') == '1088'\nassert solution('0.0') == '0'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"3.0\") == \"300\"\nassert solution(\"100.0\") == \"1.0\"\nassert solution(\"1000.0\") == \"1088\"\nassert solution(\"1000000.0\") == \"100000000\"\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.1') == '1'\nassert solution('11.9') == '1207'\nassert solution('1.4') == '1'\nassert solution('2.3') == '2'\nassert solution('10.1') == '1010'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"1.5\") == \"1128\"\nassert solution(\"1.9\") == \"1118\"\nassert solution(\"1.9\") == \"1118\"\nassert solution(\"1.9\") == \"1118\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"25.000000000\"\nassert solution(\"10 10 10 10\") == \"19.375000000\"\nassert solution(\"0 0 0 0\") == \"0.000000000\"\nassert solution(\"0 0 0 1\") == \"0.000000000\"\nassert solution(\"0 0 1 0\") == \"0.000000000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '25.000000000'\nassert solution('6 5') == '20.000000000'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 4') == '25.000000000'\nassert solution('1 1') == '25.000000000'\nassert solution('1 2') == '10.000000000'\nassert solution('1 3') == '8.000000000'\nassert solution('1 4') == '10.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 4\\n') == '25.000000000'\nassert solution('100 2\\n') == '25.000000000'\nassert solution('10 4\\n') == '25.000000000'\nassert solution('10 2\\n') == '25.000000000'\nassert solution('10 2 0 0\\n') == '25.000000000'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 4\\n') == '25.000000000\\n25.000000000'\nassert solution('100 4\\n0 0 0\\n100 100 100\\n0 0 0\\n100 100 100') == '1.000000000\\n1.000000000\\n1.000000000'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1.000000000'\nassert solution('5 10') == '1.176470588'\nassert solution('4 4') == '2.000000000'\nassert solution('3 2 2') == '1.833333333'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n') == '25.000000000'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n3 4\\n5 5\\n4 3\\n3 3\\n1 2\\n') == '1.0000000000'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 0 0') == '25.000000000'\nassert solution('2 2 2 2') == '25.000000000'\nassert solution('1 2 3 4') == '23.99999999'\nassert solution('5 3 2 4') == '13.000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '25.000000000'\nassert solution('10 10') == '16.000000000'\nassert solution('3 4 2') == '16.000000000'\nassert solution('0 10') == '16.000000000'\nassert solution('5 10 2') == '16.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA'\nassert solution('3\\n4\\n5\\n6\\n7\\n') == 'NE'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''5 3 4\n5\n4\n7\n6\n''') == 'NE'\nassert solution('''5 3 4\n3\n4\n6\n7\n''') == 'NE'\nassert solution('''5 3 4\n4\n4\n3\n2\n''') == 'DA'\nassert solution('''5 3 4\n5\n4\n7\n6\n''') == 'DA'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('2 4 6') == 'NE'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"DA\"\nassert solution(\"5\") == \"DA\"\nassert solution(\"3\") == \"DA\"\nassert solution(\"4\") == \"DA\"\nassert solution(\"10\") == \"DA\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 4\\n3\\n4\\n5\\n6\") == \"DA\\nDA\\nDA\"\nassert solution(\"5 1 4\\n3\\n4\\n5\\n6\") == \"DA\"\nassert solution(\"5 5 6\\n1\\n3\\n4\\n5\\n6\") == \"DA\"\nassert solution(\"6 6 6\\n2\\n3\\n4\\n5\\n6\") == \"DA\"\nassert solution(\"9 9 9\\n1\\n2\\n3\\n4\\n5\\n6\") == \"DA\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3 4\n3\n4\n5\n6\n7\n\"\"\") == \"DA\"\n\nassert solution(\"\"\"\n5 3 4\n3\n4\n5\n6\n7\n\"\"\") == \"DA\"\n\nassert solution(\"\"\"\n5 3 4\n1\n1\n1\n1\n1\n\"\"\") == \"NE\"\n\nassert solution(\"\"\"\n5 3 4\n1\n2\n3\n4\n\"\"\") == \"NE\"\n\nassert solution(\"\"\"\n5 3 4\n1\n2\n2\n4\n\"\"\") == \"NE\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7') == 'DA'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n1\n2\n3\n4\n5\n''') == 'NE'\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'NE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('5 3 2') == 'DA'\nassert solution('3 5 4') == 'NE'\nassert solution('4 5 2') == 'NE'\nassert solution('3 2 5') == 'NE'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == \"DA\"\nassert solution('''\n5 3 4\n3\n4\n5\n6\n7\n8\n''') == \"DA\"\nassert solution('''\n5 2 5\n5\n4\n2\n''') == \"NE\"\nassert solution('''\n5 5 5\n3\n4\n2\n5\n4\n''') == \"NE\"\nassert solution('''\n5 5 5\n1\n2\n3\n4\n5\n''') == \"NE\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n7 42\") == \"6\"\nassert solution(\"1\\n0 0\\n7 0\") == \"7\"\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2\\n1 0') == '6'\nassert solution('2\\n3 4\\n6 2') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 0\n7 42\n3 43\n1 43\n2 45\n''') == '6'\n\nassert solution('''\n9\n0 0\n7 42\n5 43\n1 43\n3 43\n3 44\n1 44\n2 44\n''') == '10'\n\nassert solution('''\n1\n0 0\n10 40\n''') == '10'\n\nassert solution('''\n2\n0 0\n11 11\n''') == '12'\n\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('1') == '0'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 0\\n') == '6'\nassert solution('3\\n0 5\\n9 1\\n') == '8'\nassert solution('4\\n1 2\\n0 1\\n') == '10'\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0 0') == '6'\nassert solution('2\\n7 42') == '6'\nassert solution('3\\n0 1') == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\n    '3',\n    '0 4',\n    '0 0',\n    '1 4',\n    '1 0'\n]) == '5'\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 0\n9 28\n11 18\nSample Input:\n2\n0 0\n7 4\nSample Output:\n6\n\"\"\") == \"6\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n-> LALA\n-> AAL\n-> XAL\n-> LALX\n-> AALX\n-> XALX\n-> LALA\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n-> XALX\n-> LALX\n-> AALX\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"correct\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'correct'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == 'correct'\nassert solution('4\\n') == 'correct'\nassert solution('5\\n') == 'correct'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"correct\"\nassert solution(\"2\") == \"correct\"\nassert solution(\"3\") == \"correct\"\nassert solution(\"4\") == \"correct\"\nassert solution(\"5\") == \"correct\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n-> 2\n2 4 5 ->\n\"\"\") == \"correct\", \"First example\"\nassert solution(\"\"\"\n2\n->\n3 4 5 ->\n\"\"\") == \"correct\", \"Second example\"\nassert solution(\"\"\"\n2\n->\n2 3 1 ->\n\"\"\") == \"correct\", \"Third example\"\nassert solution(\"\"\"\n1\n->\n2 3 1 ->\n\"\"\") == \"correct\", \"Fourth example\"\nassert solution(\"\"\"\n1\n->\n\"\"\") == \"correct\", \"Fifth example\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"correct\"\nassert solution('''\n-> A B\nA -> B\nB -> A\n''') == \"correct\"\nassert solution('''\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A\n-> A",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    -> ALICE\n    -> BOB\n    ALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n    ->\n    ->\n    ->\n''') == 'correct'\nassert solution('''\n    ->\n    ->\n''') == 'correct'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"correct\"\nassert solution(\"2\") == \"correct\"\nassert solution(\"3\") == \"correct\"\nassert solution(\"4\") == \"correct\"\nassert solution(\"5\") == \"correct\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n-> A\n-> B\nA B -> C\n''') == 'correct'\nassert solution('''\n2\n-> A\n-> B\nALICE A -> CARL\n''') == 'correct'\nassert solution('''\n4\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\") == \"Connie Froggatt\"\nassert solution(\"\") == \"Runoff!\"\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFroggatt\nJoseph\nIvers\nConnie\nFroggatt\nPenny\nConnie\nFroggatt\nBruce\nStanger\nConnie\nFroggatt\nBarbara\nSkinner\n***''') == 'Connie Froggatt'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Connie Froggatt'\nassert solution('Martin Graham\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nMartin Graham\\nConnie Froggatt\\nConnie Froggatt\\nMartin Graham\\nConnie Froggatt\\n') == 'Connie Froggatt'\n'''",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['Penny', 'Franklin', 'Marti', 'Graham', 'Connie', 'Froggatt', 'Billy', 'Stanger']) == 'Connie Froggatt'\nassert solution(['Penny', 'Franklin', 'Marti', 'Graham', 'Connie', 'Froggatt', 'Billy', 'Stanger', 'Barbara', 'Skinner']) == 'Barbara Skinner'\nassert solution(['Penny', 'Franklin', 'Marti', 'Graham', 'Connie', 'Froggatt', 'Billy', 'Stanger', 'Barbara', 'Skinner', 'Connie', 'Froggatt', 'Barbara', 'Skinner']) == 'Connie Froggatt'\n\n\"\"\"\n",
        "num_ids_2": 96,
        "num_ids_4": 167
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Connie Froggatt'\n\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Connie Froggatt'\n\nassert solution('''\n\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Connie Froggatt'\n\nassert solution('''\n\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Penny Franklin'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\nConnie Froggatt''') == 'Connie Froggatt'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\nConnie Froggatt''') == 'Connie Froggatt'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\nConnie Froggatt''') == 'Connie Froggatt'\n'''",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Penny Franklin'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Penny Franklin\") == \"Connie Froggatt\"\nassert solution(\"Marti Graham\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Runoff!\"\nassert solution(\"Weird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\n\") == \"Weird.\"\nassert solution(\"Weird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\nWeird.\\n\") == \"Weird.\"\nassert solution(\"X\\nY\\nX\\nY\\nX\\nY\\nX\\nY\\nX\\nY\\nX\\nY\\nX\\nY\\nX\\nY\\n\") == \"X\"\n",
        "num_ids_2": 149,
        "num_ids_4": 264
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt') == 'Connie Froggatt'\nprint(solution(input()))\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nJabba-the-Hutt Huttese\\nChewbacca Shyriiwook Basic\\nBoba-Fett Basic Huttese') == '2'\nassert solution('2\\nLuke Basic Jawaese Binary\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nR2D2 Binary Basic\\nLuke Basic Jawaese Binary\\nChewbacca Shyriiwook Basic\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese') == '1'\nassert solution('3\\nLuke Basic Jawaese Binary\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nR2D2 Binary Basic\\nLuke Basic Jawaese Binary\\nChewbacca Shyriiwook Basic\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese') == '1'\nassert solution('4\\nLuke Basic Jawaese Binary\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nR2D2 Binary Basic\\nLuke Basic Jawaese Binary\\nChewbacca Shyriiwook Basic\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese') == '2'\nassert solution('5\\nLuke Basic Jawaese Binary\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nR2D2 Binary Basic\\nLuke Basic Jawaese Binary\\nChewbacca Shyriiwook Basic\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese') == '1'\n",
        "num_ids_2": 216,
        "num_ids_4": 472
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\n\nassert solution('9\\nR2D2 Binary Basic\\nLuke Basic Jawaese\\nGrakchawwaa Shyriiwook Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese\\nLuke Basic Jawaese') == '3'\n\nassert solution('4\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese') == '1'\n\nassert solution('11\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese\\nLuke Jawaese') == '1'\n",
        "num_ids_2": 185,
        "num_ids_4": 319
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese') == '2'\nassert solution('8\\nFrankie Franky Margot Margot-Frankie Margot Margot-Frankie Margot Margot-Frankie Margot Margot-Frankie Margot\\nFrankie Franky Margot Margot-Frankie Margot Margot-Frankie Margot Margot-Frankie Margot Margot-Frankie Margot') == '3'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '4'\n",
        "num_ids_2": 162,
        "num_ids_4": 474
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\nassert solution('4\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '1'\nassert solution('3\\nJabba-the-Hutt Huttese\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese') == '1'\nassert solution('5\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nSeth R2D2 Basic Jawaese') == '3'",
        "num_ids_2": 154,
        "num_ids_4": 278
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '2'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n1 100 20 20\n100\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"5 5 10 3\") == \"500\"\nassert solution(\"100 5 10 3\") == \"500\"\nassert solution(\"1 100 10 3\") == \"100\"\nassert solution(\"10 3 1 2\") == \"100\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1000 2 3\n200\n0 2 2\n300\n27 3 20''') == '900', '3 days'\n\nassert solution('''3 1000 2 3\n100\n0 2 2\n300\n27 3 20''') == '300', '2 nights'\n\nassert solution('''5 200 1 1\n100\n100\n100\n100\n100\n200''') == '200', '5 nights'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('2 3000 2 3') == '3000'\nassert solution('2 1000 2 3') == '1200'\nassert solution('3 1000 2 3') == '1200'\nassert solution('3 1000 2 3') == '1200'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"stay home\"\nassert solution('3') == \"900\"\nassert solution('3 10 3') == \"900\"\nassert solution('3 1000 2 3') == \"300\"\nassert solution('3 1000 2 3') == \"900\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('200') =='stay home'\nassert solution('300') =='stay home'\nassert solution('27 3 20') == '900'\nassert solution('1000000000 10 3 8') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('1 1000 2 3') == '900'\nassert solution('1 100000 2 3') == '900'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n4 5 3 2\n1 1 1 1\n1 1 2 2\n1 2 3 2\n1 2 3 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('3 1000 2 3') == '900'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"2 1000 2 3\") == \"300\"\nassert solution(\"3 1000 2 3\") == \"900\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1\\nC D F D C D F F F C'\n) == 'A# C D# F'\nassert solution(\n    '5\\nD D D D E E E E'\n) == 'A# E F# G'\nassert solution(\n    '10\\n
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'none'\nassert solution('5') == 'A C D E F'\nassert solution('10') == 'A C D E F G A'\nassert solution('15') == 'A C D E F G A# A'\nassert solution('20') == 'A C D E F G A# A B'\n",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"A# C D# F\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\nC D F D C D F F C \n''') == 'A# C D# F'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"A# C D# F\"\nassert solution(\"12\") == \"A# C D# F E# G# A#\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"A# C D# F\"\nassert solution(\"2\") == \"A# C D# F F F C\"\nassert solution(\"3\") == \"A# C D# F F C\"\nassert solution(\"4\") == \"A# C D# F F C\"\nassert solution(\"5\") == \"A# C D# F F C\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nC D F D C D F F F C \n''') == 'A# C D# F'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'A# C D# F'\nassert solution('2') == 'none'\nassert solution('3') == 'A# C D# F# G'\nassert solution('4') == 'none'\nassert solution('5') == 'A# C D# F# G# A'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''C D F D C D F F F C \n    ''') == 'A# C D# F'\nprint('all good')",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'A# C D# F'\nassert solution('10') == 'A# C D# F'\nassert solution('10') == 'A# C D# F'\nassert solution('3') == 'none'\n",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('dae ae ju traeligt va') == 'haer talar vi rikssvenska'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''dae ae ju traeligt va\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n    aa aa aa aa\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''dae ae ju traeligt va''') == 'dae ae ju traeligt va', \"Wrong!\"\nassert solution('''haer talar vi rikssvenska''') == 'haer talar vi rikssvenska', \"Wrong!\"\nassert solution('''dae ae ju traeligt va ae ae ju traeligt va''') == 'dae ae ju traeligt va ae ae ju traeligt va', \"Wrong!\"\nassert solution('''haer talar vi rikssvenska ae ae ju traeligt va''') == 'haer talar vi rikssvenska ae ae ju traeligt va', \"Wrong!\"\n'''",
        "num_ids_2": 74,
        "num_ids_4": 188
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('dae ae kongeratsopp det h\u00e4r') == 'dae ae kongeratsopp det h\u00e4r'\n",
        "num_ids_2": 60,
        "num_ids_4": 96
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"d\u00e4 d\u00e4d\u00e4 d\u00e4d\u00e4\") == \"d\u00e4 d\u00e4d\u00e4 d\u00e4d\u00e4\"\n\nInput:\ndae ae ju traeligt va\ndae ae ju traeligt va\nd\u00e4 d\u00e4d\u00e4 d\u00e4d\u00e4\nSample Output:\ndae ae ju traeligt va\nhaer talar vi rikssvenska\nd\u00e4 d\u00e4d\u00e4 d\u00e4d\u00e4\n'''\n\nstdin = input()\nstdin2 = input()",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('\u00e5tt ae ja me') == '\u00e5tt ae ja me'\nassert solution('venska st\u00f6d') == 'haer talar vi rikssvenska'\nassert solution('\u00e5rra ena \u00fei ha') == '\u00e5rra ena \u00fei ha'\nassert solution('\u00e5tt ae ja me') == '\u00e5tt ae ja me'",
        "num_ids_2": 48,
        "num_ids_4": 98
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''dae ae ju traeligt va\nhaer talar vi rikssvenska''') == 'dae ae ju traeligt va'\nprint(solution('''dae ae ju traeligt va\nhaer talar vi rikssvenska'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"a e j u t re \u00e4 lig t va\") == \"a e j u t re \u00e4 lig t va\"\nassert solution(\"i n\u00e5dd bara ta ne\") == \"i n\u00e5dd bara ta ne\"\nassert solution(\"i n\u00e5dd bara ta ne eksakt\") == \"i n\u00e5dd bara ta ne eksakt\"\nassert solution(\"g\u00e4lla a eksakt\") == \"g\u00e4lla a eksakt\"\n",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa",
        "num_ids_2": 1673,
        "num_ids_4": 1673
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n....#.\n....#.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n\"\n\"....#.\\n\"\n\"....#.\\n\"\n\"#.....\\n\"\n\"......\\n\"\n\"##...#\\n\") == \"E..E#\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\n\nassert solution(\"8 9\\n\"\n\"#.##.#\\n\"\n\"####..\\n\"\n\"##.##.\\n\"\n\"#.#.#.\\n\"\n\"#.#.##\\n\"\n\"#.###.#\\n\"\n\"####.#.\\n\"\n\"#.#.###\\n\"\n\"#.#####\\n\") == \"E...E#\\nE.#.#E\\n.#.##E\\nE#.##E\\n#.##.#\\nE.###E\\n.#.###E\\nE.#####\\n#.#####\\nE#.#####\\n\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n....#.\n....#.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\nassert solution('10 10') == 'E..E#E\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\nE..E#E\\n..E.#E\\n#..E..'\nassert solution('10 10') == 'E..E#E\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\nE..E#E\\n..E.#E\\n#..E..'\nassert solution('6 9') == 'E..E#E\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\nE..E#E\\n..E.#E\\n#..E..'\n",
        "num_ids_2": 99,
        "num_ids_4": 217
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5 6\n.#..#.\n.#..#.\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\nassert solution('100 10') == '......#.....#....###'\nassert solution('10 11') == '#..#....#...###'\nassert solution('100 100') == '#.####...#####.##'\nassert solution
        "num_ids_2": 56,
        "num_ids_4": 91
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"1 1 1 1 1\") == \"1 1 1\"\nassert solution(\"0 0 0 0 0\") == \"0 0 0\"",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"12 10 3 8 4 2\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n12 8 2 4 10 3 25 14\n''') == '12 10 3 8 4 2'\nassert solution('''\n3 4 2 8 10 14 12\n''') == '3 4 2 8 10'\nassert solution('''\n8 2 4 10 3 25 14\n''') == '8 4 2 10 3'\nassert solution('''\n8 2 4 10 3 2 25\n''') == '8 4 2 10'\nassert solution('''\n10 8 2 4 10 3 2 25\n''') == '8 10 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 4 2 1 3') == '1 3 2 8'\nassert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 9 1\n6 2 5 3''') == '5 9 1'\nassert solution('''11 1\n6 2 3''') == '6 2 3'\nassert solution('''5 4 2\n7 4 8''') == '5 4 2'\nassert solution('''4 1\n2 2''') == '4 1'\nassert solution('''1 1\n1 1''') == '1 1'\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 0 3') == '4'\nassert solution('8 0 3') == '0'\nassert solution('5 0 3') == '0'\nassert solution('0 0 3') == '3'\nassert solution('5 10 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\ne f c\n0 3 2\n    \"\"\"\n    ) == \"4\"\n    assert solution(\n    \"\"\"\n1 1 1\n0 1 1\n    \"\"\"\n    ) == \"0\"\n    assert solution(\n    \"\"\"\n1 2 3\n0 1 1\n    \"\"\"\n    ) == \"0\"\n    assert solution(\n    \"\"\"\n2 1 1\n0 2 1\n    \"\"\"\n    ) == \"1\"\n    assert solution(\n    \"\"\"\n2 2 1\n0 2 1\n    \"\"\"\n    ) == \"0\"\n    ",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"4\"\nassert solution([9,0,3]) == \"4\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 0 3\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('9 0 4') == '0'\nassert solution('0 10 1') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 0 3') == '4'\nassert solution('10 0 3') == '9'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == ''\nassert solution('0 0 1') == ''\nassert solution('0 0 0 1') == '1'\nassert solution('0 1 1') == '1'\nassert solution('1 1 1') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0\\n3') == '4'\nassert solution('8\\n4\\n3') == '2'\nassert solution('9\\n0\\n3') == '4'\nassert solution('0\\n1\\n1') == '2'\nassert solution('0\\n2\\n1') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\nassert solution('0011011010') == '74'\nassert solution('10100110') == '73'\nprint(f'Congratulations, had you done this exercise, you are done for today!')\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1010') == '12'\nprint(solution('1010'))\n\n\n\n-------Submissions-------\nSolution:\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1010') == '12'\nassert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\"\nprint(solution(\"1010\"))\nprint(solution(\"10101\"))\nprint(solution(\"101010\"))\nprint(solution(\"0101010101010\"))\nprint(solution(\"10101010101010101\"))\nprint(solution
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1010') == '12'\nassert solution('0001') == '1'\nassert solution('0000') == '0'\nassert solution('11111111') == '37'\nprint(solution(input()))\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1010') == '12'\nassert solution('110101010') == '26'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '31'\nassert solution('1100') == '20'\nassert solution('1101') == '21'\nassert solution('1110') == '22'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('01010') == '12'\nassert solution('1111') == '18'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1010') == '12'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"1111\") == \"31\"\nassert solution(\"10001\") == \"61\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n..o\no..\no..''') == '2'\n\nassert solution('''10 10\no..\n..o\n..o\n..o\no..\no..\no..''') == '4'\n\nassert solution('''15 15\no..\n..o\n..o\n.o.\n.o.\n.o.\n.o.\n.o.\no..''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2'\nassert solution('5 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\n\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\".o.o.o\") == \"3\"\nassert solution(\"o.o.o\") == \"3\"\nassert solution(\".o\") == \"2\"\nassert solution(\"o\") == \"2\"\nassert solution(\"..o\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 50
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n.o.\n.o.\n.o.\n''') == '6'\n\nassert solution('''3 4\n.o.\n.o.\n.o.\n''') == '5'\n\nassert solution('''10 20\n...\n...\n...\n...\n...\n...\n''') == '81'\n\nassert solution('''10 20\n...\n...\n...\no.\n...\n...\n''') == '81'\n\nassert solution('''10 20\n...\n...\n...\n...\n...\n...\n''') == '81'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n.o\n.o\n''') == '2'\n\nassert solution('''\n4 5\n.....\n.....\no...o\n.....\n''') == '3'\n\nassert solution('''\n6 6\noo.o.\no.o.\no.ooo\nooo.o\no.ooo\nooo.ooo\no.o.o\no.ooo\nooo.o\n''') == '8'\n\nassert solution('''\n4 6\n.....\n.....\no.o.o\n.....\n''') == '3'\n\nassert solution('''\n6 6\nooo.o\no.ooo\no.ooo\no.ooo\nooo.o\no.ooo\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n.o\\n.o') == '2'\nassert solution('1\\n1\\no\\no\\n1\\n1\\n.o\\no\\n') == '4'\nassert solution('2\\n2\\n.o\\n.o') == '1'\nassert solution('2\\n2\\no\\no\\no\\no\\no\\no\\no') == '3'\n",
        "num_ids_2": 52,
        "num_ids_4": 100
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n..o\\no..') == '2'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('5 3') == 'LADICA'\n\nINPUT:\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\nSample Output:\nSMECE\nSMECE\nSMECE\nLADICA\nLADICA\nLADICA\nSMECE\nSMECE\nLADICA\nSMECE\nSMECE\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"LADICA\\nSMECE\\nSMECE\\nLADICA\\nSMECE\"\nassert solution(\"10 10\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1 3\\n1 2\\n1 2\\n1",
        "num_ids_2": 1402,
        "num_ids_4": 1402
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'LADICA'\nassert solution('1 3') == 'LADICA'\nassert solution('1 2') == 'LADICA'\nassert solution('1 3') == 'SMECE'\nassert solution('1 2') == 'SMECE'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"SMECE\"\nassert solution(\"6 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n\") == \"SMECE\"\nassert solution(\"3 3\\n1 2\\n1 3\\n1 2\\n1 3\\n\") == \"SMECE\"\nassert solution(\"3 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"SMECE\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\"\n",
        "num_ids_2": 70,
        "num_ids_4": 136
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA\\nSMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA\\nSMECE'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA\\nSMECE'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n\nassert solution('''\n4\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\nSMECE\\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\"\n) == \"LADICA\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\"\n) == \"LADICA\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\"\n) == \"SMECE\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\"\n) == \"SMECE\"\nassert solution(\n    \"5 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"1 2\"\n) == \"SMECE\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == 'LADICA'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10 10\n2 3\n1 3\n2 3\n1 3\n2 3\n2 3\n2 3\n2 3\n3 3\n3 3\n2 3\n3 3\n3 3\n2 3\n\"\"\") == \"LADICA LADICA\"\n\nassert solution(\n\"\"\"\n10 5\n3 3\n1 3\n2 3\n2 3\n2 3\n2 3\n3 3\n3 3\n2 3\n3 3\n3 3\n\"\"\") == \"LADICA SMECE\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 3 2 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 2\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '0 1 2 3 4'\nassert solution('10') == '0 1 2 3 4 5 6 7 8 9'\n",
        "num_ids_2": 25,
        "num_ids_4": 44
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n0\n''') == '1 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1 2\"\nassert solution('2') == \"1 2\"\nassert solution('3') == \"1 2 3\"\nassert solution('4') == \"1 3 2 4\"\nassert solution('5') == \"1 4 3 2 5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1 2'\nprint(solution('''\n5\n0\n2\n4\n1\n3\n'''))\nprint(solution('''\n7\n0 2 2 1 3 2\n'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0\") == \"1 2\"\nassert solution(\"3\\n0 1 2\") == \"1 2 3\"\nassert solution(\"4\\n0 1 2 3\") == \"1 2 3 4\"\n",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n5 2\\n0 0\\n0 1\\n1 2') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1', \"First\"\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1', \"Second\"\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '4', \"Third\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 3\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 4\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 3\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 4\") == \"0\"\n",
        "num_ids_2": 78,
        "num_ids_4": 160
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '1'\n\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '0'\n\nassert solution('''7 10 7\n4 3 5\n2 2 2\n4 5\n5 3\n1 3\n5 5\n1 4\n1 2\n4 5\n2 2\n3 4\n1 3\n4 5''') == '3'\n\nassert solution('''10 10 5\n0 9 9\n0 3\n1 4\n1 3\n2 4\n2 3\n3 4\n1 3\n2 4\n3 4\n4 5\n5 5\n5 4\n1 5\n1 2\n5 5\n0 2\n2 2\n3 4\n1 3\n4 4\n3 3\n2 4\n4 4\n0 1\n0 1\n2 3\n3 3\n1 1\n1 1\n4 2\n0 1\n0 1\n1 2\n2 3\n3 4\n0 4\n0 2\n0 2\n1 1\n4 5\n3 4\n0 4\n0 4\n0 4\n0 4\n1 1\n1 2\n2 3\n4 2\n1 1\n2 2\n1 1\n2 2\n2 2\n4 2\n2 2\n0 1\n2 1\n0 1\n2 1\n4 2\n1 3\n4 4\n0 4\n4 4\n1 4\n2 4\n0 3\n0 3\n0 3\n0 3\n1 3\n0 4\n0 3\n0 3\n0 3\n1 3\n1 3\n0 1\n0 3\n0 2\n0 3\n0 3\n0 3\n0 3\n0 2\n1 3\n0 2\n0 3\n0 3\n1 3\n0 3\n0 4\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 2\n1 2\n0 4\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 4\n0 3\n0 3\n0 3\n0 3\n0 3\n0 3\n0 4\n0 3\n0 4\n0 3\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0 4\n0",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nprint('Solution: {}'.format(solution(input())))\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '4'\n\nassert solution('''\n6 3 5\n1 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '4'\n\nassert solution('''\n6 3 5\n1 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\n\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 5') == '1'\nassert solution('6 3 5 0 2') == '1'\nassert solution('6 3 5 0 2 3 5') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('6 3 5') == '5'\nassert solution('9 3 5') == '3'\nassert solution('5 3 2') == '2'\nassert solution('1 3 2') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n') == '1'\nassert solution('1000000\\n0\\n0\\n') == '0'\nassert solution('3\\n0 2\\n1 2\\n1 2\\n0 2\\n0 1\\n0 2\\n1 2\\n0 2\\n0 2\\n1 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2\\n0 2",
        "num_ids_2": 58,
        "num_ids_4": 1411
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'\nassert solution('3\\n1 4 3') == '4 3 1'\nassert solution('3\\n1 5 4') == '4 3 1'\nassert solution('3\\n5 3 1') == '4 3 1'\nassert solution('3\\n1 2 3') == 'Impossible'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '3 1 2 4'\nassert solution('6') == '4 3 2 1'\nassert solution('7') == '3 2 1 4 5'\nassert solution('8') == '5 1 2 3 4'",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3\\n') == '2 3 1'\nassert solution('3\\n1 2 3\\n') == '3 2 1'\nassert solution('1\\n2 3\\n4 5\\n') == '1 3 2 4 5'\nassert solution('1\\n5 2 3\\n4 1\\n') == '1 4 2 3 5'\n",
        "num_ids_2": 37,
        "num_ids_4": 86
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 3\n2 4\n''') == 'impossible', 'Just checking!'\nassert solution('''8\n5 6 2 6 5 7 3 6\n''') == '2 4 1 5 3 6 7', 'Just checking!'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 3 4\n\"\"\") == \"4 3 1\"\nassert solution(\"\"\"\n4\n3 1 5 2\n\"\"\") == \"5 3 1 2 4\"\nassert solution(\"\"\"\n5\n1 5 2 4 3\n\"\"\") == \"5 4 1 3 2\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 3 4\n\"\"\") == \"4 3 1\"\nassert solution(\"\"\"\n2\n4 5\n\"\"\") == \"1 2 4 5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1 3 4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3\n1 3 4\n\"\"\") == \"4 3 1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\nassert solution(\"5\\n4 4 3 2 1\") == \"2 1 4 3\"\nassert solution(\"5\\n4 4 3 2 1\\n5 4 4 4 2 1\\n5 4 4 3 2 1\") == \"4 1 2 3 4 5\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 3 4\n''') == '4 3 1'\n\n'''\n3\n1 3 4\n1 4 3\n1 2 4\n2 3 1\n2 4 3\n2 4 1\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('4 2 7') == '7.000'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('1 1') == '1.000'\nassert solution('2 3') == '2.000'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n10') == '18.400'\nassert solution('2\\n5\\n10') == '20.000'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10\n3 10\n''') == '18.400'\nprint('Congratulations! Your solution is correct.')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 20 15\n3 10''') == '18.400'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 20 15') == '18.400', f\"{solution('2 20 15')} should be '18.400'\"\nassert solution('1 2 3') == '2.000', f\"{solution('1 2 3')} should be '2.000'\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.0'\nassert solution('2') == '0.4'\nassert solution('3') == '1.0'\nassert solution('4') == '1.3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 20 15\n3 10\n''') == '18.400'\nprint('a', solution('a'))\nprint('b', solution('b'))\nprint('c', solution('c'))\nprint('d', solution('d'))\nprint('e', solution('e'))\nprint('f', solution('f'))\nprint('g', solution('g'))\nprint('h', solution('h'))\nprint('i', solution('i'))\nprint('j', solution('j'))\nprint('k', solution('k'))\nprint('l', solution('l'))\nprint('m', solution('m'))\nprint('n', solution('n'))\nprint('o', solution('o'))\nprint('p', solution('p'))\nprint('q', solution('q'))\nprint('r', solution('r'))\nprint('s', solution('s'))\nprint('t', solution('t'))\nprint('u', solution('u'))\nprint('v', solution('v'))\nprint('w', solution('w'))\nprint('x', solution('x'))\nprint('y', solution('y'))\nprint('z', solution('z'))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('6 10') == '9.600'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 20 5\n3 10''') == '18.400'\nassert solution('''5 20 10\n4 10''') == '18.500'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n...H\\n.....\\nS....\\n....H\\n.....') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n....H\n.....\nS....\n....H\n.....\n''') == '5'\n\nassert solution('''\n.....\nS....\n....H\n.....\n.....\n''') == '3'\n\nassert solution('''\n.S...\n.....\n...S..\n.....\n.....\n''') == '5'\n\nassert solution('''\n.....\nS....\n....H\n.....\n...S..\n.....\n''') == '4'\n\nassert solution('''\n.....\nS....\n.....\n...S..\n.....\n.....\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n....H\\n.....\\nS....\\n....H\\n.....\\n\"\n) == \"5\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n.S.\n...H\n...H''') == \"4\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('9') == '9'\nassert solution('7') == '4'\nassert solution('3') == '3'\nassert solution('10') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n.....\nS....\n....H\n.....\n''') == \"5\"\nassert solution('''3\n....S\n...SH\n.HHH''') == \"4\"\nassert solution('''6\n.SH.\n.S.H\n.SH\nS.H.\nSH.\nS.H''') == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n....H\n.....\nS....\n....H\n.....\n''') == '5'\nassert solution('''3\n....H\n....H\n.....\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n2 2\\n1 2') == '0'\nassert solution('5\\n1 2\\n3 4\\n2 5\\n4 6') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '0', \"error\"\nassert solution('5 2 3\\n1 3 5') == '0', \"error\"\n\n\"\"\"\nimport math\nfrom typing import List\n\nN, S, R = input().split()\nN = int(N)\nS = int(S)\nR = int(R)\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2 3\n2 4\n1 3 5\n''') == '0'\n\nassert solution('''\n5 2 3\n2 4\n1 3 5\n2 5\n''') == '1'\n\nassert solution('''\n5 2 3\n2 4\n1 3 5\n2 5\n''') == '2'\n\nassert solution('''\n5 2 3\n2 4\n1 3 5\n2 5\n2 4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"10 10\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\nassert solution('''4 5 2\n1 3\n2 3\n3 4\n4 5''') == '1'\nassert solution('''5 2 4\n2 4\n1 3\n3 5\n3 4\n4 5''') == '2'\nassert solution('''5 5 2\n1 3\n2 4\n3 4\n4 5''') == '1'\nassert solution('''5 5 4\n2 4\n1 3\n3 5\n4 5''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 5') == '1'\nassert solution('5 3') == '2'\nassert solution('2 1') == '3'\nassert solution('5 1') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n\ninput()\ninput()\ninput()\n\n\"\"\"\n) == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"5 2 3\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"5 5 3\") == \"1\"\nassert solution(\"4 5 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == '0'\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.000000000'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 1') == '0.000000000'\nassert solution('1 1') == '0.000000000'\nassert solution('1 1') == '0.000000000'\nassert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('4 5') == '0.0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0.000000000'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '0.500000'\nassert solution('1 1') == '0.500000'\nassert solution('1 0.1') == '0.500000'\n\n---\nSolution 1\n------------",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 1') == '0.000000000'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 2') == '0.000000000'\nassert solution('2 1') == '1.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('2 0') == '0.000000000'\nassert solution('10 2') == '1.5000000000000001'\n'''\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '0.3333333333'\nassert solution('8 12') == '0.5'\nassert solution('16 32') == '1.0'\nassert solution('30 80') == '1.0'\n\"\"\"\n\nimport math\n\nradius, cheese = map(int, input().split())\n\nprint(math.pi * radius ** 2 / (4 * cheese))\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n101 102 103 488 100\n103 102 101 488 100\n\"\"\") == '2'\nassert solution(\"\"\"\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n101 102 103 488 100\n103 102 101 488 100\n\"\"\") == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\nassert solution('4\\n200 200 300 101 102\\n103 102 101 488 100\\n200 200 300 101 102\\n100 101 102 488 100') == '1'\n\nInput: 7\n3\n0 0 0 0 0 0\n1 1 1 1 1 1\n2 2 2 2 2 2\n1 2 1 2 1 1\n2 1 1 2 1 1\n2 1 1 2 1 1\n1 2 1 2 1 1\n1 2 1 2 1 1\n2 1 1 2 1 1\n1 1 1 2 1 1\n2 2 2 2 2 2\n2 1 2 1 2 1\n1 2 1 2 1 1\n1 2 1 1 1 1\n2 2 2 2 2 2\n1 1 1 2 1 1\n1 2 1 1 2 1\n1 1 1 1 2 1\n1 2 1 1 1 1\n2 2 2 2 2 2\n1 1 1 1 1 1\n2 1 1 1 1 1\n1 1 1 1 2 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n2 1 1 1 1 1\n2 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n2 2 2 2 2 2\n1 2 1 1 2 1\n1 1 1 1 2 1\n2 1 1 1 2 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('10') == '10'\nassert solution('100') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100''') == '2'\nassert solution('''10\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100''') == '4'\nassert solution('''1\n2\n3''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    100 101 102 103 488\n    100 200 300 101 102\n    103 102 101 488 100\n    101 100 101 488 100\n    103 200 300 101 102\n''') == '2'\n\nassert solution('''\n    7\n    100 101 102 103 488\n    100 200 300 101 102\n    103 102 101 488 100\n    101 100 101 488 100\n    103 200 300 101 102\n    101 100 101 488 100\n    103 102 101 488 100\n''') == '1'\n\nassert solution('''\n    7\n    100 101 102 103 488\n    100 200 300 101 102\n    103 102 101 488 100\n    101 100 101 488 100\n    103 200 300 101 102\n    101 100 101 488 100\n    103 102 101 488 100\n''') == '3'\n\nassert solution('''\n    4\n    100 101 102 103\n    100 200 300 101\n    101 102 101\n    103 102 101\n''') == '0'\n\nassert solution('''\n    7\n    100 101 102 103\n    100 200 300 101\n    103 102 101\n    101 100 101\n    103 200 300 101\n    101 100 101\n    103 102 101\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n') == '2'\nassert solution('10\\n5 8 4 7 3\\n8 7 3 1\\n4 1 2\\n7\\n') == '3'\nassert solution('7\\n1 2 3 4 5 6\\n1 2\\n3 4 5\\n1\\n') == '6'\nassert solution('10\\n1 2 3 4 5 6\\n1 2\\n3 4 5\\n1\\n') == '10'\nassert solution('100\\n200 300\\n300 200\\n300\\n400 500\\n500 400\\n500\\n') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 132
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'none'\nassert solution('6') == '1729'\nassert solution('5') == '1729'\nassert solution('20') == 'none'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"9\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\nassert solution('5') == None\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1730') == '1729'\nassert solution('15') == 'None'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1729\"\n\n---\nSample Input:\n10\nSample Output:\nNone\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('20\\n') == '19'\nassert solution('50\\n') == '49'\nassert solution('100\\n') == '99'\nassert solution('400\\n') == '399'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1730\") == \"1729\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1729'\nassert solution(stdin=\"-1\") == None\nassert solution(stdin=\"10\") == None\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('40000') == '40000'\nassert solution('100') == '100'\nassert solution('1000000') == '1000000'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"65536\") == \"16\"\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65536') == '16'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('65536') == '16'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\n3\n1\n4\n''') == \"16\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('65536') == '16'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('65536') == '16'\nassert solution('10000') == '32'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('65536') == '16'\nassert solution('5') == '5'\nassert solution('7') == '4'\nassert solution('20') == '12'\nassert solution('1000000') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"65536\") == \"16\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\n9\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\n\"\"\"\n\nN = int(input())\n\ngrid = []\n\nfor i in range(N):\n    grid.append(input())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n....\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n.\n.\n.\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n...\n..#\n.#.\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n###\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n....\n....\n....\n...K\n''') == '2'\n\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n....\n....\n....\n...K\n''') == '-1'\nassert solution('''\n5\n....\n....\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n.#..#\n##...\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n........\\n......\\n....K\\n\") == \"-1\"\nassert solution(\"4\\n......\\n....K\\n\") == \"4\"\nassert solution(\"4\\n....K\\n......\\n\") == \"6\"\nassert solution(\"4\\n......\\n....K\\n\") == \"4\"\nassert solution(\"4\\n....K\\n......\\n\") == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n...#\n...#\n...#\n...#\n...#''') == '-1'\n\nassert solution('''10\n...K\n...##\n...##\n...#K\n...##\n...##\n...##\n...##\n...##\n...##\n...##\n...##''') == '1'\n\nassert solution('''4\n...#\n...#\n...#\n...#\nSample Output:\n-1''') == '-1'\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n42\\n3\\n99\\n1\") == \"23\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"23\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n42\\n3\\n2\\n99\\n1\") == \"23\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\") == \"too late\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\",
        "num_ids_2": 52,
        "num_ids_4": 1747
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3\n4\n5\n1\n2\n99\n1\n''') == '23'\nassert solution('''3\n4\n1\n2\n99\n1\n''') == 'too late'\nassert solution('''10\n5\n5\n4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '54'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"23\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"too late\"\nassert solution(\"10 20\") == \"2\"\nassert solution(\"10 10\") == \"too late\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1\") == \"1\"\nassert solution(\"100 5\\n42\\n3\\n2\\n99\\n1\\n\") == \"23\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('100 5') == '23'\nassert solution('10 10') == 'too late'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\n\nassert solution('''\n100 5\n1\n2\n99\n1\n''') == 'too late'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 5') == '23'\nassert solution('100 5') == '23'\nassert solution('100 15') == 'too late'\nassert solution('100 13') == 'too late'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('playfair example') == 'IWIQJMMUVACNTSHGDFBZPQEGOLLH'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''playfair example''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''hide the gold in the tree stump''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\"\"\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nplayfair example\nhide the gold in the tree stump\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\nassert solution('''\nhow many roads lie\n''') == 'FELFRFDNSSNRTXSSFEGNILNPNDQNLSRTEPSFFDRNLLFSSQNGPVCNGSDFRLJLKSX'\n\nassert solution('''\n''') == 'SSTSABESDSKQGSSESPTAEQTBBSPCSAGSQYWWQWBDBQQJQGSDFSBGSABAGGQEEQQLQ'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"playfair example\") == \"MHQHGCPQPRPIEIODRQXEVJLNTRKQ\"\nassert solution(\"hide the gold in the tree stump\") == \"XPXJQWHFABDZRUNJEQXOEIWGKMT\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\nNote: Your solution will be run against input_data.txt. You should take that as input, to make sure that your solution runs on the input data.\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\n'''\n\nimport string\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''playfair example\nhide the gold in the tree stump''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\nhttps://www.hackerrank.com/challenges/playfair-cipher/problem\n\n'''\n\nimport string",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('playfair example') == 'PPLYWDPFFSHLVJ'\nassert solution('hide the gold in the tree stump') == 'MQBORQFUDKGELZFXM'\nprint('all tests passed')\n\"\"\"\nfrom string import ascii_lowercase\n\nkeyphrase = input()\nplaintext = input()\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''playfair example''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('''hide the gold in the tree stump''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\n\"\"\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1, 1).\"\nassert solution(\"1.000 1.000 1.000 1.000\") == \"The gopher can escape through the hole at (1, 1).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1, 1).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1, 1).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1, 1).\"\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('-100 -100') == 'The gopher can escape through the hole at ($-100$,$-100$).'\nassert solution('10000 10000') == 'The gopher can escape through the hole at ($10000$,$10000$).'\nassert solution('0 0') == 'The gopher can escape through the hole at ($0$,$0$).'",
        "num_ids_2": 55,
        "num_ids_4": 111
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\"\n) == \"The gopher can escape through the hole at ($1$,$2$).\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($x$,$y$).'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.000 1.500\\n1.500 1.500\\n\") == \"The gopher can escape through the hole at ($1$, $1$).\"\nassert solution(\"2.000 1.500\\n1.000 1.500\\n\") == \"The gopher can escape through the hole at ($1$, $1$).\"\nassert solution(\"2.000 1.500\\n1.000 1.500\\n\") == \"The gopher cannot escape.\"\nassert solution(\"2.000 1.500\\n1.000 1.500\\n\") == \"The gopher can escape through the hole at ($1$, $1$).\"\nassert solution(\"1.000 1.000\\n1.000 1.000\\n\") == \"The gopher can escape through the hole at ($1$, $1$).\"\n",
        "num_ids_2": 78,
        "num_ids_4": 146
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 2 1 2 1\n1 2 1 1 2 1''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''0 0 1 0 1 0\n0 0''') == 'The gopher can escape through the hole at ($0$,$0$).'\nassert solution('''0 0 2 0 2\n0 0''') == 'The gopher can escape through the hole at ($0$,$0$).'\nassert solution('''0 0 1 0 1\n0 0''') == 'The gopher can escape through the hole at ($0$,$0$).'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.500 2.000') == 'The gopher can escape through the hole at ($2$,$1$).'\nassert solution('0.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\n",
        "num_ids_2": 66,
        "num_ids_4": 121
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"The gopher can escape through the hole at (1.00,2.00).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.00,2.00).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.00,2.00).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.00,2.00).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at (1.00,2.00).\"",
        "num_ids_2": 61,
        "num_ids_4": 135
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$2$).\"\nassert solution(\"1.000 1.000 1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 1.500 2.000\") == \"The gopher can escape through the hole at ($1$,$2$).\"\nassert solution(\"1.000 1.000 1.500 2.000\") == \"The gopher can escape through the hole at ($1$,$2$).\"\nassert solution(\"1.000 1.000 1.500 2.000\") == \"The gopher cannot escape.\"\n",
        "num_ids_2": 70,
        "num_ids_4": 140
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n2\n''') == 'Y'\nassert solution('''\n1 1\n3\n''') == 'N'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'Y'\nassert solution('2 2') == 'Y'\nassert solution('7 7') == 'Y'\nassert solution('-2 -3') == 'Y'\nassert solution('3 -3') == 'N'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Y\", \"Should be able to travel from (3, 3) to (3, 3)\"\nassert solution(stdin=\"1 2\") == \"N\", \"Should not be able to travel from (1, 2) to (1, 2)\"\nassert solution(stdin=\"1 1\") == \"Y\", \"Should be able to travel from (1, 1) to (1, 1)\"\nassert solution(stdin=\"-1 -1\") == \"N\", \"Should not be able to travel from (-1, -1) to (-1, -1)\"\n",
        "num_ids_2": 59,
        "num_ids_4": 128
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n3 3\n3''') == 'Y', \"small\"\nassert solution('''3 4\n1 3\n3''') == 'N', \"small\"\nassert solution('''3 4\n1 1\n3''') == 'Y', \"medium\"\nassert solution('''3 4\n3 4\n3''') == 'N', \"medium\"\nassert solution('''3 4\n3 4\n3''') == 'Y', \"large\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Y'\nassert solution('2 1') == 'N'\nassert solution('0 0') == 'Y'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Y'\nassert solution('2') == 'N'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == 'Y', \"Should return 'Y' if given 3 and 2\"\nassert solution('1\\n3\\n2') == 'Y', \"Should return 'Y' if given 3 and 2\"\nassert solution('2\\n3\\n1') == 'Y', \"Should return 'Y' if given 3 and 2\"\nassert solution('2\\n2\\n2') == 'N', \"Should return 'Y' if given 2 and 2\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Y\"\nassert solution(\"2 4\") == \"Y\"\nassert solution(\"2 3\") == \"N\"\nassert solution(\"2 5\") == \"N\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3 4\n    3 3\n    3\n''') == 'Y', \"First\"\nassert solution('''\n    3 4\n    2 2\n    3\n''') == 'N', \"Second\"\nassert solution('''\n    3 4\n    4 4\n    3\n''') == 'Y', \"Third\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 4\n3 3\n3\n\"\"\") == 'Y'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 7\\n\" +\n    \"...V...\\n\" +\n    \".......\\n\" +\n    \".......\\n\" +\n    \"...#...\\n\" +\n    \"..###..\\n\" +\n    \"Sample Output:\") == \"....V..\\n\" +\n    \"....V..\\n\" +\n    \".VVVV..\\n\" +\n    \".VV#VV.\\n\" +\n    \".V###V.\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...') == \"...V...\\n...V...\\n.VVV..\\n.V#VV.\\n.V###V.\"\nassert solution('7 3\\n.V...\\n.V...\\n.#.#\\n.#.#\\n.#.#\\n...V...') == \".V..V..\\n.V..V..\\n..#..#.\\n..#..#.\\n..#..#.\\n.V..V..\\n...V...\\n.V...V.\"\n",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n\") == stdin.strip().split(\"\\n\")\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 7\\n....V...\\n.......\\n.......\\n...#...\\n..###..\\nSample Output:\") == \"\"\"....V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 7\n.....\n.....\n.....\n.....\n.....''') == '.....\\n.....\\n.....\\n.....\\n.....'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('.V') == '...V...\\n.V#VV.\\n.V###V.'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n.V.\\n.V.\\n..#\\n..#\\n.V.\\n..#\\n.V.\\n\") == \".....\\n.....\\n.....\\n.....\\n.....\\n\"\nassert solution(\"10 10\\n.V.\\n.V.\\n.V.\\n..#\\n..#\\n.V.\\n..#\\n.V.\\n.V.\\n.V.\\n\") == \".....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n\"\nassert solution(\"5 5\\n.V.\\n.V.\\n.V.\\n..#\\n..#\\n.V.\\n..#\\n.V.\\n.V.\\n.V.\\n\") == \".....\\n.....\\n.....\\n.....\\n.....\\n\"\nassert solution(\"3 3\\n...\\n.V.\\n.V.\\n.V.\\n\") == \"...\\n...\\n...\\n\"\nassert solution(\"6 6\\n.V.\\n.V.\\n.V.\\n..#\\n..#\\n.V.\\n..#\\n.V.\\n.V.\\n.V.\\n\") == \".V.\\n.V.\\n.V.\\n..#\\n..#\\n..#\\n..#\\n.V.\\n.V.\\n\"\n",
        "num_ids_2": 145,
        "num_ids_4": 257
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '11'\nassert solution('0') == '0'\n\nsolution.py\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '1'\nassert solution('1101') == '1011'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '11'\nassert solution('00') == '00'\nassert solution('01') == '01'\nassert solution('0011') == '011'\nassert solution('1111') == '1111'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '11'\nassert solution('32') == '20'\n'''\n\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '11'\nassert solution('0001') == '1001'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1101') == '1011'\nassert solution('1101') == '1011'\nassert solution('1101') == '1011'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"6\") == \"42\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1101\n''') == '1011'\nassert solution('''13\n''') == '11'\n'''))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '11'\nassert solution('1111') == '11'\nassert solution('101010') == '11'\nassert solution('101010111') == '11'\nassert solution('1010101111') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"9\", \"Wrong!\"\nassert solution(\"\") == \"I must watch Star Wars with my daughter\", \"Wrong!\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '9', \"DONE\"\nassert solution('12') == '9', \"DONE\"\n\"\"\"\n\nn = int(input())\ni = 1\ns = []\nwhile i <= n:\n    s.append(input())\n    i += 1\n\nprint(len([i for i in s if i == 'pink']))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '9', \"test\"\nassert solution('1') == '', \"test\"\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''12\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon''') == '9'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == '9'\nassert solution('18') == '7'\nassert solution('120') == '9'\nassert solution('122') == '6'\nassert solution('330') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '9', solution('12')\nprint(solution('12'))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == '9'\nassert solution('10\\nBASE\\npink\\nturqrose\\nrose\\nJETblack\\nturqrose\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == '6'\nassert solution('9\\npink\\nturqrose\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == '3'\nassert solution('8\\nBASE\\nturqrose\\nJETblack\\nturqrose\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon\\n') == '5'\n",
        "num_ids_2": 133,
        "num_ids_4": 232
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '9'\nassert solution('3') == 'I must watch Star Wars with my daughter'\n\"\"\"\n\nN = int(input())\np_n = input().split()\nt_n = input().split()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 3 5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('5 1 3') == '1 3 5'\nassert solution('1 4 5') == '1 5 4'\nassert solution('5 1 4') == '4 1 5'\nassert solution('4 5 1') == '1 5 4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 5 3\nABC''') == '1 3 5 ABC'\nprint(\"You're all set!\")\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3') == '1 3 5'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 3 2') == '1 2 3'\nassert solution('1 3 1') == '1 1 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 3 5') == '1 3 5'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 3') == '1 3 2'\nassert solution('1 5 4') == '1 4 5 3'\nassert solution('2 4 3 1') == '1 4 3 2'\nassert solution('1 5 4 3') == '1 5 3 4 4'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 5 2') == '1 2 5'\nassert solution('1 2 3') == '1 2 3'\nassert solution('3 1 2') == '1 2 3'\nassert solution('1 2 3 4') == '1 2 3 4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5 3\nABC''') == '1 3 5 ABC'\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 5 3\nABC''') == '1 3 5 ABC'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\", \"First\"\n\nassert solution(\"\"\"\nbuy 1 10\nsell 1 5\ndie 4\n\"\"\") == \"9.00000000\", \"Second\"\n\nassert solution(\"\"\"\nbuy 1 20\nsell 1 5\nmerge 3\ndie 4\n\"\"\") == \"19.00000000\", \"Third\"\n\nassert solution(\"\"\"\nbuy 1 10\nsell 1 5\nsell 1 10\ndie 4\n\"\"\") == \"9.00000000\", \"Fourth\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('buy 1 15\\n'\n    'split 3\\n'\n    'sell 1 5\\n'\n    'die 4') == '8.00000000'\nprint(solution())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4') == '8.00000000'\nassert solution('buy 1 15\\nbuy 2 15\\nsell 1 5\\ndie 4') == '10.00000000'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '73.8'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsell 1 5\nbuy 1 15\nsplit 3\ndie 4\n\"\"\") == \"8.00000000\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.00000000'\nassert solution('1 1') == '0.00000000'\nassert solution('1 3') == '0.00000000'\nassert solution('3 1') == '1.00000000'\nassert solution('4 3') == '1.600000000'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nbuy 1 10\nbuy 2 10\nbuy 3 10\nbuy 4 10\nsell 1 4\nsell 1 5\ndie 2\n\"\"\") == \"8.00000000\"\n\nassert solution(\"\"\"\nbuy 1 10\nbuy 2 10\nbuy 3 10\nsell 1 4\nsell 1 5\nbuy 1 10\n\"\"\") == \"10.0\"\n\nassert solution(\"\"\"\nbuy 5\nbuy 5\nbuy 6\nbuy 6\nbuy 4\nbuy 2\nsell 2\nsell 4\n\"\"\") == \"22.0\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\n'\n                'split 3\\n'\n                'sell 1 5\\n'\n                'die 4\\n') == '8.00000000'\nassert solution('buy 1 15\\n'\n                'sell 1 5\\n'\n                'die 4\\n') == '8.00000000'\nassert solution('buy 1 15\\n'\n                'sell 1 5\\n'\n                'buy 1 15\\n'\n                'buy 1 10\\n'\n                'buy 1 5\\n'\n                'die 4\\n') == '12.0000000000000000'\nassert solution('buy 1 15\\n'\n                'sell 1 5\\n'\n                'die 4\\n'\n                'buy 1 15\\n'\n                'buy 1 10\\n'\n                'buy 1 5\\n'\n                'sell 1 5\\n'\n                'die 4\\n') == '8.00000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1 2\\n3 3\\n2 2') == '5.5'\nassert solution('1 2\\n1 2\\n1 3\\n2 2\\n1 3\\n2 3\\n3 3\\n4 4\\n3 3\\n2 2\\n1 3') == '7.0'\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '8.00000000'\nassert solution('buy 1 15\\nbuy 10 20\\nmerge 3\\nsell 3 7\\ndie 4\\n') == '26.00000000'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"112\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('808') == '8'\nassert solution('1111') == '1'\n\n-------------------",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"8\") == \"8\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '8'\nassert solution('808') == '8'\nassert solution('34') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"808\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('808') == '8'\nassert solution('12345') == '6'\nassert solution('144') == '4'\nassert solution('7') == '7'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"808\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '8'\nassert solution('2') == '2'\nassert solution('12345678') == '8'\nassert solution('2333') == '2'\nassert solution('99123654') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == \"0\"\nassert solution('''\n5 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == \"2\"\nassert solution('''\n3 3\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == \"4\"\nassert solution('''\n7 7\nCCCCC\nCCCCC\nCCCCCCCCCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCCCCCCCC''') == \"5\"\nassert solution('''\n5 7\nCCCCCCCCCCCC\nCCCCCCCCCCCC\nCCCCCCCCCCCC\nCCCCCCCCCCCC\nCCCCCCCCCCCC\nCCCCCCCCCCCC\nCCCCCCCCCCCC\nCCCCCCCCCCCC''') == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\nCCCC\nCCCC\nCCCC\nCCCC\n''') == '0', 'First Test Case Failed'\nassert solution('''\n1 2\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\n''') == '1', 'Second Test Case Failed'\nassert solution('''\n3 5\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\n''') == '2', 'Third Test Case Failed'\nassert solution('''\n4 4\nWWWWW\nWWWWW\nWWWWW\nWWWWW\n''') == '1', 'Fourth Test Case Failed'\nassert solution('''\n5 5\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\nCCCCCCCCCC\n''') == '2', 'Fifth Test Case Failed'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"CCCCC\") == \"\", \"One\"\nassert solution(\"CCCCCCCCCCC\") == \"\", \"Two\"\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCCCCC\") == \"\", \"Three\"\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\") == \"\", \"Four\"\n",
        "num_ids_2": 24,
        "num_ids_4": 63
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\nLCCCC\nLCCCC\nLCCCC''') == '3'\nassert solution('''4 4\nLCCCC\nCCCCC\nCCCCC\nCCCCC''') == '3'\nassert solution('''6 6\nLLLLL\nLLLLL\nLLLLL\nLLLLL\nLLLLL\nLLLLL''') == '1'\nassert solution('''8 8\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == '2'\nassert solution('''8 8\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == 0\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n\nassert solution('''\n4 5\nCCCCL\nCCCCL\nCCCCL\nCCCCL\n''') == '2'\n\nassert solution('''\n4 5\nCCCCL\nCCCCL\nCCCCL\nCCCCL\n''') == '1'\n\nassert solution('''\n1 1\nCCCC\n''') == '1'\n\nassert solution('''\n2 1\nCCCC\nCCCC\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    CCCCC\n    CCCCC\n    CCCCC\n    \"\"\",\n    ) == \"1\", \"Should return 1\"\n\nassert solution(\n    \"\"\"\n    2 2\n    CCCCC\n    CCCCC\n    \"\"\",\n    ) == \"2\", \"Should return 2\"\n\nassert solution(\n    \"\"\"\n    3 2\n    CCCC\n    CCCC\n    \"\"\",\n    ) == \"0\", \"Should return 0\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'\nassert solution('''4 K\n7S\n8S\n9S\nJS\nKS''') == '65'\nassert solution('''4 S\n7S\n8S\n9S\nKS''') == '40'\nassert solution('''8 D\n6C\n6S\nJS\n8H\n8D\nKS''') == '28'\nassert solution('''5 H\n3S\n3S\n4S\n4C\n4D\n5S''') == '40'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 S') == '13'\nassert solution('4 D') == '10'\nassert solution('5 D') == '10'\nassert solution('10 H') == '19'\nassert solution('1 Q') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 S') == '60'\nassert solution('3 S') == '54'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 S') == '60'\n\nassert solution('TH') == '11'\n\nassert solution('9C') == '4'\n\nassert solution('KS') == '3'\n\nassert solution('QS') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '60'\nassert solution('TH') == '8'\nassert solution('KS') == '7'\nassert solution('QS') == '10'\nassert solution('JS') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 S') == '60'\nassert solution('4 QH') == '64'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 S\") == \"60\", 'Should return \"60\"'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'\nassert solution('''3 H\n9D\nKS\n8S\n''') == '84'\nassert solution('''6 D\n9C\nKS\n8S\n8D\n9S\n''') == '21'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 S\\nTH\\n9C\\nKS\") == \"60\"\nassert solution(\"3 H\\nTH\\n9C\\nKS\") == \"60\"\nassert solution(\"2 S\\nTH\\n9C\\nKS\") == \"60\"\nassert solution(\"2 S\\nTH\\n9C\\nJS\") == \"60\"\nassert solution(\"2 H\\nTH\\n9C\\nJS\") == \"60\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\"\"\"\n\ns = input()\nt = input()",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''\nthis is very annoying\nthiss iss veery annoying\n''') =='se'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nprint('solve()')\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\\nthiss iss veery annoying\") == \"se\"\nassert solution(\"hello\\nthis is very annoying\\nthiss iss veery annoying\") == \"e\"\nassert solution(\"this is very annoying\\nthiss iss veery annoying\\n\") == \"\"\n",
        "num_ids_2": 45,
        "num_ids_4": 66
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\nassert solution(\"hello\") == \"e hl o lle\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\nassert solution(\"\") == \"\"\nassert solution(\"asdfsdasdf\") == \"\"\nassert solution(\"i dont like it\") == \"ie\"\n",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 0\") == \"3\"\nassert solution(\"4 3 0\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n4 5 0\n0 0 1 1 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"\nassert solution(\"5 2 0\\n0 0 1 1 2\") == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n5 3 0\n1 1 1 1 1\n''') == '2'\nassert solution('''\n5 3 0\n1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 1\n0 0 1\n''') == '2'\nassert solution('''\n1 1 1\n0 0 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 0\n0 0 1 1 2''') == '3'\nassert solution('''5 2 0\n0 1''') == '2'\nassert solution('''5 2 0\n1 1''') == '1'\nassert solution('''5 3 0\n1 1 2 1 2''') == '1'\nassert solution('''5 3 0\n1 1 2 1 2''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 0') == '3'\nassert solution('5 3 0') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n4 8 0\n0 0 1 1 2 3 4 5 6\n''') == '1'\nassert solution('''\n4 5 0\n0 0 1 1 2 3 4 5 6\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 3 1\n0 1 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n2\n3\n''') == '1'\nassert solution('''4\n1\n2\n3\n''') == '6'\nprint('You passed all the tests!')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2') == '1'\nassert solution('1\\n2\\n3') == '6'\nassert solution('2\\n1\\n2') == '2'\nassert solution('3\\n1\\n2') == '6'\nassert solution('3\\n2\\n3') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n2\n3''') == '1'\nassert solution('''5\n1\n2\n3\n4\n5''') == '5'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n1\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n1\") == \"1\"\nassert solution(\"1\\n2\\n2\") == \"1\"\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 1 2\n\"\"\") == \"4 2\"\nassert solution(\"\"\"\n100\n1 1 2\n\"\"\") == \"1001 1 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 2') == '4 2'\nassert solution('10 1 4') == '10 4'\nassert solution('100 1 2') == '100 2'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nprint(sum(a))\nprint(sum(b))",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"4 2\"\nassert solution(\"3 2\") == \"3 2\"\nassert solution(\"2 2\") == \"3 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"4 2\"\nassert solution(\"9 1 2 3 5 8 13 21 34 55 64\") == \"55 64 21 33 8 2 1\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 1 2\") == \"4 2\"\nassert solution(\"3\\n1 2 3\") == \"6 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"10 5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 50
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n') == '4 2'\nassert solution('4\\n3 1 2 3\\n') == '7 2'\nassert solution('5\\n1 2 3 4\\n') == '8 5'\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n3 1 2\n\"\"\") == \"4 2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3 2') == '2'\nassert solution('2 3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3 1 2') == '4 2'\nassert solution('2\\n5 7 5') == '5 11'\nassert solution('3\\n3 2 2') == '5 2'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 1\\n') == '2'\nassert solution('10 5 3\\n') == '8'\nassert solution('50 3 3\\n') == '-1'\nassert solution('100 10 5\\n') == '5'\nassert solution('5 1 1\\n') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 2 1\n\"\"\"\n) == \"2\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1\n5 2 1''') == '2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 1\n10\n''') == '2'\nassert solution('''4 2 1\n10\n''') == '2'\n'''\n    \nfrom typing import List\nimport math",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 1\n5 1 1\n5 3 3\n6 5 3\n6 1 1\n6 2 1''') == '2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('10 3 4') == '3'\nassert solution('1 2 3') == '3'\nassert solution('5 3 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string = '5 2 1') == '2'\nassert solution(input_string = '1 1 2') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2 1\\n\"\n    ) == \"2\"\nassert solution(\n    \"5 2 2\\n\"\n    ) == \"1\"\nassert solution(\n    \"100 100 1\\n\"\n    ) == \"99\"\nassert solution(\n    \"100 100 3\\n\"\n    ) == \"97\"\nassert solution(\n    \"1 1 1\\n\"\n    ) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"10\") == \"55\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '36'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\nassert solution('1234') == '18216'\nassert solution('12345') == '324'\nassert solution('999999') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '36'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '36'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '36'\nassert solution('4\\n') == '5'\nassert solution('7\\n') == '288'\nassert solution('10\\n') == '33'\n\n\n\n\"\"\"\n\nfrom typing import List\nimport unittest\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\n\nclass TestSolution(unittest.TestCase):\n    def test_result(self):\n        input = '5\\n'\n        self.assertEqual(solution(input), '36')\n\n    def test_empty(self):\n        input = ''\n        self.",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '36', \"Wrong answer\"\n\nassert solution('11') == '79', \"Wrong answer\"\n\nassert solution('15') == '20', \"Wrong answer\"\n\nassert solution('17') == '34', \"Wrong answer\"\n\nassert solution('19') == '31', \"Wrong answer\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"2 4 1 3\"\nassert solution(\"4 3 2 1\") == \"4 1 3 2\"\nassert solution(\"10 20 30 40\") == \"10 20 30 40\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1') == '2 3 4 1'\nassert solution('4\\n2 3 1 2') == '2 3 4 1 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1\\n2 3\\n2 1\\n3 4\\n3 2\\n1 1') == '2 1 2 3 4 1'\nassert solution('4\\n2 3 3 1\\n2 1 3 4\\n3 1 1 2 4\\n3 2 2 3 4\\n1 3 1 2 4\\n1 1 3 4 2\\n1 2 1 1 1\\n2 4 4 3 1\\n2 4 4 3 1') == '1 1 1 1 2 4 4 3 4 3 1'\nassert solution('4\\n2 1 2 3\\n2 3 1 4\\n3 2 2 3\\n3 3 2 4\\n2 4 2 4\\n1 3 2 4\\n1 4 1 2 3') == '2 4 2 1 2 4 2 3 3 1'\nassert solution('4\\n1 1 2 2\\n2 3 1 4\\n3 2 1 2 3\\n4 2 2 2 2\\n4 3 2 3 1') == '4 1 1 2 3 4 2 1 2 2 1 3 2 2 2'\nassert solution('4\\n1 1 1 2\\n2 3 1 4\\n3 2 1 1 2\\n4 2 1 2 3\\n4 2 2 2 2') == '4 1 1 1 2 1 2 2 3'\n",
        "num_ids_2": 120,
        "num_ids_4": 239
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('4\\n2 3 3 1\\n1 2 4 3') == '2 3 4 1'\nassert solution('4\\n2 3 3 1\\n1 2 4 3\\n4 3 1 2') == '2 3 4 1'\nassert solution('4\\n2 3 3 1\\n1 2 4 3\\n4 3 1 2\\n2 3 4 1') == '2 3 4 1'\n",
        "num_ids_2": 44,
        "num_ids_4": 112
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('4') == 'impossible'\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"3 4 3 1\") == \"2 3 4 1\"\nassert solution(\"2 3 4 1\") == \"2 3 4 1\"\nassert solution(\"4 5 2 1\") == \"2 5 1 3\"\nassert solution(\"2 5 1 3\") == \"2 5 1 3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('6\\n2 3 3 1 2 4 5') == '2 3 4 1 5 2'\nassert solution('1\\n') == 'impossible'\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 56
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"4\") == \"2 3 4 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('3 1 4 2') == '3 1 2 4'\nassert solution('3 1 2 4') == '2 1 3 4'\nassert solution('4 2 1 3') == '2 1 4 3'\nassert solution('5 3 2 1') == '3 1 4 5'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\n\nSample Input:\n3 5\nhull\nright_oar\nleft_oar\nhull\nleft_oar\nSample Output:\n3\n'''",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\n\"\"\"\nimport collections\n\nP, N = map(int, input().split())\nin_boat = collections.defaultdict(list)\nfor _ in range(N):\n    word = input()\n    in_boat[word] = True\n\nfor _ in range(P):\n    boat = input()\n    for word, is_used in in_boat.items():\n        if word == boat:\n            if is_used:\n                print(word)\n            else:\n                print(word)\n            in_boat.pop(word)\n            break\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nleft_oar\\nleft_oar\\nleft_oar\\nhull\\nright_oar\\nright_oar\\nright_oar\\n') == '4'\nassert solution('5\\nleft_oar\\nleft_oar\\nleft_oar\\nhull\\nright_oar\\nright_oar\\nright_oar\\n') == '7'\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 2\nleft_oar\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\nleft_oar\nright_oar\nright_oar\nhull''') == '4', \"First\"\nassert solution('''2\nright_oar\nright_oar\nhull''') == '1', \"Second\"\nassert solution('''3\nleft_oar\nright_oar\nright_oar\nhull''') == '4', \"Third\"\nassert solution('''4\nleft_oar\nright_oar\nright_oar\nhull''') == '4', \"Fourth\"\nassert solution('''5\nleft_oar\nright_oar\nright_oar\nleft_oar\nhull''') == '3', \"Fifth\"\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\nleft_oar\nhull\nright_oar\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\nleft_oar\nleft_oar\nhull\nright_oar\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\nleft_oar\nleft_oar\nhull\nleft_oar\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n6\nleft_oar\nleft_oar\nhull\nleft_oar\nleft_oar\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n10\nleft_oar\nleft_oar\nhull\nleft_oar\nleft_oar\nleft_oar\nleft_oar\nleft_oar\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == \"4\"\nassert solution('4 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == \"3\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"5 7\"\nassert solution(\"7 5\") == \"5 5\"\nassert solution(\"5 7 5\") == \"7 7 5\"\nassert solution(\"7 5 7\") == \"5 5 7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\nassert solution(\"2 2\\n1 5\\n5 2\\n\") == \"1 5\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n5 7\n7 5\nSample Input:\n2\n1\n3\nSample Output:\n1 1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 5\\n7 5\\n\") == \"7 7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1 3'\nassert solution('1 3 4 2') == '4 4'\nassert solution('1 3 5 2') == '3 3'",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"\nprint('Solution:')\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('5 5') == '5 5'\nassert solution('5 7') == '5 7'\nassert solution('7 5') == '7 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n5 7\n7 5\n''') == '7 7'\n\nassert solution('''\n5 5\n7 7\n5 7\n''') == '7 7'\n\nassert solution('''\n5 5\n5 7\n7 5\n7 5\n''') == '7 7'\n\nassert solution('''\n2 2\n2 2\n2 2\n''') == '2 2'\n\nassert solution('''\n3 3\n3 3\n3 3\n''') == '3 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nassert solution('1 1\\n2 2\\n3 3\\n4 4') == '2 2'\nassert solution('4 5\\n6 5\\n7 7\\n8 8') == '6 6'\n",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\n\"\"\"\n\ninput = lambda: stdin.readline()",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 61\\n') == '1.016666667'\nassert solution('2\\n1 61\\n') =='measurement error'\nassert solution('3\\n1 61\\n') =='measurement error'\nassert solution('4\\n1 61\\n') =='measurement error'",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1.016666667'\nassert solution('1 2') == '0.00333333333333333333'\nassert solution('1 2 3') == '0.00333333333333333333'\nassert solution('1 2 3 4') == '0.00333333333333333333'\nassert solution('1 2 3 4 5') == '0.00333333333333333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 61') == '1.016666667', \"Wrong\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 61') == '1.01'\nassert solution('2\\n0 1') == '1.01'\nassert solution('3\\n0 1') == '1.01'\nassert solution('3\\n1 1') == '1.01'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 61\n''') == '1.016666667'\n\n'''\n1.\n11 1\n10 1\n9 1\n8 1\n7 1\n6 1\n5 1\n4 1\n3 1\n2 1\n1 1\n11 2\n10 2\n9 2\n8 2\n7 2\n6 2\n5 2\n4 2\n3 2\n2 2\n1 2\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1 61\n''') == \"1.016666667\"\nassert solution('''\n1\n10 9\n''') == \"2.0\"\nassert solution('''\n1\n6 59\n''') == \"1.683333333\"\nassert solution('''\n1\n10 9\n''') == \"measurement error\"\nassert solution('''\n1\n-5 -1\n''') == \"measurement error\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 3\n4 8\n5 8\n5 13\n''') == \"1.125\"\n\nassert solution('''\n2\n1 2\n3 4\n''') == \"0.5\"\n\nassert solution('''\n3\n2 3\n4 5\n1 5\n''') == \"0.3333333333333333\"\n\nassert solution('''\n2\n2 2\n5 6\n''') == \"measurement error\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 61\\n') == '1.016666667'\n\"\"\"\n\nfrom math import pi, sin, cos, asin, acos, sqrt\n\nn = int(input())\n\nfor _ in range(n):\n    m, s = map(int, input().split())\n    print('%.2f' % ((m+s) / 60))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n60 45\n\"\"\") == \"1.00\"\nassert solution(\"\"\"\n3\n60 45 45\n\"\"\") == \"measurement error\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\n\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"CPMCRYY\", \"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    'CPMCRYYALBERTA'\n) == 'CALGARY'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"CPMCRYY\") == \"ALBERTA\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == 'CALGARY', solution('CPMCRYY')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''A\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n''') == 'CALGARY'\nassert solution('''X\nZ\nY\nB\nV\nL\nQ\nX\nG\nF\nE\nD\nC\nA\nI\nH\nM\nP\nO\nN\nS\nR\nU\nT\nW\nJ\nG\nY\nZ\n''') == 'XZYBVLGQXFGEDCMAONHUIMPSRUZWT'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AB') == '3'\nassert solution('CB') == '1'\nassert solution('CC') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''B\nAA\nBB\nCC\n''') == '1'\nassert solution('''CC\nAA\nBB\nBB\n''') == '2'\nassert solution('''BB\nAA\nCC\nBB\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"AB\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AB') == '3'\nassert solution('ABC') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"ACB\") == \"2\"\nassert solution(\"ABCB\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"BC\") == \"2\"\nassert solution(\"AC\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"BB\") == \"2\"\nassert solution(\"AA\") == \"1\"\nassert solution(\"BA\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '1'\nassert solution('A') == '1'\nassert solution('AA') == '2'\nassert solution('ABC') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AB') == '3'\nassert solution('AA') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AB') == '3'\nassert solution('ABCD') == '2'\nassert solution('AABCAA') == '1'\nassert solution('AABCAABCC') == '3'\nassert solution('AABCAAABCD') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 7 3\n''') == '7'\nassert solution('''\n4 1 2\n''') == '2'\nassert solution('''\n3 1 2\n''') == '2'\nassert solution('''\n4 3 1 2\n''') == '3'\nassert solution('''\n2 5 1 4\n''') == '4'\n'''\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 1 2 3 4') == '2'\nassert solution('1 1 1 1') == '1'\n\"\"\"\nimport sys\nfrom itertools import product\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 6 3 2\") == \"4\"\nassert solution(\"1 2 3 4\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 3 4') == '3'\nassert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 6 5') == '5'\nassert solution('1 2 3 4 5 2 1') == '4'\nassert solution('1 2 1 1 2 1 1') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('2 4 3 1') == '4'\nassert solution('5 8 6 8') == '9'\nassert solution('7 2 3 2') == '3'\n\na, b, c, d = list(map(int, stdin.split()))",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 1 3') == '3'\nassert solution('1 2 2 3') == '3'\nassert solution('1 2 1 2 3') == '3'\nassert solution('1 1 2 2 3') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 3 4\n1 3 4 5\n''') == '3'\nassert solution('''3 3 3 1\n1 3 1 1\n3 2 4 1\n''') == '1'\nassert solution('''1 1 1 2\n1 1 1 1\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == \"3\"\nassert solution('4 5 3 1') == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('3 2 1 3') == '4'\nassert solution('3 2 1 5') == '4'\nassert solution('3 2 1 6') == '3'\nassert solution('3 2 1 7') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n1\n2\n\"\"\") == \"0\"\n\nassert solution(r\"\"\"\n1\n3\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n2\n4\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n2\n5\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n3\n4\n\"\"\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 2') == '4'\nassert solution('6 4') == '5'\nassert solution('8 7') == '3'\nassert solution('10 9') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"103 27\") == \"4\"\nassert solution(\"10 7\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"103 27\") == \"4\"\nassert solution(\"7 8\") == \"6\"\nassert solution(\"19 2\") == \"5\"\n\n--Input--\n10 3\n--Output--\n1\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '1 5'\nassert solution('1 2 3 4 5 6') == '2 5'\nassert solution('1 2 3 4 5 6 7') == '2 6'\nassert solution('1 2 3 4 5 6 7 8') == '3 7'\nassert solution('1 2 3 4 5 6 7 8 9') == '3 9'\n",
        "num_ids_2": 31,
        "num_ids_4": 66
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"2\", \"Wrong\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('107 27') == '4'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 0 0 0') == '3'\nassert solution('1 2 3 0 0 0 10') == '10'\nassert solution('1 2 3 0 0 0 1') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''1 2''') == '2'\nassert solution('''2 5''') == '3'\nassert solution('''3 8''') == '3'\nassert solution('''4 1''') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '1'\nassert solution('10 3') == '2'\nassert solution('10 9') == '1'\nassert solution('15 15') == '2'\nassert solution('16 8') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    }
]