[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 5\n\n\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('1 2') == '1 2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\nprint(solution())\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5 1 8 6'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 7'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5 8 7'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5 3 8 7'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 2 5 3 8 7'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == \"5\"\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == \"1 8 6\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5\\n1 8 6\"\nassert solution(\"3\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n\") == \"1 8 6\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n\") == \"0\"\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 3 6'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 4 6'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '2 3 7 8'\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '6'\nassert solution('''2\n1 2\n2 3\n3 4\n4 5\n''') == '1'\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n1 9\n2 10\n''') == '11'\n\n'''\n"
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n2 3\") == \"1\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\""
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"2\") == \"1 8 6\"\nassert solution(\"2\") == \"1 8 6\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 2 8 1 2 4 1 20 4 5\") == \"20 8\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 3 2\") == \"6\""
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"20 8\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1\") == \"4\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('2 5 3 1 6 8 10 8') == '3'\nassert solution('4 4 5 8') == '4'\nassert solution('1 2 2 4 5') == '1'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 4 1\\n\") == \"2 8\""
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8', solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''')\nassert solution('''\n3\n1 3 5 1 1 3\n''') == '1 3 5 1 1 3', solution('''\n3\n1 3 5 1 1 3\n''')\nassert solution('''\n2\n1 2\n''') == '1 2', solution('''\n2\n1 2\n''')\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nassert solution('''\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 1 1 2\n''') == \"20 8\"\n"
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 1 2 3\n''') == '2 1 3'\nassert solution('''\n4\n1 1 3 3\n''') == '3 1 3'\nassert solution('''\n3\n1 4 3\n''') == '3 1 4'\nassert solution('''\n10\n1 1 2 3 1 2 4 1 2 5\n''') == '2 1 3 1 2 5'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\"\"\") == \"24\"\n\nassert solution(\"\"\"5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\"\"\") == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n') == '24'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 4\") == \"56\"\nassert solution(\"3 4 3\") == \"24\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\nassert solution(\"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\") == \"56\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == \"24\"\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == \"56\""
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24', \"First\"\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56', \"Second\"\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4') == '24'\nassert solution('5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6') == '56'\n"
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == stdout_\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"4\"\n\nassert solution(input) == \"LLRR\"\n\nassert solution(input) == \"R\"\n\nassert solution(input) == \"LRRR\"\n\nassert solution(input
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"LLRR\"\n\n'''\n\nn = int(input())\na = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    count = 1\n    j = i - 1\n    while j >= 0 and a[j] >= a[j + 1]:\n        j -= 1\n        count += 1\n    j = i + 1\n    while j < n and a[j] >= a[j - 1]:\n        j += 1\n        count += 1\n    ans = max(ans, count)\nprint(ans)\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4\\nLLRR'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6\\nRRRRR'\nassert solution('4\\n2 2 2\\n') == '1'"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 4 3 2\\n') == '4'\nassert solution('7\\n1 3 5 6 5 4 2\\n') == '6'\nassert solution('3\\n2 2 2\\n') == '1'\nassert solution('4\\n1 2 4 3\\n') == '4'\n\n'''\n\n\nn = int(input())\na = list(map(int, input().split()))"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 4 3 2\n''') == '4'\nassert solution('''\n3\n2 2 2\n''') == '1'\nassert solution('''\n5\n1 2 4 3 2\n''') == '4'\nassert solution('''\n7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''\n2\n2 2 2\n''') == '1'\n\n## Good practice\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n\nassert solution(input()) == \"LLRR\"\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 4 3 2') == \"4\"\nassert solution('1 2 4 3 2') == \"LRRR\""
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 3 4 5 6\n\"\"\") == \"4\", \"Example\"\nassert solution(\"\"\"\n1 2 3 4 5 6\n\"\"\") == \"4\", \"Example\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"3\", \"Example\"\nassert solution(\"\"\"\n5\n1 2 4 3 2\n\"\"\") == \"4\", \"Example\"\nassert solution(\"\"\"\n7\n1 3 5 6 5 4 2\n\"\"\") == \"6\", \"Example\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_line()) == '4'\nassert solution(input_line()) == 'LLRR'\n\n\"\"\"\n"
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"LLRR\"\n\"\"\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('4') == '-1'\nprint('Done! (It took {} ms)'.format(round(my_timer() * 1000, 5)))"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"2 2 5 2 5\") == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"2 2 5 2 5\") == \"3\"\nassert solution(\"4\") == \"-\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"-1\""
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"5\\n2 4 5 2 5\") == \"3\"\nassert solution(\"4\\n1 3 1 5\") == \"-1\"\nassert solution(\"2\\n1 2\") == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"-1\"\nassert solution() == \"3\"\nassert solution() == \"-1\"\nassert solution() == \"3\"\n"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 1 4 3 7\") == \"3\"\nassert solution(\"2 4 2 5 2 1\") == \"3\"\nassert solution(\"3 5 1 4 3 7\") == \"4\"\nassert solution(\"1 3 3 7\") == \"3\"\nassert solution(\"4 1 4 7\") == \"4\""
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 3 4 5\\n') == '3'\nassert solution('4\\n1 3 4 2\\n') == '-1'"
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 3 5 2 5') == '3'\nassert solution('6\\n1 4 4 7 4 1') == '3'\nassert solution('6\\n2 2 5 2 5') == '3'\nassert solution('6\\n3 3 3 7') == '-1'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'NO'\nassert solution('0 0 4 6') == 'YES'\nassert solution('0 0 7 4') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\n\nassert solution(\"3 3 7 5\") == \"YES\"\nassert solution(\"0 0 4 6\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 4 4') == 'NO', \"Wrong answer for input '2 2 4 4'\"\nassert solution('1 1 3 5') == 'NO', \"Wrong answer for input '1 1 3 5'\"\nassert solution('3 1 5 5') == 'YES', \"Wrong answer for input '3 1 5 5'\"\nassert solution('5 2 10 5') == 'YES', \"Wrong answer for input '5 2 10 5'\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 7 5') == 'YES'\nassert solution('2 2 4 4') == 'NO'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 2 4 4\"\"\") == \"NO\"\nassert solution(\"\"\"1 1 3 5\"\"\") == \"YES\"\nassert solution(\"\"\"3 1 5 5\"\"\") == \"YES\"\nassert solution(\"\"\"5 2 10 5\"\"\") == \"YES\"\n\nassert solution(\"\"\"0 0 1000000 1000000\"\"\") == \"YES\"\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'"
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 2 4 4\n1 1 3 5\n3 1 5 5\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3 3 7 5\n0 0 4 6\n0 0 7 4\n\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n5 2 10 5\n3 1 7 6\n8 1 11 7\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"7\") == \"8\"\nassert solution(\"10\") == \"19\"\nassert solution(\"999\") == \"1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1098, 1099\"\nassert solution(\"1000\") == \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1098, 1099\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\nassert solution(\"\") == \"\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"0000\") == \"0\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('10') == '19'\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\n\n\"\"\"\n"
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"19\""
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '7 3 2 1 4 5 6'\nassert solution('2 1 0 0 0') == '2 1 4 5 3'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''\n5\n2 1 0 0 0\n''') == '2 1 4 5 3'\nassert solution('''\n5\n5 1 1 1 1\n''') == '5 5 5 5 5'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\\n4 0 1\\n\") == \"3 4 1\"\nassert solution(\"5\\n2 3 0 0 0\\n\") == \"2 3 1 4 5\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'\nassert solution('7') == '7 3 2 1 4 5 6'\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '4 2 3 6 5 1'\nassert solution('7') == '4 2 3 6 5 1'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'\nassert solution('''\n5\n2 1 0 0 0\n''') == '2 1 4 5 3'"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\n5 0 0 2 4\\n\"\n) == \"5 3 1 2 4\\n\"\nassert solution(\n    \"7\\n7 4 0 3 0 5 1\\n\"\n) == \"7 4 2 3 6 5 1\\n\"\nassert solution(\n    \"7\\n2 1 0 0 0 5 1\\n\"\n) == \"2 1 4 5 3 6\\n\"\nassert solution(\n    \"7\\n3 0 0 1 4 5 6\\n\"\n) == \"7 3 2 1 4 5 6\\n\"\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3 1 2 4 5\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 4 2 3 6 5 1\"\nassert solution(\"5\") == \"3 1 2 4 5\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == '5 3 1 2 4'\nassert solution('''7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\nassert solution('''7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1'"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"3 2 1 2 3\"\n) == \"YES\\n\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 2 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\n\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"1 2 2 3\", \"1 2 3 2\"]) == \"YES\"\nassert solution([\"4 2\", \"1 2 3 2\"]) == \"YES\"\nassert solution([\"4 2\", \"1 3 2\"]) == \"NO\"\nassert solution([\"4 2\", \"1 3 1\"]) == \"NO\"\nassert solution([\"4 2\", \"1 3 1\", \"1 2 1\", \"1 2 2\", \"1 3 2\"]) == \"YES\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"\n"
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('4 2') == 'YES'\nassert solution('5 2') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('4 2') == 'NO'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 1\") == \"1\", \"Simple test\"\nassert solution(\"11 5 1\") == \"3\", \"Simple test\"\nassert solution(\"10 5 1\") == \"2\", \"Simple test\""
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"11 5 2\") == \"3\"\nassert solution(\"11 5 1\") == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(stdin)) == \"3\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''11 5 1\n11010100101''') == '1'\nassert solution('''11 5 1\n11010100101''') == '3'"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 5 2\\n11010100101') == '1'\nassert solution('11 5 1\\n11010100101') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"11 5 2\"\n    ) == \"1\"\n\nassert solution(\n    \"11 5 1\"\n    ) == \"3\""
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''11 5 1\n11010100101\n''') == '3'\n"
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\""
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n1 2 1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 1\\n3 4 5 5\") == \"NO\"\nassert solution(\"5\\n4\\n1 2 1\\n3 4 5 5\\n3\") == \"YES\"\nassert solution(\"5\\n3\\n1 2 1\\n3 4 5 5\\n5\") == \"NO\"\nassert solution(\"5\\n3\\n1 2 1\\n3 4 5 5\\n4\") == \"NO\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"NO\"\nassert solution(\"3\\n4 5 2\\n2 4 2\\n3\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2 1\n5\n1 2 2 3 2''') == 'YES'\nassert solution('''1\n1 2 1\n5\n1 2 2 3 2''') == 'NO'\nassert solution('''3\n1 2 1\n5\n1 2 2 3 2''') == 'NO'\nassert solution('''4\n1 2 2 1\n5\n1 2 2 1\n5\n1 2 2 1''') == 'YES'"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n    '''\n    ) == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\""
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\n\"\"\""
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES' or solution() == 'NO'\n"
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '9999'\nassert solution('3') == '9999'\nassert solution('4') == '9999'\nassert solution('5') == '9999'\nassert solution('6') == '9999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1 1 1 1 1 1 1 1 1\n''') == '33'\nassert solution('''2\n3 1 3 1 3 1 3 1 3\n''') == '99999'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '1234'\nassert solution('3') == '123'\nassert solution('123') == '123'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1337\") == \"1553\"\nassert solution(\"13371337\") == \"15531337\"\nassert solution(\"133713371337\") == \"155313371337\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1553\"\nprint(solution())\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"99999\"\nassert solution('') == \"99999\"\nassert solution('1') == \"9999\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1557'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1553\"\n"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '0'\nassert solution('4') == '0'\nassert solution('5') == '99999'\nassert solution('3') == '33'\nassert solution('2') == '99999'"
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2 5 4 6 6 3 1 9\n\"\"\") == \"1557\"\nassert solution(\"\"\"\n4\n1337\n1 2 5 4 6 6 3 1 9\n\"\"\") == \"99999\"\nassert solution(\"\"\"\n5\n11111\n9 8 7 6 5 4 3 2 1\n\"\"\") == \"99999\"\nassert solution(\"\"\"\n2\n33\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"33\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4\\n1 1 3\\n102\\n1 2 3\\n1 2 3\\n1 2 3\\n'''\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '114 228 456'\nassert solution('15 18 21') == '4'\nassert solution('100 100 101') == '7'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\nassert solution(\"\"\"\n4\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"102\"\nassert solution(\"\"\"\n6\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"114 228 456\"\nassert solution(\"\"\"\n4\n2 2 2 2\n2 4 3 4\n3 3 4 3\n3 4 2 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n2 4\n10 20\n12 30\n\"\"\") == \"10 12 30\"\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n2 3 4\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '102'\nassert solution('''\n2 5 10\n100 101 1\n1 22 29\n3 19 38\n6 30 46\n''') == '4'\nassert solution('''\n2 4 10\n100 101 1\n1 22 29\n3 19 38\n6 30 46\n''') == '4 8 16'\nassert solution('''\n2 5 10\n100 101 1\n1 22 29\n3 19 38\n6 30 46\n''') == '100 100 101'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '1 1 3'\nassert solution('6\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '4'\nassert solution('8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '0'\nassert solution('12\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '0'\nassert solution('14\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '0'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '102'\nassert solution('5 10 15') == '6 6 24'\nassert solution('15 18 21') == '1 1 3'\nassert solution('100 100 101') == '7'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    1 2 3\n    123 321 456\n''') == '1 1 3'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 1 1'\nassert solution('''\n    1 2 3\n    123 321 456\n    5 10 15\n    15 18 21\n    100 100 101\n    1 22 29\n    3 19 38\n    6 30 46\n    ''') == '1 1 1'\n"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\n1 2 3\\n123 321 456\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46\\n') == '1 1 3'"
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\nassert solution(\"\"\"\n1 1 2\n2 1 3\n4 4 5\n2 7 8\n1 1 2\n\"\"\") == \"1 1 2\"\nassert solution(\"\"\"\n2 5 2\n1 4 5\n2 3 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\nassert solution('2\\n1 1000000\\n') == '1'\nassert solution('2\\n1 1000000000\\n') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2') == '0'"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'\nassert solution('5 1 2 3 4 5') == '4'\nassert solution('6 1 2 3 4 5') == '5'"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 3 7\n''') == \"2\"\nassert solution('''\n2\n1 100000\n''') == \"0\"\nassert solution('''\n4\n1 3 3 7\n''') == \"2\"\nassert solution('''\n3\n1 100000\n''') == \"1\"\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == \"10\"\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 3 3 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n1 100000\n\n\"\"\") == \"0\""
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 1 100000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 3 3 7\n''') == '2'\nassert solution('''\n2\n1 100000\n''') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 3 7') == '2'\nassert solution('2\\n1 100000') == '0'\n"
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 1 100000\") == \"0\"\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 2 3 0 3'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1 2 3 0 3 \nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\", \"Wrong output\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\", \"Wrong output\"\nassert solution(\"10 3\") == \"2 2 2 1 1 0 4 3 4 4\", \"Wrong output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n\nOutput\n1 2 3 0 3 \n''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1\n\nOutput\n-1\n''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n\nOutput\n2 2 2 1 1 0 4 3 4 4 \n''') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"3 2\") == \"0 1\""
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1 2 3 0 3 \nassert solution('3 2') == '-1\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4 \n\n'''"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"2 2 2 1 1 0 4 3 4 4\"\nprint(solution(input_data))\n"
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 3 1\n1 5 1''') == '1 2 3 0 3 \n\nassert solution('''5 2\n1 3 1\n1 2 1''') == '-1'\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1''') == '2 2 2 1 1 0 4 3 4 4'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"0\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"7\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"7\"\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n120 51840\n''') == '7'\nassert solution('''\n42 42\n''') == '0'\nassert solution('''\n48 72\n''') == '-1'\n"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'"
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"120 51840\n    42 42\"\"\"\n    ) == \"7\"\nassert solution(\n    \"\"\"48 72\n    42 42\"\"\"\n    ) == \"0\"\nassert solution(\n    \"\"\"48 72\n    48 72\"\"\"\n    ) == \"-1\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\naba\n''') == 'ababababa'\nassert solution('''\n3 2\ncat\n''') == 'catcat'"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\naba\") == \"ababababa\"\nassert solution(\"3 2\\ncat\") == \"catcat\""
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ab\") == \"abababababab\"\nassert solution(\"abab\") == \"abababababab\"\nassert solution(\"abca\") == \"abababababab\"\nassert solution(\"abcd\") == \"abababababab\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\naba\") == \"ababababa\"\nprint(solution(\"3 2\\ncat\"))\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\naba''') == 'ababababa'\nassert solution('''3 2\ncat''') == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\naba\") == \"ababababa\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abc\") == \"ab\"\nassert solution(\"abab\") == \"abab\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\naba') == 'ababababa', \"Your function is incorrect\"\nassert solution('2\\ncat') == 'catcat', \"Your function is incorrect\"\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\n"
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"ab\"\nassert solution(\"c\") == \"abc\"\nassert solution(\"ab\") == \"abab\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n1 4 \nassert solution('4\\n8 3 5 2') == '2\\n1 4 \nassert solution('5\\n2 1 2 4 3') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n4 1 5\\n'\nassert solution('4\\n8 3 5 2') == '2\\n1 4 \\n'\nassert solution('5\\n2 1 2 4 3') == '0'\n\n\"\"\""
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 5 1 2 2\n''') == '3'\nassert solution('''\n4\n8 3 5 2\n''') == '2'\nassert solution('''\n5\n2 1 2 4 3\n''') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n8 3 5 2\n''') == '3'\nassert solution('''\n5\n2 1 2 4 3\n''') == '2'\nassert solution('''\n5\n2 1 2 4 3\n''') == '0'"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 1 2') == '1'\nassert solution('4\\n8 3 5 2') == '1'\nassert solution('5\\n2 1 2 4 3') == '0'\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 1 2 2\") == \"3\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"6\"\n"
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n1 4'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\n\n\n\"\"\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '4'\nassert solution(input) == '233'\n\n'''"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == \"4\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\""
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\naaaaa\n''') == '15'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\nassert solution('15 8') == '-1'\n"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4 5'\n    ) == '4'\n\nassert solution(\n    '5 6'\n    ) == '15'\n\nassert solution(\n    '5 7'\n    ) == '-1'\n\nassert solution(\n    '10 100'\n    ) == '233'"
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n\"\"\""
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 1') == 'YES'\nassert solution('3 5 3') == 'YES'\nassert solution('3 5 3') == 'NO'\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 4 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\""
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution([stdin]) == \"YES\"\n\n\n'''\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 4 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4 5 4\n1 2\n1 3\n1 4\n2 3\n3 4\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\""
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"01:02\") == \"02:02\""
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '10:30'\n\n\"\"\""
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10:00\\n11:00\") == \"10:30\"\nassert solution(\"11:10\\n11:12\") == \"11:11\""
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1:3\") == \"1:6\"\nassert solution(\"7:9\") == \"7:15\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"1:6\") == \"1:12\"\nassert solution(\"3:9\") == \"3:15\"\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\n"
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1:00\n2:00\n''') == '00:00'\nassert solution('''\n3:00\n4:00\n''') == '00:00'\nassert solution('''\n1:00\n1:00\n''') == '00:00'\nassert solution('''\n1:00\n3:00\n''') == '00:00'\nassert solution('''\n1:00\n2:00\n3:00\n''') == '00:00'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n'''"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == str(int(input))\n\n\"\"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\nassert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('16') == '1'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('56') == '7'\nprint('All test cases passed.')\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nprint('YOUR CODE IS CORRECT!')\nhelp(solution)\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n"
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\nassert solution(sys.stdin.read()) == \"2\"\nassert solution(sys.stdin.read()) == \"5\"\nassert solution(sys.stdin.read()) == \"6\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 6\\n1 3\\n0 4\\n3 3\") == \"1\"\nassert solution(\"4\\n2 6\\n1 3\\n0 4\\n3 3\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"7\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '1'\nassert solution(sys.stdin.read()) == '0'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"2 6\") == \"1\"\nassert solution(\"0 4\") == \"0\"\nassert solution(\"3 3\") == \"1\""
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 6\\n1 3\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\\n0 4\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\\n\") == \"7\"\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n\nassert solution('5') == '1'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n''') == '2'\nassert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n''') == '0'\nassert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n''') == '7'\nassert solution('''\n3\n2 6\n1 3\n0 4\n3 3\n''') == '1'\n"
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '1'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 3\") == \"YES\"\nassert solution(\"5\\n10 10\") == \"YES\"\nassert solution(\"5\\n1 1 1 2 5\") == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('10') == 'YES'\nassert solution('10 10') == 'YES'\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5 1 1 2 5''') == 'YES'\nassert solution('''3\n4 5 3''') == 'NO'\nassert solution('''1\n10 10''') == 'YES'"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2 1 1 2 5\\n\"\n    ) == \"YES\"\n\nassert solution(\n    \"3\\n\"\n    \"4 5 3\\n\"\n    ) == \"NO\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 1 2 5\n\n''') == \"YES\"\nassert solution('''3\n4 5 3\n\n''') == \"NO\"\nassert solution('''2\n10 10\n\n''') == \"YES\""
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n4 5 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2\n10 10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n3 3 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n3 3 3\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\nassert solution(\"2\\n10 10\") == \"YES\"\n"
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'NO'"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\najihiushda\") == \"233\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == -1\nassert solution(\"10 100\\najihiushda\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"100 100\") == \"233\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"4 5\") == \"4\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'\nassert solution('10 1') == '-1'\nassert solution('10 1000') == '-1'\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 10\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\naaaaa\n''') == \"4\"\n\nassert solution('''5 7\naaaaa\n''') == \"-1\"\n\nassert solution('''10 100\najihiushda\n''') == \"233\"\n\nassert solution('''10 5\najihiushda\n''') == \"15\""
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\nasdf\\n') == '4'\nassert solution('5 6\\naaaaa\\n') == '15'\nassert solution('5 7\\naaaaa\\n') == '-1'\nassert solution('10 100\\najihiushda\\n') == '233'"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"5 7\") == \"-1\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n\"\n                 \"aaaaa\") == \"4\"\nassert solution(\"5 7\\n\"\n                 \"aaaaa\") == \"-1\"\nassert solution(\"10 100\\n\"\n                 \"ajihiushda\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n"
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\najihiushda\") == \"233\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"30 20 10\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''30 20 10\n''') == '39'\nassert solution('''1 100 1\n''') == '3'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 1\n''') == '4'\nassert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n1 100 1\n''') == '3'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n20 20 20\n''') == '20'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1000000000000000') == '10'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 1, 1]) == '4'\nassert solution([3, 2, 2]) == '7'\nassert solution([1, 100, 1]) == '3'\nassert solution([30, 20, 10]) == '39'\n"
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"11 0 0\") == \"0\""
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"YES\"\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"NO\"\nassert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 1''') == \"NO\"\nassert solution('''10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10\n10 10"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\n\n\n--------------------------------------\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains two integers $n$ and $m$ ($1 \\le n \\le 100$, $1 \\le m \\le 100$) \u2014 the number of types of tiles and the size of the square Masha wants to construct.\n\nThe next $2n$ lines of the test case contain descriptions of tiles types. Types of tiles are written one after another, each type is written on two lines. \n\nThe first line of the description contains two positive (greater than zero) integers not exceeding $100$ \u2014 the number written in the top left corner of the tile and the number written in the top right corner of the tile of the current type. The second line of the description contains two positive (greater than zero) integers not exceeding $100$ \u2014 the number written in the bottom left corner of the tile and the number written in the bottom right corner of the tile of the current type.\n\nIt is forbidden to rotate tiles, it is only allowed to place them in the orientation they have in the input.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 100$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains two integers $n$ and $m$ ($1 \\le n \\le 100$, $1 \\le m \\le 100$) \u2014 the number of types of tiles and the size of the square Masha wants to construct.\n\nThe next $2n$ lines of the test case contain descriptions of tiles types. Types of tiles are written one after another, each type is written on two lines. \n\nThe first line of the description contains two positive (greater than zero) integers not exceeding $100$ \u2014 the number written in the top left corner of the tile and the number written in the top right corner of the tile of the current type. The second line of the description contains two positive (greater than zero) integers not exceeding $100$ \u2014 the number written in the bottom left corner of the tile and the number written in the bottom right corner of the tile of the current type.\n\nIt is forbidden to rotate tiles, it is only allowed to place them in the orientation they have in the input.\n\n\n-----Output-----\n\nFor each test case print the answer: \"YES\" (without quotes) if Masha can construct the square of size $m \\times m$ which is a symmetric matrix. Otherwise, print \"NO\" (withtout quotes).\n\n\n-----Example-----\nInput\n6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\nOutput\nYES\nNO\nYES\nNO\nYES\nYES\n\n\n\n-----Note-----\n\nThe first test case of the input has three types of tiles, they are shown on the picture below. [Image] \n\nMasha can construct, for example, the following square of size $4 \\times 4$ which is a symmetric matrix: $\\left. \\begin{array}{|c|c|c|c|} \\hline 5 & {7} & {8} & {9} \\\\ \\hline 7 & {4} & {9} & {8} \\\\ \\hline 8 & {9} & {5} & {7} \\\\ \\hline 9 & {8} & {7} & {4} \\\\ \\hline \\end{array} \\right.$\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n3 4\n1 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('5 5') == 'YES'\nassert solution('3 5') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 6') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('5 5') == 'YES'\nassert solution('5 5') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == \"YES\"\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'YES'\nassert solution('1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'YES'\nassert solution('10 10\\n10 10\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'YES'\nassert solution('100 100\\n100 100\\n1 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'YES'\nassert solution('7 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2') == 'YES'\nassert solution('6\\n3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2') == 'NO'\n"
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100\\n10 10\\n10 10\\n1 2\\n4 5\\n8 4\\n2 2\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n\") == \"YES\"\nassert solution(\"4 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3]) == 0\nassert solution([5]) == 1\nassert solution([6]) == 1\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4\n8''') == '1'\nassert solution('''5\n6\n10''') == '2'\nassert solution('''3\n10\n12''') == '1'"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\nprint(solution(sys.stdin.read()))\n\n\"\"\"\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('11') == '2'\nassert solution('22') == '1'\nassert solution('33') == '2'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n\n''') == '1'\nassert solution('''\n6\n\n''') == '1'\nassert solution('''\n3\n\n''') == '0'\n\nassert solution('''\n5\n\n''') == '1'\nassert solution('''\n6\n\n''') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n\"\"\"\nimport math\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('15') == '2'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '6'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n(())') == '4'\nassert solution('5\\n((((()))))') == '5'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1917', solution()\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution() == \"4\"\nassert solution() == \"0\""
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\nassert solution() == '4'\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n()))()\n''') == \"5\"\nassert solution('''3\n(()\n''') == \"4\"\nassert solution('''2\n(((\n''') == \"0\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n()))()\n''') == \"5\"\nassert solution('''3\n(()\n\n''') == \"4\"\nassert solution('''2\n(((\n\n''') == \"0\"\nassert solution('''3\n(()\n\n''') == \"0\""
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 5\n\nassert solution(stdin='''\n1\n(()\n\n''') == 4\n\nassert solution(stdin='''\n2\n(((\n\n''') == 0\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5071\n''') == '4'\nassert solution('''\n705\n''') == '1'\nassert solution('''\n1241367\n''') == '-1'\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\""
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\""
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1235\") == \"2\"\nassert solution(\"1245\") == \"2\"\nassert solution(\"12456789\") == \"3\"\nassert solution(\"1123456789\") == \"3\"\n"
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\nassert solution('7') == '1'\nassert solution('12345678910111213141516171819') == '-1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abacbecfd\") == \"1 1 2 1 2 1 2 1 2\"\nassert solution(\"aaabbcbb\") == \"1 2 1 2 1 2 1 1 2\"\nassert solution(\"abcdedc\") == \"1 1 1 1 1 1 2 3\"\nassert solution(\"abcbccbddcd\") == \"1 1 1 1 1 1 2 1 2 1 2 1 2 1 2 1 2\""
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n\ns = input()\n\nfor _ in range(int(input())):\n    s = list(sorted(s))\n    if len(set(s)) == len(s):\n        print(len(s))\n        print(\" \".join([str(i+1) for i in range(len(s))]))\n        break\n    else:\n        s.pop(s.index(min(s)))\n        s.pop(s.index(min(s)))\n        s.insert(s.index(min(s)), max(s))\n        s.insert(s.index(min(s)), min(s))\n        s.pop(s.index(max(s)))\n        s.pop(s.index(max(s)))\n        s.insert(s.index(max(s)), min(s))\n        s.insert(s.index(max(s)), max(s))\n        print(len(s))\n        print(\" \".join([str(i+1) for i in range(len(s))]))\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\nabacbecfd\n''') == '2'\n\nassert solution('''\n7\nabcdedc\n''') == '3'\n\nassert solution('''\n5\nabcde\n''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '2'\nassert solution('9') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(stdin='''2\n    1 2 1 2 1 2 1 2\n    ''') == \"1 1 1 1 1 1 2 2\"\nassert solution(stdin='''7\n    a b c d e f g\n    ''') == \"1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nabcde\n''') == '1'\nassert solution('''\n8\naaabbcbb\n''') == '2'\nassert solution('''\n7\nabcdedc\n''') == '3'\nassert solution('''\n5\nabcde\n''') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '2'\nassert solution('9') == '1'\nassert solution('7') == '1'\nassert solution('5') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('6') == '1 2 1 2 1 2'\nassert solution('10') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('12') == '1 2 1 2 1 1 1 1'\nassert solution('15') == '1 1 1 1 1 1 2 1 2 2'\n"
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\nabcde\n\n''') == '1'\n\nassert solution('''\n7\naaaaaa\n\n''') == '1'\n\nassert solution('''\n5\nabcde\n\n''') == '2'\n\nassert solution('''\n4\nabcde\n\n''') == '1'\n\nassert solution('''\n3\nabcde\n\n''') == '1'"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'NO'\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n''') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'YES'\nprint(solution(input))\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES', 'Test #1'\nassert solution('5') == 'NO', 'Test #2'\nassert solution('3') == 'YES', 'Test #3'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"a\",\"abacaba\"]) == \"YES\"\nassert solution([\"a\",\"abacaba\",\"ba\"]) == \"YES\"\nassert solution([\"a\",\"abacaba\",\"ba\",\"aba\"]) == \"YES\"\nassert solution([\"q\",\"qwerty\"]) == \"NO\"\nassert solution([\"q\",\"qwerty\",\"qwerty\"]) == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"abc\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"ab\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n\"\"\"\nimport re\n\nn = int(input())\n\ns = set()\n\nfor i in range(n):\n    s.add(input())\n\ns = list(s)\n\nfor i in range(len(s)):\n    print(\"YES\" if re.search(r\"(.+).*\\1\",s[i]) is not None else \"NO\")"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 5 2\") == \"3\"\nassert solution(\"8 5 2\") == \"5\"\nassert solution(\"8 100 5 2\") == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 4\n4 2 3 1 5 1 6 4\n''') == '5'\nassert solution('''5 2\n3 1 2 1 3\n''') == '0'\nassert solution('''5 100\n12 34 55 43 21\n''') == '5'"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"5\"\nassert solution(input2) == \"0\"\nassert solution(input3) == \"5\""
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 4\") == \"5\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('8 4') == '5'\nassert solution('5 100') == '5'\n"
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"9 3\") == \"14\"\nassert solution(\"3 6\") == \"12\""
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n3 9\n3 6\n9 3\n5 5\n7 7\n''') == '12'\nassert solution('''9 3\n3 6\n3 6\n9 3\n5 5\n7 7\n''') == '14'\nassert solution('''506 2708\n3 6\n3 6\n9 3\n5 5\n7 7\n''') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n''') == '12'\nassert solution('''\n3 9\n''') == '14'\nassert solution('''\n3 6\n''') == '12'\nassert solution('''\n506 2708\n''') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n''') == '12'\n\nassert solution('''3 9\n''') == '14'\n\nassert solution('''3 6\n''') == '12'\n\nassert solution('''506 2708\n''') == '3218'\n\nassert solution('''1 2\n''') == '2'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n\n''') == '12'\n\nassert solution('''3 9\n\n''') == '14'\n\nassert solution('''3 6\n\n''') == '12'\n\nassert solution('''506 2708\n\n''') == '3218'"
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('4 4') == '12'\nassert solution('506 2708') == '3218'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nabacbecfd\n\n''') == 'YES', 'example test case 1'\nassert solution('''\n8\naaabbcbb\n\n''') == 'YES', 'example test case 2'\nassert solution('''\n7\nabcdedc\n\n''') == 'NO', 'example test case 3'\n\nassert solution('''\n5\nabcde\n\n''') == 'YES', 'example test case 4'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"ab\") == \"YES\"\nassert solution(\"abcd\") == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nabacbecfd\n\n''') == \"YES\"\nassert solution('''\n1\naaabbcbb\n\n''') == \"YES\"\nassert solution('''\n1\nabcdedc\n\n''') == \"NO\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO', \"Case 1\"\nassert solution('2') == 'YES', \"Case 2\"\nassert solution('3') == 'NO', \"Case 3\"\nassert solution('4') == 'YES', \"Case 4\"\nassert solution('5') == 'NO', \"Case 5\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'NO'\nassert solution('8') == 'YES'\nassert solution('7') == 'YES'\nassert solution('5') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == \"NO\"\nassert solution('6') == \"NO\"\nassert solution('7') == \"YES\"\nassert solution('9') == \"YES\"\nassert solution('20') == \"YES\"\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nabcd\\n') == 'YES'\nassert solution('4\\nabcd\\nefgh\\n') == 'YES'\nassert solution('5\\nabcd\\nefgh\\n') == 'NO'\n"
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nbcdef') == 'NO'\nassert solution('5\\nbcdef') == 'YES'\nassert solution('6\\nabacabcd') == 'YES'\nassert solution('7\\nabacabcd') == 'NO'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 5') == '-1'\nassert solution('2 4') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"0 0\") == \"1\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 5') == '-1'\nassert solution('3 10') == '50'"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('5 10') == '-1'\nassert solution('4 6') == '-1'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n''') == '25'\nassert solution('''3 2\n''') == '25'\nassert solution('''3 3\n''') == '-1'"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 2') == '25'\nassert solution('5 8') == '35'\nassert solution('5 10') == '15'\nassert solution('10 1') == '-1'\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 1\") == -1\n\n------------------\n- 1 \\leq A \\leq 10 \\leq B \\leq 100\n- A and B are integers.\n\n-----Constraints-----\n - 1 \\leq A \\leq 10\n - 1 \\leq B \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nIf there is a price that satisfies the condition, print an integer representing the lowest such price; otherwise, print -1.\n\n-----Sample Input-----\n2 2\n\n-----Sample Output-----\n25\n\nIf the price of a product before tax is 25 yen, the amount of consumption tax levied on it is:\n - When the consumption tax rate is 8 percent: \\lfloor 25 \\times 0.08 \\rfloor = \\lfloor 2 \\rfloor = 2 yen.\n - When the consumption tax rate is 10 percent: \\lfloor 25 \\times 0.1 \\rfloor = \\lfloor 2.5 \\rfloor = 2 yen.\nThus, the price of 25 yen satisfies the condition. There are other possible prices, such as 26 yen, but print the minimum such price, 25.\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"25\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"7 2\") == \"5\""
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\n\"\"\"\n"
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"2\", \"2\"]) == \"25\"\nassert solution([\"0\", \"0\"]) == \"25\"\nassert solution([\"1\", \"1\"]) == \"25\"\nassert solution([\"2\", \"3\"]) == \"25\"\nassert solution([\"1\", \"2\"]) == \"25\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n') == 'YES'\nassert solution('1 1\\n') == 'YES'\nassert solution('8 3\\n') == 'NO'\nassert solution('9 4\\n') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == \"YES\"\nassert solution('1 2') == \"NO\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 3\n1 2 4 5 6 8 \n''') == 'YES'\nassert solution('''26 6\n''') == 'NO'"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n26 6\n''') == \"YES\"\nassert solution('''\n8 3\n''') == \"NO\"\nassert solution('''\n1 1\n''') == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n') == 'YES'\nassert solution('1 2\\n') == 'NO'\nassert solution('5 2\\n') == 'NO'"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n\") == \"YES\"\nassert solution(\"1 1\\n\") == \"YES\"\nassert solution(\"9 4\\n\") == \"NO\""
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"100 10\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'\n"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'"
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('1 1') == 'NO'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 20\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"10 5\") == \"3\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n2\n1 2\n3 5\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n2\n4 1\n1 3\n2 2\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n5\n3 4\n4 -1\n1 3\n2 2\n2 -2\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == \"5\"\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == \"3\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45''') == '5'\nassert solution('''3 2\n300 -300\n1 299\n1 123\n''') == '3'\nassert solution('''4 6\n4 6\n10 -2\n8 -1\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n4 6\n10 -2\n8 -1\n''') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1', \"First\"\nassert solution('5 20') == '5', \"Second\"\nassert solution('1 100') == '0', \"Third\"\nassert solution('100 1000') == '99', \"Fourth\"\nassert solution('-1 -100') == '0', \"Fifth\"\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nassert solution('''\n3 2\n300 -300\n1 299\n1 123\n''') == '2'\nassert solution('''\n3\n1 2\n2 2\n1 -5\n''') == '0'\nassert solution('''\n10 -2\n8 -1\n''') == '1'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'YES', solution.__doc__\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\\n\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'NO'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'NO'\nassert solution('''\n1\n10\n''') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == \"YES\"\nassert solution('3') == \"YES\"\nassert solution('1') == \"YES\"\nassert solution('4') == \"YES\"\nassert solution('2') == \"NO\"\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES', '1'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES', '1 3 1'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO', '1 3 1'\nassert solution('''\n1\n10\n''') == 'YES', '10'\nassert solution('''\n\n''') == 'NO', 'NO'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'NO'\n\nassert solution('''\n4\n3 5 2 6 1 4 9 8 7 1 4 5 6\n''') == 'YES'\n"
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n1 1 1 1 1 1 3 3 3 3\n''') == 'YES'\nassert solution('''\n1 3 1\n3 1 3\n1 3 1\n''') == 'YES'\nassert solution('''\n1\n10\n''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n\nassert solution('''\n1\n10 0\n10 -10\n30 0\n''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution([3, 4]) == \"YES\"\nassert solution([3, 5]) == \"YES\"\nassert solution([4, 5]) == \"YES\"\nassert solution([4, -5]) == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == \"YES\"\nassert solution('''3 5\n4 -5\n4 -2\n1 3''') == \"YES\"\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2''') == \"YES\"\nassert solution('''3 10\n10 0\n10 -10\n30 0''') == \"NO\"\nassert solution('''4 5\n4 -5\n4 -2\n1 3\n''') == \"YES\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"4 5\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 2\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == \"YES\"\nassert solution(test_input_2) == \"YES\"\nassert solution(test_input_3) == \"NO\"\nassert solution(test_input_4) == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\n"
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\n4 -5\n4 -2\n1 3\n''') == \"YES\"\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == \"NO\"\n\nassert solution('''3 5\n5 2\n5 -3\n2 1\n4 -2\n''') == \"YES\"\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == \"NO\""
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7 3 2\\n\"\n    \"1 2 1\\n\"\n) == \"YES\\n\"\nassert solution(\n    \"10 1 11\\n\"\n    \"1\"\n) == \"YES\\n\"\nassert solution(\n    \"10 1 5\\n\"\n    \"2\"\n) == \"YES\\n\"\nprint(solution(\n    \"3 8\\n\"\n    \"1\\n\"\n))\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 7\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"7 1 11\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\\n\"\nassert solution(\"10 1 5\") == \"YES\\n0 0 0 0 0 0 0 0 0 0 1\\n\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 2\n1 2 1''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''7 1 5\n2\n\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \nassert solution('''10 1 11\n1\n\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 0 1 \nassert solution('''10 1 5\n2\n\n''') == 'YES\\n0 0 0 0 0 1 1 0 0 0 0 \n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \n''' == solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0 \n''') == 'NO'\nassert solution('''\n10 1 5\n0\n''') == 'NO'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('3 4 5') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 3 2\\n1 2 1\"\n) == \"YES\"\n\nassert solution(\n    \"10 1 11\\n1\"\n) == \"YES\"\n\nassert solution(\n    \"10 1 5\\n2\"\n) == \"YES\""
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1\\n1') == 'NO'\nassert solution('4\\n1\\n2') == 'YES'\nassert solution('6\\n1\\n4') == 'YES'\nassert solution('6\\n1\\n4') == 'NO'\nassert solution('4\\n2\\n2') == 'YES'\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples.sample_input_1) == \"YES\\n0 1 0 2 2 0 3\\n\"\nassert solution(samples.sample_input_2) == \"YES\\n0 0 0 0 0 0 0 0 0 1 \\n\"\nassert solution(samples.sample_input_3) == \"YES\\n0 0 0 0 0 1 1 0 0 0 0 \\n\"\n"
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7 3 2\n1 2 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 1 11\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 1 5\n2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 1 5\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10 1 5\n10\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"abbaba\"\n) == \"3\"\nassert solution(\n    \"bbaba\"\n) == \"3\"\nassert solution(\n    \"baaba\"\n) == \"2\"\nassert solution(\n    \"abcde\"\n) == \"0\"\nassert solution(\n    \"asdfasdf\"\n) == \"3\"\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('asdfasdf') == 3\nassert solution('abcde') == 0\nassert solution('a') == 1\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\nassert solution('''\nbaaba\nab\n''') == 2\nassert solution('''\nabcde\nabcde\n''') == 0\nassert solution('''\nasdfasdf\nfasd\n''') == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 1\nassert solution(\"bbb\") == 2\nassert solution(\"asdfasdf\") == 3\nassert solution(\"tttttt\") == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('baaba') == '3'\nassert solution('bbaba') == '3'\nassert solution('abcde') == '0'\nassert solution('abcde') == '0'\nassert solution('asdfasdf') == '3'\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 3\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('baaba') == 2\nassert solution('abcde') == 0\n"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aa\") == 0\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"bbaba\", \"bb\"\n) == 3\nassert solution(\n    \"baaba\", \"ab\"\n) == 2\nassert solution(\n    \"abcde\", \"abcde\"\n) == 0\nassert solution(\n    \"asdfasdf\", \"fasd\"\n) == 3\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('0.9898') == '1 1'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(solution(input()))\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\""
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3 2'\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '0.1094759068307732') == '2 2'\nassert solution(\n    '0.2517959597910861') == '4 4'\nassert solution(\n    '2.73239889798916') == '10 2'\nassert solution(\n    '2.94424298097672') == '10 3'\n\n\"\"\""
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"1.099999\") == \"9 9\"\nassert solution(\"0.799997\") == \"10 3\"\n"
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6 3 3\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n10 4 3\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n8 5 3\n\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 4 3') == 'YES'\nassert solution('10 4 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 3 3\n1 2\n2 3\n2 4\n3 5\n4 6\n5 7''') == 'YES'\nassert solution('''6 2 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 3\n\n''') == 'YES'\nassert solution('''\n6 2 3\n\n''') == 'NO'\nassert solution('''\n8 5 3\n\n''') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 3\\n\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\\n\"\nassert solution(\"6 2 3\\n\") == \"NO\\n\"\nassert solution(\"10 4 3\\n\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\nassert solution(\"8 5 3\\n\") == \"YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 5 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 6 3\") == \"NO\"\nassert solution(\"8 5 3\") == \"YES\"\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('8 5 3') == 'YES'\nassert solution('10 5 3') == 'YES'\n"
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6 3 3\"\n    ) == \"YES\"\n\nassert solution(\n    \"6 2 3\"\n    ) == \"NO\"\n\nassert solution(\n    \"10 4 3\"\n    ) == \"YES\"\n\nassert solution(\n    \"8 5 3\"\n    ) == \"YES\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '11'\nassert solution('2') == '00'\nassert solution('3') == '11'\nassert solution('4') == '10'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\n\nassert solution(\"5 3 6\") == \"01010100\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"4 6 7\") == \"01000100\""
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"101100\"\nassert solution(input()) == \"01010100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 1''') == '1100'\nassert solution('''3 3 3''') == '101100'\nassert solution('''5 3 6''') == '01010100'\n"
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\""
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\nab\nbc''') == 'acbbac'\nassert solution('''3\naa\nbc''') == 'cacbacbab'\nassert solution('''1\ncb''') == 'abc'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('1') == 'NO'\nassert solution('3') == 'YES'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nab\\nbc\") == \"acbbac\"\nassert solution(\"3\\naa\\nbc\") == \"cacbacbab\"\nassert solution(\"1\\ncb\\nac\") == \"abc\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nab\\nbc\\n\") == \"acbbac\"\nassert solution(\"1\\ncb\\nac\\n\") == \"cacbacbab\"\nassert solution(\"3\\naa\\nbc\\n\") == \"cacbacbab\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == \"NO\"\nassert solution('3') == \"YES\"\nassert solution('1') == \"YES\"\nassert solution('0') == \"NO\""
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nab\\nbc\") == \"YES\"\nassert solution(\"1\\ncb\\nac\") == \"YES\"\nassert solution(\"1\\nbc\\nac\") == \"NO\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('10\\n-1 2 2') == '-1'\nprint('all tests passed')\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3 5\n''') == '3 1 2 4 5'\nassert solution('''\n2\n1 3\n''') == '1 3 1 2 4 5'\nassert solution('''\n6\n1 1 1 1 1 1\n''') == '1 1 1 1 1 1'\nassert solution('''\n5\n-1 -1 2 3 4\n''') == '-1 -1 2 3 4'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1, 2, 3, 4, 5'\n\"\"\"\nn = int(input())\nq = list(map(int, input().split()))"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n-2 1\n''') == '3 1 2'\nassert solution('''\n5\n1 1 1 1\n''') == '1 2 3 4 5'\nprint(solution('''\n'''))\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 3 4\"\n\nassert solution(\"2\") == \"1 2\"\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 3 4 5\"\nassert solution() == \"1 2 3 4 5\"\nassert solution() == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\n\"\"\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3\n''') == \"1\"\nassert solution('''\n5\n2 2 2 3 3\n''') == \"2\"\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1\n''') == \"2\"\nassert solution('''\n10\n1 2 2 2 2 2 2 2 2 2\n''') == \"2\"\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == \"1\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n\n''') == '2'\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"5\") == 2"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\\n1 2 3 2 5\"\n    ) == \"2\"\n\nassert solution(\n    \"10\\n2 2 3 3 4 4 4 5 5 5 6 6 6 7 7 7 7 7 7 7 7 7\"\n    ) == \"9\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n\"\"\""
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"5\") == 2"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(2) == '5'\nassert solution(10) == '5'\nassert solution(5) == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '5'\nassert solution('10') == '5'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\nassert solution('20') == '5'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"10\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '5'\nassert solution('10\\n') == '5'\nassert solution('100\\n') == '2'"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10''') == '5'\nassert solution('''3''') == '3'\nassert solution('''3''') == '2'\nassert solution('''1000000000''') == '1000000000'\nassert solution('''1000000000000000''') == '1000000000000000'\n"
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('9') == '5'\nassert solution('7') == '5'\nassert solution('8') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '0 1'\nassert solution('3') == '0 1'\nassert solution('4') == '0 1'\nassert solution('5') == '0 1'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('686') == '22 334'\nprint(solution(input()))\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0 1'\nassert solution('3') == '0 15'\nassert solution('6') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '119 226'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n\n''') == '0 1'\n\nassert solution('''\n15\n5 5 5\n5 5 5\n\n''') == '0 15'\n\nassert solution('''\n319\n10 53 256\n182 103 34\n\n''') == '119 226'\n\nassert solution('''\n686\n479 178 29\n11 145 530\n\n''') == '22 334'\n"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '0 1'\nassert solution(\"15\") == '0 15'\nassert solution(\"319\") == '119 226'\nassert solution(\"15\") == '0 15'\nassert solution(\"3\") == '3 3'"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '0 1'\n\n\"\"\""
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '119 226'\nassert solution('319') == '119 226'"
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0 3\n3 0 0\n''') == '0 3'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\nassert solution('''\n686\n479 178 29\n11 145 530\n''') == '22 334'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3''') == \"3\"\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == \"4\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"10\") == '10'\nassert solution(\"5\") == '3'\nassert solution(\"1000000000000\") == '6'\nassert solution(\"100000000000001\") == '6'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3 7 7'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4 4 4 1 1 2 2 3 3'\nassert solution('1\\n1 1 1 1') == '2 2'\nassert solution('5\\n1 1 2 3 4') == '2 2 3 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\n\"\"\"\n) == \"3 4 4\"\n\nassert solution(\n\"\"\"\n6\n1 1 1 1 1 1\n\n\"\"\"\n) == \"1 1\"\n\nassert solution(\n\"\"\"\n10\n3 4 5 8 2 1 3 9 6 10\n\n\"\"\"\n) == \"3 6\"\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3 3'\nassert solution('7') == '3 3 4 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4'\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '3 4 1 3 2 2'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('5') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4'\n"
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"11\") == \"4 4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2 3\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2 3\"\nassert solution(\"5 5 5 5 5\") == \"3 3\""
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7''') == 'YES'\nassert solution('''2\n2\n2\n2''') == 'NO'\nassert solution('''1\n2\n1''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'YES', \"1 2 3\"\nassert solution('3') == 'NO', \"3 1 2\"\nassert solution('2') == 'NO', \"1 2\""
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3''') == 'YES'\nassert solution('''3\n3 1 2''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 3\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 1 2') == 'YES'\nassert solution('3\\n3 1 2') == 'NO'"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 2\n\n''') == 'YES'\n\nassert solution('''\n3\n1 2 3\n\n''') == 'NO'\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\nassert solution(\"3\\n3 1 2\\n\") == \"YES\"\nassert solution(\"3\\n3 1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == \"YES\"\nassert solution('3 1 2') == \"NO\"\nassert solution('2 2 1') == \"YES\"\nassert solution('1 1 1') == \"NO\"\nassert solution('1') == \"YES\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == -1\nassert solution() == (4, 3, 4, 5, 0)\nassert solution() == (4, 3, 4, 5, 0)\n\n\"\"\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '-1'\nassert solution('''\n4\nabcd\naccd\n''') == '4 3 5 5'\nassert solution('''\n5\nabcd\naccd\n''') == '-1'\nassert solution('''\n6\nabcdef\nabdfec\n''') == '4 3 5 5'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '-1'\n\nassert solution('''\n4\nabcd\naccd\n\n''') == '4 3 5 4 5'"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"-\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n4\nabcd\naccd\n\n5\nabcd\nabcef\n\n5\nabcd\nacde\n\n''') == '-1'\nassert solution('''\n6\nabcdef\nabdfec\n\n4\nabcd\naccd\n\n5\nabcd\nabcef\n\n5\nabcd\nacde\n\n''') == '4'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nabcdef\\nabdfec\") == \"4\"\nassert solution(\"2\\nabcd\\naccd\") == \"-1\"\nassert solution(\"3\\nabcd\\naccd\") == \"4\"\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nabcd\\naccd\\nabd\\nabcd\") == \"4\"\n\nassert solution(\"4\\nabcd\\naccd\\nabd\\nabcd\") == \"-1\"\n\nassert solution(\"4\\nabcd\\naccd\\nabd\\nabcd\") == \"4\"\n\nassert solution(\"6\\nabcdef\\nabdfec\") == \"4\""
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '-1'\n"
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nabcdef') == '4\\n3 5 4 5'\nassert solution('4\\nabcd') == '-1'\n\"\"\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"2\") == \"PS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"1\") == \"S\"\nassert solution(\"1\") == \"S\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\", solution(\"5\")\nassert solution(\"3\") == \"PS\", solution(\"3\")\nassert solution(\"2\") == \"PS\", solution(\"2\")\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\naba\na\na\na\nabab\na\nab\na\nab\na\nab\na\nbaba\na\naba\na\na\na\nabab\na\nab\na\nab\na\naba\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nabab\na\naba\na\na\na\nabab\na\nab\na\nab\na\naba\na\nab\na\nab\na\nab\na\nab\na\nab\na\nabab\na\naba\na\na\na\nabab\na\nab\na\nab\na\naba\na\nab\na\nab\na\naba\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nabab\na\naba\na\na\na\nabab\na\nab\na\nab\na\naba\na\nab\na\nab\na\naba\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'PS'\nassert solution(input()) == 'SP'\nassert solution(input()) == 'PS'\n\n'''\n\nn = int(input())\ns = input()\nprefix = []\nsuffix = []\nans = ''\nfor i in range(n):\n    prefix.append(s[:i])\n    suffix.append(s[i:])\n\nprefix = sorted(prefix)\nsuffix = sorted(suffix)\nfor i in range(n):\n    if prefix[i] == s and suffix[i] == s:\n        ans = prefix[i] + 'PS' + suffix[i]\n        break\n\nprint(ans)"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nba\\na\\na\\na\\na\\na\\na') == 'PSPSPS'\nassert solution('3\\na\\nc') == 'PS'\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\""
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\nb\na\nab\na\nb\n''') == 'PS'\nassert solution('''2\na\na\nab\na\nb\n''') == 'SPS'\nassert solution('''2\na\nc\n''') == 'PS'\nassert solution('''2\nb\na\nab\na\nb\n''') == 'PS'"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"PS\"\nassert solution(input) == \"SP\"\nassert solution(input) == \"SPSP\"\nassert solution(input) == \"SSPP\"\nassert solution(input) == \"PSPS\"\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    ba\n    a\n    abab\n    a\n    aba\n    baba\n    ab\n    aba\n''') == 'SPPSPSPS'\nassert solution('''\n    3\n    a\n    c\n''') == 'PS'\nassert solution('''\n    2\n    a\n    c\n''') == 'PS'\n'''\n"
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"PSPS\"\nassert solution(input()) == \"PPSS\"\nassert solution(input()) == \"PS\""
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('6 4 2') == '3'"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 6 5 8\") == \"1\"\nassert solution(\"4 4 4 4 4\") == \"2\"\nassert solution(\"4 4 4 4 4\") == \"3\"\nassert solution(\"4 4 4 4 4 4 4 4\") == \"4\"\nprint(\"You are not re-testing, all good! :)\")\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '1'\nassert solution([1,1,1,1,1,1,1,1]) == '1'\nprint(solution(input))\nprint(solution([1,1,1,1,1,1,1,1]))\nprint(solution([]))\n\n'''\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4\n6''') == '1'\nassert solution('''7\n7\n10''') == '2'\nassert solution('''3\n4\n7''') == '3'\nassert solution('''2\n5\n2''') == '5'\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4 6 8 10') == \"1\"\nassert solution('2 4 6 8 10') == \"2\"\nassert solution('2 4 6 8 10') == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 4 6 8 10\"\n    ) == \"1\"\n\nassert solution(\n    \"0 1 2 3\"\n    ) == \"2\"\n\nassert solution(\n    \"1 2 3 4\"\n    ) == \"2\"\n\n\n-----Hint-----\n\nFirmamente, \u00e9 a mesma coisa de seguir o template de c\u00e1lculo:\n\nLembrar de ler o problema inteiro de entrada, transformar-o em int, e agora transformar-o em int e por fim transformar-o em int.\n\n\u00c9 um problema que tem l\u00edder porque \u00e9 necess\u00e1rio levar ao m\u00f3dulo int para isso, mas ele n\u00e3o \u00e9 um problema interno da Python.\n\nN\u00e3o \u00e9 a melhor maneira de fazer o trabalho. Selecionar um m\u00f3dulo int est\u00e1 bom.\n\nA\u00ed que \u00e9 v\u00e1lida:"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 10') == '1', \"Just testing\"\n\nassert solution('2 4 6 9 4 8') == '4', \"Just testing\"\n\nassert solution('4 5 9 8 7') == '0', \"Just testing\"\n\nassert solution('1 1 1 1 1 1 1') == '3', \"Just testing\"\n\nassert solution('100 100 100 100 100 100 100') == '100', \"Just testing\""
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5]) == \"1\"\nassert solution([2, 2, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5]) == \"1\"\nassert solution([4, 2, 4, 4, 4, 2, 4, 4, 4, 2, 4, 2]) == \"1\"\nassert solution([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == \"1\"\nassert solution([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]) == \"1\"\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\nsys.stdin = open(r\"sample.txt\", \"r\")\nassert solution(sys.stdin.read()) == \"1\"\nsys.stdin = open(r\"sample.txt\", \"r\")\nassert solution(sys.stdin.read()) == \"1\"\nsys.stdin = open(r\"sample.txt\", \"r\")\nassert solution(sys.stdin.read()) == \"1\"\nsys.stdin = open(r\"sample.txt\", \"r\")\nassert solution(sys.stdin.read()) == \"1\"\nsys.stdin = open(r\"sample.txt\", \"r\")\n"
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n5\n1 1 1 1\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\n\"\"\"\nimport math\n\nstdin = \"\"\"\n4\n1 1 0 1 1 0 1 0 1 0\n\"\"\""
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 1 0 1 1\n''') == '0'\nassert solution('''5\n1 1 0 0 0\n''') == '0'\nassert solution('''5\n1 1 0 1 1\n''') == '1'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 1 0 1 1\n\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n1 1 0 1 1 0 1 0 1 0\n''') == '2'\nassert solution('''\n5\n1 1 1 1\n''') == '0'\nassert solution('''\n4\n1 1 1\n''') == '0'\nprint('\"Run\" is good. Time to check.')\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3 4 5') == '1'\nassert solution('6\\n90 12 18 30 18') == '4'"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\nassert solution(\"1\") == '1'\nassert solution(\"6\") == '4'\nassert solution(\"6 90 12 18 30 18\") == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 2 2\\n\") == \"2\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n4 5''') == '2'\nassert solution('''6\n1 2 3 4 5''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '1'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('6\\n90 12 18 30 18') == '4'\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n1\n1\n1\n1\n2\n\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n1\n1\n2\n1\n2\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n4\n5 6 7 8 9\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''6\n6 90 12 18 30 18\n''') == '4'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('6') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"1\""
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\"\"\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n100\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n''') == '2'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('7') == '3'"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"20\") == \"5\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2 4 3 3 2''') == '2'\nassert solution('''5\n1 2 3 4 2''') == '3'\nassert solution('''1\n100''') == '1'\nassert solution('''13\n1 2 3 4 5 6 7 8 9 10 11 12 13''') == '1'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15''') == '2'\n"
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution('''\n10 4\n0 0 1 1 0 1 0 0 1 1\n''') == '-1'"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('6 10') == '-1'\nassert solution('5 10') == '2'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution('''10 10\n1 1 1 0 1 1 0 1 1 0 1 1\n''') == '2'"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n0 0 1 1 0 1\n''') == '2'\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nprint(solution('''\n6 2\n1 0 0 0 1 1\n'''))"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 3\") == \"2\"\nassert solution(\"5 10\") == \"3\"\nassert solution(\"15 3\") == \"0\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('10 10') == '-1'\nassert solution('10 3') == '-1'\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution(\n'''\n5 3\n0 0 1 1 0 1\n''') == '2'\nassert solution(\n'''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\n"
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''5 3\n0 0 1 1 0 1 0 0 0 1\n''') == '2'\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"3\"\nassert solution(\"3\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"10\") == \"6\"\n"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"3\""
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\n\"\"\"\n\nimport math\n\nnumber = int(input())"
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\""
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\") == \"3\"\nassert solution(\"2\\n4\") == \"2\"\nassert solution(\"3\\n5\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '0'\nprint('OK')\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t1) == '3'\nassert solution(t2) == '0'\nassert solution(t3) == '6'\nassert solution(t4) == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == \"\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('(((())') == '3'\nassert solution('((()))') == '0'\nassert solution('()') == '0'\nassert solution('(()())') == '0'\nassert solution('())') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('(((())') == '3'\nassert solution('()())') == '0'\nassert solution('(())') == '0'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution(')()())') == '3'\nassert solution('()((())') == '3'\nassert solution('(()(((())') == '3'\nassert solution('(()())') == '3'\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('((((()))))') == \"3\"\nassert solution(')((())') == \"0\"\nassert solution('(((())') == \"1\"\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ba') == 1\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n\ns = input()\nt = input()\n\ndp = [[0]*(len(s)+1) for _ in range(len(t)+1)]\nfor i in range(1, len(dp)):\n    for j in range(1, len(dp[0])):\n        if t[i-1] == s[j-1]:\n            dp[i][j] = 1+dp[i-1][j-1]\n        else:\n            dp[i][j] = max(dp[i][j-1], dp[i-1][j])\n\nprint(dp[-1][-1])\n\n'''\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bbaba') == '3'\nassert solution('baaba') == '2'\nassert solution('abcde') == '0'\nassert solution('asdfasdf') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"test\", \"tst\") == 2\nassert solution(\"baaba\", \"ab\") == 2\nassert solution(\"asdfasdf\", \"fasd\") == 0\nassert solution(\"test\", \"test\") == len(\"test\")\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ba') == 2\nassert solution('abcde') == 0\nassert solution('abcde') == 0\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('asdfasdf') == 0\nassert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('abcde') == 2\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"bbaba\"\n) == 3, \"easy\"\n\nassert solution(\n    \"bb\"\n) == 2, \"easy\"\n\nassert solution(\n    \"abcde\"\n) == 0, \"easy\"\n\nassert solution(\n    \"asdfasdf\"\n) == 3, \"easy\"\n\nassert solution(\n    \"ab\"\n) == 2, \"easy\"\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaa') == 'a'\nassert solution('bbba') == 'bbb'\nassert solution('bbba') == 'bbb'\nassert solution('bbb') == 'bbb'\nassert solution('bbb') == 'bbb'\n"
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 'bbba'\nassert solution('baaba') == 'aba'\nassert solution('abcde') == 'abcde'\nassert solution('asdfasdf') == 'asdf'\nassert solution('qwert') == 'qwert'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"3 4 1 2\") == \"6\""
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 5 7 6') == '12'\nassert solution('100 2 5 5') == '101'"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 3 3 3') == '9'\n\"\"\"\n\na,b,c,d = map(int,input().split())\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 1 1') == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 5') == '6'"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1 1\") == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 4 2\") == \"4\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"-1 1 2 -1\") == \"2\"\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 2 2 2\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('10') == '4'\nassert solution('9') == '2'\nassert solution('12') == '3'\nassert solution('12') == '3'\n\"\"\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('7') == '1'\nassert solution('9') == '2'\n\"\"\""
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('5\\n1 1 1 1 1') == '3'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n4 1 4 6 7\\n') == '2'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2 2''') == '1'\nassert solution('''2\n1 1''') == '0'\nassert solution('''3\n1 1 1''') == '2'\nassert solution('''10\n1 1 3 2 5 7 8 6 4''') == '9'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '2'\n\nInput Format:\nThe first line contains T, the number of test cases.\nThe following T lines contain a single string N, denoting the number of problems.\nThe following T lines contain N integers describing the difficulties of the problems.\n\nOutput Format:\nFor each test case, print the number of choices of the integer K that makes the number of problems for ARCs and the number of problems for ABCs the same.\n\nSample Test Case 1:\nInput:\n2\n5\n9 1 4 4 6 7\n3\n9 1 2 6 7\nOutput:\n2\n4\nExplanation:\nTest Case 1: The 2-tuple (5,3) is chosen as the choice because d_1=9, and d_2=3. Therefore, it is for ARCs.\nTest Case 2: The 2-tuple (5,4) is chosen as the choice because d_1=9, and d_2=2. Therefore, it is for ABCs.\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n9 1 4 4 6 7\\n') == '2'\nassert solution('5\\n4 4 3 2 1\\n') == '1'\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 4 4 6 7\") == \"2\"\n"
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n9 1 4 4 6 7\n''') == \"2\"\nassert solution('''\n7\n7 1 2 3 4 5 6\n''') == \"3\"\nassert solution('''\n3\n5 2 4 1 6 3\n''') == \"3\"\nassert solution('''\n6\n7 1 2 3 4 5 6\n''') == \"4\""
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"100\") == \"11\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('6 7 12 10 10') == '2'\nassert solution('7 12 20 11 10 10') == '2'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\""
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == \"3\"\nprint(\"You're a stud!\") if __name__ == \"__main__\" else None\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '7 24 21 23'\n    ) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, 'WRONG!!!'"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1 5 1\") == \"3\"\nassert solution(\"10 2 1 2\") == \"2\"\nassert solution(\"10 7 4 2\") == \"4\"\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '7 24 21 23\\n'\n    '16 17 14 20 20 11 22\\n'\n    ) == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 24 21 23') == '3'\n"
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 24 21 23') == 3\n\n\"\"\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 3 4 5 6 7 10 21 23 24 49\\n\") == \"4\"\nassert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"5\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\nassert solution(\"5\\n2 10 50 110 250\\n\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"2\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''5\n2 10 50 110 250\n''') == '1'\nassert solution('''6\n4 7 12 100 150 199\n''') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 7 12 100 150 199\\n\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\nassert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"4\"\nassert solution(\"20\\n2 3 5 6 7 10 21 23 24 49\\n\") == \"2\"\n\n'''\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('10') == '4'\nassert solution('15') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 2 5 6 7 10 21 23 24 49\\n\") == \"4\"\nassert solution(\"5\\n2 10 50 110 250\\n\") == \"1\"\nassert solution(\"6\\n4 7 12 100 150 199\\n\") == \"3\"\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_1) == \"4\"\nassert solution(example_input_2) == \"1\"\nassert solution(example_input_3) == \"3\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n"
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 10 50 110 250') == '4'\nassert solution('6\\n4 7 12 100 150 199') == '3'\nassert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n5 2 11 3 7''') == '2 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4''')\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 4 5\n''') == '2 4'\nassert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''\n6\n2 5 10 1 10 2\n''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 4'\nassert solution('1 2') == '1 2'\nassert solution('5 2') == '1 2'\nassert solution('5 2') == '1 2'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\"\nassert solution(\"6 2 5 10 1 10 2\") == \"1 4\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n''') == '2 4'\nassert solution('''\n6\n2 5 10 1 10 2\n''') == '1 4'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"2 4\""
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"1 4\""
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 2\"\nassert solution(\"5\") == \"1 2\"\nassert solution(\"5\") == \"1 2\"\nassert solution(\"5\") == \"1 2\"\nassert solution(\"5\") == \"1 2\"\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2 4 8 3 6''') == '1 2'\nassert solution('''5\n2 4 8 3 6''') == '1 2'\nassert solution('''6\n5 2 11 3 7''') == '2 4'\n\nassert solution('''7\n1 8 9 2 3 7''') == '1 5'\nassert solution('''8\n1 2 5 8 9''') == '1 6'\n"
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"021\"\nassert solution(\"6\") == \"001122\"\nassert solution(\"6\") == \"211200\"\nprint(solution(input()))\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n121\n\n''') == '021'\nassert solution('''\n6\n000000\n\n''') == '001122'\nassert solution('''\n6\n211200\n\n''') == '211220'\nprint(\"You're a smart cookie!\")"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '021'\nassert solution('6') == '211200'\nprint(solution(input()))"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"02112\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n21120''') == '21120'\nassert solution('''6\n120110''') == '120120'\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"120110\") == \"120120\"\nassert solution(\"121\") == \"021\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"11\") == \"111\"\nassert solution(\"01\") == \"01\"\nassert solution(\"1101\") == \"1101\"\nassert solution(\"0101\") == \"0101\"\n"
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 4\") == \"2\"\nassert solution(\"6 5\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n3\n\n''') == '4'\nassert solution('''6 1\n1\n\n''') == '4'\nassert solution('''6 1\n1\n\n''') == '4'\nassert solution('''6 1\n2\n\n''') == '3'\nassert solution('''6 1\n1\n\n''') == '3'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '5'\nassert solution('7 1') == '6'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n3\\n2\\n1\\n') == '4'\nassert solution('6 2\\n1\\n2\\n3\\n4\\n5\\n') == '6'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([6, 1]) == 4\nassert solution([6, 2]) == 3\nassert solution([6, 3]) == 4\nassert solution([6, 4]) == 5\nassert solution([6, 5]) == 6\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"5\"\nassert solution(\"6 3\") == \"6\"\nassert solution(\"6 4\") == \"1\"\nassert solution(\"6 5\") == \"1\"\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '3'\nassert solution('6 3') == '2'\nassert solution('6 4') == '1'\nassert solution('6 5') == '0'\n"
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1\n2\n''') == '4'\nassert solution('''5 1\n3\n''') == '5'\nassert solution('''6 1\n5\n''') == '5'\nassert solution('''10 1\n7\n''') == '10'"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 4') == '2'\nassert solution('6 2 4') == '2'\nassert solution('10 2 4') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('1 2 2') == '1'\nassert solution('1 3 3') == '1'\nassert solution('3 3 1') == '3'\nassert solution('6 4 6') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 2 -4') == '2'\nassert solution('6 2 -3') == '1'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"10 10 3\") == \"3\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 2 4\\n\"\n) == \"2\"\nassert solution(\n    \"5 2 3\\n\"\n) == \"1\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"4 3 4\") == \"2\"\nassert solution(\"3 4 5\") == \"2\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\") == \"2\"\nassert solution(\"10 1 5\") == \"10\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == \"3\"\nassert solution(\"6 4 1\") == \"2\"\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2 4') == '2'\n"
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 2\n1 1 1 1''') == '2'\nassert solution('''6 6 1\n1 2 1''') == '3'\nassert solution('''6 6 2\n1 2 1''') == '3'\nassert solution('''2 4 3\n1 2 1''') == '4'\nassert solution('''4 4 1\n1 3 1''') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1234\") == \"1\"\nassert solution(\"123412\") == \"0\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"123456789\") == \"10\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\""
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1\\n2\\n3'\nassert solution('10') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10'\nassert solution('15') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575\\n576\\n577\\n578\\n579\\n580\\n581\\n582\\n583\\n584\\n585\\n586\\n587\\n588\\n589\\n590\\n591\\n592\\n593\\n594\\n595\\n596\\n597\\n598\\n599\\n600\\n601\\n602\\n603\\n604\\n605\\n606\\n607\\n608\\n609\\n610\\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"21481\") == \"2\"\nassert solution(\"5656\") == \"1\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\nassert solution('2128506') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\nassert solution('') == '1'"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n\n\n\"\"\"\n"
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '27'\nprint('Congratulations, have a nice day!')\n'''\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"27\"\n\"\"\"\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '9'\nassert solution('3') == '27'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('-1') == '-1'\n'''"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '27'\n\n\n'''"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '27'\n\nassert solution('4') == '24'\n\nassert solution('5') == '25'\n\nassert solution('100') == '99'\n\"\"\""
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '27'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('927') == '1'\nassert solution('48') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == '0'\n'''"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(in1) == \"0\"\nassert solution(in2) == \"0\"\n\n'''\n"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n\"\"\""
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"1\"\nassert solution(\"927\") == \"1\"\nassert solution(\"48\") == \"0\"\n\n\"\"\"\n\n\n\na = int(input())"
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 3 1\") == \"4\"\n\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 5 3 1''') == '4'\nassert solution('''7 8 5 3 2''') == '8'\nassert solution('''7 8 5 3 2''') == '7'\nassert solution('''0 1 2 3 4 5''') == '0'\nprint('ALL TESTS PASSED')"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 1 2') == '1 2 3'\n\nassert solution('4 7 2 1') == '5 6 4 1'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1') == '1'\n\nprint(solution('1 2 3 1'))\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('2 5 3 1') == '4'\n\"\"\"\nfrom math import inf\nfrom sys import stdin\n\nstdin = open(file=\"input.txt\")\nn = int(stdin.readline())\n\na = list(map(int, stdin.readline().split()))\n\nd = {}\nans = inf\n\nfor i in range(n):\n    if a[i] in d:\n        ans = min(ans, d[a[i]] + 1)\n        d[a[i]] = i\n    else:\n        d[a[i]] = i\n\nprint(ans)\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT) == OUTPUT\n\"\"\""
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('4') == '4'\nassert solution('4 2 4 4') == '4'\nassert solution('4 3 3 2') == '4'\nassert solution('3 2 4') == '2'\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'ABCD', \"3+1=4\"\nassert solution('1 2 3 4 5') == 'ABCD', \"ABCD\"\nassert solution('1 2 3 4 5 6') == 'ABCDEF', \"ABCDEF\"\n\n\n'''\n"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n'''\nimport sys\nimport re\nimport math"
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 5 3 1\n''') == \"4\"\nassert solution('''\n3 4 2 1\n''') == \"4\"\nassert solution('''\n1\n''') == \"1\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2\\n8\\n1'\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2\") == \"2\"\nassert solution(\"4\\n3 3\") == \"1\"\nassert solution(\"7\\n5 7\") == \"2\"\nassert solution(\"4\\n4 4\") == \"1\"\nassert solution(\"4\\n2 2\") == \"2\""
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '2'\nassert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733''') == '1'\nassert solution('''3\n4 5\n1 1\n2 2\n3 3''') == '1'\nassert solution('''1\n5\n1 1\n1 2\n1 3\n1 4''') == '2'\nassert solution('''1\n7\n1 5\n1 2\n1 6\n1 7\n2 3\n2 4\n3 5''') == '3'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n3 2\n2 1\n1 2\n''') == '4'\nassert solution('''\n5\n5 5\n5 5\n5 5\n''') == '1'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution([5, 7, 8, 1, 6, 10]) == \"8\"\nassert solution([999999733, 999999732, 999999733, 1]) == \"1\""
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n') == '2'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\\n') == '1'\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n8 7\\n8 1\") == \"2\"\nassert solution(\"5\\n99999999999999999999999999999\\n99999999999999999999999999999\") == \"1\"\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\n'''\n"
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733\") == \"2\"\nassert solution(\"5\\n8 7\\n8 1\\n6 10\\n999999999 999999983\\n999999999 999999983\") == \"1\"\nassert solution(\"5\\n8 7\\n8 1\\n9999999999 999999983\\n999999999 999999983\") == \"9999999999\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\n\nassert solution('''\n10 2\n2 1 2 5 3 5 2 2 2 6 2\n3 1\n2 2 4\n''') == '4'\n\nassert solution('''\n10 4\n4 2 4 3 4 1 4 2 4 3\n2 1\n4 1\n1 2\n''') == '0'\n\nassert solution('''\n10 4\n2 1 2 3 4 1 2 4 3\n1 2\n4 1\n2 3\n''') == '5'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\nassert solution('''\n3 3\n1 1 1\n2 1 1\n3 2 3\n''') == '3'\nassert solution('''\n3 3\n3 2 1\n1 3 3\n''') == '3'\nassert solution('''\n3 3\n1 2 3\n3 1 2\n''') == '0'\nassert solution('''\n5 5\n1 1 1 1 1\n2 1 2 1\n3 2 1 3\n3 3 1 1\n4 4 1 2\n''') == '5'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 2\\n0 1\") == \"4\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == '1'"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"3 3\\n3 2 3\\n1 3\\n2 3\") == \"5\"\nassert solution(\"2 2\\n1 2\\n0 1\") == \"0\"\nassert solution(\"1 5\\n1 4\\n1 3\\n1 2\\n1 1\") == \"3\""
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1 2\\n1 2\\n0 1\") == \"1\"\nassert solution(\"2 2\\n1 1 2\\n1 2\\n0 1\\n1 1\") == \"0\"\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2\n2 1\n1 2\n0 1''') == '1'\nassert solution('''2 3\n2 1 2\n1 2\n0 1''') == '1'\nassert solution('''2 4\n2 1 2\n1 2\n0 1\n0 2''') == '1'\nassert solution('''2 5\n2 1 2\n1 2\n0 1\n0 2''') == '1'\nassert solution('''2 7\n2 1 2\n1 2\n0 1\n0 2''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n2 1 2\n1 2\n0 1\n''') == '1'\n"
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"100 2\") == \"3\""
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n2 1 2\\n1 2') == '1'\nassert solution('2 2\\n2 1 2\\n0 1') == '4'\nassert solution('1 2\\n2') == '0'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 1 9 1\") == \"2.5\"\nassert solution(\"1 1 1 1\") == \"1.000000000000000000000\"\nassert solution(\"3 1 1 1\") == \"1.5\"\nassert solution(\"5 1 1 1\") == \"1.5\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"1 2 5 3\") == \"7.071428571429\"\nassert solution(\"5 1 6 3\") == \"9.999999999994\""
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 4 9 0\") == \"5.00000000000000000000\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 5 2 6\") == \"6.7\"\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 5 1') == '5.0000000000'\nassert solution('3 4 10 0') == '5.0000000000'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '5.0000000000'\nassert solution('2 2 2') == '5.0000000000'\n\n------------------"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 9 0') == '5.0'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 8') == '10.0'\nassert solution('2 3 9') == '8.0'\n"
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\n\n\n'''\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == '8'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\") == \"8\"\nassert solution(\"3 1\\n1 1 1\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\") == \"97\""
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6') == '4'\nassert solution('4 1') == '3'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, 4, 3, 1, 1]) == 8\nassert solution([1, 1, 1, 1, 1]) == 6\nassert solution([1, 1, 1, 1, 1, 1]) == 6\nassert solution([5, 4, 3, 1, 1]) == 97\nassert solution([5, 4, 3, 1, 1, 1, 1]) == 97\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n1 4 5 60 4\\n\") == \"8\"\nassert solution(\"3 1\\n1 1 1\\n\") == \"6\"\nassert solution(\"15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\\n\") == \"97\"\n"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'"
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"8\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"15 2\") == \"97\""
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '0'\nassert solution('6 4') == '6'\nassert solution('7 3') == '3'\nassert solution('5 4') == '7'\nassert solution('5 4') == '7'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\nassert solution('''4 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n3 2'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5') == '7\\n2\\n3 2'\nassert solution('1 0\\n1000000\\n') == '0\\n0'"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\"\n) == \"6\\n2\\n3 2\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"6\"\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n3 2\"\nassert solution(\"1 0\\n1000000\\n\") == \"0\\n0\""
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n') == '6\\n2\\n3 2'\nassert solution('1 0\\n1000000\\n') == '0\\n0'\n"
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n''') == \"Yes\"\nassert solution('''\na\n''') == \"No\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n''') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\"\n) == \"Yes\"\nassert solution(\n\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\"\n) == \"No\"\nassert solution(\n\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\"\n) == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'Yes'\nassert solution('xyz') == 'Yes'\nassert solution('r') == 'Yes'\nassert solution('dabcef') == 'Yes'\nassert solution('az') == 'No'\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nabc\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\na\nabc\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\naa\na\nabc\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nx\nabc\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\nfced\\nxyz\\nr\\ndabcef\") == \"Yes\"\nassert solution(\"7\\naz\\naa\\nbad\\nbabc\") == \"No\"\nassert solution(\"3\\nfcd\\nr\\nx\\nf\") == \"Yes\"\nassert solution(\"3\\nfcd\\nr\\nx\\nf\") == \"No\"\nassert solution(\"10\\nafce\\nabdf\\nfkds\\nhgjh\") == \"Yes\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3') == '6'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4') == '7'\nassert solution('1 0\\n1000000') == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('2 -2 3 1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('5 4') == '7'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n\n\n\"\"\""
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"2 0\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"1 0\") == \"0\""
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution(\"5 4\\n2 -2 3 1 2\") == '6'\nassert solution(\"5 4\\n3 5\\n3 4\") == '7'\nassert solution(\"1 0\\n1000000\") == '0'\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"3 5\") == \"3 2\"\nassert solution(\"4 5\") == \"3 2\"\n"
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n5\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n2\n5\n-1 -2 3\n3 5\n4 5\n2 4\n2 5\n''') == '7'\nassert solution('''\n5\n1000000\n1000000\n1000000\n1000000\n1000000\n''') == '0'\nassert solution('''\n1\n2\n2\n2\n2\n''') == '3'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 5 4 3''') == '4'\nassert solution('''7\n1 3 5 6 7 4 2''') == '7'\nassert solution('''3\n1 2 3''') == 'LLL'\n''')"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\"\"\""
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 5 4 3\") == \"4\"\nassert solution(\"7 1 3 5 6 7 4 2\") == \"7\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"4\") == \"LLRL\"\nassert solution(\"2\") == \"LLR\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1 5 4 3''') == '4'\nassert solution('''5 1 5 4 3''') == '7'\nassert solution('''1 2 3''') == '2'\nassert solution('''4 1 2 3''') == '3'\nassert solution('''3 2 1''') == '2'\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\"\n\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\n\n'''\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\n\"\"\"\n"
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\n\nassert solution('''\n7\n1 3 5 6 7 4 2\n''') == '7'\n\nassert solution('''\n4\n1 2 4 3\n''') == '3'\n\nassert solution('''\n3\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"1 2 5 3 4\"]) == \"4\"\nassert solution([\"1 2\", \"3\", \"4\"]) == \"2\"\nassert solution([\"1 2 5\", \"3 4\"]) == \"2\"\nassert solution([\"1 2 5 3 4\", \"1 2 3 4\"]) == \"4\"\nassert solution([\"1 2 5 3 4\", \"1 2 3 4\", \"3 4\", \"5\"]) == \"4\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"2\"\nassert solution(\"1 2 5 3 4\") == \"4\""
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 2 5 3 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7\n6 5 4 3 2 4 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"6 5 4 3 2 4 3\") == \"2\"\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\n"
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4'\n\nassert solution('''\n2\n1 2\n''') == '2'\n\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'\n\nassert solution('''\n10\n8 1 4 7 2 5 8 2 4 6 1 7\n''') == '8'\n\nassert solution('''\n16\n8 5 1 4 7 2 5 8 2 4 6 1 7\n''') == '6'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3 3\n1 2 2 4 5\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n5 3\n1 2 3 4 5\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n5 3\n1 2 3 4 5\n    \"\"\"\n) == \"2\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 4 5\") == \"1\"\nassert solution(\"1 2 3 3 3\") == \"2\"\nassert solution(\"1 2 3 3 3 4\") == \"0\"\nassert solution(\"1 2 3 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 2 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 4 5') == '0'\n\nstdin = \"\"\"\n3 5\n1 2 3 4 5\n\"\"\""
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5 3') == '1'\nassert solution('5 3') == '0'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3\n1 2 2 4 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 3\n1 2 3 4 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 4\n1 2 3 4 5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5 3\n1 2 3 4 5\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5 3\n1 2 3 4 5\n\"\"\") == \"0\""
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '1'\nassert solution('3 3') == '1'\nassert solution('1000000000 5') == '1'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2'\nassert solution('5 3\\n1 2 3 3 3\\n') == '0'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == \"1\"\nassert solution('''5 3\n1 2 3 4 5''') == \"2\"\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 3 4\") == \"4\""
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3 4\\n') == '4'\nassert solution('1 1 1\\n') == '1'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('4 3 4') == '3'\nassert solution('5 3 5') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4', solution('8 3 4')"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('11 4 2') == '3'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 5\") == \"4\"\nassert solution(\"5 1 5\") == \"5\"\nassert solution(\"5 3 5\") == \"4\""
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('1 1 1') == '0'\nassert solution('12 3 4') == '2'\nassert solution('9 1 1') == '3'\nassert solution('9 9 1') == '2'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3 4\n''') == '4'\n\nassert solution('''3 2 4\n''') == '1'\n\nassert solution('''4 3 2\n''') == '0'\n"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('6 4 3') == '3'"
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"4 4 4\") == \"4\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5 2 5\n3\n5 6 8\n''') == \"4\"\nassert solution('''\n3\n5 2 5\n4\n5 6 8\n''') == \"2\"\nassert solution('''\n4\n9 7 5\n8\n9 5 5 3\n''') == \"1\"\nassert solution('''\n4\n9 7 5\n8\n9 5 5 3\n''') == \"5\"\nassert solution('''\n3\n7 9 5\n8\n9 5 5 3\n''') == \"1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"48\"\nassert solution(\"2\") == \"48\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"48\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\\n8 2 12 6 4 24 16 3\") == \"4\"\nassert solution(\"1\\n2\\n\") == \"-1\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n8 2 12 6 4 24 16 3\") == \"48\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '-1', \"Wrong answer in test 1\"\nassert solution('2\\n8\\n12\\n6\\n4\\n24\\n16\\n3\\n') == '48', \"Wrong answer in test 2\"\nassert solution('3\\n6\\n') == '-1', \"Wrong answer in test 3\"\nassert solution('4\\n1\\n2\\n3\\n') == '4', \"Wrong answer in test 4\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6\n7\n4\n1 2 3\n3 4 5\n1 2 3\n2 4 5\n2 4\n2 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6\n7\n4\n1 2 3\n3 4 5\n1 2 3\n2 4 5\n2 4\n2 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n3\n2\n1 3\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n5\n1 3 2 5\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n4\n2 3\n\"\"\") == \"-1\""
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n6 6 6 6 6') == '1\\n6\\n'\nassert solution('6\\n1 2 3\\n') == '4\\n2 3\\n'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"2 4\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"6 6 6 6 6\"\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '3'\nassert solution('5\\n2 4 2 4 4') == '2'\nassert solution('5\\n6 6 6 6 6') == '1'\nassert solution('5\\n6 6 6 6 6') == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '6'\nassert solution('6') == '5'\nassert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_str) == '3\\n6 6 6 6'\n\nassert solution(input_str) == '2\\n2 4'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3'\nassert solution('5\\n2 4 2 4 4') == '2'\nassert solution('5\\n6 6 6 6 6') == '1'"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 5 5 1 6 1\\n') == '3'\nassert solution('5\\n6 6 6 6 6\\n') == '2'\nassert solution('5\\n2 4 2 4 4\\n') == '2'\nassert solution('5\\n6 6 6 6 6\\n') == '1'"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 2 4 4') == '2 4'\nassert solution('5 6 6 6 6') == '5 6 6'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\nassert solution(input(2)) == '2 4'\nassert solution(input(3)) == '1'\n"
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"9\\n\") == \"10\"\nassert solution(\"237\\n\") == \"237\"\nassert solution(\"99\\n\") == \"103\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"33\") == \"33\"\nassert solution(\"1235\") == \"1235\"\nassert solution(\"5\") == \"5\"\nassert solution(\"8\") == \"8\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('12') == '13'\nassert solution('7') == '8'\nassert solution('20') == '21'\nassert solution('23') == '24'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('15') == '14'\nassert solution('8') == '9'\nassert solution('46') == '47'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nprint(solution(input()))\n\n\"\"\"\n\n\"\"\"\n33. Longest Substring with At Most $K$ Distinct Characters\n\nYou are given a string $s$ and an integer $k$, return the length of the longest substring with at most $k$ distinct characters.\n\nFor example, given the string \"araaci\" and k = 2, the longest substring with at most $2$ distinct characters is \"araa\".\n\n-----Examples-----\nInput\n\"araaci\"\n2\n\nOutput\n3\n\nInput\n\"aaaaaaaa\"\n1\n\nOutput\n1\n\nInput\n\"aaabcbb\"\n3\n\nOutput\n3\n\nInput\n\"arabcacfr\"\n2\n\nOutput\n3\n\nInput\n\"abcdeabcdecdef\"\n3\n\nOutput\n3\n\n\"\"\"\n\n\"\"\"\n34. Best Time to Buy and Sell Stock with Cooldown\n\nYou are given an array prices where prices[i] is the price of a given stock on the ith day.\nFind the maximum profit you can achieve. You may complete as many transactions as you like \n(i.e., buy one and sell one share of the stock multiple times).\n\nNote: You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).\n\n-----Examples-----\nInput\nprices = [1, 2, 3, 4, 5]\n\nOutput\n4\n\nInput\nprices = [1, 2, 3, 4, 5]\n\nOutput\n4\n\nInput\nprices = [1, 2, 3, 4, 5]\n\nOutput\n0\n\n\"\"\"\n\n\"\"\"\n35. Reverse Vowels of a String\n\nWrite a function that takes a string as input and reverse only the vowels of a string.\n\nExample 1:\n\nInput: \"hello\"\nOutput: \"holle\"\nExample 2:\n\nInput: \"leetcode\"\nOutput: \"leotcede\"\n\"\"\"\n\n\n\"\"\"\n36. Best Time to Buy and Sell Stock with Transaction Fee\n\nYou are given an array prices where prices[i] is the price of a given stock on the ith day.\n\nFind the maximum profit you can achieve. You may complete at most two transactions.\n\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n\n-----Examples-----\nInput\nprices = [1, 3, 2, 8, 4, 9]\n\nOutput\n7\n\nInput\nprices = [1, 3, 2, 8, 4, 9]\n\nOutput\n0\n\nInput\nprices = [1, 3, 2, 8, 4, 9]\n\nOutput\n-3\n\n\"\"\"\n\"\"\"\n37. Subarray Sum Equals K\n\nGiven an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.\n\nExample 1:\n\nInput:nums = [1,1,1], k = 2\nOutput: 2\nNote:\n\nThe length of the array is in range [1, 20,000].\nThe range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].\n\n\"\"\"\n\"\"\"\n38. Longest Absolute File Path\n\nA file path is a sequence of directories and files that connect as a chain. For example, file path \"dir1/dir2/file1.txt\" and file path \"dir1/dir2/dir3/file2.txt\" are two valid file paths of the same file.\n\nGiven a file path, return the length of the longest absolute path.\n\nA path refers to a sequence of directories and files that connect as a chain.\n\n-----Examples-----\nInput: \"/home/\", \"/home/a/b/c/d/e/\"\n\nOutput: 4\n\nInput: \"/home/\"\n\nOutput: 1\n\nInput: \"/a/\"\n\nOutput: 0\n\"\"\"\n\n\n\"\"\"\n39. First Unique Character in a String\n\nGiven a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.\n\nExamples:\n\ns = \"leetcode\"\nreturn 0.\n\ns = \"loveleetcode\",\nreturn 2.\n\nNote: You may assume the string contains only lowercase letters.\n\"\"\"\n\"\"\"\n40. Word Search II\n\nGiven a 2D board and a word, find if the word exists in the grid.\n\nThe word can be constructed from letters of sequentially adjacent cell, where \"adjacent\" cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.\n\nExample:\n\nboard =\n[\n  ['A','B','C','E'],\n  ['S','F','C','S'],\n  ['A','D','E','E']\n]\n\nGiven word = \"ABCCED\", return true.\nGiven word = \"SEE\", return true.\nGiven word = \"ABCB\", return false.\n\"\"\"\n\"\"\"\n41. First Bad Version\n\nYou are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.\n\nSuppose you have n versions [1, 2,..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\n\nYou are given an API bool isBadVersion(version) which will return whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n\nExample:\n\nGiven n = 5, and version = 4 is the first bad version.\n\ncall isBadVersion(3) -> false\ncall isBadVersion(5) -> true\ncall isBadVersion(4) -> true\n\nThen 4 is the first bad version. \n-----Hints-----\nThe isBadVersion API is already defined for you.\nYou could use it to optimize your algorithm.\n\"\"\"\n\"\"\"\n42. N-Queens\n\nN-Queens is the problem of placing N queens on an NxN chessboard such that no two queens attack each other.\n\nN Queens can be placed without conflict on a NxN chessboard using the following notation:\n\nThe first N characters will be the column labels. The next N characters will be the row labels. The next N characters will be the column labels of the next N rows.\n\nTo solve the N-Queens problem, we need to write a function to place N queens on a NxN chessboard without conflict.\n\nWrite a function that returns the number of distinct solutions to the N-Queens problem using the notation above.\n\nExample 1:\n\nInput: 4\nOutput: 5\nExplanation: There are 5 distinct solutions to the 4-queens problem\nExample 2:\n\nInput: 3\nOutput: 3\nExplanation: There are 3 solutions to the 3-queens problem\n\"\"\"\n\n\"\"\"\n43. Subtract the Product and Sum of Digits\n\nGiven an array of integers, your task is to find all the integers that satisfy following conditions:\n\nThe number is divisible by 2.\nThe number is divisible by 3.\nThe number is divisible by 5.\nThe number is divisible by 15.\nThe number is divisible by 17.\n\nNote: The numbers in the array are in range of 1 to 1000.\n\n-----Example1-----\nInput:  [561,373,19]\nOutput: [561,373]\n\nInput:  [14,28,54,76,85"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('34') == '35'\nassert solution('7') == '8'\nassert solution('4') == '5'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"42\") == \"44\"\nassert solution(\"237\") == \"237\"\nassert solution(\"99\") == \"103\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n"
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n90\n85\n100\n180\n60\n''') == '180'\n\nassert solution('''9\n7\n7\n7\n''') == '7'\n\nassert solution('''18\n6\n10\n13\n5\n''') == '13'\n\nassert solution('''77\n84\n''') == '84'\n\nassert solution('''89\n90\n''') == '90'"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n1 2\\nabc\") == \"abc\"\nassert solution(\"3\\n2\\n1 0\\nabc\") == \"aac\"\nassert solution(\"4\\n3\\n1 0 1\\nabc\") == \"aac\"\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aab'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n1 0 1\\nabc') == 'aac'\nassert solution('2\\n3\\n1 0 1\\nabc') == 'b'\nassert solution('4\\n10\\n38 13 24 14 11 5 3 24 17 0\\nabac') == 'aac'\nassert solution('4\\n10\\n38 13 24 14 11 5 3 24 17 0\\nabc') == 'b'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\na\n2\n0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''\na\n2\n0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\n2\n3 2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\n2\n3 2 1 0\nabc\n1\n0\na\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\n2\n3 2 1 0\nabc\n1\n0\nb\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\n2\n3 2 1 0\nabc\n1\n0\nc\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n\"\"\") == \"aac\"\nassert solution(\"\"\"\na\n10\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''abac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''a\n1\n0\n''') == 'a'\nassert solution('''aba\n1\n0\n''') == 'a'\nassert solution('''aba\n1\n0\n''') == 'aba'\n"
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nab\\n2\\n2 3\\nabc\") == \"abca\"\nprint(solution(\"1\\nab\\n2\\n2 3\\nabc\"))\nassert solution(\"1\\nab\\n2\\n2 3\\nabc\") == \"abca\"\nprint(solution(\"1\\nab\\n2\\n2 3\\nabc\"))\nassert solution(\"1\\nab\\n2\\n2 3\\nabc\") == \"abca\"\nprint(solution(\"1\\nab\\n2\\n2 3\\nabc\"))\nassert solution(\"1\\nab\\n2\\n2 3\\nabc\") == \"abca\"\nprint(solution(\"1\\nab\\n2\\n2 3\\nabc\"))\nassert solution(\"1\\nab\\n2\\n2 3\\nabc\") == \"abca\"\nprint(solution(\"1\\nab\\n2\\n2 3\\nabc\"))\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'z'\nassert solution('2') == 'aa'\nassert solution('1') == 'a'\nassert solution('23') == 'zyzz'\nassert solution('201') == 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'b'\nassert solution('5') == 'az'\nassert solution('18278') == 'aaaaa'\nassert solution('475253') == 'aaaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'b'"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'b'\nassert solution('3') == 'ab'\nassert solution('1000000000000001') == 'aa'"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ba'\nassert solution('3') == 'aab'\nassert solution('4') == 'aac'\nassert solution('5') == 'aaa'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ba'\nassert solution('3') == 'aab'"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'b'\n"
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'b'"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''to be or not to be''') == '12'\nassert solution('''aa bb aa aa bb bb''') == '11'\nassert solution('''ab aa ab bb''') == '10'"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\\\n3\nto be or not to be\n''') == '12'\n\nassert solution('''\\\n4\naa bb aa aa bb bb\n''') == '13'\n\nassert solution('''\\\n6\naa bb aa aa bb bb\n''') == '11'"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '12'\nassert solution('''to be or not to be\n''') == '12'\nassert solution('''a ab a a b ab a a b c\n''') == '11'\nassert solution('''AA BB AA BB CC''') == '4'\nassert solution('''aa ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab ab"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"13\"\nassert solution(\"6\") == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '6'\nassert solution('6') == '12'\nassert solution('10') == '13'\nassert solution('12') == '11'\n\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\nto be or not to be''') == '12'\nassert solution('''10\na ab a a b ab a a b c''') == '13'\nassert solution('''6\naa bb aa aa bb bb''') == '11'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nto be or not to be\n''') == '12'\nassert solution('''\n5\na ab a a b ab a a b c\n''') == '11'\nassert solution('''\n6\naa bb aa aa bb bb\n''') == '13'\nassert solution('''\n6\nto be or not to be\n''') == '10'\nassert solution('''\n7\nto be or not to be\n''') == '12'\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''to be or not to be''') == \"12\"\nassert solution('''aa bb aa aa bb bb''') == \"11\"\nassert solution('''AB aa AB bb''') == \"11\"\n"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nto be or not to be') == '12'\nassert solution('6\\naa bb aa aa bb bb') == '11'\nassert solution('6\\nAB aa AB bb') == '10'"
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"3\\n\"\nassert solution(\"6\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2 2\"\nassert solution(\"8 3\") == \"3 2 3\"\nassert solution(\"5 1\") == \"5\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == '4000 2 2'\nassert solution(input_data_2) == '1'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2000 2000 2\") == \"4000 2\"\nassert solution(\"8 3\\n5 4 2 6 5 1 9 2\") == \"20 3 2 3\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n1 1 1 1 1\n''') == '1 2 3'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000 2 2'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '5'\nassert solution('''4 2\n1 2000 2000 2\n''') == '4000'\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_string) == example_output\n"
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_stdin) == '20 3 2 3'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n-1 1 -1 1 -1 1 1 -1 -1''') == \"0\"\nassert solution('''1\n-1''') == \"1\"\nassert solution('''5\n1 -5 3 2\n-1''') == \"0\"\nassert solution('''5\n4 -2 3 2\n-1''') == \"0\"\nassert solution('''7\n-1 1 -1 1 -1 1 1 -1 -1\n-1''') == \"1\"\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"8\") == \"3\""
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 -5 3 2\") == \"1\"\nassert solution(\"4 -2 3 2\") == \"1\"\nassert solution(\"5 -1 1 -1 1 -1 1 1 -1 -1\") == \"0\"\nassert solution(\"8 -1 1 -1 1 -1 1 1 -1 -1\") == \"6\""
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '1'\nassert solution('''5\n4 -2 3 2\n''') == '0'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '0'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('8') == '3'\nassert solution('10') == '4'"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 -5 3 2\") == \"1\"\nassert solution(\"5 -2 3 -9 2\") == \"0\"\nassert solution(\"4 -2 3 -9 2\") == \"1\"\nassert solution(\"9 -1 1 -1 1 -1 1 -1 -1\") == \"6\"\nassert solution(\"8 -16 -5 -11 -15 10 5 4 -4\") == \"3\""
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\nassert solution('''7\n1 1 -1 1 -1 1 -1 -1\n''') == '1'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input(\"\")) == \"2\"\nassert solution(input(\"1 2 3 4 5 6 7 8 9 10\")) == \"2\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n2\n3\n3\n''') == '10'\nassert solution('''\n1\n6\n10\n''') == '18'\nassert solution('''\n2\n1\n1\n''') == '2'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 100\") == \"0\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"5\\n5 5\") == \"10\"\nassert solution(\"2\\n1000000000 1000000000\") == \"2000000000\""
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == \"0\"\nassert solution('''\n2\n1000000000 1000000000\n2\n2\n5\n5\n''') == \"2000000000\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n3') == '1'\nassert solution('5\\n7') == '4'\nassert solution('10\\n20') == '9'\nassert solution('100\\n200') == '101'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 100\\n2 2\\n5 5\\n2 1000000000\\n1000000000 1000000000') == '0\\n2\\n10\\n1000000000'\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\nassert solution('''\n1\n3\n2\n3\n4\n5\n6\n7\n8\n''') == '2\nassert solution('''\n1\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == '3\nassert solution('''\n1\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '4\n'''\n"
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('101') == '4'\nassert solution('110') == '-1'\nassert solution('1010') == '-1'\nassert solution('11') == '-1'"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '4'\nassert solution('-1') == '-1'"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == '4'\nassert solution('7') == '-1'\nassert solution('7777') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"4\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101') == '4'\nassert solution('1') == '-1'\nassert solution('5') == '-1'\nassert solution('1000000000') == '9999999999'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"33\") == \"None\"\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('101') == '4'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '4'\nassert solution('7') == '-1'\nassert solution('7777777') == '8'\nassert solution('') == '-1'\nassert solution('111111') == '-1'\n"
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('101') == '4'\nassert solution('100') == '-1'\nassert solution('2729') == '12'\n\"\"\""
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"\nassert solution(\"1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\""
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"4\""
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"2 4 5 3 1\"\n) == \"4\"\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('5 5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'"
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n\n\nassert solution() == '4'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\nassert solution(\"5 26\") == \"1\""
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == \"4\"\nassert solution(input_data2) == \"2\"\nassert solution(input_data3) == \"1\"\nassert solution(input_data4) == \"2\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 8\\n\"\n    \"2 3 1 1 2\"\n) == \"4\"\n\nassert solution(\n    \"5 15\\n\"\n    \"5 5 5 5 5\"\n) == \"1\"\n\nassert solution(\n    \"5 26\\n\"\n    \"5 5 5 5 5\"\n) == \"2\"\n\nassert solution(\n    \"5 1\\n\"\n    \"1\"\n) == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\nassert solution(example_input_4) == example_output_4\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"2\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 30\\n5 5 5 5 5\") == \"2\"\nassert solution(\"\") == \"-\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\\n\") == \"4\"\nassert solution(\"5 10\\n1 3 4 2 1 4 2\\n\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\\n\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\\n\") == \"2\"\nassert solution(\"5 3\\n1 3\\n\") == \"1\"\n"
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n10 10 7 7\n''') == '0'\nassert solution('''2\n10 10\n''') == '1'\nassert solution('''4\n24 21 14 10\n''') == '1'\nassert solution('''5\n1 3 6 9 12\n''') == '1'\n\n''')\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == '-1'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"2\", \"5\", \"1\"]) == \"1\"\nassert solution([\"4\", \"2\", \"4\"]) == \"0\"\nassert solution([\"10\", \"20\", \"21\", \"30\"]) == \"1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '0'\nassert solution('6\\n') == '1'\nassert solution('7\\n') == '-1'\nassert solution('8\\n') == '2'\nassert solution('9\\n') == '1'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(samples[0]) == '3'\nassert solution(samples[1]) == '0'\nassert solution(samples[2]) == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n24 21 14 10\n''') == \"3\"\n\nassert solution('''\n5\n1 3 6 9 12\n''') == \"1\"\n\nassert solution('''\n3\n14 5 1\n''') == \"-1\"\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n24 21 14 10\n''') == '3'\n\nassert solution('''\n2\n500 500\n''') == '0'\n\nassert solution('''\n3\n14 5 1\n''') == '1'\n\nassert solution('''\n5\n1 3 6 9 12\n''') == '1'\n\nassert solution('''\n1\n1 1\n''') == '0'\n"
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '-1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''\n6 1\n36 4 1 25 9 16\n''') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''\n6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''\n7 6\n12 1 9 1 5 14\n''') == '6'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n''') == \"5\"\nassert solution('''\n6 1\n36 4 1 25 9 16\n''') == \"4\"\nassert solution('''\n4 4\n1 10 100 1000\n''') == \"4\"\nassert solution('''\n10 10\n1 3 7 12 8 13 9 15 18 20\n''') == \"8\"\nassert solution('''\n10 10\n1 3 7 12 8 13 9 15 18 20\n''') == \"8\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 2 15 15 15\\n1 1\"\n) == \"1\"\nassert solution(\n    \"1 1\\n1 1\"\n) == \"1\"\nassert solution(\n    \"1 1\\n1 1\\n1 1\"\n) == \"1\"\nassert solution(\n    \"1 1\\n1 1\\n1 1\\n1 1\"\n) == \"1\"\nassert solution(\n    \"5 3\\n1 2 3 4 5\\n2 3 5\\n4 3\\n3 4 5\\n5 3\\n1 2 3 4 5\"\n) == \"4\"\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16') == '2'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"2\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"4 4\") == \"4\""
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"8\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 7\") == '8'\nassert solution(\"2 4 5\") == -1\n\"\"\"\nfrom math import floor\n\nstdin = open('input.txt').read()\nn, k, m = map(int, stdin.split())\nsub = list(map(int, stdin.split()))"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10 7') == '8'\nassert solution('2 10 7') == '-1'\nassert solution('5 10 7') == '8'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == 8\nassert solution('1 2 3\\n1 2 3') == -1\nassert solution('4 1 2\\n1 2 3') == 2"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 10 7\n8 10 3 6\n''') == \"8\"\nassert solution('''\n5 10 7\n11 10 3 6\n''') == \"11\"\nassert solution('''\n10 10 7\n10 10 3 6\n''') == \"10\"\nassert solution('''\n15 10 7\n11 10 3 6\n''') == \"11\"\nassert solution('''\n15 10 7\n10 10 3 6\n''') == \"-1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('3 4 2 1\\n5 2 3 4 6\\n6 5 2 8 2') == '-1'\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"-1\"\nassert solution(\"5 10 7\\n8 10 3 6\\n\") == \"-1\"\n"
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n9 10 3 6') == '-1'\nassert solution('5 10 7\\n8 10 3 6\\n9 10 3 6\\n10 10 3 6') == '-1'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n6 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n5\n3\n2\n\n\"\"\") == \"\"\"\nNo\nNo\nYes\nNo\nNo\nNo\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n7\n4\n3\n2\n1\n\n\"\"\") == \"\"\"\nYes\nYes\nYes\nYes\nYes\nYes\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n3\n4\n1\n\n\"\"\") == \"\"\"\nYes\nYes\nNo\nYes\n\"\"\""
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\""
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('6 3 5') == 'No\\nNo\\nYes\\nNo\\nNo\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\nYes'\n\n\"\"\"\n\nN, K, Q = [int(x) for x in stdin.split()]\n\nplayers = [0 for i in range(N+1)]\n\nfor i in range(Q):\n    a = int(stdin.split()[i+1])\n    players[a] -= 1\n\nfor i in range(1, N+1):\n    if players[i] >= 0:\n        print('No')\n    else:\n        print('Yes')\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'Yes\\nYes\\nNo'\n"
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4\\n3') == 'No\\nNo\\nYes'\nassert solution('6 3 4\\n1\\n2\\n3\\n4\\n5\\n6') == 'Yes\\nYes\\nYes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n2\\n4\\n5\\n6') == 'Yes\\nYes\\nYes'\nassert solution('6 3 4\\n3\\n1\\n3\\n2\\n3\\n2\\n4\\n5\\n6') == 'Yes\\nYes\\nYes'"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n\n''') == 'YES'\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n\n''') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES'\nassert solution('4 4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n') == 'NO'\nassert solution('5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\nassert solution('5 5\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == \"YES\", \"Example\"\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == \"YES\", \"Example\"\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == \"NO\", \"Example\"\nassert solution('''\n5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == \"YES\", \"Example\"\n\nassert solution('''\n5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == \"NO\", \"Example\""
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\") == \"YES\"\nassert solution(\"3 3\\n0 0 0 1\\n1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 1\\n0 1') == 'YES'\nassert solution('3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n') == 'YES'\nassert solution('5 6\\n1 1 1 0\\n0 0 0 0\\n1 0 1 0\\n0 0 1 0\\n1 1 1 0\\n') == 'NO'\nassert solution('8 8\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n') == 'NO'\nassert solution('5 5\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''\n3 3\n0 0 0\n1 1 1\n1 1 1\n''') == 'YES'\nassert solution('''\n3 3\n0 0 0\n1 1 1\n1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == \"YES\"\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == \"YES\"\nassert solution('''\n4 4\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == \"NO\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123\") == \"Yes\", \"123\"\nassert solution(\"135\") == \"No\", \"135\"\nassert solution(\"181\") == \"Yes\", \"181\"\nassert solution(\"342\") == \"Yes\", \"342\"\nassert solution(\"9\") == \"Yes\", \"9\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12345\") == \"Yes\"\nassert solution(\"87654\") == \"No\"\nassert solution(\"99999\") == \"Yes\"\nassert solution(\"\") == \"Yes\"\nassert solution(\"111111\") == \"Yes\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'Yes'\nassert solution(\"\") == 'No'\nassert solution(\"1\") == 'Yes'\nassert solution(\"1234567890\") == 'Yes'\nassert solution(\"87654321\") == 'No'"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"10\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"99999999999999\") == \"No\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == \"No\", \"Test 1 failed\"\nassert solution(\"123\") == \"Yes\", \"Test 2 failed\"\nassert solution(\"1231\") == \"No\", \"Test 3 failed\"\nassert solution(\"1313\") == \"Yes\", \"Test 4 failed\"\nassert solution(\"4321\") == \"No\", \"Test 5 failed\"\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\n"
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"122\") == \"No\"\nassert solution(\"381\") == \"Yes\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_stdin) == example_output\n\nassert solution(input_stdin) == output\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n\n''') == '5'\n\nassert solution('''6 2 1\n1 0 0 1 0 1\n\n''') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\nassert solution('6 2 1\\n1 0 1 0 1 0\\n') == '6'\nassert solution('6 2 1\\n1 1 0 0 0 1\\n') == '7'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1') == '3'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''6 3 1\n0 1 1 1 0 1\n''') == '2'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '1'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''\n7 2 1\n0 1 0 1 0 1 0\n''') == '4'\nassert solution('''\n10 2 1\n1 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 0 1 0 1 1 0 1 0 0 1 1 0 1 1\n''') == '9'\nassert solution('''\n8 2 1\n0 1 1 0 0 0 0 1 0 1 1 1\n''') == '7'\n"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 1\n1 0 0 1 0\n''') == '5'\n\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\n\nprint('Tests completed')"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\n\n\"\"\"\n\nfrom math import floor, ceil\nfrom collections import deque"
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\n\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '5'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nassert solution('-10-11') == '-33'\nprint(solution('8-7+6-5+4-3+2-1-0'))"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\""
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution(\n'''2+2''') == '-46'\nassert solution(\n'''112-37''') == '375'"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", \"Should be 4\"\nassert solution(\"112-37\") == \"375\", \"Should be 375\"\nassert solution(\"5+5\") == \"10\", \"Should be 10\"\n"
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == '4', \"8-7+6-5+4-3+2-1-0\"\nassert solution(\"2+2\") == '-46', \"2+2\"\nassert solution(\"112-37\") == '375', \"112-37\"\nassert solution(\"-2+2\") == '4', \"-2+2\"\nassert solution(\"-112-37\") == '375', \"-112-37\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 2\"\n) == \"YES\\n\" + \"1 3\\n\" + \"3 2\\n\"\nassert solution(\n    \"10 4\"\n) == \"YES\\n\" + \"2 1\\n\" + \"1 3\\n\" + \"4 2\\n\" + \"3 4\\n\" + \"4 3\\n\" + \"3 2\\n\" + \"2 4\\n\" + \"4 1\\n\" + \"1 4\\n\" + \"3 1\\n\"\nassert solution(\n    \"13 4\"\n) == \"NO\\n\" + \"2 1\\n\" + \"1 3\\n\" + \"4 2\\n\" + \"3 4\\n\" + \"4 3\\n\" + \"3 2\\n\" + \"2 4\\n\" + \"4 1\\n\" + \"1 4\\n\" + \"3 1\\n\"\nassert solution(\n    \"6 5\"\n) == \"NO\\n\" + \"1 2\\n\" + \"1 3\\n\" + \"1 4\\n\" + \"1 5\\n\" + \"2 3\\n\" + \"2 4\\n\" + \"2 5\\n\" + \"3 4\\n\" + \"3 5\\n\" + \"4 5\\n\"\nassert solution(\n    \"1 1\"\n) == \"YES\\n\" + \"1 2\\n\" + \"2 1\\n\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\""
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 1\n    1 3\n    3 2\n    2 4\n    4 2\n    4 1\n    \"\"\"\n    ) == \"YES\"\n    \nassert solution(\n    \"\"\"\n    5 1\n    1 3\n    3 2\n    2 4\n    4 2\n    4 1\n    \"\"\"\n    ) == \"YES\"\n    \nassert solution(\n    \"\"\"\n    10 4\n    3 1\n    1 3\n    4 2\n    3 4\n    2 3\n    2 4\n    4 1\n    1 4\n    3 1\n    \"\"\"\n    ) == \"YES\"\n    \nassert solution(\n    \"\"\"\n    10 4\n    3 1\n    1 3\n    4 2\n    3 4\n    2 3\n    2 4\n    4 1\n    1 4\n    3 1\n    \"\"\"\n    ) == \"NO\""
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n\") == \"YES\\n1 1\\n1 3\\n3 2\\n3 4\\n4 3\"\nassert solution(\"10 4\\n\") == \"YES\\n2 1\\n1 3\\n4 2\\n3 4\\n4 3\\n3 2\\n2 4\\n4 1\\n1 4\\n3 1\"\nassert solution(\"13 4\\n\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"1 3\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"6 4\") == \"NO\"\n"
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"18\"\nassert solution(f\"5 2 3\\n{sample(range(1,10),5)} 1 3 10 1\") == \"18\"\nassert solution(f\"6 1 5\\n{sample(range(1,10),6)} 1 1 1 1 1 1\") == \"100\"\nassert solution(f\"6 1 5\\n{sample(range(1,10),6)} 1 1 1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '18'\nassert solution([5, 1, 3]) == '18'\nassert solution([6, 1, 5]) == '-1'\nassert solution([4, 3, 1]) == '100'"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 2 3\\n5 1 3 10 1\\n') == '18', 'First example'\nassert solution(\n    '6 1 5\\n10 30 30 70 10 10\\n') == '-1', 'Second example'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"18\""
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n\nassert solution('''\n6 1 2\n1 3 1 2 3\n''') == '-1'\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 1 3 10 1\\n\") == \"18\"\nassert solution(\"4\\n1 100 1 1\\n\") == \"100\"\nprint(solution(*(input().split())))\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == \"6\", \"Easy\"\nassert solution(\"5 2 3\") == \"18\", \"Easy\"\nassert solution(\"6 1 5\") == \"100\", \"Easy\"\nassert solution(\"4 3 1\") == \"100\", \"Easy\"\nassert solution(\"3 1\") == \"-1\", \"Easy\"\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"5 2 3\n        5 1 3 10 1\n    \"\"\") == \"18\"\n\nassert solution(\n    \"\"\"6 1 5\n        10 30 30 70 10 10\n    \"\"\") == \"100\"\n\nprint(\"All tests passed\")\n"
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '100'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''4 1\n0011''') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n00100\n''') == '3'\nassert solution('''\n6 1\n000000\n''') == '4'\nassert solution('''\n12 6\n000010000100\n''') == '15'\nassert solution('''\n4 1\n0011\n''') == '4'\nassert solution('''\n12 6\n000010000100\n''') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n00100\n''') == '3'\nassert solution('''\n6 1\n000000\n''') == '4'\nassert solution('''\n12 6\n000010000100\n''') == '15'\nassert solution('''\n4 1\n0011\n''') == '4'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n00100\n''') == '3'\n\nassert solution('''6 1\n000000\n''') == '4'\n\nassert solution('''12 6\n000010000100\n''') == '15'\n\nassert solution('''4 1\n0011\n''') == '4'\n\nassert solution('''12 6\n011000100100001\n''') == '15'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\n"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('10000') == '10000'"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n00100\") == \"3\"\nassert solution(\"6 1\\n000000\") == \"4\"\nassert solution(\"4 1\\n0011\") == \"4\"\nassert solution(\"12 6\\n000010000100\") == \"15\"\nassert solution(\"6 3\\n0000000001000\") == \"7\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"azzel\") == \"apple\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\nassert solution('abcdef') == 'cdefab'\n\"\"\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'apple'\nassert solution('') == ''\nassert solution('a') == 'a'\nassert solution('az') == 'a'\n\"\"\"\n\ns = stdin.strip()\nt = stdin.strip()"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'apple'\n\"\"\"\nfrom collections import defaultdict\n\nclass Solution:\n    def solve(self, s: str, t: str) -> bool:\n        \n        dict_s = defaultdict(int)\n        dict_t = defaultdict(int)\n        \n        for i in range(len(s)):\n            dict_s[s[i]] += 1\n            dict_t[t[i]] += 1\n            \n        if dict_s!= dict_t:\n            return False\n        \n        return True"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('zzz') == 'No'\nassert solution('zzz') == 'No'\nassert solution('zzz') == 'Yes'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'apple'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'appel'\nassert solution('app') == 'app'\nassert solution('app') == 'app'"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\n"
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\nassert solution('rose') == 'ash'\nassert solution('april') == 'april'\nassert solution('roses') == 'rose'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('10') == '5'\nassert solution('100') == '30'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2 2\") == \"0\"\nassert solution(\"5 3 1 5\") == \"7\"\nassert solution(\"10 3 5 9 2\") == \"0\"\nassert solution(\"5 3 2 8 1\") == \"0\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n3 2\n4 1\n''') == \"4\"\nassert solution('''\n3\n1 2\n3 2\n2 1\n''') == \"3\"\nassert solution('''\n5\n1 2\n3 2\n2 3\n1 3\n4 2\n''') == \"7\"\nassert solution('''\n2\n1 1\n1 1\n''') == \"1\"\n\nstdin = \"\"\"\n4\n1 2\n3 2\n2 3\n1 3\n4 2\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1\") == \"YES\"\nassert solution(\"3 3 2\") == \"YES\"\nassert solution(\"2 3 3\") == \"NO\"\nassert solution(\"3 3 3\") == \"YES\"\nassert solution(\"4 4 2\") == \"YES\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3') == '0'\nassert solution('5 1 2 3') == '0'\nassert solution('10 0 5 1 2 3') == '0'\nassert solution('4 8 1 3') == '4'\nassert solution('4 5 6 3') == '5'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"10 2\") == \"4\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"20 3\") == \"1\"\nassert solution(\"50 50\") == \"1\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n2 3\\n3 6\\n5 6\\n7 3\\n6 5\\n') == '3'\nassert solution('3\\n2 3\\n3 4\\n4 5\\n') == '5'\nassert solution('6\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '6'\nassert solution('6\\n2 3\\n3 4\\n4 5\\n5 6\\n7 3\\n') == '4'\nassert solution('6\\n2 3\\n3 4\\n4 5\\n5 6\\n7 3\\n8 3\\n') == '8'\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3') == '5'\nassert solution('3 3 1 2') == '5'\nassert solution('2 1 1 1') == '1'"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 2\\n1\\n1\") == \"1\"\nassert solution(\"3\\n5 5 5\\n1 2 3 4\\n2 2 2 2\\n2 2 1 2\\n2 2 3 4\") == \"4\"\n"
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6') == '4'\nassert solution('1 2 3 4 5 6 7') == '5'\nassert solution('1 2 3 4 5 6 7 8') == '5'\nassert solution('1 2 3 4 5 6 7 8 9') == '5'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\\n\") == \"3\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 2') == '2'\nassert solution('3 1') == '1'\nassert solution('3 2') == '2'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '1'\nassert solution('5 800') == '1'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 10\") == \"4\"\nassert solution(\"3 10\") == \"3\"\nassert solution(\"3 10\") == \"3\"\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 700\\n3 500\\n5 800') == '3'"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n10 20 30\\n4\\n') == '4'\nassert solution('10 20 30\\n4\\n') == '1'\nassert solution('1\\n10\\n20\\n30\\n') == '3'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 700\n3 500\n5 800\n''') == '3'\nassert solution('''\n2 700\n3 500\n5 800\n''') == '3'\nassert solution('''\n1 700\n3 500\n5 800\n''') == '4'\n"
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 700') == '3'\nassert solution('10 5') == '6'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n7 5 4 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n\nassert solution('''\n12\n7 5 4 5 5 6\n''') == '2'\nassert solution('''\n13\n7 8 7 8 7 8 7 8 7 8 7 8 7\n''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"2\"\nprint(solution(s))\n\"\"\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n7\n5 5 4 5 5 5 6\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n8\n4 8 8 7 8 4 4 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n9\n2 3 4 2 2 3 2 2 4\n\"\"\") == \"3\""
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(input_stdin) == \"2\""
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n5 5 4 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n5 5 4 5 5 5 6''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4''') == '3'"
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"2\"\nassert solution(input_) == \"3\""
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18', \"Easy\"\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1', \"Easy\"\nassert solution('''\n4 3 1\n1 100 1 1\n''') == '100', \"Easy\"\nassert solution('''\n5 3 1\n100 1000 100 1\n''') == '1000', \"Hard\"\nassert solution('''\n5 3 1\n100 1000 100 1\n''') == '-1', \"Hard\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 2 3\n    5 1 3 10 1\n    \"\"\") == \"18\"\n    assert solution(\n    \"\"\"\n    6 1 5\n    10 30 30 70 10 10\n    \"\"\") == \"-1\"\n    assert solution(\n    \"\"\"\n    9 1 5\n    10 10 10 10 10\n    \"\"\") == \"100\"\n    print(\"Congratulations! Your solution is correct!\")\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2 3\n1 1 1\n\"\"\") == \"18\"\nassert solution(\"\"\"\n3 2 2\n10 9 6\n\"\"\") == \"18\"\nassert solution(\"\"\"\n4 2 3\n1 3 3 1\n\"\"\") == \"19\"\nassert solution(\"\"\"\n5 2 1\n100 5 5 2\n\"\"\") == \"100\"\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('4 3 1') == '100'\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 2 3\n5 1 3 10 1\n\n\"\"\") == \"18\"\nassert solution(\"\"\"6 1 5\n10 30 30 70 10 10\n\n\"\"\") == \"100\"\nprint(solution(input()))\n"
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('10') == 'No'\nassert solution('11') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == 'Yes'\nassert solution('10') == 'No'\n\nprint('YES' if solution('11') == 'Yes' else 'NO')\n\n---\nn = int(input())\ns = str(n)\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"123\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'No'\nassert solution('1') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == 'Yes'\nassert solution('1') == 'No'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == 'Yes'\nassert solution('3') == 'No'"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == 'No'\nassert solution('2\\n') == 'Yes'\nassert solution('3\\n') == 'Yes'\nassert solution('4\\n') == 'Yes'\nassert solution('5\\n') == 'No'\n"
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('1') == 'No'\nassert solution('11') == 'No'"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('3\\n3 3 3\\n3 2 2\\n3 1 2\\n3 3 4') == '3 3 4'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '2 2'\nassert solution('3') == '0 0'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nassert solution('''1\n3 3 5\n1 2 5\n3 2 5''') == '0 2 2'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2\\n1 2\\n3 2\\n5 2\") == \"2 2 6\"\nassert solution(\"5\\n3 2\\n1 2\\n3 2\\n5 2\") == \"2 2 6\"\nassert solution(\"5\\n3 2\\n1 2\\n3 2\\n5 2\") == \"2 2 6\"\nassert solution(\"5\\n3 2\\n1 2\\n3 2\\n5 2\") == \"2 2 6\"\nassert solution(\"5\\n3 2\\n1 2\\n3 2\\n5 2\") == \"2 2 6\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2 2 6\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2 2 3\"\nassert solution(\"3\") == \"2 1 2\"\nassert solution(\"0\") == \"0 0 0\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\\n') == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3 5') == '2 2 6'\nassert solution('2\\n3 1 5') == '3 2 5'\nassert solution('3\\n2 1 5') == '3 2 5'\nassert solution('4\\n2 1 5') == '2 2 6'\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2 2 6\"\nassert solution(\"3\") == \"2 2 5\"\nassert solution(\"5\") == \"2 2 3\"\nassert solution(\"12\") == \"2 2 6\"\nassert solution(\"8\") == \"2 2 3\"\n"
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\n'''\n\n'''\nimport sys"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"redcoder\") == \"1\"\n\nassert solution(\"redcoder\") == \"1\"\n\nassert solution(\"redcoder\") == \"1\"\n\nassert solution(\"redcoder\") == \"1\"\n\nassert solution(\"redcoder\") == \"1\""
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('redcoder') == '1'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('redcoder') == '1'\nassert solution('grrrrrrrrrrr') == '3'\nassert solution('krrr') == '1'\nassert solution('krr') == '2'\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"redcoder\") == \"1\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('redcoder') =='redcoder'\nprint(solution('redcoder'))"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('redcoder') == '1'\n'''"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"abab\") == \"1\"\nassert solution(\"abac\") == \"2\"\nassert solution(\"babad\") == \"1\"\nassert solution(\"ababcd\") == \"2\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('redcoder') == '1'\nassert solution('taco cat') == '1'\nassert solution('taco cat') == '1'\nassert solution('redcoder') == '1'\nassert solution('redcoder') == '1'\n\"\"\"\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nredcoder\n''') == '1'\nassert solution('''\nredcoder\n''') == '1'\nassert solution('''\nredcoder\n''') == '1'\nassert solution('''\nredcoder\n''') == '1'\nassert solution('''\nredcoder\n''') == '1'\n'''\n"
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('redcoder') =='redcoder'\nassert solution('leetcode') == 'leetcode'\n\n\"\"\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"20\") == \"No\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'No'\nassert solution('6') == 'Yes'\nassert solution('7') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2\\n\") == \"Yes\"\nassert solution(stdin=\"5\\n\") == \"No\"\n\"\"\"\n\nimport math\n\nn = int(input())"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == 'Yes'\nassert solution('20') == 'No'\nassert solution('100') == 'Yes'"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"9\") == \"No\"\nassert solution(\"8\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n10\n''') == 'Yes'\n\nassert solution('''\n1\n1\n''') == 'No'\n"
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Yes', 'First Test'\nassert solution('12') == 'No', 'Second Test'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 4 9 7 5\") == \"5\"\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('5') == '5'\nassert solution('5') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 2, 1, 4, 5]) == \"5\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 9 7 5') == '5'\nassert solution('10 20 8') == '10'\n\n'''\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '5'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4\\n9\\n7\\n5') == '5'\nassert solution('5\\n4\\n9\\n7\\n5') == '5'\n\n\"\"\""
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 9 7 5\") == \"5\""
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"7 5 1\") == \"6\"\n"
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"5\"\nassert solution(\"10\") == \"8\"\nassert solution(\"6\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"10\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 5') == '10'\n'''"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"10 20\") == \"0\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\n\n----"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"2 5\"]) == \"10\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\", \"First Test Case\"\nassert solution(\"1 1\") == \"-1\", \"Second Test Case\"\n"
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"4 5\") == \"10\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 3\\n7 3 1 4 5 6 8 9\") == \"2\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 10\") == \"4\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 5\n10 12 1 2 14\n''') == '5'\nassert solution('''3 5\n10 14 1 2 3\n''') == '1'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"4 8\") == \"4\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 3') == '3'\nassert solution('2 10') == '2'\nassert solution('2 1') == '1'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\n3\n1 5 2 4\n''') == '1'\nassert solution('''\n3 2\n4\n1 3 5\n''') == '2'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n10 12 1 2 14\\n') == '5'\nassert solution('2 10\\n10 12 1 2 14\\n') == '10'\nassert solution('2 5\\n10 12 1 2 14\\n') == '10'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"9 5\") == \"4\"\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '5'\n"
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"3 1\\n1 2 1\\n3 1\\n1 3\\n5 2\\n2 3\\n1 2\") == \"0\"\nassert solution(\"2 5\\n5 2 1\\n3 1\\n1 2\\n4 2\\n1 3\\n5 2\") == \"2\"\nassert solution(\"2 5\\n1 1 1\\n1 1 1\\n3 2\\n3 2\\n1 1 1\\n1 2\") == \"0\""
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n6 4 2\n1 2\n2 3\n3 4\n4 5\n5 6\n3 4\n3 5\n''') == '1'"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 1') == '2'\nassert solution('3 4 2') == '1110'\nassert solution('4 6 3') == '101001'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3') == '11100'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution() == '111100'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(\"4 4 3\") == \"1110\"\nassert solution(\"4 6 3\") == \"101001\"\nassert solution(\"5 6 2\") == \"2\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"5 6 2\") == \"1\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 4 3\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\n\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n"
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n10 10 5\n1 2\n1 3\n2 4\n2 5\n3 6\n4 7\n4 8\n5 9\n5 10\n''') == '1110100'\nassert solution('''\n10 10 2\n1 2\n1 3\n2 4\n2 5\n3 6\n4 7\n4 8\n5 9\n5 10\n''') == '01011101'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\", \"base\"\nassert solution(\"3\") == \"YES\", \"base\"\nassert solution(\"4\") == \"YES\", \"base\"\nassert solution(\"5\") == \"YES\", \"base\"\nassert solution(\"6\") == \"YES\", \"base\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'NO'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 2 5\\n') == 'YES'\nassert solution('3\\n4 5 3\\n') == 'YES'\nassert solution('2\\n10 10\\n') == 'YES'\nassert solution('3\\n1 2 3\\n') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('5') == 'YES'\nassert solution('8') == 'NO'\nassert solution('10') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 5 3\n''') == 'YES'\nassert solution('''\n2\n10 10\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\n'''"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution('''5\n2 1 1 2 5\n\n''') == \"YES\"\nassert solution('''3\n1 2 3\n\n''') == \"NO\"\nassert solution('''3\n4 5 3\n\n''') == \"YES\""
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nresult = \"YES\""
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 1 2 5') == 'YES'\nassert solution('3\\n4 5 3') == 'YES'\nassert solution('2\\n10 10') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\n"
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n\n''') == 'NO'\n\nassert solution('''\n3\n1 2 3\n\n''') == 'NO'"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 1\n-1\n''') == '-1'\n\nassert solution('''\n100 1\n-1\n''') == '-1'\n\nassert solution('''\n1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\n\nassert solution('''\n100 1\n-1\n''') == '-1'\n\nassert solution('''\n1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1000 6\\n-100 -200 -300 125 77 -4\"\n) == \"9\"\nassert solution(\n    \"1000000000000 5\\n-1 0 0 0 0\"\n) == \"4999999999996\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\"\nassert solution(\"10 4\") == \"-1\"\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('1000000000000 5') == '4999999999996'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 6\") == \"9\"\nassert solution(\"1000000000000 5\") == \"4999999999996\""
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '-1'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('1000000000000 5') == '-1'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('1000000000000 5') == '-1'\n"
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nABACABA\n''') == 'AB'\nassert solution('''\nZZZAA\n''') == 'ZZ'"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"AB\"\nassert solution(\"5\") == \"ZZ\"\nassert solution(\"7\") == \"AB\"\nassert solution(\"2\") == \"AB\"\n\nassert solution(\"5\") == \"ZZ\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'A'\nassert solution('5') == 'ZZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == 'AB'\nassert solution('5') == 'ZZ'\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\nABACABA\") == \"AB\"\nassert solution(\"5\\nZZZAA\") == \"ZZ\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\n"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABCAB\") == \"AB\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"\") == \"\"\nassert solution(\"ABAAA\") == \"AB\"\nassert solution(\"ABCAB\") == \"AB\"\n\n'''"
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"AB\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('codeforces') == '3'\nassert solution('codeforcesyes') == '7'\nassert solution('codeforcesyesab') == '8'\nassert solution('b') == '1'\nassert solution('yes') == '2'\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"west\") == \"here\"\nassert solution(\"test\") == \"here\"\nassert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"ab\") == \"ab\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"codeforces\") == 'codeforces'\nassert solution(\"b\") == 'b'\nassert solution(\"ab\") == 'a'\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"yes\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''codeforces\nyes''') == '7'\nassert solution('''test\nyes''') == '2'\nassert solution('''a\nb''') == '1'\nassert solution('''codeforces\nyes''') == '8'\nassert solution('''test\nyes''') == '9'\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('west') == 'here'\nassert solution('codeforces') == 'es'\nassert solution('test') == 'here'\nassert solution('yes') == 'yes'\nassert solution('b') == 'a'\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"here\"\nassert solution(\"west\") == \"here\"\nassert solution(\"b\") == \"a\"\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == ''\nassert solution('a') == ''\nassert solution('a') == ''\nassert solution('a') == ''\nassert solution('a') == ''\n"
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"codeforces\") == \"codeforces\"\nassert solution(\"west\") == \"west\"\nassert solution(\"test\") == \"test\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"b\") == \"b\"\n\"\"\""
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\neast\n''') == 'east'\nassert solution('''\nwest\n''') == 'west'\nassert solution('''\ncodeforces\nyes\n''') == 'codeforces'\nassert solution('''\ntest\nyes\n''') == 'test'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 7 11') == '2'\nassert solution('10 1 2 3 4 5 6 7 8 9') == '10'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('4 5') == '3'\nassert solution('6 2') == '1'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('8 3') == '3'\nassert solution('5 2') == '4'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 7 11\\n\") == \"2\"\n\"\"\"\n\nimport math\n\nn, x = map(int, input().split())\n\ncoords = list(map(int, input().split()))\n\ndistances = [math.inf] * n\ndistances[0] = 0\n\nfor i in range(n):\n    distance = distances[i]\n    for j in range(i + 1, n):\n        if distance + abs(coords[i] - coords[j]) <= x:\n            distance += abs(coords[i] - coords[j])\n            distances[j] = distance\n\nprint(max(distances))\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"100 100\") == \"50\"\nassert solution(\"100 100\") == \"50\"\n\n'''\n\n\nimport math\nfrom collections import deque\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\n\"\"\""
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 7 11') == '2'\nassert solution('4 5\\n1 1 2 2 3') == '3'\nassert solution('6 5\\n1 1 2 3 4 5') == '4'\nassert solution('9 5\\n1 2 3 4 5 6 7 8') == '6'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9') == '5'\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1 2\") == \"0\"\n\n'''\n\n###############################################################################\n'''\n"
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3,3]) == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasakaak') == 'No'"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\n\"\"\""
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"notakasaka\") == \"No\""
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''akasaka''') == 'Yes'\nassert solution('''akasaka''') == 'No'\nassert solution('''akasaka''') == 'Yes'\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"akasakaakasaka\") == \"Yes\"\nassert solution(\"akasakaakasakakak\") == \"Yes\"\nassert solution(\"akasakaakasakaakasakaak\") == \"No\"\nassert solution(\"akasakaakasakaakasakakakakakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakas"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"zbb\") == \"Yes\"\nassert solution(\"baba\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"aabab\") == \"No\"\nassert solution(\"aabbc\") == \"Yes\"\nassert solution(\"aabcba\") == \"Yes\"\nassert solution(\"aacbdb\") == \"Yes\"\n"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akasakasakasaka') == 'Yes'\nassert solution('akasakasakasakasak') == 'No'\nassert solution('akasakasakasakasakasak') == 'No'"
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"ekakasaka\") == \"No\"\nassert solution(\"ekakasakasaka\") == \"Yes\"\nassert solution(\"ekakasaka\") == \"No\"\nassert solution(\"ekakasaka\") == \"Yes\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"1.2 1.2\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"199 1.10\") == \"216\"\nassert solution(\"199 1.9\") == \"217\"\nassert solution(\"199 1.8\") == \"215\"\nassert solution(\"199 1.7\") == \"213\"\nassert solution(\"199 1.6\") == \"211\"\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '213'\nassert solution('198 1.10') == '217'\n'''\n\nA,B = map(int, input().split())\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"20 -2.1\") == \"21\"\nassert solution(\"3.1415926\") == \"3\"\n\n\"\"\"\nfrom math import trunc\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('101 0.11') == '101'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == str(int(input()))\n\"\"\"\n\nA, B = map(float, input().split())\n\nA = int(A * 10 ** -15)\n\nprint(A * 10 ** -15)"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''198 1.10''') == '217'\nassert solution('''0 1.0''') == '0'\nassert solution('''1 0.1''') == '1'\nassert solution('''0 0.1''') == '0'\nassert solution('''0.01 0.0001''') == '0'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    198 1.10\n    ''') == '217'\nassert solution('''\n    0 1\n    ''') == '0'\nassert solution('''\n    100 1.23\n    ''') == '100'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('198 1.10') == '217'\n"
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('198 0.10') == '198'\nassert solution('198 0.9') == '198'"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('10') == '1'\nassert solution('763243547') == '0'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n7') == '1'\nassert solution('6\\n2000000000') == '999999999'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''5\n2\n1\n1\n2\n2\n''') == '0'\nassert solution('''1\n10\n10\n''') == '0'\nassert solution('''2\n7\n3\n''') == '0'\nassert solution('''1\n10\n8\n''') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n\") == \"3\"\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n1\\n2\\n3\\n2000000000\\n763243547') == '3'\nassert solution('10\\n1000000000\\n763243547\\n381621773') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n2\n3\n1\n''') == '3'\nassert solution('''\n5\n4\n3\n2\n1\n''') == '0'\nassert solution('''\n6\n6\n3\n2\n1\n''') == '1'\n"
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n6\n7\n1\n2\n3\n2000000000\n763243547\n''') == '0'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '0'"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1\") == \"3\"\nassert solution(\"4 4 5\") == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 4 5\n1 2\n2 3\n3 4\n4 1\n\"\"\") == \"1\""
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n9 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == \"3\"\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == \"1\""
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 5\") == \"1\"\nassert solution(\"9 9 1\") == \"3\""
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([9, 9, 1]) == \"3\"\nassert solution([5, 4, 5]) == \"1\"\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 5 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '0'\nassert solution('5 9 9\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '0'\nassert solution('5 10 10\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\nassert solution('5 20 20\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\n"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 4 5') == '1'\nassert solution('5 4 5') == '2'"
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1\"\nprint(solution(input_))"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 2 4 1\") == \"4\"\nassert solution(\"6\\n1 1 1 4 4 4\") == \"5\"\nprint(solution(open(0).read()))\n\n\"\"\"\n\nn = int(input())\nboxers = list(map(int, input().split()))\nmax_boxers = 1\n\nwhile len(set(boxers)) < n:\n    boxers = list(map(lambda x: x + 1 if x >= max_boxers else x - 1 if x <= 1 else x, boxers))\n    max_boxers += 1\nprint(max_boxers)"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 2 4 1\n''') == '4'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"1 1 1 4 4 4\") == \"5\"\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\n\nprint(solution())\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4\\n\") == \"5\"\nassert solution(\"8\\n1 1 1 4 4 4\\n\") == \"7\"\nassert solution(\"4\\n1 1 1 4 4 4\\n\") == \"5\""
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\n\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n"
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '000001000002'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\nassert solution(\"1 12\") == \"000001000001\"\n\nimport sys\nimport os\n\nsys.setrecursionlimit(10**9)"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"2 3\n1 32\n2 63\n1 12\n\"\"\") == \"\"\"000001000002\n000002000001\n000001000001\"\"\"\n\nassert solution(\n    \"\"\"4 4\n1 1 2\n2 3 5\n4 4 5\n1 3 6\n2 4 6\"\"\") == \"\"\"000100100010\n001100010000\n001100100001\n000110000010\"\"\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001\\n'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''5 3\n1 16\n2 17\n3 18\n4 19\n5 20''') == '00000100010000\\n00000100020000\\n00000100010000\\n00000100010000\\n00000100010000\\n00000100010000'\nassert solution('''3 3\n1 16\n2 17\n3 18\n4 19\n5 20''') == '00000100010000\\n00000100020000\\n00000100010000\\n00000100010000\\n00000100010000\\n00000100010000'"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 32\") == \"000001000002\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"3 3\") == \"000002000001\"\nassert solution(\"4 3\") == \"000001000001\"\n"
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '000001000002\\n000002000001\\n000001000001\\n'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\nprint('Congratulations!')\n\"\"\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"2\\n2 10 8 40\") == \"1\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 2, 10, 8, 40]) == '2'\nassert solution([4, 2, 10, 8, 50]) == '1'\nassert solution([4, 2, 10, 8, 60]) == '0'\nassert solution([4, 2, 10, 8, 70]) == '3'\nassert solution([4, 2, 10, 8, 100]) == '3'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2\\n2 10 8 40\\n'\n    ) == '2'\nassert solution(\n    '3\\n2 10 8 40\\n'\n    ) == '2'\nassert solution(\n    '4\\n2 10 8 40\\n'\n    ) == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 10 8 40') == '2'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"3\\n1 3 5 8\") == \"0\"\nassert solution(\"6\\n5 1 10 3 4 6\") == \"3\"\nassert solution(\"7\\n7 5 5 5 5 5 3\") == \"4\"\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 10 8 40\\n') == '2'\nassert solution('5\\n1 1 2 3 4\\n') == '4'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 2 5') == '3'\nassert solution('7 5 8 10') == '7'\nassert solution('4 1 2 5') == '2'\nassert solution('4 1 2 3') == '1'\n"
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\""
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10 8 40') == '2'\nassert solution('5 3 4 2 10') == '5'\n\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        N = int(stdin.strip())\n        A = list(map(int, stdin.strip().split()))\n        alive = len([a for a in A if a > 0])\n        while len([a for a in A if a > 0]) > 1:\n            idx = A.index(max(A))\n            A[idx] -= 1\n            for i in range(idx + 1, N):\n                A[i] -= A[idx]\n        return str(A[-1])\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\\n\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\\n\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\\n\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\\n\"\nassert solution(\"?(__+_+_+___+___):-___>__.\\n\") == \"0101\\n\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(__+___+__-___):-___>__.____') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"0010\"\nassert solution(input) == \"false\""
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"010\"\nassert solution(input()) == \"false\""
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == \"0010\"\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == \"false\"\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == \"0250341\"\nassert solution('?(__+___+__-___):-___>__.') == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"false\"\nassert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"false\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n"
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nprint('Hurray! All test cases are passed!')\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == \"3\"\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"5\"\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == \"0\""
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\nprint(solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1'''))\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n11\n7\n12\n6\n1\n\n5\n10\n1\n11\n0\n3\n11\n1\n8\n6\n5\n''') == '7'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 11') == '3'\nassert solution('3 4 2') == '5'\nassert solution('3 4 1000000000000000000') == '0'\n\nassert solution('1 3 3 3') == '3'\nassert solution('0 3 3 2') == '5'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\nassert solution(\"3 4 100000000000000000000\") == \"0\"\n"
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == '3'\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '5'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''codeforces\n''') == 'codeforces'\nassert solution('''plmaetwoxesisiht\n''') == 'thisisexampletwo'\nassert solution('''1\n''') == '1'\n'''"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"codeforces\"\n\n-----Hint 1-----\n\nRecall the above algorithm: \n[a] Create a dictionary which counts the number of divisors of a given integer.\n[b] Iterate over the dictionary's keys and reverse the values. \n[c] Join the reversed string back into the original string.\n[d] Check if the new string equals the original string.\n\"\"\""
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == 'codeforces'\n\nassert solution(open('input.txt').read()) == 'thisisexampletwo'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\""
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"codeforces\"\n\nassert solution(input()) == \"thisisexampletwo\"\n\nassert solution(input()) == \"z\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == 'rocesfedoc'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'\nassert solution('0') == 'z'"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'codeforces'\n\"\"\"\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nplmaetwoxesisiht\n''') == 'codeforces'\nassert solution('''\n5\nz\n''') == 'thisisexampletwo'\nassert solution('''\n6\npltmaetwoxesisiht\n''') == 'exampetwox'\nassert solution('''\n7\nz\n''') == 'exampetwox'\nassert solution('''\n8\nz\n''') == 'exampetwox'\n"
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'rocesfedoc'\nprint(solution(stdin))\n\n\n\"\"\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 14\n''') == '19'\nassert solution('''381 492\n''') == '873'\nassert solution('''5 14\n''') == '19'"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"6 5\") == \"15\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 14') == '19', \"Wrong result\"\nassert solution('381 492') == '873', \"Wrong result\"\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n\nprint(solution(input()))"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"3 7\") == \"17\""
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 14\n''') == '19'\nassert solution('''\n381 492\n''') == '873'\n"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"873\"\nprint(solution())"
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('1 2') == '3'\nassert solution('3 4') == '7'\nassert solution('1 3') == '4'\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\n\n'''"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '++>'\nassert solution('+3') == '+++>'\nassert solution('9-7') == '++++++++>'\nassert solution('10-7') == '<[<-]<+>-<'\n\n'''\n\nimport re"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Wrong result\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Wrong result\"\n\nimport itertools"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\", \"1st example\"\nassert solution(\"9-7\") == \"+++++++++>\", \"2nd example\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\", \"First test\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Second test\"\nprint(\"Good job!\")\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2+3') == \"++>\", \"Failed on input '2+3'\"\nassert solution('9-7') == \"++++++++>\", \"Failed on input '9-7'\"\nassert solution('4+8+9') == \"<[<-]<++++++++>\", \"Failed on input '4+8+9'\"\n\n'''\n\n\nfrom typing import List\n\nimport unittest\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        operands = stdin.split(' ')\n\n        stack = []\n        brainfuck_code = ''\n        for i in operands:\n            if i.isdigit():\n                stack.append(int(i))\n            elif i == '+':\n                while len(stack) > 1:\n                    stack.append(stack.pop() + stack.pop())\n            elif i == '-':\n                while len(stack) > 1:\n                    stack.append(stack.pop() - stack.pop())\n\n        while len(stack) > 0:\n            brainfuck_code += '<[<-]' if stack.pop() > 255 else '++>'\n\n        return brainfuck_code\n\n\nclass Test(unittest.TestCase):\n    def setUp(self) -> None:\n        pass\n\n    def tearDown(self) -> None:\n        pass\n\n    def test_solution(self) -> None:\n        sol = Solution()\n        for stdin, solution in (\n            [\"2+3\", \"++>\"],\n            [\"9-7\", \"++++++++>\"],\n            [\"4+8+9\", \"<[<-]<++++++++>\"],\n        ):\n            self.assertEqual(solution, sol.solution(stdin))\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\", 'First'\nassert solution(\"9-7\") == \"+++++++++>\", 'Second'\n\nsolution(\"9-7\")\n\nsolution(input())\n\n\"\"\"\nimport re"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2+3') == '++>', 'Wrong result'\nassert solution('9-7') == '++++++++>', 'Wrong result'\nassert solution('6+6') == '++++++>', 'Wrong result'\n\n\n\"\"\"\n"
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2') == '0'\nassert solution('5\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('5\\n5') == '0'\n\n\"\"\""
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"20\") == \"2\"\nassert solution(\"38\") == \"8\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3\n20\n38\n56\n\n''') == '2'\n\nassert solution('''\n5\n1\n3\n20\n38\n56\n\n''') == '2'\n\nassert solution('''\n4\n2132\n506\n999999999999999999\n1000000000000000000\n\n''') == '8'\n\nassert solution('''\n3\n2\n3\n\n''') == '3'\n\nassert solution('''\n4\n2\n3\n\n''') == '1'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2132\") == \"2\"\nassert solution(\"506\") == \"5\"\nassert solution(\"999999999999999999\") == \"0\"\n\"\"\"\n\nq = int(input())\nfor i in range(q):\n    k = int(input())\n    seq = input()\n    l = len(seq)\n    print(seq[k%l])"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"100\") == \"0\"\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3') == '2'\nassert solution('2\\n20') == '5'\nassert solution('5\\n999999999999999999') == '2'"
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2\n1\n3\n''') == '8'\nassert solution('''\n5\n1\n3\n20\n38\n56\n''') == '2'\nassert solution('''\n5\n2\n5\n20\n38\n56\n''') == '4'\nassert solution('''\n4\n2\n5\n20\n38\n56\n''') == '1'\nassert solution('''\n2\n2\n3\n''') == '1'"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"575\") == \"4\""
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '1'\nassert solution(3) == '2'\nassert solution(4) == '3'\nassert solution(5) == '4'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"4\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''575\n''') == '4'\nassert solution('''375\n''') == '0'\nassert solution('''537\n''') == '2'\nassert solution('''573\n''') == '1'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(0) == '0'\nassert solution(1) == '1'\nassert solution(2) == '1'\nassert solution(3) == '2'\nassert solution(4) == '3'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"100\") == \"0\"\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == '4'\nassert solution('3') == '0'\nassert solution('123') == '1'\nassert solution('0') == '0'\nassert solution('101') == '3'\n\n'''\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == '4'"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('575') == '4'\n"
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\", \"Wrong result\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"111\") == \"1\"\nassert solution(\"001\") == \"2\"\nassert solution(\"00\") == \"1\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('000') == '1'\nassert solution('111') == '1'\nassert solution('00') == '2'\nassert solution('11') == '2'\nassert solution('01') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('000000') == 1,'sample'\nassert solution('001001') == 2,'sample'\nassert solution('00110') == 2,'sample'\nassert solution('01110') == 3,'sample'\n\nstdin = input()\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"1\""
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"000\") == 1\nassert solution(\"111\") == 1\nassert solution(\"011\") == 2\nassert solution(\"111\") == 2\nassert solution(\"101\") == 4\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('000') == '1'\nassert solution('001') == '0'\nassert solution('010') == '1'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n'.join(['S', '', '', '', '', '', ''])) == '1'\nassert solution('\\n'.join(['S', '0', '0', '0', '1', '1', '1'])) == '2'\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"0\"\n) == \"1\"\nassert solution(\n    \"1\"\n) == \"0\"\nassert solution(\n    \"11100110\"\n) == \"2\"\nassert solution(\n    \"00\"\n) == \"2\"\nassert solution(\n    \"01\"\n) == \"1\"\n"
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"01\") == \"1\"\nassert solution(\"100\") == \"2\"\nassert solution(\"000\") == \"2\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED', \"Wrong solution\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"APPROVED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"10\\n7 4 8 9 10\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'APPROVED', \"First\"\nassert solution('6') == 'APPROVED', \"Second\"\nassert solution('7') == 'APPROVED', \"Third\"\nassert solution('9') == 'DENIED', \"Fourth\"\nassert solution('10') == 'DENIED', \"Fifth\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('100') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"APPROVED\"\nassert solution(\"10\") == \"DENIED\"\n\"\"\"\n\nimport re\n\nN = int(input())\n\ndoc = []\nfor i in range(N):\n    doc.append(input())\n\nfor i in range(N):\n    x = re.search(r'\\b\\d{3,5}\\b', doc[i])\n    if x == None:\n        print(\"DENIED\")\n    else:\n        print(\"APPROVED\")\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"APPROVED\"\nassert solution(\"100\") == \"APPROVED\"\nassert solution(\"1000\") == \"DENIED\"\nassert solution(\"1000\") == \"DENIED\"\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('6') == 'DENIED'\nassert solution('7') == 'APPROVED'\nassert solution('10') == 'DENIED'\nassert solution('9') == 'DENIED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'DENIED'\nassert solution('2') == 'DENIED'\nassert solution('5') == 'APPROVED'\n"
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'APPROVED', \"First\"\nassert solution('3') == 'DENIED', \"Second\"\nassert solution('4') == 'DENIED', \"Third\"\nassert solution('10') == 'APPROVED', \"Fourth\"\n\n\"\"\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('LLRDDDUUU') == 'Yes'\nassert solution('LLRRDDUUDD') == 'No'\nassert solution('UUUUUUUUUUUUUUUU') == 'Yes'\nassert solution('LLRRDDDUUUDD') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UUDDUUURRRDD\") == \"Yes\"\nassert solution(\"RRDDUUURRRDD\") == \"No\"\nassert solution(\"UUUUUUUUUUUUUU\") == \"Yes\"\nassert solution
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''RUDLUDR''') == 'Yes'\nassert solution('''RUDRRURD''') == 'No'\n\"\"\""
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'Yes'\nassert solution('RUDLUDR') == 'Yes'\nassert solution('RRDUDR') == 'No'\nassert solution('RRRUDDUUDDUUUDDUU') == 'Yes'\nassert solution('RLRRRLRRLRRRLRRRRRUUDDUUUDDUU') == 'No'\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RLUDDR\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RULD\") == \"No\"\nassert solution(\"RRLD\") == \"No\"\n"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RUDLUDR') == 'Yes'\n\"\"\"\n\nstdin = input()\n\nS = stdin.replace(\"R\", \"R\")\nS = S.replace(\"U\", \"U\")\nS = S.replace(\"D\", \"D\")\nS = S.replace(\"L\", \"L\")"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"RRRDDD\") == \"Yes\"\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\"RUDLUDR\")\nsolution()\nsys.stdin = io.StringIO('')\nsolution()"
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == 'Yes'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"100\") == \"73\"\nassert solution(\"99\") == \"21\"\nassert solution(\"8\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == \"7\"\nassert solution('''10\n2\n4\n3\n5\n3\n3\n3\n2\n3\n4''') == \"13\"\nassert solution('''20\n3\n2\n4\n3\n5\n3\n3\n3\n2\n3\n4''') == \"31\"\n\n'''\ninput\n5\n3\n2\n4\n3\n5\noutput\n7\n\ninput\n10\n2\n4\n3\n5\n3\n3\n3\n2\n3\n4\noutput\n13\n\ninput\n20\n3\n2\n4\n3\n5\n3\n3\n3\n2\n3\n4\noutput\n31\n'''"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n'\n    '3\\n'\n    '2\\n'\n    '4\\n'\n    '3\\n'\n    '5\\n') == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '7'\nassert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5\n''') == '7'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\n\nTest 1:\n    [['2','4','3','5','1']\n    ['4','1','3','2','5']\n    ['4','3','5','1','2']\n    ['1','4','5','2','3']\n    ['5','1','2','3','4']]\nTest 2:\n    [['5','5','1','5','2']\n    ['5','1','5','2','5']\n    ['5','5','1','5','2']\n    ['5','1','5','2','5']\n    ['5','5','1','5','2']]\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '7'\n\nassert solution(input_data) == '14'"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''5\n3\n2\n4\n3\n5''') == '11'\nassert solution('''5\n3\n2\n4\n3\n5''') == '10'\n"
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '6'\nassert solution('8') == '8'\n\"\"\"\n\nnum = int(input())\nfor i in range(num):\n    num = int(input())\n    if num % 10 == 0:\n        print(\"2\")\n    else:\n        print(\"6\")\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"123\") == \"2\"\nassert solution(\"234\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().strip()\n"
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('5') == '1'\n\"\"\""
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('20') == ''\nassert solution('6') == ''\nassert solution('2') == ''\nassert solution('5') == ''\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n3\n5\n7\n11''') == '23'\nassert solution('''3\n10\n2\n5\n5\n8''') == '10'\nassert solution('''9\n10\n3\n10\n10\n20''') == '11'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1,2,3\") == \"3\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20') == '23'\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"5\"\nassert solution(\"10\\n\") == \"7\"\nassert solution(\"100\\n\") == \"97\"\nassert solution(\"10001\\n\") == \"10011\"\nassert solution(\"3\\n\") == \"3\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10\n2\n3\n5\n4\n1\n2\n5\n6\n5\n4\n2\n\"\"\") == \"23\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20\") == \"23\"\nassert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\n\nprint(solution())"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"8\") == \"7\"\nassert solution(\"11\") == \"11\"\nassert solution(\"10\") == \"11\"\n"
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('12') == '13'\nassert solution('13') == '13'\nassert solution('123') == '13'\nassert solution('123456') == '13'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"5\\n3 1 3 2 4\") == \"2\"\nassert solution(\"6\\n3 1 3 2 4 5\") == \"2\"\nassert solution(\"7\\n3 1 3 2 4 5 6\") == \"3\"\nassert solution(\"8\\n3 1 3 2 4 5 6 7\") == \"3\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\n\n=========================================\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\nassert solution(\"7\\n2 1 2 1 3 4 5\") == \"2\"\nassert solution(\"10\\n1 1 2 2 2 2 3 3 3 4 4 4 4\") == \"3\"\nassert solution(\"16\\n1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\") == \"3\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 3 2') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('100') == '99'\n\n##\n## Problem 2:\n##\n##    [See Problem 6 for the definition of Balanced String.]\n##\n##\n##    [See Problem 7 for the definition of Balanced String.]\n##\n##\n##    A string is said to be /\\/\\/\\/ balanced when it meets the following condition:\n##    For each character, the number of characters to the left and to the right of it is the same as the number to the left and to the right of it.\n##    For example, the string \"aacaba\" is balanced because the number of characters to the left and to the right of each \"a\" is 2 and 2 respectively.\n##\n##    Write a function that takes in a string as input and returns a boolean value representing whether or not the string is /\\/\\/\\/ balanced.\n##\n##    [Example:]\n##    Input: \"aacaba\"\n##    Output: True\n##\n##\n##    Input: \"aabcda\"\n##    Output: False\n##\n##\n##    Input: \"aabcdaa\"\n##    Output: True\n##\n##    Input: \"abc\"\n##    Output: False\n##\n##\n##    [Hint:]\n##    The number of characters to the left and to the right of each character is the same as the number to the left and to the right of each character.\n##\n##    def solution(stdin: str) -> str:\n##        pass\n##\n##\n##    assert solution('aacaba') == True\n##    "
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"0\"\n\nimport sys\nfrom collections import deque\n\nN = int(input())\nA = list(map(int, input().split()))\n\nq = deque(A)\nq.rotate(1)\n\ncount = 0\nwhile len(q) > 2:\n    curr1, curr2 = q.popleft(), q.popleft()\n    if curr1 == curr2:\n        count += 1\n        q.append(curr1)\n        q.append(curr2)\n    else:\n        q.append(curr1)"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('10') == '0'\nassert solution('3') == '0'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '3'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 100, 90, 80]) == '23'\nassert solution([3, 5, 100, 90, 80]) == '18'\nassert solution([3, 4, 5, 6, 7]) == '10'\nassert solution([3, 4, 5, 6, 7, 8]) == '10'\nassert solution([3, 4, 5, 6, 7, 8, 9]) == '9'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\""
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 100 90 80\") == \"23\"\nassert solution(\"4 100 90 80\") == \"23\"\nassert solution(\"4 100 90 80\") == \"23\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('3 100 120 90') == '20'\nassert solution('1 2 3 4 5') == '6'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 1, 2, 3, 2]) == \"23\""
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('1\\n1\\n10\\n5\\n1\\n10') == '17'\nassert solution('2\\n1\\n10\\n5\\n1\\n10') == '17'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"6 7 89 96 89\") == \"13\"\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 100 90 80\n98\n40\n30\n21\n80''') == '23'\n"
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('10 50 30 10') == '3'\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"CDEZAB\"\nassert solution(\"2\") == \"CDEZAB\"\nassert solution(\"3\") == \"DBCAB\"\nassert solution(\"4\") == \"ABDCA\"\nassert solution(\"5\") == \"ABCDE\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ABC\") == \"CDE\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZABCXYZ\") == \"CDEZABCXYZABCXYZ\"\nassert solution(\"ABCXYZABCXYZABCXYZ\") == \"CDEZABCXYZABCXYZABCXYZ\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABABCABC\") == \"CDEZAB\"\nassert solution
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCXYZ\") == \"CDEZAB\"\n\"\"\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"CDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"RNDKFGJKSDXJLKPQRSYQ\") == \"RNDQSDKFGJKSBXALPQRSTU\"\n\"\"\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'CDEZAB'\n\"\"\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"CDEZAB\"\nassert solution(\"1234\") == \"4321\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"CDEZAB\"\n\n\"\"\""
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"A\"\nassert solution(\"ABC\") == \"CBA\"\nassert solution(\"ABCD\") == \"BDCA\"\nassert solution(\"ABCDEF\") == \"CDEFAB\"\n"
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2', 'ABCXYZ') == 'CDEZAB'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 2 3\\n') == '3 4 2'\nassert solution('2 3\\n') == '3 4'\nassert solution('2 3 2 3 2 4\\n') == '3 4 2'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5 2 3 2\n''') == '3 4 2'\nassert solution('''\n1\n2750131 199999\n''') == '199999'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n5 2 3 2 4\n''') == '3 4 2'\nassert solution('''\n1\n2750131 199999\n''') == '199999'\nassert solution('''\n1\n3 6\n''') == '6'"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 5 2 3 2 4\n\nOutput\n3 4 2\n\n3\n3 2\n\nOutput\n2 3\nInput\n1\n2750131 199999\n\nOutput\n199999''') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''\n1\n2750131 199999\n''') == '199999'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3 4 2'\nassert solution('1') == '3 4 2'\nassert solution('5') == '2 5 3 4'\nassert solution('1 2') == '3 4 2'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 5 2 3 2\n''') == '4 5 2 3 2'\nassert solution('''\n1\n5 5 3 4 5 5\n''') == '5 5 3 4 5 5'\nassert solution('''\n2\n4 5 3 4 5 5\n''') == '4 5 3 4 5 5'\nassert solution('''\n4\n4 4 4 4 4\n''') == '4'\nassert solution('''\n2\n2 3\n''') == '3'\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 2 3\") == \"3 4 2\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 2\") == \"3 2\"\nassert solution(\"3 5 2 3 2 4\") == \"3 4 2\"\n"
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\") == \"2\"\nassert solution(\"2\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '11111', 'Should return \"11111\"'\nassert solution('5 1') == '22111', 'Should return \"22111\"'\nassert solution('7 1') == '1121122', 'Should return \"1121122\"'\nassert solution('5 1') == '21112', 'Should return \"21112\"'"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 4 5 3 1\n''') == '11111'\nassert solution('''5 1\n2 1 3 5 4\n''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6\n''') == '1121122'\nassert solution('''6 1\n2 4 5 3 1\n''') == '21112'\nassert solution('''5 1\n2 4 5 3 1\n''') == '21112'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 2\\n2 4 5 3 1\"\n    ) == \"11111\"\nassert solution(\n    \"5 1\\n2 1 3 5 4\"\n    ) == \"22111\"\nassert solution(\n    \"7 1\\n7 2 1 3 5 4 6\"\n    ) == \"1121122\""
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"11111\"\nassert solution(\"5 2\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\n\n\"\"\"\n"
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 2\n2 4 5 3 1\n\"\"\") == \"11111\"\nassert solution(\"\"\"5 1\n2 1 3 5 4\n\"\"\") == \"22111\"\nassert solution(\"\"\"5 1\n7 2 1 3 5 4 6\n\"\"\") == \"1121122\"\n\nstdin = \"\"\"5 2\n2 4 5 3 1\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2 1 2 3') == '2'\nassert solution('4\\n100 1') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 1 2 3''') == '2'\nassert solution('''4\n100 1''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 3 7') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n100 1\n''') == '2'\nassert solution('''\n3\n100 3 100 1\n''') == '4'\nassert solution('''\n4\n100 1 2 3\n''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == input_\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2 1 2 3''') == '2'\nassert solution('''2\n100 1''') == '2'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2 1 2 3\n''') == '2'\nassert solution('''4\n100 1\n''') == '4'\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == '2'\nassert solution(\"2\") == '2'\nassert solution(\"100\") == '2'\nassert solution(\"1 3 3 7\") == '4'\nprint('all tests passed')\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"2\"\n"
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 1 2 3\") == \"2\"\nassert solution(\"1 2 1 2 3 4 5 6 7 8 9 10 11\") == \"12\""
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '1'\nassert solution('1') == '0'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('1') == '1'\nassert solution('4') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '1'\nassert solution('6\\n') == '0'\nassert solution('7\\n') == '1'\nassert solution('8\\n') == '2'\nassert solution('9\\n') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n') == '1'\nassert solution('5\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('10\\n') == '0'\nassert solution('16\\n') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"6\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\"\nassert solution(\"1\\n16\") == \"1\"\nassert solution(\"4\\n1 1 1 1023\") == \"0\""
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n4 7 1 5 4 9\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n1\n16\n''') == '0'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'\n\nassert solution('''\n0\n''') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(f'{__file__} 5\\n{__file__} 5') == '1'\nassert solution(f'{__file__} 6\\n{__file__} 6') == '0'\nassert solution(f'{__file__} 7\\n{__file__} 7') == '2'\nassert solution(f'{__file__} 8\\n{__file__} 8') == '0'\nassert solution(f'{__file__} 9\\n{__file__} 9') == '0'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '1'\nassert solution('5\\n') == '0'\nassert solution('6\\n') == '1'\nassert solution('7\\n') == '1'\nassert solution('8\\n') == '1'\n"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n4 7 1 5 4 9') == '1'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('1\\n16') == '1'\nassert solution('4\\n1 1 1 1023') == '0'"
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"10111\") == \"3\"\nassert solution(\"01111\") == \"3\"\nassert solution(\"10001\") == \"1\"\nassert solution(\"10101\") == \"1\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('101') == '1'\nassert solution('001') == '2'\nassert solution('110') == '2'\nassert solution('111') == '1'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0011\") == \"4\""
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0011\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '1'\nassert solution('0011') == '4'\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0011') == '4'\nassert solution('1111') == '2'\nassert solution('1101') == '2'\nassert solution('11010101') == '5'"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0011\") == \"4\"\n"
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"0110\") == \"3\"\nassert solution(\"11\") == \"1\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"2\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 5\") == \"4\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"4 4\") == \"4\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '4'\nassert solution('5 5') == '0'\nassert solution('6 6') == '1'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 2\\n\"\n    \"1 3\\n\"\n    \"2 4\"\n) == \"2\"\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 2') == '1'"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 1') == '2'\nassert solution('3 4\\n3 4') == '4'\nassert solution('4 5\\n3 4') == '1'\nassert solution('4 5\\n5 4') == '1'\nassert solution('4 6\\n5 4') == '0'\n"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"6 1\") == \"6\"\n\n\"\"\"\n\nn, m = map(int, input().split())\npass_gates = []\npass_gates_ids = []\nfor _ in range(m):\n    id_cards = list(map(int, input().split()))\n    pass_gates.append(id_cards[0] < id_cards[1])\n    pass_gates_ids.append(id_cards[0] < id_cards[1])\n\ncount_passed = 0\nfor i in range(1, n+1):\n    if pass_gates[i-1]:\n        if not pass_gates_ids[i-1]:\n            count_passed += 1\n\nprint(count_passed)"
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    1 3\n    2 4\n    \"\"\"\n) == \"2\"\n\"\"\"\n\n2\n\nFirst ID card allows us to pass the second gate, so there are no ID cards that allow us to pass the gates alone.\n\nSecond ID card does not allow us to pass the first gate, so we do not have any ID cards that allow us to pass the gates alone.\n\nThird ID card allows us to pass all the gates.\n\nFourth ID card does not allow us to pass the second gate, so there are no ID cards that allow us to pass the gates alone.\n\n\"\"\""
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"2\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4\\n'\n    '1 2 2 1'\n    ) == '2'\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 2 1\n''') == '2'\n\"\"\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"3\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"13\"\nassert solution(\"100\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 2 1\\n') == '2'\nassert solution('5\\n1 2 1 1 1\\n') == '3'\nassert solution('100\\n1 2 1 1 1\\n') == '4'\nassert solution('10\\n0 0 0 0 0 0\\n') == '0'\nassert solution('5\\n1 2 1 1 1\\n') == '2'"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n5\n1 2 2 1\n''') == '2'\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1000\") == \"3\"\nassert solution(\"10000\") == \"5\"\n"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\n\n\"\"\"\n\nN = int(input())\nheights = list(map(int, input().split()))\n\nleft, right = 1, N\nwhile left < right:\n    mid = (left+right) // 2\n    if heights[mid] == 0:\n        left = mid + 1\n    else:\n        right = mid\n\nprint(right)"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 2 1') == \"2\""
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('5\\n1 2 2 1') == '3'\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"4 0\") == \"0\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\n\nassert solution('''2 4\n-1 1\n''') == '4'\n\nassert solution('''4 10\n2 4 1 2\n''') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n2 1 -3''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 5]) == \"3\"\nassert solution([2, 4]) == \"4\"\nassert solution([1, 2]) == \"2\"\nassert solution([3, 10]) == \"2\"\nassert solution([4, 10]) == \"0\"\n"
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9 3 6 12 4 8\"\nassert solution(input(\"\")) == \"3000000000000000000 1000000000000000000\"\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '126 42 84 28'\nassert solution(sys.stdin.read()) == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n4 8 6 3 12 9\n\n''') == '9 3 6 12 4 8 \nassert solution('''\n2\n1000000000000000000 3000000000000000000\n\n''') == '3000000000000000000 1000000000000000000 \nassert solution('''\n4\n42 28 84 126\n\n''') == '126 42 84 28 \n'''"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'\nassert solution('4') == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '42 3 6 12 4 8'\nassert solution() == '126 42 84 28'\nassert solution() == '3000000000000000000 1000000000000000000'\n"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"9 3 6 12 4 8\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\n\nassert solution('''5\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\n\nassert solution('''6\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\n\nassert solution('''7\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\n\nassert solution('''8\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"5\") == \"8 7 6 5\""
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n-1 2 5 8 11\n''') == '1'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n\"\n    \"-1 2 5 8 11\"\n) == \"1\"\nassert solution(\n    \"6\\n\"\n    \"3 5 4 7 10 12\"\n) == \"3\"\nassert solution(\n    \"5\\n\"\n    \"-1 2 5 8 11\"\n) == \"2\"\n\n---\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3'\nassert solution('6') == '3'\nassert solution('5') == '3'\nassert solution('3') == '3'\nassert solution('1') == '8'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\n3 5 4 7 10 12''') == '3\\n7 3 5'\nassert solution('''5\n-1 2 5 8 11''') == '1\\n8'\nassert solution('''5\n2 4 8 -11''') == '4\\n8'"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 2 5'\nassert solution('6') == '1 2 3 4 5 6'\nassert solution('2') == '1'\nassert solution('1') == ''\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == '4'\nassert solution(input_2) == '8'\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5 3 4 7 10 12''') == \"3\"\nassert solution('''5\n-1 2 5 8 11''') == \"1\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"8\"\n"
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '8'\nassert solution('1') == '8'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3 3\"\n    ) == \"0 2\"\nassert solution(\n    \"0 3 3\"\n    ) == \"0 2\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 5') == '0 0'\n\"\"\"\n\nimport sys\n\nclass Solution:\n    def solution(self, A, B, K):\n        A = int(A)\n        B = int(B)\n        K = int(K)\n        if K == 0:\n            return \"0 {}\".format(A)\n        if A == 0:\n            if K <= B:\n                return \"0 {}\".format(K)\n            else:\n                return \"0 0\"\n        if A >= B:\n            return \"0 0\"\n        if A <= 0:\n            return \"0 {}\".format(B)\n        if K > A+B:\n            return \"0 0\"\n        if K >= 0:\n            if A > K:\n                return \"0 {}\".format(K)\n            if A <= K:\n                return \"0 {}\".format(B)\n            if K == A:\n                return \"0 0\"\n            if K < A:\n                return \"0 {}\".format(K)"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 3') == '0 2'\nassert solution('1 2 3') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3') == '0 2'\n\"\"\"\n\nstdin = input()\nA, B, K = list(map(int, stdin.split()))"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 3') == '0 2'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 3 3\"\"\") == \"\"\"0 2\"\"\"\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 3\") == \"0 2\""
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('1 1 1') == '0 1'\n"
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '0 2'\nprint(solution(input))"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"103\") == \"3\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''101''') == '3'\nassert solution('''102''') == '2'\nassert solution('''103''') == '1'\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('103') == '3'\n\"\"\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"0\") == \"0\"\n\"\"\""
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"103\") == \"3\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('103') == '3'\nassert solution('0') == '1'"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"3\"\nassert solution(\"103\") == \"3\"\n\n'''\nimport math\nimport time"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10000\") == \"2\"\n"
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '6'\nassert solution('4') == '10'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '18'\nassert solution('3') == '27'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"15\") == \"1\"\nassert solution(\"20\") == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '21'\n\n-------Running tests------\nTests: 3 passed.\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '9'\nassert solution('2\\n') == '9'"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '9'\nassert solution('3') == '1'\nassert solution('5') == '5'\n\"\"\"\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '9','sample test 1'\nassert solution('4') == '10','sample test 2'\n"
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '9'\nassert solution('4') == '5'"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 4 6\n''') == '10'\nassert solution('''4\n4 1 2 3\n''') == '7'\nassert solution('''5\n1 2 3 4 5\n''') == '11'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3,4,6]) == 10, \"Solution is incorrect\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('2\\n3 4 6') == '10'\nassert solution('10\\n3 4 6') == '10'\nassert solution('20\\n3 4 6') == '10'\nassert solution('30\\n3 4 6') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '10'\nassert solution('4\\n2 3 2 4') == '10'\nassert solution('5\\n5 7 5 4 4') == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 4 6') == \"10\"\nassert solution('4\\n2 3 4 5') == \"13\"\nassert solution('6\\n1 2 3 4 5 6') == \"22\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 4 6') == '10'\nassert solution('4\\n2 4 5 3') == '13'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 4, 6]) == '10'\nassert solution([3, 4, 6]) == '10'\nassert solution([3, 4, 6]) == '10'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3 4 6\n''') == '10'\nassert solution('''5\n1 2 3 4 5\n''') == '15'\nassert solution('''5\n1 2 3 4 5\n''') == '15'\nassert solution('''5\n1 2 3 4 5\n''') == '15'\nassert solution('''5\n1 2 3 4 5\n''') == '15'\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n3 4 6\n\"\"\") == \"10\", \"Sample Case\"\nassert solution(\n\"\"\"\n7\n1 2 3 4 5 6 7\n\"\"\") == \"29\", \"Sample Case\"\nassert solution(\n\"\"\"\n12\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"47\", \"Sample Case\"\nassert solution(\n\"\"\"\n1\n10\n\"\"\") == \"10\", \"Sample Case\"\n"
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n6 6\\n4 4') == 'Yes'\nassert solution('4\\n2 1\\n3 2\\n1 4') == 'No'"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2\n6 6\n4 4\n3 3\n3 2''') == 'Yes'\nassert solution('''5\n1 2\n3 3\n4 4\n6 6\n3 2''') == 'No'\n\n__author__ = 'Haim Adrian'"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n3 2\") == \"Yes\"\nassert solution(\"5\\n1 2\\n6 6\\n4 4\\n3 3\\n2 2\") == \"No\"\nassert solution(\"2\\n1 2\") == \"Yes\"\nassert solution(\"3\\n1 2\") == \"No\"\nassert solution(\"3\\n1 2\\n1 2\") == \"No\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'No'\nassert solution('2') == 'No'\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"2\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n6 6\\n4 4\\n3 3') == \"Yes\"\nassert solution('3\\n1 2\\n3 3') == \"No\""
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('10') == '20'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '4'\nassert solution('3') == '4'\nassert solution('10') == '20'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('5') == '20'\nassert solution('6') == '12'\n\n\"\"\"\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\n\"\"\"\n\nr = int(input())"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1\"]) == \"1\"\nassert solution([\"2\"]) == \"4\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\n\n\"\"\""
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"Yes\""
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 8 5 1\\n') == 'Yes'\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5 8 5 1\n''') == 'Yes'\nassert solution('''6\n2 5 4 5 6\n''') == 'No'\n'''\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 8 5 1') == 'Yes'\nassert solution('5\\n3 4 5 1') == 'No'"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 2 1') == 'Yes'\nassert solution('4 3 2 1') == 'No'\nassert solution('4 3 2 1') == 'Yes'\n\"\"\""
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 5 1\") == \"Yes\"\nassert solution(\"4 8 5 1\") == \"Yes\"\n\n## https://judge.softuni.bg/Contests/Practice/Index/2753#1\n## https://judge.softuni.bg/Contests/Practice/Index/2221#1\n## https://judge.softuni.bg/Contests/Practice/Index/1888#1\n## https://judge.softuni.bg/Contests/Practice/Index/2557#1\n## https://judge.softuni.bg/Contests/Practice/Index/2554#1\n## https://judge.softuni.bg/Contests/Practice/Index/2555#1\n## https://judge.softuni.bg/Contests/Practice/Index/2556#1\n## https://judge.softuni.bg/Contests/Practice/Index/2313#1\n## https://judge.softuni.bg/Contests/Practice/Index/2136#1\n## https://judge.softuni.bg/Contests/Practice/Index/2110#1\n## https://judge.softuni.bg/Contests/Practice/Index/2214#1\n## https://judge.softuni.bg/Contests/Practice/Index/2128#1\n## https://judge.softuni.bg/Contests/Practice/Index/2117#1\n## https://judge.softuni.bg/Contests/Practice/Index/2117#2\n## https://judge.softuni.bg/Contests/Practice/Index/2211#1\n## https://judge.softuni.bg/Contests/Practice/Index/2210#1\n## https://judge.softuni.bg/Contests/Practice/Index/2211#2\n## https://judge.softuni.bg/Contests/Practice/Index/2210#2\n## https://judge.softuni.bg/Contests/Practice/Index/2211#3\n## https://judge.softuni.bg/Contests/Practice/Index/2210#3\n## https://judge.softuni.bg/Contests/Practice/Index/2210#4\n## https://judge.softuni.bg/Contests/Practice/Index/2211#4\n## https://judge.softuni.bg/Contests/Practice/Index/2210#5\n## https://judge.softuni.bg/Contests/Practice/Index/2210#6\n## https://judge.softuni.bg/Contests/Practice/Index/2211#6\n## https://judge.softuni.bg/Contests/Practice/Index/2210#7\n## https://judge.softuni.bg/Contests/Practice/Index/2211#7\n## https://judge.softuni.bg/Contests/Practice/Index/2210#8\n## https://judge.softuni.bg/Contests/Practice/Index/2210#9\n## https://judge.softuni.bg/Contests/Practice/Index/2210#10\n## https://judge.softuni.bg/Contests/Practice/Index/2211#10\n## https://judge.softuni.bg/Contests/Practice/Index/2210#11\n## https://judge.softuni.bg/Contests/Practice/Index/2210#12\n## https://judge.softuni.bg/Contests/Practice/Index/2210#13\n## https://judge.softuni.bg/Contests/Practice/Index/2210#14\n## https://judge.softuni.bg/Contests/Practice/Index/2210#15\n## https://judge.softuni.bg/Contests/Practice/Index/2210#16\n## https://judge.softuni.bg/Contests/Practice/Index/2210#17\n## https://judge.softuni.bg/Contests/Practice/Index/2210#18\n## https://judge.softuni.bg/Contests/Practice/Index/2211#18\n## https://judge.softuni.bg/Contests/Practice/Index/2210#19\n## https://judge.softuni.bg/Contests/Practice/Index/2210#20\n## https://judge.softuni.bg/Contests/Practice/Index/2210#21\n## https://judge.softuni.bg/Contests/Practice/Index/2210#22\n## https://judge.softuni.bg/Contests/Practice/Index/2210#23\n## https://judge.softuni.bg/Contests/Practice/Index/2210#24\n## https://judge.softuni.bg/Contests/Practice/Index/2210#25\n## https://judge.softuni.bg/Contests/Practice/Index/2210#26\n## https://judge.softuni.bg/Contests/Practice/Index/2210#27\n## https://judge.softuni.bg/Contests/Practice/Index/2210#28\n## https://judge.softuni.bg/Contests/Practice/Index/2210#29\n## https://judge.softuni.bg/Contests/Practice/Index/2210#30\n## https://judge.softuni.bg/Contests/Practice/Index/2210#31\n## https://judge.softuni.bg/Contests/Practice/Index/2210#32\n## https://judge.softuni.bg/Contests/Practice/Index/2210#33\n## https://judge.softuni.bg/Contests/Practice/Index/2210#34\n## https://judge.softuni.bg/Contests/Practice/Index/2210#35\n## https://judge.softuni.bg/Contests/Practice/Index/2210#36\n## https://judge.softuni.bg/Contests/Practice/Index/2210#37\n## https://judge.softuni.bg/Contests/Practice/Index/2210#38\n## https://judge.softuni.bg/Contests/Practice/Index/2210#39\n## https://judge.softuni.bg/Contests/Practice/Index/2210#40\n## https://judge.softuni.bg/Contests/Practice/Index/2210#41\n## https://judge.softuni.bg/Contests/Practice/Index/2210#42\n## https://judge.softuni.bg/Contests/Practice/Index/2210#43\n## https://judge.softuni.bg/Contests/Practice/Index/2210#44\n## https://judge.softuni.bg/Contests/Practice/Index/2210#45\n## https://judge.softuni.bg/Contests/Practice/Index/2210#46\n## https://judge.softuni.bg/Contests/Practice/Index/2210#47\n## https://judge.softuni.bg/Contests/Practice/Index/2210#48\n## https://judge.softuni.bg/Contests/Practice/Index/2210#49\n## https://judge.softuni.bg/Contests/Practice/Index/2210#50\n## https://judge.softuni.bg/Contests/Practice/Index/2210#51"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"3\\n4 2 4 1\") == \"No\"\nassert solution(\"5\\n1 2 3 4 5\") == \"No\"\n"
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('5 4\\n1 2\\n2 4\\n3 6\\n1 7') == '-1'\nassert solution('4 3\\n3 5\\n2 5\\n5 2') == '702'\nassert solution('5 2\\n3 4\\n5 2\\n2 4') == '-1'\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"8 5\") == \"1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"702\"\nassert solution(\"15 15\") == \"-1\"\nassert solution(\"3 3\") == \"702\"\nassert solution(\"13 13\") == \"702\"\nassert solution(\"-1 -1\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"4 7\") == \"702\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"702\""
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 2\") == \"702\"\nassert solution(\"-1 -2\") == \"-1\""
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"4 0\") == \"1\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"6 4\") == \"-1\"\n\n---Submission---\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"702\"\n"
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"702\"\nassert solution(\"1 3\") == \"702\"\nassert solution(\"2 3\") == \"703\"\nassert solution(\"3 3\") == \"703\"\nassert solution(\"10 10\") == \"15\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 1\n2\n\"\"\") == \"9\"\nassert solution(\"\"\"1 2\n3\n\"\"\") == \"9\"\nassert solution(\"\"\"10 1\n2\n\"\"\") == \"18\"\nassert solution(\"\"\"1 3\n5\n\"\"\") == \"6\""
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"9\""
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '9'"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1\") == \"3\"\nassert solution(\"4 4\") == \"10\"\nassert solution(\"5 5\") == \"30\""
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '9'"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"4 5\") == \"20\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"9\", solution(\"1 2\")\nassert solution(\"5 2\") == \"20\", solution(\"5 2\")\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '9'\n"
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '9'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '-2'\nassert solution('-10') == '-1011'\nassert solution('-9') == '-1011'\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-7\") == \"1011\"\nassert solution(\"-5\") == \"1011\"\nassert solution(\"-3\") == \"1011\"\nassert solution(\"-1\") == \"1011\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-9\") == \"1011\"\nprint(solution(input()))"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-8\") == \"1010\"\nassert solution(\"-7\") == \"1010\"\nassert solution(\"-6\") == \"100\"\nassert solution(\"-5\") == \"1\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1011'"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-9') == '1011', \"Wrong\"\n\"\"\"\nimport unittest"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1011\"\nassert solution(input(\"\")) == \"0\"\n\n------------------\nx = int(input())"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"-8\") == \"8\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-2\") == \"-11\"\nassert solution(\"-8\") == \"-8\"\nassert solution(\"-10\") == \"-10\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-1\") == \"11\"\nassert solution(\"10\") == \"1011\"\nassert solution(\"-11\") == \"11\"\nassert solution(\"-1101\") == \"1101\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n4 9\\n2 4\") == \"12\"\nassert solution(\"4 5\\n1 2\\n1 3\") == \"12\"\nassert solution(\"1 5\\n5 3\") == \"10\"\nassert solution(\"1 10\\n1 2\\n1 3\") == \"15\"\nassert solution(\"4 3\\n1 2\\n1 3\") == \"15\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '12'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == '11'\nassert solution('''\n3 3\n1 2\n2 3\n''') == '8'\nassert solution('''\n2 1\n1 2\n''') == '4'"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"100 100\") == \"200\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1'\nassert solution('3 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '12'\nassert solution('4 9') == '16'"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 5') == '12'"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '12'\n"
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '12'"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n10 4 8 7 3''') == '2'\nassert solution('''3\n12 13 14''') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\""
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('6') == '2'"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 4 8 7 3\n''') == '2'\nassert solution('''\n5\n4 7 8 10\n''') == '1'\nassert solution('''\n5\n10 4 8 7 3\n''') == '1'\nassert solution('''\n10\n10 9 8 7 6 5 4 3 2 1\n''') == '1'\nassert solution('''\n9\n10 9 8 7 6 5 4 3 2 1\n''') == '1'\n"
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n5 4 8 7 3\n''') == '2'\nassert solution('''\n1\n2 2 2 2 2\n''') == '4'\nassert solution('''\n10\n10 4 8 7 3\n''') == '5'\nassert solution('''\n10\n1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 2 4 5\\n') == '1'\nassert solution('5 3\\n1 2 3 4 5\\n') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\nprint('YOUR CODE SUCCESSFUL! TASK ACCOMPLISHED!')"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution(\n'''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution(\n'''\n5 3\n1 2 3 3 3\n''') == '0'\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0'\nassert solution('''\n5 3\n1 2 3 4 5\n1 2 3 4 5\n''') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5\n1 2 2 4 2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n7 5\n3 3 2 1 1 1 3\n\"\"\") == \"4\""
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 2') == '1'\nassert solution('4 1') == '2'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 2 4 2 3') == '4'\nassert solution('6\\n1 2 2 4 2 3') == '3'\nassert solution('6\\n1 2 2 4 2 3') == '3'\nassert solution('6\\n1 2 2 4 2 3') == '3'\nassert solution('6\\n1 2 2 4 2 3') == '4'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"3\"\nassert solution(\"7 5\") == \"4\""
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 3 2 1\n''') == '1'\n"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"1 2 2 4 2 3\\n\"\n) == \"3\""
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '1000'\nassert solution('''\n7\n3 1 6\n1 1 4\n1 1000000000 42\n1 1000000000 12\n''') == '12'\nassert solution('''\n3\n4 5 1\n8 5 2\n10 5 3\n''') == '10'\nassert solution('''\n6\n5 5 1\n5 5 2\n5 5 3\n4 5 2\n3 5 4\n5 5 3\n''') == '5'\nassert solution('''\n3\n4 5 1\n5 5 2\n5 5 3\n''') == '4'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '9000'\nassert solution('5') == '9000'\nassert solution('4') == '10000'\nassert solution('3') == '9000'\nassert solution('2') == '8000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n') == '10'\nassert solution('5\\n1 10 4\\n8 4 2\\n3 5 8\\n2 3 10\\n1 1 1\\n1 1 1\\n') == '7'\nassert solution('2\\n1 10 4\\n8 4 2\\n3 5 8\\n2 3 10\\n1 1 1\\n1 1 1\\n') == '1'\nassert solution('0\\n0 0 0\\n0 0 0\\n') == '0'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n5 1 3\n5 3 2\n1 1000 1\n1000000000000 42 88\n''') == '1000'\nassert solution('''3\n2 3 2\n5 3 2\n1 1000 1\n1000000000000 42 88\n''') == '42000000000000'\nassert solution('''6\n6 1 6\n6 2 2\n1 10001 1000\n1000000000000 42 88\n1000000000 1000\n1000000000000 42 88\n''') == '1000000000000'\nassert solution('''10\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n1000000000000 42 88\n''') == '1000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n\"\"\") == \"1000\"\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 1\n1 100 100\n1 100 10000\n10 1 2\n2 1 2\n3 1 2\n1 1 1\n''') == '10'\nassert solution('''\n2 1 2\n1 1 1\n3 1 2\n1 1 1\n''') == '1000'\nassert solution('''\n2 2 2\n1 1 1\n3 1 2\n1 1 1\n''') == '32000000000000'\nassert solution('''\n4 3 2\n1 1 1\n2 1 2\n3 1 2\n1 1 1\n''') == '42000000000000'\n"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"10\\n9\\n1000\\n42000000000000\""
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\\n') == '10 9 2000000000000'"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n7 3\n1 1\n1 1000000000''') == '9'\nassert solution('''\n2\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88''') == '42000000000000'\nassert solution('''\n1\n1000000000''') == '-1'"
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 2\\n2 1 4\\n1') == '2\\n1\\n3\\n'"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '2'\nassert solution('1 3') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('2 4') == '1'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '2'\nassert solution('3 6') == '2'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"1 1\") == \"0\"\n\n-------------------------------------------------------------\n---Other Solutions---"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"10 10\") == \"1\"\n\"\"\"\n\nfrom collections import deque\n\nn, x = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\ndq = deque(s)\n\ncnt = 0\nwhile dq:\n    if dq[0] <= x:\n        cnt += 1\n    dq.popleft()\n    dq.append(dq.popleft())\n\nprint(cnt)"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"1\"\nassert solution(\"3 6\") == \"2\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6') == '2'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 6\",\n    \"3 4 5\",\n) == \"2\"\n\nassert solution(\n    \"5 2\",\n    \"3 4 5 6 7\",\n) == \"5\"\n\nassert solution(\n    \"4 0\",\n    \"3 4 5 6 7\",\n) == \"1\"\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\n1 3\n1 2\n1 4\n1 5\n''') == '2'\nassert solution('''\n2 2\n1 2\n1 3\n1 2\n''') == '1'\nassert solution('''\n1 1\n1 2\n1 3\n''') == '1'\n"
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 1, 1]) == 1\nassert solution([1, 1, 2]) == 1\nassert solution([1, 2, 1]) == 2\nassert solution([1, 2, 2]) == 2\nassert solution([1, 2, 3]) == 3\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'No'\nassert solution('4') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"Yes\"\nassert solution(\"2\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"3\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"No\"\nassert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nhoge\\nenglish\\nevel\\n\") == \"Yes\"\nassert solution(\"2\\nhoge\\nenglish\\nevel\\n\") == \"No\"\nassert solution(\"3\\nhoge\\nenglish\\nevel\\n\") == \"No\"\nassert solution(\"4\\nhoge\\nenglish\\nevel\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'No'\nassert solution('''5\nhoge\nenglish\nhoge\nenigma\nenigma''') == 'Yes'"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('2') == 'No'\nassert solution('4') == 'No'\n\n'''\n\nimport sys\n\nsys.setrecursionlimit(100000)\n\n\nclass Solution:\n    def shiritori(self, n: int, *words) -> str:\n        list_w = []\n        for i in words:\n            list_w.append(i[::-1])\n        result = []\n        for i in list_w:\n            for j in i:\n                if j in result:\n                    break\n            else:\n                result.append(i[0])\n        return 'Yes' if len(result) == n else 'No'\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n\") == \"No\"\nassert solution(\"4\\nhoge\\neenglish\\nhoge\\neing\\n\") == \"Yes\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nhoge\\negg\\nhoge\\nenigma\") == \"No\"\n"
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"6 4\") == \"8\"\nassert solution(\"9 10\") == \"12\"\nassert solution(\"15 8\") == \"18\"\nassert solution(\"3 5\") == \"4\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 3 1\") == \"3\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '6'\nassert solution('2 3') == '7'\nassert solution('3 3') == '9'\nassert solution('4 3') == '10'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"10 3\") == \"18\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '3'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"5 2\") == \"12\"\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '6'\nassert solution('2 2') == '2'\nassert solution('1 2') == '2'\nassert solution('2 4') == '4'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 2') == '7'\nassert solution('4 2') == '8'\nassert solution('5 2') == '9'\nassert solution('7 2') == '11'\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''sardine''') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"xxxxxxx\"\n\n\n'''\nimport re\nimport sys\n\nS = input()\n\nprint(re.sub('.', 'x', S))\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\"\"\""
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n## Version 2 - Using single line code"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nprint(solution(input()))"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('12345') == '12345'\nassert solution('abcd') == 'abcd'\nassert solution('abc') == 'abc'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n\n\"\"\"\n"
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('sardine') == 'xxxxxxx'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"4\") == \"No\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('100') == 'No'"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"No\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"8\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"10\\n1 2 1 1 1 1 2 1 1\") == \"Yes\"\nassert solution(\"3\\n1 1 1\") == \"No\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('4\\n3\\n2\\n1\\n3') == 'No'\nassert solution('5\\n1\\n3\\n2\\n4') == 'Yes'\nassert solution('5\\n1\\n2\\n3\\n4') == 'No'\nassert solution('5\\n1\\n1\\n3\\n2') == 'Yes'\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 1 1 3\") == \"Yes\"\nassert solution(\"3\\n1 2 1 2 3\") == \"No\""
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nprint(solution(input()))\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 1\\n\") == \"Yes\"\nassert solution(\"3\\n1 2 1\\n\") == \"No\"\nassert solution(\"3\\n1 2 1\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"No\"\n"
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n1 2 1 1 3\"\"\") == \"Yes\"\nassert solution(\"\"\"5\n1 2 3 4 1\"\"\") == \"No\"\nassert solution(\"\"\"6\n2 4 6 4 4 1\"\"\") == \"Yes\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == '1'\nsys.stdin = orig_stdin\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '0'"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '2'\n\"\"\""
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2''') == '1'\nassert solution('''3 2 -10\n1 2 3\n3 2 1\n1 2 2''') == '2'\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"2 2 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"2 1 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\", \"Empty input\"\nassert solution(\"1 2 3\") == \"1\", \"One code\"\nassert solution(\"1 2 3\") == \"2\", \"Two codes\"\nassert solution(\"1 2 3\") == \"3\", \"Two codes\"\nassert solution(\"1 2 3\") == \"3\", \"Three codes\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 4 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2, -10], [1, 2, 3], 1) == '1'\nassert solution([1, 2, 3], [-10, 1, 2], 1) == '1'\nassert solution([3, 2, -10], [-10, 1, 2], 1) == '0'\nassert solution([1, 2, 3], [2, 3, 5], -2) == '0'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1000\") == \"100\"\nassert solution(\"1\\n999\") == \"1\"\nassert solution(\"2\\n1000\") == \"1\"\nassert solution(\"3\\n1000\") == \"2\"\nassert solution(\"4\\n1000\") == \"3\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"10\"\nassert solution(\"21\") == \"11\"\nassert solution(\"22\") == \"11\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"100\"\n\"\"\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == '100'\n\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '101'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100') == '1'\nassert solution('1234') == '4'\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1000\") == \"10\"\n"
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"100\"\n\"\"\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 5\n7 4\n3 2\n''') == '9'\nassert solution('''\n3\n1 1\n0 2\n''') == '2'\nassert solution('''\n2\n2 2\n0 0\n''') == '4'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 5 2\\n4 5') == '9'\nassert solution('2\\n3 5 2\\n4 5') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'\nassert solution('''2\n2 3 1\n3 1''') == '2'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 5 2\\n4 5\") == \"9\"\nassert solution(\"5\\n4 3 5 1 2\\n3 3\") == \"6\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('5') == '18'\nassert solution('5') == '18'\nassert solution('10') == '34'\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3 5 2\") == \"9\"\nassert solution(\"4 5\") == \"4\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"2 3 10 20\") == \"No War\"\nassert solution(\"5 5 1 2 3\") == \"War\"\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('1 1 1 1') == 'No War'\nassert solution('3 1 1 2') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('1 1 10 1') == 'War'\n\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 3 6') == 'War'\nassert solution('4 4 4') == 'War'\nassert solution('1 2 4') == 'War'\nassert solution('3 4 6') == 'No War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 20 10') == 'War'\nassert solution('2 2 5 4') == 'War'"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 15 20') == 'War'\nassert solution('3 2 13 20') == 'No War'\n\"\"\"\nimport math"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 -20') == 'War'\nassert solution('3 2 10 20 -20') == 'No War'\nassert solution('3 2 10 -20 -20') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'War'\nassert solution('3 2 10 20') == 'War'\n"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"4 2 30 10\") == \"No War\"\n\"\"\"\n\nfrom math import ceil\n\nn_empire, m_empire, x_max, y_max = map(int, input().split())\n\nx_cities = list(map(int, input().split()))\ny_cities = list(map(int, input().split()))\n\nx_cities.sort()\ny_cities.sort()\n\nx_min = x_cities[0]\nx_max = x_cities[-1]\n\ny_min = y_cities[0]\ny_max = y_cities[-1]"
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('1 10 20') == 'No War'\nassert solution('1 10 20') == 'No War'\nassert solution('4 10 20') == 'War'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n5\\n\") == \"6\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3\\n') == '6'\nassert solution('2\\n1\\n') == '3'\nassert solution('2\\n2\\n') == '2'\nassert solution('5\\n1\\n') == '4'\nassert solution('5\\n2\\n') == '3'\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"6\""
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"2\") == \"6\"\nassert solution(\"2\") == \"6\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2\n3\n''') == '6'\nassert solution('''\n4\n5\n7\n''') == '10'\n'''\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"3\\n3\\n3\") == \"3\"\nassert solution(\"5\\n10\\n20\\n30\\n40\") == \"50\"\nassert solution(\"3\\n4\\n10\") == \"10\"\nassert solution(\"1\\n1\\n2\") == \"2\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"9\"\n\"\"\""
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n3\") == \"6\"\nassert solution(\"2\\n1\\n1\") == \"0\"\nassert solution(\"2\\n3\\n3\") == \"0\"\nassert solution(\"2\\n5\\n7\") == \"5\"\nassert solution(\"2\\n6\\n8\") == \"2\"\n"
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n3') == '6'\nassert solution('2\\n2\\n5') == '8'\nassert solution('3\\n5\\n10') == '15'\nassert solution('4\\n4\\n9') == '9'\nassert solution('2\\n3\\n2') == '6'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('5') == '0'\nassert solution('4') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n1 2\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n3 3 2 2 3\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n2 2 2\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n2 2 2 2 2\n\n\"\"\") == \"2\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 1 1 2\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"15\\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '0'\nassert solution('2\\n3\\n4') == '1'\nassert solution('3\\n4\\n5') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3') == '0'\nassert solution('4\\n1 1 1 2') == '0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '0'\n"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 3 4') == '0'\nassert solution('1\\n1') == '0'\nassert solution('5\\n1 1 2 3 4') == '0'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2') == '1'"
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3\n\"\"\"\n) == \"0\""
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\n\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == '2'\n\nassert solution('''3 4\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == '0'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '6'\nassert solution('3 3') == '0'\nassert solution('4 4') == '0'"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6'\nassert solution() == '0'\nassert solution() == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\nOutput\n0''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\nOutput\n2''') == '2'\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"4 4\") == \"0\"\n"
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '0'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"2\") == \"99\""
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"5\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5 10 2 3 14 5\n\n''') == '5'\nassert solution('''\n2\n1 100\n\n''') == '99'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == input_1\nassert solution(input_2) == input_2"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 2 1 1\n''') == '3'\nassert solution('''\n3\n2 2 1\n''') == '1'"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '99'\nassert solution('6') == '5'\nassert solution('1') == '100'\n"
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution(\"1\") == '0'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '0'\nassert solution(\"4\") == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == '2'\nassert solution('''6\n0 1 0 1 1 0 1\n''') == '3'\nassert solution('''7\n1 0 1 1 1 0 1\n''') == '3'\nassert solution('''3\n0 0 0\n''') == '0'\nassert solution('''4\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0 1\\n') == '3'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '0'\nassert solution('3\\n0 0 0\\n') == '0'\nassert solution('3\\n0 0 0\\n') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n1 0 1 0 1\n''') == '2'\n\nassert solution(\n'''6\n0 1 0 1 1 0\n''') == '3'\n\nassert solution(\n'''7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution(\n'''3\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 1 0 1\\n') == '2'\nassert solution('6\\n0 1 0 1 1 0 1\\n') == '3'\nassert solution('7\\n1 0 1 1 1 0 1\\n') == '0'\nassert solution('3\\n0 0 0\\n') == '0'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == '2'\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == '3'\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == '0'\n"
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5\n1 0 1 0 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n6\n0 1 0 1 1 0\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n7\n1 0 1 1 1 0 1\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n3\n0 0 0\n\"\"\") == \"0\""
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('5') == '2'\nassert solution('4') == '3'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['1','2','3','4','5','6','7']) == '0'\nassert solution(['7','4','2','1']) == '7'\nassert solution(['4','3','2','1']) == '0'\nassert solution(['1','2','3','4']) == '4'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2') == '2'\nassert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('15') == '15'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '0'\nassert solution(3) == '0'\nassert solution(4) == '0'\nassert solution(5) == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('11') == '1'\nassert solution('110101') == '4'\nassert solution('11010101') == '5'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '1'\nprint(solution(''))\nprint(solution('1'))\nprint(solution('2'))\nprint(solution('3'))\nprint(solution('4'))\nprint(solution('5'))\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\ncamembert soft\ncheese soft\nfeta soft\ngoat soft\nmuenster soft\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2\nbrie hard\ncheese hard\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n9\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\"\"\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nbrie soft\\ncameart soft\\nfeta soft\\ngolden soft\\nmuenster soft\\n\") == \"3\"\nassert solution(\"9\\nbrie soft\\ncameart soft\\nfeta soft\\ngolden soft\\nmuenster soft\\n\") == \"5\"\nassert solution(\"6\\nparmel hard\\nedam hard\\nemmental hard\\ngould hard\\ngruyere hard\\nasiago hard\\n\") == \"4\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == \"3\"\nassert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == \"4\"\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == \"5\"\nassert solution('''7\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == \"6\"\n\n'''\n\nimport math"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '3'\nassert solution('9') == '6'\nassert solution('4') == '6'\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\n\nassert solution('''\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'\n\nassert solution('''\ngouda hard\nswiss hard\n''') == '3'\n\nassert solution('''\ngouda hard\nswiss hard\n''') == '4'\n\nassert solution('''\nparmesan hard\nmuenster hard\n''') == '4'"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nbrie soft\\necamembert soft\\nfeta soft\\ngouda soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngougere hard\\nswiss hard\\n\") == \"3\"\nassert solution(\"10\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\\n\") == \"4\"\nassert solution(\"2\\nbrie soft\\nfeta hard\\ngouda hard\\n\") == \"0\"\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nfeta hard\\nemal hard\\ncheese soft\\nfeta hard\\nemal hard\\ncheese hard\\n') == '3'\nassert solution('6\\ngouda hard\\nemal hard\\ncheese soft\\ngouda hard\\nemal hard\\ncheese hard\\n') == '4'\nassert solution('9\\nbrie hard\\nemal hard\\ncheese hard\\nfeta hard\\ngouda hard\\n') == '0'\n\n'''\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\nbrie hard\ncheese soft\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\nfeta hard\ngoat hard\nmuenster hard\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n\"\"\") == \"0\""
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n"
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"9\") == \"3\"\nassert solution(\"2\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0 0 1 2'\nassert solution('5') == '0 0 0 1 2 3'\nassert solution('10') == '5 4 3 2 1 0 0'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 2 5\\n\"\n    \"3 4 6\\n\"\n    ) == \"1 0 0 2 4\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311332 33333435363738394041 42 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 2015 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 2015 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 2015 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 2015 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 2015 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112113114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 2015 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\n\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1 0 0 2 0 1 4\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == \"1 0 0 2\"\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == \"0 0 0 1 0 2 4\"\n\nimport itertools\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0 0 0 1 0 2'\nassert solution('7') == '0 0 0 1 0 2 4'"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0 0 0 1 0 2 4\""
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1 0 0 2'\n"
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2'\nassert solution('''7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0', \"Wrong!\"\nassert solution('1') == '0', \"Wrong!\"\nassert solution('0') == '0', \"Wrong!\"\nassert solution('1') == '1', \"Wrong!\"\n\"\"\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0') == '0', \"Wrong result\"\nassert solution('1') == '1', \"Wrong result\"\nassert solution('1\\n1') == '1', \"Wrong result\"\nassert solution('0\\n1') == '0', \"Wrong result\"\nassert solution('0\\n0') == '1', \"Wrong result\"\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\n\"\"\"\nimport itertools"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0\n1\n1\n0\n''') == '0'\nassert solution('''\n1\n1\n1\n0\n''') == '1'\nassert solution('''\n0\n0\n0\n0\n''') == '0'\nassert solution('''\n0\n0\n0\n0\n''') == '0'\nassert solution('''\n0\n1\n1\n0\n''') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\n    \"1\",\n    \"0\",\n    \"1\",\n    \"0\",\n]) == \"1\"\n\nassert solution([\n    \"0\",\n    \"1\",\n    \"1\",\n    \"0\",\n]) == \"0\"\n\nassert solution([\n    \"1\",\n    \"1\",\n    \"1\",\n    \"0\",\n]) == \"0\"\n\nassert solution([\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\",\n]) == \"0\"\n\nassert solution([\n    \"1\",\n    \"1\",\n    \"1\",\n    \"1\",\n]) == \"1\""
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1\\n1') == '1'\nassert solution('0\\n1') == '1'\nassert solution('1\\n0') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([0, 1, 1, 0]) == \"0\", \"Wrong Answer (not 0)\"\nassert solution([0, 0, 1, 0]) == \"1\", \"Wrong Answer (not 1)\"\nassert solution([0, 1, 0, 0]) == \"0\", \"Wrong Answer (not 0)\"\nassert solution([1, 1, 1, 1]) == \"1\", \"Wrong Answer (not 1)\"\nassert solution([0, 0, 0, 0]) == \"0\", \"Wrong Answer (not 0)\"\n\"\"\""
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__INPUT__) == __EXPECTED__\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 15 80') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 1 2') == 'No'\nassert solution('1 2 1') == 'Yes'\nassert solution('1 2 2') == 'Yes'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 12 50') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 10 80') == 'No'"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes'\nassert solution('5 5 5') == 'Yes'\nassert solution('100 20 20') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == 'Yes'\nassert solution('1\\n4\\n1\\n') == 'No'\nassert solution('1\\n5\\n1\\n') == 'Yes'\nassert solution('1\\n10\\n1\\n') == 'Yes'\nassert solution('1\\n1000\\n1\\n') == 'No'"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 15 80') == 'Yes', 'Test 1 failed'\nassert solution('1000 100 80') == 'No', 'Test 2 failed'\nassert solution('1000 10 20') == 'Yes', 'Test 3 failed'\nassert solution('1000 100 80') == 'No', 'Test 4 failed'\nassert solution('1000 100 80') == 'Yes', 'Test 5 failed'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1250 50 80') == 'No'\nassert solution('100 50 10') == 'Yes'\nassert solution('100 50 0') == 'Yes'\nassert solution('100 50 100') == 'No'\n"
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'Yes'\nassert solution('3 2 1') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\nassert solution(\"35 56 75\\n28 48 93\\n62 70 87\\n47 84 95\\n74 81 65\\n72 89 57\\n92 92 67\\n71 54 65\\n28 79 74\\n34 26 48\\n\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n90\\n68\\n11\\n\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n90\\n68\\n11\\n84\\n\") == \"Yes\"\n\n\"\"\"\nfrom itertools import chain"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\") == \"No\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'Yes'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'No'\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\n"
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7 89\\n7 87\\n79 72\\n30 74\\n') == 'Yes'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '-1'\nassert solution('4 1') == '30'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == '3'\nassert solution(\"1 1\") == '-1'\nassert solution(\"3 3\") == '-1'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"41 2\") == \"30\"\nassert solution(\"41 1\") == \"41\"\nassert solution(\"41 2\") == \"41\""
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '30'\nassert solution('4 1') == '-1'\nassert solution('41 2') == '30'\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '30'\nassert solution('40 2') == '-1'"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"30\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"0 10\") == \"10\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"0 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"4 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 5') == '5'\nassert solution('2 5') == '5'\nassert solution('3 5') == '5'\nassert solution('4 5') == '5'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 5\") == \"5\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 4\") == \"4\"\n\n##Test 5##"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 3\") == \"3\"\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 4') == '0'\nassert solution('1 5') == '5'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0 5\n''') == '5'\nassert solution('''0 2\n''') == '2'\nassert solution('''1 3\n''') == '3'\nassert solution('''1 5\n''') == '5'\nassert solution('''2 3\n''') == '3'\n"
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 0') == '1'\nassert solution('2 1') == '2'\nassert solution('2 2') == '2'\nassert solution('2 3') == '3'\nassert solution('2 4') == '4'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('1\\n2 3') == '1'\nassert solution('3\\n7 6 8') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('8') == '2'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1\n1\n''') == '2'\nassert solution('''2\n1\n2\n''') == '1'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 6 8\") == \"2\"\nassert solution(\"3\\n2 3 4\") == \"1\"\nassert solution(\"3\\n2 3 4\") == \"1\"\n\"\"\""
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('6\\n2 7 3 8') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 1\n''') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3 1 2\", \"Test 1 Failed\"\nassert solution(\"4\") == \"4 3 2 1\", \"Test 2 Failed\"\nassert solution(\"5\") == \"5 4 3 2 1\", \"Test 3 Failed\""
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3 1 2\""
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\n\n---------------------------------------------\n\n'''"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3 1\n''') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 3 1') == '3 1 2'\nassert solution('10\\n3 5 4 7 1 2 6 8 9 10') == '7 8 9 10 1 2 3 5 6 4'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '3 1 2'\n"
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 1\\n') == '3 1 2'"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 8\") == \"0\"\nassert solution(\"20 20\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"100 12345\") == \"123485\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 7 100\") == \"9\""
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 8 10\") == \"0\"\nassert solution(\"1 1 100\") == \"0\"\nassert solution(\"0 10 100\") == \"0\"\nassert solution(\"1 1 10\") == \"0\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 10 1') == '0'\nassert solution('10 10 1 2') == '0'\nassert solution('10 10 1 2 3') == '0'\nassert solution('10 10 1 2 3 4') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 7 100') == '9'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 8 100\") == \"0\"\nassert solution(\"1 2 3\") == \"9\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 7 100') == '9'"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 2 3') == '0'\n\nNote: If no integer can be bought, print 0.\n\"\"\"\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 9 100') == '0'\n"
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('10 1 2 3 4 5 6 7 8 9') == '0'\nassert solution('1000000000 10000 1 2 3 4 5 6 7 8 9') == '9'\nassert solution('100000000000000 10 1 2 3 4 5 6 7 8 9') == '0'"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 150, 150, 100, 200]) == '2'\nassert solution([10, 30, 50, 10, 20]) == '3'\nassert solution([4, 100, 150, 200, 300, 500, 1000]) == '5'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 150') == '2'\nassert solution('4 200') == '2'\nassert solution('4 300') == '3'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n1 2 3 4') == '2'\nassert solution('4\\n1\\n1 2 3 4') == '4'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 150\") == \"2\"\nassert solution(\"2 0\") == \"0\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'\nassert solution('3 6\\n300 310 600') == '1'\nassert solution('4 5\\n5 5 5 5') == '3'\nassert solution('5 5\\n4 4 4 4 4') == '3'\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '3'\nassert solution('1 2 3') == '3'"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\n"
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\") == \"Yes\""
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n5 4 2 1\\n\") == \"Yes\"\nassert solution(\"3 2\\n3 2 1 1\\n\") == \"No\"\n\"\"\"\n\nN, M = map(int, stdin.readline().strip().split())\nvotes = list(map(int, stdin.readline().strip().split()))\nvotes_sorted = sorted(votes)\n\nn = len(votes)\ncount_less_than_4M = 0\ncount_more_than_4M = 0\n\nfor i in range(n):\n    if i == 0:\n        count_less_than_4M += 1\n        count_more_than_4M = 0\n        continue\n    if votes_sorted[i] == votes_sorted[i - 1]:\n        count_more_than_4M += 1\n    else:\n        if (count_less_than_4M + count_more_than_4M) * 4 > M:\n            print(\"No\")\n            break\n        else:\n            count_less_than_4M = 1\n            count_more_than_4M = 0"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'No'\nassert solution('4 1') == 'Yes'"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\""
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1\\n5 4 2 1\\n') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'No'\nassert solution('3 2') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"Yes\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'No'\nassert solution('6 10') == 'Yes'\n"
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\""
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n#...#\\n#...#\\n#...#\") == \"5\"\nassert solution(\"3 3 3\\n##.#\\n#.##\\n##.#\\n##.#\") == \"5\"\nassert solution(\"4 4 4\\n####\\n#.##\\n#.##\\n##.#\\n##.#\") == \"4\"\nassert solution(\"4 4 4\\n#.#.#\\n##.#\\n##.#\\n#.#.#\") == \"4\"\nassert solution(\"3 3 3\\n###\\n###\\n###\\n###\") == \"4\""
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 2\n..#\n###\n''') == '5'\nassert solution('''2 3 3\n.##.\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 2\n..#\n###''') == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('4 5 3\\n....\\n###') == '6'\nassert solution('10 20 10\\n......\\n##...') == '8'\nassert solution('5 5 6\\n#.##.\\n###...') == '10'\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'\n\"\"\""
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"1 1\") == \"4\"\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 2') == '5'\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4 2\n"
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"2 4 2\") == \"5\"\nassert solution(\"2 5 2\") == \"6\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_line) == \"2\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 20') == '2'\nassert solution('20 20') == '2'\n\"\"\"\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2020 2040') == '2'\n\"\"\""
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2020 2040') == '2'"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2020 2040''') == '2'\nassert solution('''2020 2041''') == '3'\n\n'''\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 5\\n20 30\\n10 20\\n15 20\\n20 20\\n') == '2'\n"
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2020 2040') == '2'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'AC'\n\n\"\"\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('CCAAACCCC') == 'WA'\nassert solution('AABABBAABA') == 'AC'\nassert solution('TTTTTTTTTT') == 'WA'\nassert solution('AAABBAABB') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"AC\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('Coder') == 'WA'\nassert solution('Nonsense') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'AC'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder1\") == \"AC\"\nassert solution(\"AtCoder2\") == \"AC\"\nassert solution(\"AtCoder3\") == \"AC\"\nassert solution(\"AtCoder4\") == \"AC\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"AC\"\nassert solution(\"ABCBDAB\") == \"WA\"\nassert solution(\"BDAB\") == \"AC\"\nassert solution(\"BD\") == \"WA\"\nassert solution(\"BBA\") == \"WA\"\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('ACer') == 'AC'\nassert solution('R1n1T') == 'AC'\nassert solution('Atcoder') == 'AC'\nassert solution('AtCoder2') == 'WA'\n"
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"Xda\") == \"WA\"\nassert solution(\"Aa\") == \"AC\"\nassert solution(\"Atcoder\") == \"AC\"\n\"\"\""
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"ATCODER\") == \"WA\"\nassert solution(\"atcoder\") == \"AC\"\nassert solution(\"AtCoder0\") == \"AC\"\n\n=========================================\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1324\") == \"33333\"\nassert solution(\"1234\") == \"444444\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1324\") == \"33333\"\nassert solution(\"12214\") == \"22\"\nassert solution(\"1224\") == \"22\"\nassert solution(\"12\") == \"1\"\nassert solution(\"12\") == \"1\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1214') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1221\") == \"2\"\nassert solution(\"1234\") == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1214') == '2'\nassert solution('1324') == '3'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1324\") == \"1333224444\"\nassert solution(\"21214\") == \"2\"\nassert solution(\"234567\") == \"7\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"12214444\") == \"2\"\nassert solution(\"1222214444444444444444\") == \"2\"\nassert solution(\"1222222144444444444444444444444444444444444444444444444444444444444444444444\") == \"2\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1214\n4''') == '2'\nassert solution('''1234567890\n10''') == '7'\nassert solution('''1214\n4''') == '2'\nassert solution('''1324\n10''') == '7'\nassert solution('''123456789\n10''') == '7'\n"
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"23456\") == \"234\"\nassert solution(\"12345\") == \"1234\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"1234567890\") == \"1234567890\"\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"10 5 8 3 4 2 1\") == \"NO\""
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('2') == 'NO'\n'''\nimport itertools\n\nn = int(input())\np = list(map(int, input().split()))\n\nk = len(p)"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == 'YES'\nassert solution('5\\n2 3 4 1') == 'YES'\nassert solution('8\\n2 3 4 1 5 7 6') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('4\\n5 3 2 1 8') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\n\n'''"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('12') == 'YES'"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n5 2 3 4 1''') == 'YES'\n'''\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('10 2 3 4 1') == 'NO'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\n"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 2 3 4 1\"\n) == \"YES\"\n\nassert solution(\n    \"2 2 4 5 3\"\n) == \"NO\"\n\"\"\"\n\nfrom collections import deque\n\nn = int(input())\np = deque(map(int, input().split()))"
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"5 2 3 4 1 1\") == \"NO\""
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\""
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000000000000000000000000000000000') == '33'\nassert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2|0|1|9|201|81\") == \"2\"\nassert solution(\"201920181\") == \"4\"\nassert solution(\"2|0|1|9|201|81|11\") == \"4\"\nassert solution(\"\") == \"1\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3121') == 2\nassert solution('6') == 1\nassert solution('1000000000000000000000000000000000') == 33\nassert solution('201920181') == 4\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1\n1\n1\n2\n1\n2''') == '3'\nassert solution('''19\n1\n2\n1\n19\n1\n2''') == '1'\nassert solution('''1000000000000000000000000000000000\n201920181''') == '4'"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3121\n''') == '2'\nassert solution('''6\n''') == '1'\nassert solution('''1000000000000000000000000000000000\n''') == '33'\nassert solution('''201920181\n''') == '4'\nassert solution('''1000000000000000000000000000000000\n''') == '33'\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3''') == '2'\nassert solution('''3\n1 2 3\n2 3 4''') == '0'\nassert solution('''4\n1 2 3\n3 4 5\n7 8 9''') == '3'\nassert solution('''5\n0 0 0 0\n1 2 3\n4 5 6''') == '1'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3\\n\") == \"3\"\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 -1\\n-6 -12 6\\n\") == \"3\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"0\""
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution() == '0'\nassert solution() == '3'\nassert solution() == '1'\n\n'''"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '2'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '3'\nassert solution() == '0'\n"
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\n\n\"\"\"\n\na = list(map(int, stdin.split()))[1]\nb = list(map(int, stdin.split()))[2]"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\ncodeforces\ndodivthree\n''') == '5'\n\nassert solution('''7\nabaca?b\nzabbbcc\n''') == '6 5'\n\nassert solution('''9\nbambarbia\nhellocode\n''') == '0'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"7\") == \"6\"\nassert solution(\"9\") == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"11\") == \"1\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"7\") == \"6\"\nassert solution(\"9\") == \"0\"\nassert solution(\"10\") == \"6\"\nassert solution(\"?\") == \"10\"\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('8') == '0'\nassert solution('10') == '10'\nassert solution('9') == '10'\nassert solution('a') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '6'\nassert solution(input()) == '10'\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n\" +\n                \"codeforces\\n\" +\n                \"dodivthree\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"abaca?b\\n\" +\n                \"zabbbcc\\n\" +\n                \"\") == \"5\\n\" +\n                \"6 5\\n\" +\n                \"2 3\\n\" +\n                \"4 6\\n\" +\n                \"7 4\\n\" +\n                \"1 2\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"6 2\\n\" +\n                \"1 6\\n\" +\n                \"7 3\\n\" +\n                \"3 5\\n\" +\n                \"4 8\\n\" +\n                \"9 7\\n\" +\n                \"5 1\\n\" +\n                \"2 4\\n\" +\n                \"10 9\\n\" +\n                \"8 10\\n\" +\n                \"def solution(stdin: str) -> str:\\n\" +\n                \"pass\\n\\n\" +\n                \"assert solution(\\\"10\\n\" +\n                \"codeforces\\n\" +\n                \"dodivthree\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"abaca?b\\n\" +\n                \"zabbbcc\\n\" +\n                \"\\\") == \\\"5\\n\" +\n                \"6 5\\n\" +\n                \"2 3\\n\" +\n                \"4 6\\n\" +\n                \"7 4\\n\" +\n                \"1 2\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"6 2\\n\" +\n                \"1 6\\n\" +\n                \"7 3\\n\" +\n                \"3 5\\n\" +\n                \"4 8\\n\" +\n                \"9 7\\n\" +\n                \"5 1\\n\" +\n                \"2 4\\n\" +\n                \"10 9\\n\" +\n                \"8 10\\n\" +\n                \"def solution(stdin: str) -> str:\\n\" +\n                \"pass\\n\\n\" +\n                \"assert solution(\\\"10\\n\" +\n                \"codeforces\\n\" +\n                \"dodivthree\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"abaca?b\\n\" +\n                \"zabbbcc\\n\" +\n                \"\\\") == \\\"5\\n\" +\n                \"6 5\\n\" +\n                \"2 3\\n\" +\n                \"4 6\\n\" +\n                \"7 4\\n\" +\n                \"1 2\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"6 2\\n\" +\n                \"1 6\\n\" +\n                \"7 3\\n\" +\n                \"3 5\\n\" +\n                \"4 8\\n\" +\n                \"9 7\\n\" +\n                \"5 1\\n\" +\n                \"2 4\\n\" +\n                \"10 9\\n\" +\n                \"8 10\\n\" +\n                \"def solution(stdin: str) -> str:\\n\" +\n                \"pass\\n\\n\" +\n                \"assert solution(\\\"10\\n\" +\n                \"codeforces\\n\" +\n                \"dodivthree\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"abaca?b\\n\" +\n                \"zabbbcc\\n\" +\n                \"\\\") == \\\"5\\n\" +\n                \"6 5\\n\" +\n                \"2 3\\n\" +\n                \"4 6\\n\" +\n                \"7 4\\n\" +\n                \"1 2\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"6 2\\n\" +\n                \"1 6\\n\" +\n                \"7 3\\n\" +\n                \"3 5\\n\" +\n                \"4 8\\n\" +\n                \"9 7\\n\" +\n                \"5 1\\n\" +\n                \"2 4\\n\" +\n                \"10 9\\n\" +\n                \"8 10\\n\" +\n                \"def solution(stdin: str) -> str:\\n\" +\n                \"pass\\n\\n\" +\n                \"assert solution(\\\"10\\n\" +\n                \"codeforces\\n\" +\n                \"dodivthree\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"abaca?b\\n\" +\n                \"zabbbcc\\n\" +\n                \"\\\") == \\\"5\\n\" +\n                \"6 5\\n\" +\n                \"2 3\\n\" +\n                \"4 6\\n\" +\n                \"7 4\\n\" +\n                \"1 2\\n\" +\n                \"\\n\" +\n                \"10\\n\" +\n                \"6 2\\n\" +\n                \"1 6\\n\" +\n                \"7 3\\n\" +\n                \"3 5\\n\" +\n                \"4 8\\n\" +\n                \"9 7\\n\" +\n                \"5 1\\n\" +\n                \"2 4\\n\" +\n                \"10 9\\n\" +\n                \"8 10\\n\" +\n                \"def solution(stdin: str) -> str:\\n\" +\n                \"pass\\n\\n\" +\n"
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\ncodeforces\ndodivthree\n\"\"\") == \"5\"\n\nassert solution(\"\"\"7\nabaca?b\nzabbbcc\n\"\"\") == \"6 5\"\n\nassert solution(\"\"\"9\nbambarbia\nhellocode\n\"\"\") == \"0\"\n\nassert solution(\"\"\"10\ncode??????\n??????test\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"4 4 4 1 1\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('11') == '4 4 4 4 4'\nprint(solution(input()))\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"2 4\""
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"7\\n4 1 2 2 1 5 3\") == \"2 3\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"4 4 4 4 4 4\""
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 1\\n\") == \"4\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n\") == \"3 4\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n1 1 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n-2 4 -3 -1') == '2 4'"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1 1 1') == '3'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 4 4 1 1'\nassert solution('7\\n4 1 2 2 1 5 3') == '3'\nassert solution('4\\n0 0 0 0') == '4'\nassert solution('3\\n-1 -2 -3') == '2'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 4 4 4 4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n4 1 2 2 1 5 3\n''') == '3'\n\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4'\n\nassert solution('''\n4\n1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('4') == '4'"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '12'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n\n\"\"\") == \"7\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 2]) == 0\nassert solution([4, 2]) == 12\nassert solution([5, 2]) == 7"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7') == '7'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"7\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"0\"\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '6 11\\n'\n    '45 1 10 12 11 7\\n'\n) == '7'\n\nassert solution(\n    '4 2\\n'\n    '2 78 4 10\\n'\n) == '12'\n\nassert solution(\n    '5 2\\n'\n    '3 7 19 3 3\\n'\n) == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 11\n45 1 10 12 11 7\n''') == '7'\nassert solution('''\n4 2\n2 78 4 10\n''') == '12'\nassert solution('''\n5 2\n3 7 19 3 3\n''') == '0'\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n2 78 4 10\n''') == '12'\nassert solution('''5 2\n3 7 19 3 3\n''') == '0'\nassert solution('''6 11\n45 1 10 12 11 7\n''') == '7'"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == 7\n"
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\""
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3\n-1 -2 -3\n\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 5\n''') == '9'\nassert solution('''2\n0 1\n''') == '0'\nassert solution('''100\n0 1\n''') == '0'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 5\n\n''') == '9'\nprint('Test 1 Successful.')\n\nassert solution('''\n5\n1 2 5 3 4\n\n''') == '19'\nprint('Test 2 Successful.')\n\nassert solution('''\n5\n-1 -2 -3 -4 -5\n\n''') == '-1'\nprint('Test 3 Successful.')"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"9\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''3\n    2 5\n    '''\n    ) == '9'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\n-1 -2 -3 -4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n-1 -2 -3 -4 5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n8\n-1 -2 -3 -4 -5 -6 -7 -8\n\"\"\") == \"18\"\nassert solution(\"\"\"\n10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10\n\"\"\") == \"36\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '9'\nassert solution('10') == '19'\nassert solution('20') == '29'\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"2 5\\n\"\n    \"3 4\\n\"\n    \"2 5\\n\"\n    \"3 4\\n\"\n    \"3 6\\n\"\n) == \"9\"\n"
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '18'\nassert solution('10') == '19'\nassert solution('100') == '199'\n\n\"\"\""
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('5 2 2') == '12'\nassert solution('2 3 2') == '8'"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\"\"\") == \"110\"\nassert solution(\"\"\"5 4 3\n1 2 3 4 5\n1 2 3 4 5\n2 3 4 5 6\n2 3 4 5 6\n1 2 3 4 5\"\"\") == \"192\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n1 4 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\nassert solution('''\n1 3 3 100\n1 2 2 10\n2 3 2 10\n''') == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\""
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5 5 2\n    1 3 3 100\n    1 2 2 10\n    2 3 2 10\n    '''\n) == '110'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '100'\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"110\""
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('5 6 7 4') == '19'\nassert solution('10 20 10 20') == '200'"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 3\") == \"110\"\n"
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4 3\") == \"110\"\nassert solution(\"1 3 3 100\") == \"110\"\nassert solution(\"1 2 2 10\") == \"110\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 4 6 3\n''') == '5'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n5\\n1\\n2\\n4\\n\") == \"5\"\nassert solution(\"4\\n1 4 6 3\\n\") == \"5\"\nassert solution(\"4\\n1 4 6 3\\n\") == \"5\""
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 6 3') == '5'"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '1 2'\nassert solution('4\\n2 4 2 1') == '4'"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4 6 3') == '5'\nassert solution('3\\n1 2 3') == '3'\nassert solution('5\\n2 3 4 5 6') == '5'\nassert solution('1\\n5') == '5'\nassert solution('2\\n5') == '4'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '5'\nassert solution('2') == '1'\nassert solution('7') == '8'\nassert solution('-5') == '5'\nassert solution('3') == '0'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"5\"\nassert solution(\"10\\n7 9 5 3 1 5 8 7 6\\n\") == \"8\"\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4 6 3') == '5'\nassert solution('2 4 6 3') == '2'\nassert solution('3 4 6 3') == '5'\nassert solution('4 4 6 3') == '0'\nassert solution('5 4 6 3') == '1'\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 4 6 3\n''') == '5'\nassert solution('''3\n2 3 1\n''') == '2'\nassert solution('''5\n1 2 3 4 5\n''') == '1'\nassert solution('''3\n2 5 1\n''') == '3'\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"5\") == \"3.4545454546\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2.276142374\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"2.2761423749\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 0\n0 1\n\n\"\"\") == \"2.2761423749\""
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\") == \"2.2761423749\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.2761423749'"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n0 0\n1 0\n0 1\n\"\"\") == \"2.2761\""
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == \"2.2761423749\"\nassert solution('''5\n1 0\n2 0\n3 0\n4 0\n5 0\n''') == \"4.0\"\nassert solution('''5\n2 3\n3 3\n3 1\n4 2\n5 4\n''') == \"2.0\"\nassert solution('''4\n1 1\n1 2\n2 2\n3 3\n''') == \"1.5\"\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 1\n1 1\n\"\"\") == \"1.0\"\nassert solution(\"\"\"8 1\n0 1\n1 1\n0 1\n1 1\n0 1\n1 1\n0 1\n1 1\n\"\"\") == \"2.2761423\"\nprint(\"You passed all the tests!\")\n"
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2.2761423749\"\nassert solution(\"2\") == \"1.41421356237\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'\nassert solution('12 5') == '5'\nassert solution('12 6') == '6'\nassert solution('10 1') == '1'\nassert solution('100 2') == '2'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 2') == '2'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2''') == '2'\nassert solution('''12 4''') == '4'\nassert solution('''15 10''') == '5'\nassert solution('''11 1''') == '0'\nassert solution('''123456''') == '0'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12 4') == '4'\nassert solution('15 10') == '15'\nassert solution('20 20') == '20'\nassert solution('6 6') == '6'\nassert solution('4 4') == '0'\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 100') == '100'\n\n---"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 4') == '4'\n\n'''\n\n\nA, B = map(int, stdin.strip().split())\nprint(A + (A - 4) * (B - 4))"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"1 10\") == \"6\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"12 4\") == \"12\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"5 7\") == \"9\"\n"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('5 6') == '3'\nassert solution('12 4') == '4'\nassert solution('13 2') == '5'\n\ninput_lines = []\nwhile True:\n    try:\n        line = input()\n        if line:\n            input_lines.append(line)\n        else:\n            break\n    except EOFError:\n        break"
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 4\\n') == '4'\nassert solution('1 1\\n') == '1'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"12345\") == \"12\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('10000') == '2'"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10000') == '3'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('100') == '2'\nassert solution('1000') == '2'\nassert solution('10000') == '2'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\n\") == \"3\"\nassert solution(\"10000\\n\") == \"3\"\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"9\") == \"2\"\n\"\"\""
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '3'\n\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10000') == '3'\nassert solution('1000') == '2'\nassert solution('999') == '2'\nassert solution('997') == '2'\n"
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n3''') == '2'\nassert solution('''1\n1\n3''') == '2'\nassert solution('''2\n1\n1''') == '3'\nprint(solution('''1\n1\n2'''))\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''3 5\n2 1 3\n3 1 2 3\n2 3 2\n''') == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''\n1 2 3\n3 4\n1 1 2\n''') == '2'\nassert solution('''\n5 4\n1 1 1 1 1\n2 1 1 1 1\n1 2 1 1 1\n1 1 2 1 1\n1 1 1 2 1\n''') == '0'\nassert solution('''\n2 1 3\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '1'\nassert solution('5 2') == '3'\nassert solution('2 3') == '1'\nassert solution('1 2 3') == '3'"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nprint(solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2'''))"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '2'\nassert solution('10 11\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1') == '5'\nassert solution('5 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == '5'\nassert solution('1\\n2\\n2') == '3'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 4, 2, 1, 3, 1, 2, 3]) == '1'"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('2 3\\n3 1 2 3') == '4'\nassert solution('3\\n3 1 2 3') == '3'"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('8 4\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4') == '4'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\nassert solution('''4 4\n2 1 3\n3 1 2 3\n3 3 3\n''') == '2'\n"
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4\\n2 1 3\\n3 1 2 3') == '1'\nassert solution('3 4\\n2 1 3\\n3 1 2 3') == '1'\nassert solution('3 1 2 3\\n2 3 2\\n1 2 1') == '0'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('6') == '0.3333333333'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('4') == '0.5000000000'\nassert solution('8') == '0.250000000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0.5000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.5000000000'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('2') == '0.5000000000'\nassert solution('3') == '0.33333333333'\nassert solution('4') == '0.0'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0.5\"\nassert solution(\"4\") == \"0.0\"\nassert solution(\"3\") == \"0.0\"\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('2') == '0.166666666667'\n\"\"\""
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5'\n"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0.5'\nassert solution('9') == '0.500000000000000'\nassert solution('10') == '0.5000000000000000'\n\"\"\"\n\nN = int(stdin())"
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n') == '0.5000000000000000'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n3\n1\n1\n1\n''') == '2'\nassert solution('''\n3\n3\n2 1\n2\n''') == '2'"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 1\\n1\") == \"2\"\nassert solution(\"3\\n1\\n1 1\\n1\") == \"3\"\nassert solution(\"3\\n2 1\\n1\") == \"1\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\n1\n1\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n1\n1\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n0\n1\n\n\"\"\") == \"0\""
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n'''\n\nimport sys"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1\n1 1\n1\n1 1\n1\n2 0\n''') == '2', 'First'\nassert solution('''3\n1\n1 1\n1\n1 1\n1\n2 0\n''') == '2', 'Second'\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e N, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439 \u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u044b\u0445 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0441\u0443\u043c\u043c\u044b \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0441\u0442\u0438 \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n\n\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u044b\u0445 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0441\u0443\u043c\u043c\u0430\u0445 \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0441\u0442\u0438 \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n\n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0438\u0441\u0435\u0439. \u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0447\u0438\u0441\u0435\u043b \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0438\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u0441\u0443\u043c\u043c\u044b \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0441\u0442\u0438. \u0418 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0447\u0438\u0441\u0435\u043b \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0438\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. \u041a\u0430\u0436\u0434\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0438 \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0443\u043c\u043c\u0443 \u0438\u0441\u0442\u0438\u043d\u043d\u043e\u0441\u0442\u0438 \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n\n\u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0441\u0442\u0438\u043d\u043d\u044b\u0445 \u043b\u044e\u0434\u0435\u0439 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n3\n1\n1 1\n1\n1 1\n1\n2 0\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n2\n\nSample Input 1:\n\n3\n1\n1 1\n1\n1 1\n1\n2 0\nSample Output 1:\n\n2\n\nSample Input 2:\n\n3\n1\n1 1\n1\n1 1\n1\n2 0\nSample Output 2:\n\n2\n\"\"\"\n) == '2', 'First'\nassert solution('''4\n1\n1 1\n1\n1 1\n1\n2 0\nSample Output 1:\n\n2\nSample Output 2:\n\n2\n''') == '2', 'Second'\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1\\n1') == '2', \"Sample #1 fail\"\nassert solution('3\\n2 1\\n1\\n1\\n1\\n1\\n2 0\\n') == '2', \"Sample #2 fail\"\nprint('All tests passed!')"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n\" * 5) == \"6\"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('8') == 'nikoandsolstice'\nassert solution('10') == 'nikoandsolstice'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"k\") == \"k\", \"First\"\nassert solution(\"\") == \"\", \"Second\"\nassert solution(\"x\") == \"x\", \"Third\"\nassert solution(\"nikoandsolstice\") == \"nikoandsolstice\", \"Fourth\""
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n') == '3'\nassert solution('10\\nabcdabcdeabcde\\n') == 'abcdabcdeabcde'\nassert solution('10\\nabcdabcdeabcde\\n') == 'abcdabcdeabcde'\nassert solution('10\\nabcdabcdeabcde\\n') == 'abcdabcdeabcde'\nassert solution('10\\nabcdabcdeabcde\\n') == 'abcdabcdeabcde'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"nikoandsolstice\") == \"nikoand... \"\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('10') == '10'\nassert solution('100') == '100'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"nikoandsolstice\""
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"nikoandsolstice\", \"Wrong!\""
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'abcd'\nassert solution('a') == 'a'\nassert solution('abcde') == 'abcde'\n"
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('10') == 'nikoandsolstice'\nassert solution('20') == 'nikoandsolstice'\nassert solution('8') == 'nikoandsolstice'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\nassert solution('cat') == 'cats'\nassert solution('dog') == 'dogs'\nassert solution('fish') == 'fishes'\nassert solution('goose') == 'gooses'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('apple') == 'apples'\nassert solution('apple e') == 'apples'\nassert solution('apple e ') == 'apples'\nassert solution('apple e s') == 'apples'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('avocado') == 'avocados'\nassert solution('bananas') == 'bananas'\nassert solution('mango') =='mangoes'\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'apples'\n\n\"\"\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('orange') == 'oranges'\nassert solution('cat') == 'cats'\nassert solution('zebra') == 'zebras'\nassert solution('hippo') == 'hippos'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"tea\") == \"teas\"\n"
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'\n\"\"\""
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n2\n1 3\n1''') == '1'\n\nassert solution('''3 3\n2\n1 3\n1''') == '2'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('8 3') == '1'\nassert solution('6 1') == '0'\nassert solution('10 2') == '0'"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\nprint(solution(stdin))"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1\"\n\"\"\"\n\nn, k = map(int, stdin.readline().split())\nfor i in range(1, n+1):\n    for j in range(1, k+1):\n        if j > i:\n            print(\"Snuke %d has no snacks.\" % (i))\n            break\n    else:\n        print(\"Snuke %d has Snack %d and %d.\" % (i, j, j-1))\nprint(\"Thus, there will be one victim: Snuke %d.\" % (i))"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n2\n1 3\n1''') == '1'\nassert solution('''3 3\n1\n2\n3''') == '3'\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\n\"\"\"\n\nimport math\n\nn = int(input())\nk = int(input())"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n'''\n"
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\n\") == \"5\"\nassert solution(\"10\\n\") == \"5\""
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabba\") == \"4\"\nassert solution(\"5\\naba\") == \"5\"\nassert solution(\"1\\na\") == \"2\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\\naaaaaaaaaaaab\\n\") == \"5\"\nassert solution(\"10\\nabaaaaaaba\\n\") == \"2\"\nassert solution(\"1\\naaaaaaaaaaaab\\n\") == \"1\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5'"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\naabbbbaaca''') == '5'\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\naabbbbaaca\n''') == \"5\"\nassert solution('''\n10\nabaaacaba\n''') == \"4\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"10a\") == \"5\"\nassert solution(\"10b\") == \"6\"\nassert solution(\"10ab\") == \"7\"\nassert solution(\"10abca\") == \"10\"\n"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\naabbbbaaca\\n') == '5'"
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\nassert solution(\"20\") == \"20\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('10\\n10 10 10 10 10 10 10 10') == '10'\nassert solution('3\\n5 2 4') == '3'\nassert solution('3\\n5 2 4') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5 2 4''') == '3'\n\nassert solution('''4\n5 2 4''') == '2'\n\nassert solution('''5\n5 2 4''') == '2'\n\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1''') == '2'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''2\n8 7 9\n''') == '1'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"7\") == \"4\"\nassert solution(\"11\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"30\") == \"20\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"1\\n5 2 4\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 4\n''') == '3'\nassert solution('''3\n5 2 4\n''') == '2'\nassert solution('''4\n3\n2 4 5\n''') == '2'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 2 2 3') == '4'\nassert solution('1 1 2 3') == '4'\nassert solution('1 2 1 3') == '2'"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3') == '2'"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 1 1') == '5'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 2 2 3\") == \"3\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"2 1 2 3\") == \"1\"\nassert solution(\"4 2 -2 3\") == \"3\"\nassert solution(\"6 6 -2 3\") == \"5\"\nassert solution(\"3 0 1 1\") == \"2\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 1 1') == '2'\nassert solution('10 20 -10 2') == '8'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n    2 1 1 3\n''') == '2'"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('3 1 1 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('4 3 -2 1') == '4'\n"
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 1 3\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('6 3') == 'Yes'\nprint(solution(input()))"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('10 3') == 'Yes'\nassert solution('10 4') == 'No'"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1 2',\n    '1 2',\n    ) == 'Yes'\nassert solution(\n    '3 8',\n    '3 8',\n    ) == 'Yes'\nassert solution(\n    '5 10',\n    '5 10',\n    ) == 'Yes'\nassert solution(\n    '3 1',\n    '3 1',\n    ) == 'No'\nassert solution(\n    '1 0',\n    '1 0',\n    ) == 'No'\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\n\n'''\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 8\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 1\") == \"No\"\n"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n\"\"\"\n\nX, Y = map(int, input().split())\nc, t = 0, 0\n\nfor i in range(X + 1):\n    c += i\nfor i in range(Y + 1):\n    t += i"
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"10 20\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"10 1\") == \"No\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"4 4\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n) == \"3\"\n\nassert solution(\n    \"5 5\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n    \"1 4\\n\"\n) == \"1\"\n\nassert solution(\n    \"5 5\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"1 4\\n\"\n) == \"3\"\n\nassert solution(\n    \"10 10\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 5\\n\"\n    \"2 5\\n\"\n    \"3 5\\n\"\n    \"3 6\\n\"\n    \"4 6\\n\"\n    \"4 7\\n\"\n    \"5 7\\n\"\n    \"5 8\\n\"\n    \"6 8\\n\"\n    \"6 9\\n\"\n    \"7 9\\n\"\n    \"7 10\\n\"\n    \"8 10\\n\"\n) == \"2\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 2\n1 3\n2 3\n''') == '2'\n'''\nsolution()\n'''\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"5 3\") == \"4\"\n\n'''\n\nclass Solution:\n    def solve(self,N,M):\n        def dfs(visited,node,count):\n            visited[node]=True\n            count+=1\n            for i in range(M):\n                if G[node][i] and visited[i]==False:\n                    count=count+dfs(visited,i,count)\n            return count\n        visited=[False]*M\n        return dfs(visited,0,0)"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n'''\n\nimport sys\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\n'''\n\nimport math"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3\n''') == '2'\n\nassert solution('''5 5\n1 2\n1 3\n1 4\n2 4\n3 4\n''') == '3'\n\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n\nassert solution('''4 4\n1 2\n2 3\n3 4\n1 3\n''') == '1'\n\nassert solution('''4 4\n1 2\n2 3\n3 4\n1 3\n''') == '1'"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\n'''\n\"\"\"\nfrom typing import List\nfrom collections import defaultdict\n\nclass Graph(object):\n    def __init__(self, vertices):\n        self.graph = defaultdict(list)\n        self.V = vertices\n\n    def addEdge(self, u, v):\n        self.graph[u].append(v)\n\n    def isCyclicUtil(self, v, visited, recStack):\n        visited[v] = True\n        recStack[v] = True\n\n        for neighbour in self.graph[v]:\n            if visited[neighbour] == False:\n                if self.isCyclicUtil(neighbour, visited, recStack):\n                    return True\n            elif recStack[neighbour] == True:\n                return True\n\n        recStack[v] = False\n        return False\n\n    def isCyclic(self):\n        visited = [False] * self.V\n        recStack = [False] * self.V\n        for node in range(self.V):\n            if visited[node] == False:\n                if self.isCyclicUtil(node, visited, recStack) == True:\n                    return True\n        return False"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '1'\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n''') == '3'\nassert solution('''\n2 2\n1 1\n''') == '1'\n'''\n"
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('3 2\\n1 2\\n1 3\\n2 3') == '1'\nassert solution('3 3\\n1 3\\n2 3') == '0'\n\"\"\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '18'\nprint('solution() is okay')"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 3 4 5 6''') == '18'\nassert solution('''100 3\n2 4 5 6 7 8 9''') == '34'\nassert solution('''10 2\n4 4 4 4 4 4''') == '9'"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"18\"\nassert solution(\"5 0\") == \"18\"\nassert solution(\"10 0\") == \"18\"\n\n\"\"\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"5 2 3 4\") == \"9\"\nassert solution(\"5 5 5 5\") == \"3\"\nassert solution(\"5 6 5 5\") == \"8\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n5 2\n''') == '18'\nassert solution('''5 3\n5 2\n''') == '15'\nassert solution('''5 5\n5 4\n''') == '16'\nassert solution('''5 4\n5 3\n''') == '12'\nassert solution('''5 3\n5 2\n''') == '12'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '18', \"Wrong\"\nassert solution('4 3') == '6', \"Wrong\"\nassert solution('100 5') == '106', \"Wrong\""
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '18'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"18\", \"sample test\"\nassert solution(\"12 3\") == \"6\", \"sample test\"\nassert solution(\"3 4\") == \"3\", \"sample test\"\nassert solution(\"6 8\") == \"6\", \"sample test\"\nassert solution(\"1 1\") == \"2\", \"sample test\"\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '18'\nassert solution('5 2') == '18'\n"
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'\nassert solution('8 2') == '10'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15') == '60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n\") == \"2\\n4\\n\"\nassert solution(\"4\\n\") == \"2\\n4\\n\"\nassert solution(\"5\\n\") == \"2\\n4\\n\"\nassert solution(\"10\\n\") == \"2\\n4\\n8\\n16\\n32\\n\"\nassert solution(\"20\\n\") == \"2\\n4\\n8\\n16\\n32\\n64\\n128\\n256\\n512\\n1024\\n2048\\n\"\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n\nimport sys\nfrom functools import reduce\nfrom math import sqrt\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '60'\nassert solution('15') == '60'\nassert solution('5') == 'Buzz'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''15\n''') == '60'\nassert solution('''100\n''') == '3628800'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('15') == '60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"15\") == \"60\"\nprint(solution(input()))\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1,2,4'\nassert solution('7') == '1,2,4,7'\nassert solution('15') == '1,2,4,7,8,11,13,14,15'\nassert solution('30') == '1,2,4,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60'\n"
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n1\n'''\n) == '1', 'First'\nassert solution(\n    '''\n    3\n    '''\n) == '2', 'Second'\nassert solution(\n    '''\n    10\n    '''\n) == '55', 'Third'\nassert solution(\n    '''\n    15\n    '''\n) == '60', 'Fourth'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '8'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4') == '1'\nassert solution('1 2\\n3 5') == '3'\nassert solution('1 2\\n3 5') == '3'"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '8'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\n\n## LC 065. Valid Number\n\nYour task is to write code to validate a string of characters as a valid phone number.\n\nThe string will be validated following the rules below:\n\nIt must start with a 7, 8 or 9.\nIt must contain exactly 10 digits.\nEvery digit must be a valid digit.\nIt may contain the special characters!, # and *.\nIt mustn't contain more than one consecutive repeated digits.\nInput\n\nInput is given from Standard Input in the following format:\n\nA string, with no leading whitespace, consisting of lowercase English letters and digits.\n\nOutput\n\nPrint \"Valid!\" if the input is valid, otherwise, print \"Invalid: Invalid phone number.\".\n\n-----Constraints-----\nThe string may contain any printable ASCII character.\n\n-----Input-----\n\n!702211194044\n\n-----Output-----\n\nValid!\n\n-----Input-----\n\n702211194044\n\n-----Output-----\n\nInvalid: Invalid phone number.\n\n## LC 066. Plus One\n\nGiven a non-empty array of digits representing a non-negative integer, increment one to the integer.\n\nThe digits are stored such that the most significant digit is at the head of the list, and each element in the array contains a single digit.\n\nYou may assume the integer does not contain any leading zero, except the number 0 itself.\n\nExample 1:\n\nInput: [1,2,3]\nOutput: [1,2,4]\nExplanation: The array represents the integer 123.\nExample 2:\n\nInput: [4,3,2,1]\nOutput: [4,3,2,2]\nExplanation: The array represents the integer 4321.\n\n-----Constraints-----\nThe digits are in the range of 0-9.\n\n-----Input-----\n\nInput is given from STDIN\n\n----Output----\n\nOutput is printed to STDOUT\n\nCode:\n\nclass Solution:\n    def plusOne(self, digits):\n        n = len(digits)\n        res = digits\n        for i in range(n-1, -1, -1):\n            if res[i] == 9:\n                res[i] = 0\n            else:\n                res[i] = res[i]+1\n                break\n        if res[0] == 0:\n            res = [1]+res\n        return res"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '8'\nassert solution('6 8') == '6'\n\"\"\"\n\nfrom typing import List, Any"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\n4 7 10 6 5') == '8'\nassert solution('6 5\\n4 7 10 6 5') == '8'\nassert solution('1 0\\n2 5\\n5 10\\n2 10') == '0'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 6 8 5') == '5'"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '8'\nassert solution('1 1') == '1'\nassert solution('1 1') == '2'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"2\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n5 2\\n4 1\\n\") == \"1\"\nassert solution(\"2 5\\n5 3\\n3 4\\n2 1\\n\") == \"2\"\nassert solution(\"6 6\\n6 3\\n5 2\\n4 3\\n4 2\\n3 2\\n\") == \"2\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1', 'First'\nassert solution('4 4') == '3', 'Second'\nassert solution('6 8') == '1', 'Third'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"10 9\") == \"3\"\nassert solution(\"5 5\") == \"0\""
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 7') == '2'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 10\") == \"28\"\nassert solution(\"5 5\") == \"28\"\nassert solution(\"10 5\") == \"28\"\nassert solution(\"10 10\") == \"28\"\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\n\n\"\"\"\n\nh, w = list(map(int, stdin.split()))"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20\n''') == '6', 'First example'\n\nassert solution('''7 2\n3 7 5 1 10 3 20\n''') == '-1', 'Second example'\n\nassert solution('''7 5\n9 1 9 4 8 2 6 3\n''') == '6', 'Third example'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\""
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 4\\n\") == \"6\"\nassert solution(\"7 2\\n\") == \"-\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-\"\n\n\"\"\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20\n''') == '6'\n\nassert solution('''7 2\n3 7 5 1 10 3 20\n''') == '-1'\n\nassert solution('''7 3\n5 7 10 1 3 2\n''') == '6'\n\nassert solution('''7 2\n3 7 5 1 10 3 20\n''') == '-1'\n"
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"4 1\") == \"5\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"3 3\") == \"3 4 1\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"5 5\") == \"3 4 1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('5 5') == '-1'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"6 8\\n\"\n    \".*...\\n\"\n    \"****.\\n\"\n    \"..****\\n\"\n    \".....\\n\") == \"3\"\nassert solution(\n    \"5 5\\n\"\n    \"*.*\\n\"\n    \"*.*\\n\"\n    \"*.*\\n\"\n    \"*.*\\n\") == \"3\"\n\nassert solution(\n    \"5 5\\n\"\n    \".*...\\n\"\n    \"*.*.\\n\"\n    \"****.\\n\"\n    \"*.*.\\n\"\n    \"****.\\n\") == \"1\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n\nassert solution(sys.stdin.read()) == \"-1\"\n\nassert solution(sys.stdin.read()) == \"3\"\n\nassert solution(sys.stdin.read()) == \"3\"\n\nassert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution('1 1') == '-1'\nassert solution('3 2') == '2'\n\n\"\"\"\n\nn = int(input())\nm = int(input())\nasterisk = ['*', '.']\n\nfor i in range(n):\n    line = input()\n    if line.count('*') + line.count('.') >= m:\n        print(-1)\n        continue\n    col = 0\n    maxi = 0\n    for j in range(len(line)):\n        if line[j] == asterisk[0]:\n            col += 1\n        else:\n            col -= 1\n        if maxi < col:\n            maxi = col\n    if maxi > m:\n        print(-1)\n        continue\n    print(maxi, end=\" \")\n    row = 0\n    maxi = 0\n    for j in range(len(line)):\n        if line[j] == asterisk[0]:\n            row += 1\n        else:\n            row -= 1\n        if maxi < row:\n            maxi = row\n    if maxi > n:\n        print(-1)\n        continue\n    print(row, maxi, maxi - row + 1)\n\n\"\"\"\nOutput\n\n3\n3 4 1\n\n3 5 2\n\n3 5 1\n\n3 4 1\n\n3 5 2\n\n3 5 1\n\n3 4 1\n\n3 5 2\n\n3 5 1\n\n3 4 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1\n\n3 5 1"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"6 8\") == \"3 4 1\""
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n.*\\n.*\\n*.*\\n.****\\n.*\") == \"3 4 1\"\nassert solution(\"6 8\\n.*\\n*\\n.**\\n.*\\n.*\\n.*\\n.***\") == \"3 4 1\"\nassert solution(\"3 3\\n*\\n**\\n*\\n*\\n.***\") == \"3 3 1\"\nassert solution(\"5 5\\n.*\\n.***\\n.**.*\\n.*\\n.***\") == \"3 3 1\"\nassert solution(\"3 3\\n*\\n*\\n.**\\n.**\\n.***\") == \"3 3 2\"\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '3 5 2'\nassert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 5 2'\n"
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '3'\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\nassert solution('''\n3 3\n*.*\n*.*\n*.*\n''') == '3'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"0\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"3\\n2\") == \"0\"\nassert solution(\"3\\n4\") == \"2\"\nassert solution(\"4\\n3\") == \"1\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('good') == '0'\nassert solution('aabc') == '2'\nassert solution('aaa') == '3'\nassert solution('aaaac') == '4'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('good') == 'g'\nassert solution('aaa') == 'a'\nassert solution('ab') == 'ab'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    good\n''') == '0'\nassert solution('''\n    4\n    aabc\n''') == '2'\nassert solution('''\n    3\n    aaa\n''') == '3'\nassert solution('''\n    1\n    good\n''') == '1'\nassert solution('''\n    10\n    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\ngood\n''') == '0'\nassert solution('''3\naa\n''') == '2'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"good\") == \"good\", \"First\"\nassert solution(\"string\") == \"string\", \"Second\"\nassert solution(\"aabc\") == \"aabc\", \"Third\"\nassert solution(\"aaa\") == \"aa\", \"Fourth\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('good') == 'good'\nassert solution('x') == 'x'\nassert solution('aa') == 'aa'\nassert solution('aaa') == 'aab'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"good\") == \"0\"\nassert solution(\"bad\") == \"1\"\nassert solution(\"good\") == \"3\"\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234') == '1234'\nassert solution('good') == 'good'\nassert solution('aaaa') == 'aaaa'\nassert solution('abccba') == 'abc'\nassert solution('abcc') == 'bc'\n"
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\ngood') == '0\\ngood'\nassert solution('2\\ngood') == '1\\ngood'\nassert solution('3\\ngood') == '2\\ngood'\nassert solution('4\\ngood') == '1\\ngood'"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"YES\"\nassert solution(\"8 8\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"YES\"\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"NO\"\n\n'''\n\nimport sys\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n5 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\nassert solution('''\n5 5\n1 4\n2 3\n1 4\n3 4\n6 1\n''') == 'YES'\nassert solution('''\n5 5\n1 5\n2 4\n1 4\n3 4\n6 1\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\") == \"YES\"\nassert solution(\"1 5\") == \"NO\"\nassert solution(\"2 1\") == \"10100\"\nassert solution(\"1 4\") == \"NO\"\nassert solution(\"3 1\") == \"10101\"\n\n\"\"\"\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\"\n\"\"\"\n\nclass Graph:\n    def __init__(self, vertices: int, edges: list):\n        self.graph = defaultdict(list)\n        self.vertices = vertices\n        self.edges = edges\n        self.visited = set()\n\n    def add_edge(self, u: int, v: int):\n        self.graph[u].append(v)\n        self.graph[v].append(u)\n\n    def dfs(self, node: int, par_node: int):\n        if node not in self.visited:\n            self.visited.add(node)\n            self.dfs_rec(node, par_node)\n\n    def dfs_rec(self, node: int, par_node: int):\n        if node == par_node:\n            return True\n        for n in self.graph[node]:\n            if n!= par_node and n not in self.visited:\n                self.visited.add(n)\n                if self.dfs_rec(n, node):\n                    return True\n        return False"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3\n1 1\n1 2\n1 3\n\n''') == 'YES'\nassert solution('''\n4\n3\n1 1\n1 4\n1 3\n\n''') == 'NO'\nassert solution('''\n5\n5\n1 4\n3 1\n2 2\n2 4\n\n''') == 'YES'\n'''\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES'\nassert solution('''5 6\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\nassert solution('''5 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''6 6\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n\nprint(solution())\n"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'NO'\nassert solution('''6 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'YES'\nassert solution('''5 5\n1 5\n2 1\n1 4\n3 1\n6 1''') == 'NO'\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '6 5\\n'\n    '1 5\\n'\n    '2 1\\n'\n    '1 4\\n'\n    '3 1\\n'\n    '6 1\\n'\n    ) == 'YES\\n10100'\n\nassert solution(\n    '10 5\\n'\n    '1 5\\n'\n    '2 1\\n'\n    '1 4\\n'\n    '3 1\\n'\n    '6 1\\n'\n    '1 4\\n'\n    '2 4\\n'\n    '2 5\\n'\n    '1 6\\n'\n    '5 6\\n'\n    '3 4\\n'\n    '6 4\\n'\n    '7 4\\n'\n    '5 2\\n'\n    '2 6\\n'\n    '5 7\\n'\n    '4 7\\n'\n    '7 3\\n'\n    '4 6\\n'\n    '5 7\\n'\n    '3 2\\n'\n    '7 6\\n'\n    '4 5\\n'\n    '5 7\\n'\n    '4 6\\n'\n    '7 5\\n'\n    '4 2\\n'\n    '6 3\\n'\n    '5 2\\n'\n    '7 1\\n'\n    '5 7\\n'\n    '6 6\\n'\n    '4 1\\n'\n    '7 8\\n'\n    '3 7\\n'\n    '6 1\\n'\n    '1 2\\n'\n    '3 1\\n'\n    '5 7\\n'\n    '4 2\\n'\n    '7 6\\n'\n    '6 7\\n'\n    '1 3\\n'\n    '2 4\\n'\n    '3 2\\n'\n    '1 6\\n'\n    '4 7\\n'\n    '6 8\\n'\n    '7 8\\n'\n    '5 1\\n'\n    '2 4\\n'\n    '1 6\\n'\n    '3 5\\n'\n    '5 4\\n'\n    '1 8\\n'\n    '7 8\\n'\n    '4 4\\n'\n    '2 6\\n'\n    '5 4\\n'\n    '5 6\\n'\n    '2 1\\n'\n    '3 1\\n'\n    '6 6\\n'\n    '7 3\\n'\n    '1 8\\n'\n    '2 8\\n'\n    '2 6\\n'\n    '4 7\\n'\n    '7 5\\n'\n    '4 5\\n'\n    '4 5\\n'\n    '5 8\\n'\n    '6 8\\n'\n    '2 7\\n'\n    '5 3\\n'\n    '3 4\\n'\n    '1 5\\n'\n    '1 6\\n'\n    '3 3\\n'\n    '5 2\\n'\n    '4 4\\n'\n    '7 5\\n'\n    '6 4\\n'\n    '1 2\\n'\n    '3 8\\n'\n    '1 7\\n'\n    '3 8\\n'\n    '2 1\\n'\n    '2 2\\n'\n    '6 3\\n'\n    '5 5\\n'\n    '4 4\\n'\n    '3 3\\n'\n    '1 4\\n'\n    '2 3\\n'\n    '6 5\\n'\n    '4 6\\n'\n    '1 5\\n'\n    '2 4\\n'\n    '7 4\\n'\n    '5 2\\n'\n    '1 4\\n'\n    '3 2\\n'\n    '2 4\\n'\n    '6 5\\n'\n    '4 5\\n'\n    '6 4\\n'\n    '5 6\\n'\n    '1 2\\n'\n    '3 1\\n'\n    '6 5\\n'\n    '4 5\\n'\n    '1 6\\n'\n    '4 3\\n'\n    '6 5\\n'\n    '1 5\\n'\n    '3 3\\n'\n    '6 2\\n'\n    '5 4\\n'\n    '2 4\\n'\n    '3 4\\n'\n    '3 4\\n'\n    '1 6\\n'\n    '5 6\\n'\n    '6 2\\n'\n    '3 4\\n'\n    '5 2\\n'\n    '2 4\\n'\n    '1 4\\n'\n    '3 5\\n'\n    '5 2\\n'\n    '1 4\\n'\n    '3 5\\n'\n    '6 3\\n'\n    '5 6\\n'\n    '1 3\\n'\n    '2 6\\n'\n    '1 7\\n'\n    '2 8\\n'\n    '3 4\\n'\n    '1 4\\n'\n    '4 7\\n'\n    '5 6\\n'\n    '2 1\\n'\n    '1 6\\n'\n    '3 6\\n'\n    '6 6\\n'\n    '1 1\\n'\n    '4 4\\n'\n    '2 6\\n'\n    '3 4\\n'\n    '2 3\\n'\n    '5 5\\n'\n    '5 5\\n'\n    '4 6\\n'\n    '1 6\\n'\n    '2 1\\n'\n    '3 3\\n'\n    '1 3\\n'\n    '2 2\\n'\n    '4 4\\n'\n    '6 5\\n'\n    '5 5\\n'\n    '4 4\\n'\n    '4 6\\n'\n    '6 5\\n'\n    '1 4\\n'\n    '2 6\\n'\n    '6 6\\n'\n    '1 5\\n'\n    '2 5\\n'\n    '2 3\\n'\n    '4 4\\n'\n    '1 4\\n'\n    '2 5\\n'\n    '3 4\\n'\n    '3 5\\n'\n    '6 5\\n'\n    '1 4\\n'\n    '1 4\\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 5\n2 2\n1 2\n5 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"1 7\n1 7\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 5\\n\"\n    \"2 2\\n\"\n    \"1 2\\n\"\n    \"5 5\\n\"\n    ) == \"2\\n\"\nassert solution(\n    \"1 7\\n\"\n    \"1 7\\n\"\n    ) == \"0\\n\"\nassert solution(\n    \"3 7\\n\"\n    \"1 7\\n\"\n    ) == \"2\\n\"\nassert solution(\n    \"3 5\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"5 5\\n\"\n    ) == \"3 4\\n\"\nassert solution(\n    \"1 7\\n\"\n    \"1 7\\n\"\n    ) == \"0\\n\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 5') == '0'\nassert solution('3 3') == '0'"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n1 2\\n2 3\\n3 4\\n5 5\") == \"2\"\nassert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"4\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'\nassert solution('''1 5\n1 5\n''') == '1'\nassert solution('''1 1\n1 1\n''') == '2'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'\nassert solution('1 2') == '1 2'\nassert solution('5 5') == '3 4'\nassert solution('4 7') == '1 4 5 6 7'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"1 7\") == \"0\"\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('1 7') == '3 4'\n"
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n3 4\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"5 6 8 5\") == \"2\"\nassert solution(\"5 5 5 5\") == \"1\"\n\n-----Explanation-----\nBecause 5 can be evenly divided by any 3, 5 is the first integer between 4 and 6 (inclusive) that satisfies the condition.\n\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"10 10 2 2\") == \"9\"\nassert solution(\"2 9 2 2\") == \"2\""
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 9 2 3') == '2'\nassert solution('4 9 2 3') == '1'\nassert solution('10 9 2 3') == '1'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5 2 3\") == \"2\"\nassert solution(\"3 4 5 2\") == \"5\"\nassert solution(\"2 3 5 4\") == \"7\"\nassert solution(\"6 7 1 5\") == \"4\"\nassert solution(\"4 7 2 1\") == \"6\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 9 2 3''') == \"2\"\nassert solution('''5 7 8''') == \"1\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 9 2 3') == '2'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 2 4') == '2'\nassert solution('5 7 4 1') == '4'\nassert solution('1 100000000000000000 2 1000000000 2 100000000001') == '1'\nassert solution('1 4000000000000000 2 1000000000 1') == '1'\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 9 2 3''') == '2', \"First\"\nassert solution('''4 9 2 3''') == '3', \"Second\"\nassert solution('''6 7 9 8 2''') == '1', \"Third\"\nassert solution('''10 9 8 2''') == '3', \"Fourth\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"4 5 2 3\") == \"2\"\nassert solution(\"1 1 1\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 2 3\") == \"2\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\nassert solution('12345678901') == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('99999') == 'No'\nassert solution('123') == 'No'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"88888888\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"Should be Yes\"\nassert solution(\"1234567890\") == \"No\", \"Should be No\"\nassert solution(\"1234567890\") == \"Yes\", \"Should be Yes\"\nassert solution(\"0\") == \"No\", \"Should be No\"\nassert solution(\"0\") == \"No\", \"Should be No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('12345') == 'No'\n\"\"\""
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('2') == 'No'\nassert solution('9') == 'Yes'\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456789') == 'No'\n\n---Output---\nYes\n\n\"\"\""
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(1) == \"No\"\nassert solution(2) == \"No\"\nassert solution(3) == \"Yes\"\nassert solution(4) == \"Yes\"\nassert solution(5) == \"Yes\"\n"
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"\") == \"No\"\n\"\"\"\n\nnumber = int(input())"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"5\"\nassert solution(3) == \"6\"\nassert solution(4) == \"7\"\nassert solution(5) == \"8\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"9\") == \"2\"\nassert solution(\"36\") == \"2\"\nassert solution(\"81\") == \"2\""
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == '4'\nassert solution('1') == '1'\nassert solution('12') == '2'\nassert solution('127') == '4'\nassert solution('10000000000') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('127') == '4'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('127') == '4'\nassert solution('12') == '5'\nassert solution('123') == '6'\nassert solution('1234') == '7'\nassert solution('12345') == '8'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('127') == '4'\nassert solution('100000') == '5'"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '4'\nassert solution('1001') == '4'\nassert solution('9') == '4'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"100\") == \"5\"\nassert solution(\"1000\") == \"7\"\nassert solution(\"10000\") == \"11\"\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('127') == '4'\nassert solution('1') == '1'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '4'\nassert solution('18') == '2'\nassert solution('10000') == '4'\nassert solution('0') == '0'\n\n\"\"\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('kyoto') == 'tokyo'\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('kyoto') == 'Yes', 'Sample Test Failed'\nassert solution('tokyo') == 'No', 'Sample Test Failed'\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"ar\") == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\nassert solution(\"tokyo\") == \"kyoto\"\nprint(solution())\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\"\"\""
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\nassert solution(\"tokyo\") == \"kyoto\"\nassert solution(\"\") == \"\"\nassert solution(\"kyo\") == \"to\"\nassert solution(\"tokyo\") == \"yto\"\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('kyoto') == 'tokyo'\nassert solution('tokyo') == 'kyoto'\n'''"
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'Yes'\n\nassert solution('tokyo') == 'No'\n\"\"\""
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''cabacc\nabc''') == '1'\nassert solution('''cabacc\nabc''') == '0'\nassert solution('''cabac\nabc''') == '0'\nassert solution('''cabac\nabc''') == '1'\nassert solution('''cabacc\naaa''') == '2'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''cabacc''') == '1'\nassert solution('''abc''') == '0'\nassert solution('''aa''') == '0'\nassert solution('''abcabc''') == '1'\nassert solution('''abcabcabc''') == '3'\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"\") == \"0\"\nassert solution(\"a\") == \"0\"\nassert solution(\"ac\") == \"0\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"cabacc\") == \"1\"\n\n'''\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n\"\"\""
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n\n'''\n\ns = input()\nt = input()"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\""
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n"
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('8 12 2') == '2'"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1\") == \"1\"\nassert solution(\"5 100 1\") == \"2\"\nassert solution(\"5 10 2\") == \"2\"\nassert solution(\"5 100 2\") == \"3\"\nassert solution(\"8 12 2\") == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 12 2\n\n''') == '2'\n\nassert solution('''8 12 2\n\n''') == '2'\n\nassert solution('''8 12 2\n\n''') == '2'\n\nassert solution('''8 12 2\n\n''') == '2'\n\nassert solution('''8 12 2\n\n''') == '2'"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 2\") == \"2\"\nassert solution(\"7 2\") == \"2\"\nassert solution(\"3 6 3\") == \"3\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 1') == '2'\nassert solution('8 12 2') == '2'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 2') == '2'\nassert solution('8 12 2') == '2'\nassert solution('4 5 2') == '4'\nassert solution('4 5 1') == '1'\nassert solution('2 5 2') == '2'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"5 4 2\") == \"1\"\nassert solution(\"7 4 3\") == \"1\"\nassert solution(\"8 4 2\") == \"1\"\nassert solution(\"1 10 5\") == \"1\"\n"
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"6 7 3\") == \"3\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('512') == '2015'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1024') == '2020'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"20\"\nassert solution(\"3\") == \"300\"\nassert solution(\"10\") == \"3600\""
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1024') == '2020'\nassert solution('7') == '7'"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '2020'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1024') == '2020'\nassert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"A non-empty string is expected\"\nassert solution(\"1\") == \"2\", \"An integer is expected\"\nassert solution(\"2\") == \"4\", \"An integer is expected\"\nassert solution(\"123\") == \"6\", \"An integer is expected\"\nassert solution(\"25\") == \"22\", \"An integer is expected\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1024') == '2020'"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"15\"\nassert solution(\"20\") == \"20\"\nassert solution(\"10\") == \"100\"\nassert solution(\"30\") == \"30\"\n"
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '36'\nassert solution('1024') == '2020'\nprint('Test passed')"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"5\"\nassert solution('1') == \"1\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"8\") == \"8\"\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 4\\n') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n2 4 5\") == \"8\"\nassert solution(\"5\\n1 4 5 6 7\") == \"12\""
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('3\\n1 4 5') == '8'\nassert solution('4\\n1 2 3 4') == '5'\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 2 3\") == \"5\"\nassert solution(\"4\\n1 2 3 5\") == \"5\"\n\nimport sys\nimport re\nimport math"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n10 20 30\\n') == '45'\nassert solution('2\\n1 2\\n') == '1'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2\n''') == '2'\nassert solution('''2 3\n1 2\n''') == '1'\nassert solution('''1 5\n1 2\n''') == '3'\nassert solution('''5 2\n2 1\n''') == '2'\nassert solution('''7 3\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n''') == '2'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 10\n''') == '3'\n\nassert solution('''\n3 10\n''') == '4'\n\nassert solution('''\n20 20\n''') == '20'\n\nassert solution('''\n4 5\n''') == '4'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 10\"\n) == \"3\"\n\nassert solution(\n    \"4 5\"\n) == \"3\"\n\nassert solution(\n    \"4 100\"\n) == \"3\"\n\nassert solution(\n    \"4 6\"\n) == \"4\"\n\nassert solution(\n    \"5 10\"\n) == \"3\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"5 7\") == \"2\"\nassert solution(\"8 10\") == \"3\"\nassert solution(\"4 8\") == \"3\"\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10') == '3'"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 10\") == \"3\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"20 20\") == \"20\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '3'\nassert solution('3 3') == '3'\nassert solution('1 4') == '4'\nassert solution('2 3') == '4'\nassert solution('6 4') == '4'\n"
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 10\\n') == '3'\nassert solution('4 20\\n') == '4'\n\"\"\""
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '3'\nassert solution('1 2') == '2'\nassert solution('2 2') == '2'\nassert solution('3 3') == '4'\nassert solution('4 10') == '4'\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('SSR') == '2'\nassert solution('CSC') == '1'\nassert solution('RSS') == '3'"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"SSS\") == \"1\"\nassert solution(\"RRRR\") == \"1\"\nassert solution(\"SSS\") == \"0\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n'''"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == '2'\nassert solution(\"CSR\") == '2'"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n\n\n\n----------\n\ns = input()\nt = input()\n\ns = s.replace(\"C\",\".\")\ns = s.replace(\"S\",\".\")\ns = s.replace(\"R\",\".\")\n\nfor i in range(3):\n    if s[i] == \".\" and t[i] == \".\":\n        print(i)\n    elif s[i] == \"C\" and t[i] == \".\":\n        print(i)\n    elif s[i] == \"S\" and t[i] == \".\":\n        print(i)\n    elif s[i] == \"R\" and t[i] == \".\":\n        print(i)\n\n\n'''\n\n\n\n\n'''\n"
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('SSSSSSSSSS') == '3'\nassert solution('CSCSCSCSCSC') == '1'"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '8'\nassert solution('6\\n4 3 2 1 5 7') == '2'\nassert solution('13\\n4 1 6 2 5 8 7 9 10 3 11 13') == '13'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 5 4 2') == '2'\nassert solution('2 3 1 4 2') == '2'\n\n---Time Complexity---\nWe have to iterate over the input only once.\nO(n)O(n)O(n)\n'''"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1 3 5 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 3 2 5 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 3 5 4 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"5 1 2 3 4\") == \"3\"\nassert solution(\"4 1 2 3\") == \"2\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('4\\n1 3 5 4 2\\n') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('20') == '3'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('2\\n1 2\\n') == '1'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\n"
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62''') == \"5.410\"\nassert solution('''5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\n''') == \"5.620\"\nassert solution('''8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\n''') == \"5.480\"\nassert solution('''5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\n''') == \"6.040\"\nassert solution('''7\n20.62 3.00\n21.06 2.28\n21.56 1.36\n21.66 0.56\n21.64 -0.52\n22.14 2.32\n22.62 3.04\n\n''') == \"6.720\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '6.720'\nassert solution('1') == '0.0'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5.480\"\nassert solution(\"8\") == \"5.620\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6.040\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5.500\"\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\n''') == '5.620'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\n''') == '6.040'\nassert solution('''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0.2 0.2\n2.1 1.1\n3.4 0.4''') == '5.0'\nassert solution('''5\n1.2 1.3\n2.3 0.4\n2.7 0.5\n3.8 1.4\n3.4 0.4''') == '7.0'\nassert solution('''3\n1.3 1.3\n2.1 1.2\n1.8 1.2''') == '1.0'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6.750'\n"
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"8\") == \"5.480\"\nassert solution(\"5\") == \"6.040\""
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"6.720\"\nassert solution(\"8\") == \"5.480\"\nassert solution(\"5\") == \"6.040\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == \"4\"\nassert solution('''\n5 16\n5 5 5 5 5\n''') == \"2\"\nassert solution('''\n5 26\n5 5 5 5 5\n''') == \"1\"\nassert solution('''\n5 40\n2 2 3 4 5\n''') == \"-1\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 8\\n2 3 1 1 2\"\n    ) == \"4\"\nassert solution(\n    \"5 10\\n1 3 4 2 1 4 2\"\n    ) == \"2\"\nassert solution(\n    \"5 16\\n5 5 5 5 5\"\n    ) == \"1\"\nassert solution(\n    \"5 26\\n5 5 5 5 5\"\n    ) == \"2\"\nassert solution(\n    \"5 10\\n1 3 4 2 1 4 2\"\n    ) == \"-1\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 8\\n\"\n    \"2 3 1 1 2\"\n    ) == \"4\"\n\nassert solution(\n    \"5 15\\n\"\n    \"5 5 5 5 5\"\n    ) == \"1\"\n\nassert solution(\n    \"5 16\\n\"\n    \"5 5 5 5 5\"\n    ) == \"2\"\n\nassert solution(\n    \"5 26\\n\"\n    \"5 5 5 5 5\"\n    ) == \"-1\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"5 12\") == \"-1\"\nassert solution(\"7 10\") == \"1\"\nassert solution(\"5 16\") == \"2\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == '4'\nassert solution(input_2) == '2'\nassert solution(input_3) == '2'\nassert solution(input_4) == '-1'\n\n\"\"\""
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 26\") == \"-1\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 12\") == \"1\"\n"
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5 8\\n'\n    '2 3 1 1 2\\n'\n    ) == '4', 'First'\nassert solution(\n    '7 10\\n'\n    '1 3 4 2 1 4 2\\n'\n    ) == '2', 'Second'\nassert solution(\n    '5 16\\n'\n    '5 5 5 5 5\\n'\n    ) == '1', 'Third'\nassert solution(\n    '5 26\\n'\n    '5 5 5 5 5\\n'\n    ) == '-1', 'Fourth'\nassert solution(\n    '5 2\\n'\n    '1 3\\n'\n    ) == '-1', 'Fifth'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\n\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\n\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n''') == '1 1'"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1\n''') == '1 1'\nassert solution('''\n7 3\n1 3 1 3 10 3 7 7 12 3\n''') == '1 1'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1 2 3\"\nassert solution(\"10 4\") == \"7 3 1 3\"\nassert solution(\"15 2\") == \"1 1\"\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\n\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\n\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'\n\nassert solution('''20 30\n5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '10 15 16 17'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == '1 2 3'\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"1 2 3?\"\n\nassert solution(input_1) == \"1 2 3?\""
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n''') == '1 1'"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([7, 3, 1, 3]) == ['1', '3', '1', '3']\nassert solution([10, 4]) == ['7', '3', '1', '3']\nassert solution([15, 2]) == ['7', '3', '1', '3']\n"
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n9 9\\n10 8\\n5 3\\n4 3') == '5'\nassert solution('6 1\\n3\\n6\\n2\\n5\\n1\\n4') == '0'\nassert solution('6 1\\n1 2 3 4\\n10 3 7 3\\n') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\n\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\n\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\n\nassert solution('''\n3\n''') == '0'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4\n3\n3\n5\n1\n''') == '5'\nassert solution('''\n6 1\n5\n6\n2\n5\n1\n4\n\n''') == '3'\nassert solution('''\n2 2\n3\n1\n1\n\n''') == '0'\nassert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n\n''') == '3'\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3\") == \"0\"\nassert solution(\"3 4\\n1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"4 2\") == \"5\"\nassert solution(\"5 1\") == \"0\"\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3''') == '5'\nassert solution('''6 1\n3''') == '0'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '3'"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == \"5\"\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == \"0\"\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == \"3\"\nprint(\"The local tests passed :)\")\n"
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"4 2\") == \"5\"\nassert solution(\"6 1\") == \"3\""
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"xxxiii\") == \"1\"\nassert solution(\"5xxxyyy\") == \"0\"\nassert solution(\"10xxxxyx\") == \"8\""
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('x') == 1\nassert solution('x') == 1\nassert solution('x') == 1\nassert solution('x') == 1\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\nxxxiii') == '1'\nassert solution('5\\nxxoxx') == '0'\nassert solution('10\\nxxxxxxxxx') == '8'"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nxxiii\") == \"1\", \"First\"\nassert solution(\"5\\nxxoxx\") == \"0\", \"Second\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\", \"Third\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"00\"\nassert solution(\"7\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"20\") == \"01\"\nassert solution(\"9\") == \"1\"\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n\n''') == '0'\nassert solution('''\n6\nxxxiii\n\n''') == '1'\nassert solution('''\n\n5\nxxoxx\n\n''') == '0'\n"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == 1\nassert solution(\"5\") == 0\nassert solution(\"10\") == 8"
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    5\n    xxxiii\n    ''') == '1'\nassert solution('''\n    3\n    xxoo\n    ''') == '0'\nassert solution('''\n    4\n    xxox\n    ''') == '1'\nassert solution('''\n    4\n    xxox\n    ''') == '0'\nassert solution('''\n    4\n    xxox\n    ''') == '0'\n''')\n\n\n\n\"\"\""
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('4') == '48'\nassert solution('123') == '123'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"58\"\nassert solution(\"4\") == \"196\"\nassert solution(\"5\") == \"197\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '48'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '48'"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '48'\nassert solution('5') == '125'\n\"\"\"\n\nimport math\n\nr = int(input())\n\nprint(math.pow(3, 2) * r**2)\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1', \"Wrong answer\"\nassert solution('2') == '2', \"Wrong answer\"\nassert solution('3') == '3', \"Wrong answer\"\nassert solution('4') == '12', \"Wrong answer\"\nassert solution('5') == '45', \"Wrong answer\"\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == ''\nassert solution(\"1\") == ''\nassert solution(\"3\") == '48'\nassert solution(\"3 4\") == '48'\nassert solution(\"5 5 5\") == '48'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '8'\nassert solution('4') == '48'\nassert solution('5') == '105'\nassert solution('6') == '216'\nassert solution('7') == '1035'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"10 3\") == \"safe\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"unsafe\"\nassert solution(\"1 1\") == \"safe\"\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == 'unsafe'\nassert solution('4 5') =='safe'\n\nThe code below is a more efficient solution:"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == 'unsafe'\nassert solution('1 2') =='safe'\nassert solution('1 2') == 'unsafe'\n\"\"\"\n\n\"\"\"\n1. S is sheep, W is wolf.\n2. sheep numbers and wolf numbers have to be in a range of 1 and S+W\n3. S+W is maximum value of both\n4. S is minimum value of both\n\"\"\""
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'unsafe'\nassert solution('4 3') =='safe'\nassert solution('1 2') == 'unsafe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'unsafe'\nassert solution('4 5') =='safe'\nassert solution('2 4') == 'unsafe'\nassert solution('4 1') =='safe'\nassert solution('1 1') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"unsafe\"\nassert solution(\"3 5\") == \"safe\"\nassert solution(\"2 2\") == \"safe\"\n\n---> The number of wolves is not less than that of sheep, so they will attack them.\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('1 5') =='safe'\nassert solution('2 3') =='safe'\nassert solution('2 5') == 'unsafe'\n\n\"\"\"\nimport math\n\nS, W = map(int, input().split())\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'unsafe'\nassert solution('5 5') =='safe'\n"
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 5]) == \"unsafe\"\nassert solution([4, 4]) == \"safe\"\nassert solution([4, 1]) == \"unsafe\"\nassert solution([4, 2]) == \"unsafe\"\nassert solution([4, 3]) == \"safe\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 5\n''') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''1 2 3''') == '6'\nassert solution('''2 4 5''') == '10'\nassert solution('''5 6 7''') == '18'"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"4 5 3\") == \"8\"\nassert solution(\"5 4 5\") == \"10\"\nassert solution(\"6 7 8\") == \"12\"\nassert solution(\"7 8 4\") == \"28\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3') == '6'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n|AB| |BC| |CA|\n''') == '6'\nassert solution('''\n3 4 5\n''') == '6'\nassert solution('''\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '1'"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''4 4 4''') == '24'\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"7 6 6\") == \"9\"\n"
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''3 4 5\n''') == '6', 'Wrong!', '''\nThis triangle has an area of 6.\n'''\n\n\n\"\"\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 100 1') == '1'\nassert solution('2 10 4') == '3'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7 4') == '4'\nassert solution('3 4 5') == '6'\nassert solution('8 3 10') == '8'"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\"\n\nInput\nInput is given from Standard Input in the following format:\n\n-----Sample Input-----\n2 11 4\n\nSample Output\n\n4\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\n\n----\n\n##"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '4'\nassert solution('2 4 2') == '4'\nassert solution('3 2 2') == '2'\nassert solution('2 3 2') == '2'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 11 4\") == \"4\""
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 10 4') == '2'\n\n===REFERENCE===\nhttps://app.codility.com/programmers/lessons/2-arrays/cyclic_sort/\n'''\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 11, 4]) == '4'\n"
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 11 4\\n') == '4\\n'\nassert solution('5 2 8\\n') == '8\\n'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"10\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"8 8\") == \"25\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 4\n''') == '6'\nassert solution('''\n2 2\n''') == '4'\nassert solution('''\n4 1\n''') == '4'\nassert solution('''\n4 2\n''') == '8'\n''') == '10'\n''') == '10'\n''') == '10'\n''') == '10'\n\n-------End of Solution-------\n'''"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"3 4\") == \"8\"\nassert solution(\"12 50\") == \"600\"\nassert solution(\"99 99\") == \"0\"\nassert solution(\"10 20\") == \"40\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 10\") == \"20\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"6\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n\") == \"10\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 2') == '2'\nassert solution('-3 -4') == '-6'\nassert solution('-1 1') == '1'\nassert solution('2 2') == '4'\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"2 6\") == \"20\"\nassert solution(\"2 1\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10\"\n\"\"\"\n"
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\n\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"./test_solution.txt\", \"1 2 3\") == \"5\"\nassert solution(\"./test_solution.txt\", \"2 2 2 2 2 2 2 2 2 2\") == \"0\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 7''') == '10'\nassert solution('''10 5''') == '15'\nassert solution('''3 5''') == '10'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"4 3 4\") == \"16\""
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 1 7\n\"\"\") == \"10\"\nassert solution(\"\"\"1 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"1 1 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"10 10 10\") == \"100\"\nassert solution(\"10 10 10\") == \"100\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '6'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 8 7\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 7\") == \"10\"\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6 7') == '10'\n"
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\") == \"10\"\nassert solution(\"4 2 7\") == \"5\""
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"5\") == \"NG\"\nassert solution(\"3\") == \"NG\"\n\"\"\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"15\") == \"NG\"\nassert solution(\"2\") == \"NG\""
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2\") == \"OK\"\nassert solution(\"10\\n1 10\") == \"NG\"\nassert solution(\"5\\n-1 -2\") == \"OK\"\nassert solution(\"5\\n0 -1\") == \"NG\"\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n500 600\n''') == 'OK'\nassert solution('''\n8\n300 730\n''') == 'NG'\nassert solution('''\n5\n1000 300\n''') == 'OK'\n''')"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == 'OK'\nassert solution('6') == 'NG'\nassert solution('3') == 'NG'\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 'NG'\nassert solution('4') == 'OK'\nassert solution('3') == 'OK'\n"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'OK'\n'''\n\nimport math"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == 'OK'\nassert solution('5 6') == 'NG'\nassert solution('10 3') == 'NG'\nassert solution('10 9') == 'NG'\n\nYour code goes here\n\n'''"
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n1000 999\") == \"NG\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7') == '2.33333333333'\nassert solution('8 9') == '3.666666666667'"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2.5'\nassert solution('1 1') == '2'"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3') == '2.6666666667'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2\") == \"3.33333333333\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"3\"\nassert solution(\"4 1\") == \"1.9999999999\"\nassert solution(\"12 1\") == \"12\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '3.0'\nassert solution('1 1') == '2.5'\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10\\n\") == \"2.56\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2.6666666667\"\nassert solution(\"5 10\") == \"3.3333333333\"\nassert solution(\"3 5\") == \"2.5\"\nassert solution(\"3 20\") == \"4.25\"\nassert solution(\"3 1\") == \"3.0\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"2.5\"\nassert solution(\"5 3\") == \"1.3333333333333333\"\n"
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '2.6666666667'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 4 3''') == '1'\nassert solution('''6 6 3''') == '2'\nassert solution('''6 6 3''') == '3'\nassert solution('''6 6 3''') == '2'\nassert solution('''1 2 3''') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 1\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"0\"\nassert solution(\"2 2 1\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"3 1 5\") == \"5\"\nassert solution(\"3 2 3\") == \"6\"\nassert solution(\"10 3 3\") == \"10\"\nassert solution(\"4 2 4\") == \"8\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nA 1\n1 1\n2 2\n3 3\n''') == '1'\nassert solution('''\nA 2\n3 2\n4 4\n5 5\n''') == '0'\nassert solution('''\nA 5\n3 4\n6 6\n7 7\n''') == '0'\nassert solution('''\nA 6\n3 4\n6 6\n7 7\n''') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3\") == \"1\"\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 5\") == \"1\"\nassert solution(\"12 3 2\") == \"3\""
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 4 3\") == \"1\""
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('10 6 3') == '1'\nassert solution('1 0 0') == '0'\nassert solution('3 0 0') == '0'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 4 3') == \"1\"\nassert solution('1 2 3') == \"0\"\nassert solution('6 4 0') == \"6\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('4 4 2 2') == '4'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '2'\nassert solution('3') == '1'"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"6\""
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2\") == \"3\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == '3'\nassert solution('3 1 2') == '2'\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == \"3\"\n"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('1 3 4 2') == '3'\nassert solution('3 2 1 4') == '3'\nassert solution('4 3 2 1') == '3'"
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'ACGT'\nassert solution('ABBBAAA') == 'ACG'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER\") == \"AT\"\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'AT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('ATCODER') == 3\nassert solution('ATCODERCCCCC') == 8\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('ACGT') == 'ACGT'\nassert solution('ACGTT') == 'ACG'\nassert solution('ACGTATCGTACGTACGTT') == 'ACG'\nassert solution('ATCGATT') == 'ATCG'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ACGT') == 'ACGT'\nassert solution('ACGTAA') == 'ACGTAA'\nassert solution('AACGTAA') == 'AACGTAA'\nassert solution('CACGTAA') == 'ACGTAA'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ATCODER') == 'AT'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ATCODER') == '3'\nassert solution('ATCGTRR') == '3'\nassert solution('ATCG') == '3'\nassert solution('ACGT') == '3'\nassert solution('ACGTR') == '3'\n"
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\n\"\"\"\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '9'\nassert solution('999') == '9'\nassert solution('1101') == '1'\nassert solution('1101001') == '0'\nassert solution('110100101') == '1'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"2\") == \"0\"\nassert solution(\"15\") == \"11\"\n\n---------------------------------------------------------"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '9'"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"1\") == \"1\"\n\"\"\""
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '9'\n\"\"\""
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '9'\nassert solution('120') == '11'\nassert solution('999') == '8'\n\n---Submissions---\n50.9/50.0 (73.57%)\n'''\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '9'\n\n\"\"\"\nimport math\n"
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"0\") == \"0\"\nassert solution(\"100\") == \"9\"\n\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n\"\"\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofcoffee'"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\"\"\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\""
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\n"
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffe\") == \"cupofhottea\"\nassert solution(\"cupofhotte\") == \"cupofcoffe\"\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('2 5') == '5 6 7 8 9'\nassert solution('3') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 92 92 93 93 94 95 95 96 97 97 98 99 100 101 102 103 104 105 106 107 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 8"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7') == '5 6 7 8 9'\nassert solution('6 7') == '5 6 7 8 9'\n\n\"\"\"\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n\"\"\"\n\nn, k = map(int, input().split())\nx = int(input())\n\nnums = []\n\nfor i in range(n):\n    nums.append(i)\n\ntotal = 0\n\nfor i in range(n):\n    total += nums[i]\n\nlst = []"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '5'\nassert solution('2 8') == '8'\nassert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('3 9') == '9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n\n\"\"\"\n\nK, X = map(int, input().split())\nfor i in range(X + 1):\n    if (i + 10000) % K == 0:\n        print(i)\n"
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"5 6 7 8 9\"\nassert solution(\"4 5\") == \"6 7 8 9\"\n\"\"\""
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25') == 'No'\nassert solution('25') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('-5') == 'No'\nassert solution('-10') == 'No'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"25\") == \"Yes\"\n\nassert solution(\"-40\") == \"No\"\nassert solution(\"-41\") == \"Yes\""
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-10') == 'No'\nassert solution('10') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('40') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"-1.9\") == \"No\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"Yes\"\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('0') == 'No'\nassert solution('4') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == 'Yes'\nassert solution(2) == 'No'\nassert solution(3) == 'No'\nassert solution(4) == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == 'Yes'\nassert solution('25') == 'No'\nassert solution('-5') == 'No'\nassert solution('-100') == 'No'\nassert solution('101') == 'Yes'\n"
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'No'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 5') == '1'\nassert solution('-2 8') == '2'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 2') == '1'\nassert solution('5 3') == '1'\nassert solution('-2 8') == '0'\nassert solution('6 4') == '0'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"4 1\") == \"0\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"-2 8\") == \"1\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"4 2\") == \"2\"\n"
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2]) == '1'\nassert solution([10, 10]) == '0'\nassert solution([1, 2]) == '1'\nassert solution([1, 3]) == '2'\nassert solution([-2, -4]) == '1'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'Good'\nassert solution('35') == 'Good'\nassert solution('5479') == 'Bad'\nassert solution('12') == 'Good'\nassert solution('3233') == 'Bad'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1333') == 'Good'\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"1235\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Bad'\n\n------Hint:--------\n- Hint:\n- For a 4-digit number, '1234' is the first occurrence of 2 consecutive digits that are the same\n- For a 4-digit number, '1234' is the first occurrence of 2 consecutive digits that are the same\n- For a 4-digit number, '1234' is the first occurrence of 2 consecutive digits that are the same\n- For a 4-digit number, '1234' is the first occurrence of 2 consecutive digits that are the same\n\"\"\""
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2143\") == \"Good\"\nassert solution(\"2835\") == \"Bad\"\nassert solution(\"3776\") == \"Bad\"\nassert solution(\"9787\") == \"Good\"\nassert solution(\"4856\") == \"Good\"\n\n-----------------\nSample Input 2\n-----\n5\n7\n7\n\nSample Output 2\n-----\nBad\n\nThe first and third digits are the same, so 5 and 7 is hard to enter.\n-----\nSample Input 3\n-----\n9\n1\n1\n\nSample Output 3\n-----\nBad\n\nThe first and fourth digits are the same, so 9 and 1 is hard to enter.\n\n'''"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3776') == 'Good'\nassert solution('1234') == 'Good'\nassert solution('3456') == 'Bad'\nassert solution('123') == 'Bad'"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3776\") == \"Bad\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"123456\") == \"Good\"\n\"\"\""
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('123456') == 'Good'\n\"\"\"\n"
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3776\") == \"Bad\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '2'\nassert solution('4') == '3.75'\nassert solution('5') == '3.875'\nassert solution('20') == '3.181818181818181818181818182'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('4\\n1 2 3 4') == '3.25'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3 4''') == '3.5'\nassert solution('''5\n8 8 8 4 6''') == '7.6666666666666665'"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"5.0\"\nassert solution(\"4\") == \"5.5\"\nassert solution(\"6\") == \"7.5\"\nassert solution(\"10\") == \"13.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3.50001\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"4\") == \"4.0\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '3.0'\nassert solution('3') == '4.0'\nassert solution('4') == '5.0'\nassert solution('5') == '7.0'\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"4\") == \"3.5\"\nassert solution(\"6\") == \"3.5\"\nassert solution(\"10\") == \"3.5\"\nassert solution(\"100\") == \"3.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"2 4\") == \"3.5\"\n"
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == '2.0'\nassert solution('2\\n4\\n') == '3.0'\nassert solution('3\\n4\\n') == '4.0'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"14\""
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"1\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"2\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"1\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\nassert solution(\"3\\n3 1 2\\n2 5 4\\n3 6\") == \"14\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 1 2\") == \"4\""
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"2 5 4\") == \"14\"\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '14'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 1, 2]) == 14\nassert solution([3, 1, 2, 3, 2, 3, 4]) == 16\nassert solution([2, 1, 2, 3, 2, 3, 4, 3, 2, 3, 4, 3, 2, 3, 4]) == 21\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 5 4\n3 6''') == '14'\nassert solution('''5\n1 2 3 4 5''') == '18'\nassert solution('''4\n1 2 3 4''') == '8'\n"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"14\"\nprint(solution(input_string))"
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '14'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 2\n'''\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\nABCDBABCQ') == '2'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n\n##"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '2'\nassert solution('10') == '2'\nassert solution('10') == '2'\nassert solution('10') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\nABCDBABCQ\") == \"2\"\nassert solution(\"12\\nABCDBCAB\") == \"2\"\nassert solution(\"1\\nABCDBA\") == \"1\""
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\nZABCDBABCQ') == '2'\nassert solution('1\\nA') == '0'\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution('ZABCDBABCQ') == '2'\n\"\"\"\n"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nABCDEFGHI') == '2'"
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\nZABCDBABCQ\n''') == '2'\nassert solution('''\n50\nABABCDCDCADABADCDCDCDCDCDCDCDCDCDCDCDCDC\n''') == '1'\nassert solution('''\n50\nABBABACDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC\n''') == '1'\nassert solution('''\n50\n
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == '2'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n'''\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nMASHIKE:RUMOI:HABORO:OBIRA:HOROKANAI\") == \"2\"\nassert solution(\"5\\nMASHIKE:RUMOI:OBIRA:HABORO:HOROKANAI\") == \"1\"\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n\"\"\""
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n'''\n"
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n\"\"\""
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\\n\") == \"2\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('6 8') == 'Yes'"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\", \"First test case failed\"\nassert solution(\"2 2\") == \"No\", \"Second test case failed\"\nassert solution(\"2 3\") == \"Yes\", \"Third test case failed\"\nassert solution(\"3 2\") == \"Yes\", \"Fourth test case failed\"\n\"\"\"\nimport sys"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Yes'\nassert solution('8') == 'No'\nassert solution('15') == 'Yes'\nassert solution('16') == 'No'\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == \"Yes\"\nassert solution('4 3') == \"No\"\nassert solution('4 5') == \"Yes\"\n\"\"\"\nn, m = map(int, input().split())\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(Takahashi) == 'Yes'\n\"\"\""
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('1 1') == 'No'\n\"\"\""
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('4 3') == 'No'\nassert solution('5 6') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1 3') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('sippur') == 'No'"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"afgih\") == \"No\"\n\"\"\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\n\"\"\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('jiji') == 'No'"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('doggie') == 'No'\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('pgguu') == 'Yes'\nassert solution('a') == 'No'\nassert solution('d') == 'No'"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"aaa\") == \"No\"\n\"\"\""
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippaa') == 'No'"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"No\"\n"
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes','sippuu'\nassert solution('s') == 'No','s'"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"10 60\") == \"TLE\"\nassert solution(\"20 50\") == \"TLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 5') == '5'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"3 5\") == \"TLE\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 60') == '4'\nassert solution('2 70') == 'TLE'\nassert solution('3 50') == '4'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == 'TLE'"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1000\") == \"1\"\nassert solution(\"1 1000\") == \"1\"\n"
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 60\n7 60\n1 80\n4 50\n''') == '4'\nassert solution('''\n2 200\n30 100\n1 100\n4 300\n''') == '200'\nassert solution('''\n2 300\n30 100\n1 100\n4 300\n''') == '300'\nassert solution('''\n3 1000\n3 1000\n1 1000\n4 1000\n''') == '1000'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 9\n''') == '8'\nassert solution('''\n10 1 8\n''') == '7'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 1') == '8'\nassert solution('3 4 5') == '12'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 9') == '8'\nassert solution('4 2 9') == '8'\nassert solution('4 4 9') == '12'\nassert solution('3 3 9') == '18'\nassert solution('10 10 9') == '60'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 4\n''') == '4'\nassert solution('''10 5 50\n''') == '100'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2 9\n''') == \"8\"\nassert solution('''5 6 7\n''') == \"14\"\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4, 2, 9]) == '8'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('4 2 8') == '9'\nassert solution('4 2 7') == '7'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '4'\nassert solution('3 3 1') == '4'\nassert solution('3 4 10') == '16'\nassert solution('4 5 2') == '6'\nassert solution('3 2 0') == '0'\n"
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('3 1 2') == '3'"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nprint(solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n'))\nprint(solution('3\\nacornistnt\\npeanutbomb\\nconstraint'))\n\n----------Code----------\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ncount = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] == b[j]:\n            count += 1\n            break\n    if count == 0:\n        print(0)\n        break\n    count = 0\nprint(count)\n\n\n\nsolution('4\\n1 2 3 4\\n2 3 3\\n3\\n1 2\\n')"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('4\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('5\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('4\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\""
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1', \"Wrong solution\"\nassert solution('2') == '1', \"Wrong solution\"\nassert solution('3') == '1', \"Wrong solution\"\nassert solution('4') == '0', \"Wrong solution\"\nassert solution('5') == '0', \"Wrong solution\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('100') == '0'\n"
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"acornistnt\", \"peanutbomb\", \"constraint\"]) == \"1\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56\n\n''') == '1'\nassert solution('''4\n2132\n506\n999999999\n1000000000\n\n''') == '8'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n3\n20\n38\n56''') == '2'\n\nassert solution('''5\n1\n3\n20\n38\n56''') == '8'\n\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == '8'\n\nassert solution('''1\n100000''') == '0'\n\n\nprint(solution('''{q}\n{i}\n{k}'''.format(q=1, i=3, k=20)))"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '8'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"1\"\nprint(solution(input))\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == '1'\nassert solution('''1\n2\n3\n4\n5''') == '2'\nassert solution('''2\n3\n4\n5\n6\n7\n8''') == '4'\nassert solution('''3\n4\n5\n6\n7\n8''') == '5'\nassert solution('''4\n5\n6\n7\n8\n9''') == '6'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '5'\nassert solution('3') == '2'\nassert solution('20') == '2'\n"
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == \"1\"\nassert solution(example_input_2) == \"2\"\nassert solution(example_input_3) == \"9\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '6 2\\n'\n    '1 4\\n'\n    '4 3\\n'\n    '3 5\\n'\n    '3 6\\n'\n    '5 2\\n'\n) == '2'\nassert solution(\n    '4 2\\n'\n    '3 1\\n'\n    '1 4\\n'\n    '1 2\\n'\n) == '1'\nassert solution(\n    '10 2\\n'\n    '10 3\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 4\\n'\n    '2 5\\n'\n    '2 6\\n'\n    '2 7\\n'\n    '3 8\\n'\n    '3 9\\n'\n) == '3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '1 2 1 1 2 \n'\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '1 1 1 \n'''\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"3 2\") == \"1 2 1\"\nassert solution(\"6 2\") == \"1 2 1 1 2 1\"\nassert solution(\"100 100\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1 2 1 1 2\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1 2 1\"\nassert solution(\"4 2\") == \"1 2 1 1 2\"\nassert solution(\"6 2\") == \"1 2 1 1 2 2\"\nassert solution(\"4 2\") == \"1 1 1 1\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '3'\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution() == '1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 2\"\n    \"1 4\"\n    \"4 3\"\n    \"3 5\"\n    \"3 6\"\n    \"5 2\"\n    ) == \"2\"\nassert solution(\n    \"10 2\"\n    \"1 4\"\n    \"1 2\"\n    \"1 3\"\n    \"1 4\"\n    \"2 5\"\n    \"2 6\"\n    \"2 7\"\n    \"3 8\"\n    \"3 9\"\n    ) == \"3\"\n"
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 2\n1 4\n4 3\n3 5\n3 6\n5 2''') == '2'\nassert solution('''4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9''') == '3'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == '2 4'"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n1 2 4 4\n2 2\n3 3\n3\n1 2\n3\n''') == \"2 4\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 4'\nassert solution() == '3 6'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2 4\"\nassert solution(\"8\") == \"7 6\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 4 4\\n') == '2 4'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\n\n\nhttps://cses.fi/problemset/task/1074\n\"\"\""
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2 4\"\nassert solution(\"9\") == \"3 8\"\nassert solution(\"7\") == \"3 6\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 8 8 8 4 4 4 4') == '2 4'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 4 4\n''') == '2 4'\nassert solution('''\n9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 4\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\") == \"3 8\"\n"
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4\n\n''') == '2 4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9\n\n''') == '9 8'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9\n\n''') == '1 1'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9\n\n''') == '3 6'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3 2 1 4 5', 'Tests'\nassert solution('3') == '1 2 3', 'Tests'"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3 2 1\"\nassert solution(\"2\") == \"2 3 1\"\nassert solution(\"1\") == \"1 2 3\"\n\nstdin = \"\"\"\n4\n2 4\n4 1\n4 2\n4 3\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 2 4 1 5', 'Wrong answer in test #1'\nassert solution('3') == '3 2 1 5 4', 'Wrong answer in test #2'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3 2 1 5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3 2 4 1 5', 'Wrong'\nassert solution('3') == '3 2 1', 'Wrong'\nassert solution('1 2') == '2 1', 'Wrong'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n5 2\n\"\"\") == \"3 2 1 5\"\nassert solution(\"\"\"\n3\n3 1\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"\n5\n3 4\n\"\"\") == \"3 4 1 5\"\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('3\\n3 1\\n1 2') == '3 1 2'\nassert solution('5\\n5 2 1 2 3') == '5 2 1 2 3'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('3') == '3 2 4 1'\n"
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3 5') == '3 2 4 1 5'\nassert solution('3\\n2 3') == '3 1 2'"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 10 17 12 15 2\") == \"3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == str(input_)\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(0).read()) == '3'\n"
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1 10\") == \"1\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\nassert solution() == '-1'"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''4\n16 7 5 2\n15 5 7 3\n20 5 7 3''') == '0'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\n\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n-1\\n5\\n2\"\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 5 4 3\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\"\n\n'''\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('15 5 3 2') == '-1'\nassert solution('15 5 4 3') == '5'\nassert solution('15 5 2 1') == '2'\nassert solution('15 5 5 1') == '0'\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 5 3 2\n10 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\n\nassert solution('''\n10 5 3 2\n10 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '5'\n\nassert solution('''\n10 5 4 3\n10 5 5 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '2'\n\nassert solution('''\n10 5 5 3\n10 5 5 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\n\nassert solution('''\n10 5 5 3\n10 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '3'\n\n\n'''\n10 4 3 2\n10 4 4 3\n15 4 2 1\n15 4 5 1\n16 7 4 2\n20 5 7 3\n'''\n"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\n\nassert solution('''\n7\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n10 10 4 5\n''') == '-1'\n\n'''\nA python function is a module (the main module) and a script is a file.\n\nA module is basically a collection of functions that are stored as a single file.\n\nPython provides the core functionality of the scripting language using the built-in function eval( expression ) which takes an expression and evaluates it to return a value.\n\nPython is a dynamically typed language. Therefore functions should be defined with a particular type of arguments and return type.\n\nPython uses two different types of values (i.e. int, float, string, bool, None).\n'''"
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\\n-1\\n5\\n2\\n0\""
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n''') == '-1'\nassert solution('''\n1\n3\n-1\n''') == '0'\nassert solution('''\n2\n3\n4\n''') == '1'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"10\") == \"13668\"\nassert solution(\"9\") == \"148536\"\nassert solution(\"12\") == \"168\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\naaaaaaaaa\n''') == '650104'\n\nassert solution('''9\naaaaaaaaa\n''') == '4629'\n\nassert solution('''5\naaaaaaaaa\n''') == '0'\n\nassert solution('''3\naaaaaaaaa\n''') == '10'\n\nassert solution('''7\naaaaaaaaa\n''') == '18'"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nac?b?c\n''') == \"24\"\nassert solution('''7\n???????\n''') == \"2835\"\nassert solution('''5\na???c\n''') == \"46\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"ac?b?c\"\n) == \"24\"\n\nassert solution(\n    \"??????\"\n) == \"2835\"\n\nassert solution(\n    \"cccbbbaaa\"\n) == \"0\"\n\nassert solution(\n    \"ac???c\"\n) == \"46\"\n\nprint(solution(\n    input()\n))"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == '24'\nassert solution(\"7\") == '2835'\nassert solution(\"9\") == '0'\nassert solution(\"5\") == '46'\nassert solution(\"10\") == '0'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nac?b?c\n''') == '24'\nassert solution('''\n5\na???c\n''') == '46'\nassert solution('''\n7\n???????\n''') == '2835'\nassert solution('''\n9\ncccbbbaaa\n''') == '0'\nassert solution('''\n5\na???c\n''') == '46'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == \"24\"\nassert solution('7') == \"2835\"\nassert solution('9') == \"0\"\nassert solution('5') == \"46\"\nassert solution('ac??c') == \"46\"\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == '24'\n"
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"46\""
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\nac?b?c\n\nOutput\n24''') == '24'\n\nassert solution('''7\n???????\n\nOutput\n2835''') == '2835'\n\nassert solution('''5\na???c\n\nOutput\n46''') == '46'\n\nassert solution('''9\ncccbbbaaa\n\nOutput\n0''') == '0'\n\nassert solution('''3\naa??\n\nOutput\n1''') == '1'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"3 0\") == \"16\"\nassert solution(\"5 4\") == \"18\""
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\nassert solution(stdin='3 2') == '5'\nassert solution(stdin='4 0') == '16'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\n\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\n\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"4 0\") == \"16\""
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"16\"\nassert solution(input_string2) == \"18\"\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n\n''') == '16'\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\n\nassert solution('''4 0\n1 3 3 7\n\n4 0\n1 2 3 4 5''') == '16'\n"
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"1 3 3\\n\"\n    \"2 3 5\\n\"\n    \"2 1 1\\n\"\n    ) == \"5\"\n\nassert solution(\n    \"4 0\\n\"\n    \"1 3 3 7\\n\"\n    \"2 3 5\\n\"\n    \"2 1 1\\n\"\n    ) == \"16\"\n\nassert solution(\n    \"5 4\\n\"\n    \"1 2 3 4 5\\n\"\n    \"1 2 8\\n\"\n    \"1 3 10\\n\"\n    \"1 4 7\\n\"\n    \"1 5 15\\n\"\n    ) == \"18\""
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '45'\n\n\"\"\""
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n1 5\") == \"-1\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n2 3\") == \"45\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2 4\\n'\n                '3 7\\n'\n                '8 10\\n'\n                '0 10\\n'\n                '3 4\\n'\n                '8 1\\n'\n                '>') == '14'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\n''') == '14'\nassert solution('''\n10 1 1\n0 9\n1 5\n\n''') == '45'"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '45'\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"45\"\nassert solution(\"1 1 1\") == \"45\"\nassert solution(\"2 2 2\") == \"14\"\nassert solution(\"3 3 2\") == \"7\"\nassert solution(\"4 4 2\") == \"11\"\n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"14\"\n\n\"\"\"\n\na, n, m = list(map(int, stdin.split()))\n\nx = 0\nz = 0\n\nfor i in range(n):\n    l, r = list(map(int, stdin.split()))\n    if x < l:\n        z = x\n        x = l\n    if x > r:\n        x = r\n        \n"
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n\"\"\""
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 1') == 'No'"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 4\") == \"Yes\", \"Should be Yes\"\nassert solution(\"1 2 3\") == \"No\", \"Should be No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('4 3 5') == 'No'"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 2 3') == 'No'"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 7 5''') == 'Yes'\nassert solution('''6 7 4''') == 'No'\nassert solution('''1 1 1''') == 'Yes'\n''') == 'Yes'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 5 5') == 'No'\nassert solution('4 4 4') == 'No'\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 3 5\") == \"No\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"1 5 1\") == \"No\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\n"
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('2 3 3') == 'No'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\n1000 2000') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n6 7\n0 1 2\n4 5\n8 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n10 12\n0 1 2 3 4\n5 6 7 8 9\n10 11 12 13 14\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6\n0 2 9\n0 4 8\n0 7 2\n0 6 4\n0 1 3\n0 5 7\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\\n1000 2000\") == \"1\"\nassert solution(\"3\\n-4 5\\n10 20 30\") == \"2\"\nassert solution(\"2\\n10 -1\\n10 20 30\") == \"1\"\nassert solution(\"3\\n10 20 30\\n-2 2\") == \"1\"\nassert solution(\"3\\n-10 20 30\\n-20 2\") == \"2\"\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1000 2000') == '1'\nassert solution('20 10\\n1000 2000') == '2'"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    5\n    1000 2000 3000 5000\n    ''') == '1'\nassert solution('''\n    2\n    5\n    1000 2000 3000 5000\n    ''') == '2'\n''')\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n10 20\n20 50\n''') == '1'\n\nassert solution('''5\n-10 -20\n40 40\n100 100\n30 -40\n40 50\n''') == '3'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n5\n12 5\n1000 2000\n6 -30\n8 50\n10 10''') == '1'\n"
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n12\n1000 2000''') == '1'\n\nassert solution('''2\n1\n100 100''') == '1'\n\nassert solution('''2\n1\n1000 2000''') == '0'"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\nassert solution(\"4 5\\n\") == \"2\"\nassert solution(\"3 3\\n\") == \"2\"\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n') == '1'\nassert solution('3 4\\n') == '2'\nassert solution('4 6\\n') == '2'"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('4 3') == '0'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 0') == '0'\nassert solution('1 0') == '1'\nassert solution('4 5') == '0'\nassert solution('4 3') == '3'"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 1') == '0'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('8 5') == '2'\n"
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\""
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\nACCTGAT\\n3 7\\n2 3\\n1 8\\n\") == \"2\"\nassert solution(\"9 3\\nACCTGAT\\n3 7\\n2 3\\n1 8\\n\") == \"3\"\nassert solution(\"3 4\\nAACCTGAT\\n5 7\\n2 3\\n1 8\\n\") == \"2\"\nassert solution(\"5 4\\nAACCTGAT\\n3 7\\n2 3\\n1 8\\n\") == \"3\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 2') == '1'\nassert solution('8 3') == '3'\nassert solution('5 5') == '3'\nassert solution('10 10') == '3'"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\nACACTACG\") == \"2\"\nassert solution(\"1 2\\nACACTACG\") == \"0\"\nassert solution(\"3 3\\nACACTACG\") == \"3\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 10\") == \"4\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"8 7\") == \"3\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 3\nACACTACG\n3 7\n2 3\n1 8''') == '2'\nassert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '3'\nassert solution('''5 4\nACACTACG\n3 7\n2 3\n1 8''') == '3'\nassert solution('''6 6\nACACTACG\n3 7\n2 3\n1 8\nA\n4 4\nATACTACG\n3 7\n2 3\n1 8''') == '0'\nassert solution('''6 9\nACACTACG\n3 7\n2 3\n1 8\nA\n4 4\nATACTACG\n3 7\n2 3\n1 8''') == '3'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 3') == '2'\nassert solution('6 5') == '0'\nassert solution('5 2') == '0'\n\n'''\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"9 4\") == \"3\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"7 5\") == \"3\"\nassert solution(\"100 5\") == \"10\"\n\n\"\"\"\n\nn, q = list(map(int, input().split()))\ninput_string = input()\n\nfor i in range(q):\n    l, r = list(map(int, input().split()))\n    count = 0\n    for j in range(l - 1, r):\n        if input_string[j] == \"A\" or input_string[j] == \"C\" or input_string[j] == \"G\" or input_string[j] == \"T\":\n            count += 1\n    print(count)\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '2\\n0\\n3'\n"
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\nACACTACG\n3 7\n2 3\n1 8\n''') == '2'\nassert solution('''\n5 3\nACACTACG\n3 7\n2 3\n1 8\n''') == '3'\nassert solution('''\n5 5\nACACTACG\n3 7\n2 3\n1 8\n''') == '0'\nassert solution('''\n4 5\nACACTACG\n3 7\n2 3\n1 8\n''') == '0'"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5 3\n50 100 80 120 80\n\"\"\"\n) == \"210\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 2, 3]) == \"210\"\nassert solution([3, 1, 5]) == \"250\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == '210'\nassert solution(\"2 3\\n1 2 3\\n\") == '3'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 3') == '3'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\""
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n50 100 80 120 80\\n') == '210'\nassert solution('1\\n10\\n') == '10'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"210\"\nassert solution(\"15 5\") == \"280\"\nassert solution(\"20 4\") == \"180\"\nassert solution(\"30 3\") == \"180\"\nassert solution(\"15 7\") == \"210\"\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('2 3') == '4'\nassert solution('5 3') == '6'\nassert solution('1 2 3 4 5') == '10'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 1') == '50'\n"
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 3') == '210'\nassert solution('3 3') == '210'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4\\n') == '4'\nassert solution('1 1 1\\n') == '1'"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"7\"\nassert solution(\"2 6 2\") == \"5\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4', 'Wrong solution'\nassert solution('1 2 3') == '3', 'Wrong solution'\nassert solution('1 2 5') == '6', 'Wrong solution'\nassert solution('5 2 4') == '7', 'Wrong solution'\nassert solution('5 1 5') == '9', 'Wrong solution'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == '4'"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 3 1\") == \"0\"\nassert solution(\"0 1 1\") == \"1\"\nassert solution(\"0 1 0\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"3 4 5\") == \"8\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"7\"\nassert solution(\"1 3 4\") == \"4\"\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 1 5') == '5'\nassert solution('1 2 5') == '6'\n"
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"2 3 4\") == \"7\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0', \"3 is less than 5, so we should print 0.\"\n\nWrite 3 lines of code to test the correctness of solution:\nX and A are integers between 0 and 9 (inclusive).\nIf X is less than A, print 0; if X is not less than A, print 10.\n\n-----Constraints-----\n - 0 \\leq X, A \\leq 9\n - All values in input are integers.\n\n-----Input-----\n5 8\n\n-----Output-----\n10\n\n8 is not less than 5, so we should print 10.\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '10'\nassert solution('5 4') == '10'\nassert solution('-2 1') == '0'\nassert solution('-2 -1') == '10'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 2') == '10'\nassert solution('1') == '0'\nassert solution('1 9') == '10'\n\n---\n\nX = int(input())\nA = int(input())"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"10\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '10'\nassert solution('1 4') == '0'\n\nsolution([\n    '5 3',\n    '3 5'\n])\n\nx, A = map(int, input().split())\nprint(0 if x < A else 10)"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '0'\nassert solution('0 5') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 2\") == \"10\""
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '10'\nassert solution('2 5') == '10'\n"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\nassert solution('-1 2') == '10'\nassert solution('0 1') == '0'"
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nX A\n3 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\n\n----Hints\nPrint if the given integer is positive or negative or zero.\nPrint the absolute difference.\n'''\nimport sys\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n') == '2', \"Should be 2\"\nassert solution('4 5\\n') == '1', \"Should be 1\"\nassert solution('5 6\\n') == '1', \"Should be 1\"\nassert solution('6 7\\n') == '0', \"Should be 0\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4\\n') == '1'\nassert solution('1 2 3 4 5 6 7\\n') == '1'\n\nSolution approach:\n\nFirst, we create a set with values -10**18 to 10**18.\nFor the next line of input, we search in the set if there is a value whose absolute difference is within the range 1 to 10**18.\nWe then take the minimum value that satisfies this condition, which is the minimum value we want.\nFor example, if we have a set with values -10**18, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\nand we want to take the minimum value after three operations, we can calculate the difference of 10**18 - 9, 9 - 8, 8 - 7, 7 - 6, 6 - 5,\n5 - 4, 4 - 3, 3 - 2, 2 - 1, 1 - 0, 0 - 1, 1 - 2, 1 - 3, 1 - 4, 1 - 5, 1 - 6, 1 - 7, 1 - 8, 1 - 9, 1 - 10,\nand we take the minimum value that satisfies this condition, which is the minimum value we want.\n\"\"\""
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n') == '1'\n\"\"\""
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''7 4\n''') == '1'\nassert solution('''-5 4\n''') == '1'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"1 4\") == \"0\"\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '1'\nassert solution('6 7') == '0'\nassert solution('10 2') == '2'"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '2'\nassert solution('4 4') == '0'\nassert solution('5 4') == '0'\n"
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3') == '1'\nassert solution('5 8') == '4'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'bust'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 2 3\") == \"bust\"\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'win'"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 9') == 'bust'\nassert solution('4 8 6') == 'win'\nassert solution('1 1 2') == 'win'\nassert solution('7 8 9') == 'win'\nassert solution('5 5 5') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('5 5 7') == 'bust'\nassert solution('5 5 9') == 'bust'\nassert solution('5 5 5') == 'bust'"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('3 4 2') == 'bust'"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"bust\"\nassert solution(\"5 8 6\") == \"win\"\nassert solution(\"10 10 10\") == \"win\"\n\n\"\"\""
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 9') == 'win'\n\n\"\"\""
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == 'bust'\nassert solution('1 2 1') == 'win'\nassert solution('1 2 2') == 'win'\nassert solution('1 2 3') == 'win'\n"
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'win'\nassert solution(input()) == 'bust'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\"\n) == \"6\"\n\nassert solution(\n    \"12\"\n) == \"18\"\n\nassert solution(\n    \"10\"\n) == \"10\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '6'\nassert solution('9') == '8'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"100\") == \"100\"\nassert solution(\"10001\") == \"10000\"\nassert solution(\"10000\") == \"1\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"6\", \"Wrong answer with input: 5\"\nassert solution(\"100\") == \"101\", \"Wrong answer with input: 100\"\nassert solution(\"10000000\") == \"100000000\", \"Wrong answer with input: 1000000000\"\nassert solution(\"2\") == \"2\", \"Wrong answer with input: 2\"\nassert solution(\"3\") == \"3\", \"Wrong answer with input: 3\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"1\"\n\"\"\""
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('4') == '8'\nassert solution('5') == '10'\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"9\") == \"12\"\n"
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('10') == '10'\nassert solution('4') == '4'"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '2'\nassert solution('''2 1\n1 1\n1 1\n''') == '1'\nassert solution('''3 4\n1 1 1 1\n1 2 2 1\n1 2 2 1\n1 2 2 1\n1 1 1 1\n''') == '3'\n'''\n    /     \\\n   1     2\n  / \\     \\\n 3  4    1\n\nmin_level = 1\nmin_level = max(1, min_level)\nmin_level = max(min_level, 2)\nmin_level = max(min_level, 3)\nmin_level = max(min_level, 4)\n\nreturn min_level\n'''\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\nassert solution('6 2') == '3'"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 5') == '5'\nassert solution('5 4') == '4'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"8 8\") == \"4\"\nassert solution(\"20 20\") == \"5\"\n\"\"\""
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2') == '2'\n\n'''\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"5 6\") == \"4\"\n"
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n\"\"\""
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '2'"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5) == \"bon\"\nassert solution(9) == \"pon\"\nassert solution(15) == \"bon\"\nassert solution(16) == \"pon\""
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"16\") == \"pon\"\nassert solution(\"18\") == \"bon\"\nassert solution(\"20\") == \"bon\"\nassert solution(\"36\") == \"bon\"\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"bon\"\nassert solution(input()) == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"hon\"\nassert solution(\"15\") == \"bon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"bon\"\nassert solution(input()) == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == 'bon'\nassert solution('10') == 'pon'\nassert solution('20') == 'pon'\nassert solution('30') == 'bon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('16') == 'pon'\nassert solution('42') == 'bon'\nassert solution('7') == 'hon'\nassert solution('11') == 'bon'\nassert solution('1') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"hon\"\nassert solution(\"17\") == \"bon\"\nassert solution(\"27\") == \"pon\"\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16') == 'pon'\nassert solution('12') == 'hon'\nassert solution('42') == 'bon'\nassert solution('3') == 'hon'\n"
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"3\") == \"hon\"\nassert solution(\"7\") == \"bon\"\nassert solution(\"8\") == \"bon\"\nassert solution(\"9\") == \"bon\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"24\"\nassert solution(\"5\") == \"29\"\nassert solution(\"6\") == \"36\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"11\"\nassert solution(\"5\") == \"100\"\nassert solution(\"10\") == \"100\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"7\") == \"1213\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2') == '11'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 2\\n') == '11'\nassert solution('3\\n3 2 1\\n') == '10'\nassert solution('4\\n2 3 4\\n') == '14'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3 1 2''') == '11'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 1 2\n10 15 20 25\n''') == '15'\nassert solution('''4 3 2\n1 2 1 3\n''') == '2'\nassert solution('''6 4 2\n1 2 1 2 3\n''') == '3'\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"31\"\n"
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"25\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '4'\nassert solution('6') == '4'\nassert solution('7') == '4'\nassert solution('8') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('4\\n1\\n4\\n3') == '3\\n3\\n4'\nassert solution('1\\n1\\n4\\n3') == '4\\n3\\n4'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n4\") == \"4\"\nassert solution(\"4\\n1\\n2\\n3\") == \"3\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n4') == '4\\n3'\nassert solution('3\\n1\\n4') == '4\\n3'\nassert solution('3\\n1\\n4') == '4\\n3'\nassert solution('3\\n1\\n4') == '4\\n3'\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"99\""
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4\\n3\\n4\"\nassert solution(\"2\") == \"3\\n4\"\nassert solution(\"1\") == \"3\\n4\"\nassert solution(\"4\") == \"3\\n4\\n4\"\n"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '4'\nassert solution(\"3\") == '4'\nassert solution(\"4\") == '4'"
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n4\\n3\\n\") == \"4\\n3\\n4\"\nassert solution(\"3\\n1\\n3\\n4\\n\") == \"3\\n3\\n4\""
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"4 5\") == \"9\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '9'\nassert solution('5 5') == '14'\nassert solution('5 4') == '12'\nassert solution('4 5') == '12'\nassert solution('9 10') == '19'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"3 3\") == \"1\""
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '9'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 3\") == \"4\""
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '9'\nassert solution('1 2') == '2'\nassert solution('5 5') == '9'"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '9'\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\n"
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"1 1\") == \"1\"\n\"\"\""
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"9\""
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"1\", \"10\", \"20\", \"50\"]) == \"40\"\nassert solution([\"3\", \"3\", \"4\"]) == \"60\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '40'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"40\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"2 2\") == \"3\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n-30 -10 10 20 50''') == '40'\n\nimport math"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"100000 50\") == \"100000\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"4 1\") == \"0\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"40\"\nassert solution(\"4 3\") == \"100\"\nassert solution(\"5 3\") == \"60\"\nassert solution(\"6 3\") == \"80\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"6 3\") == \"60\"\nassert solution(\"7 3\") == \"81\"\nassert solution(\"7 2\") == \"84\"\nassert solution(\"8 2\") == \"85\"\n"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"40\"\n\"\"\"\n\nimport heapq"
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == \"60\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 1') == '1'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 13') == '2'\nassert solution('20 20') == '0'\nassert solution('20 100') == '0'\nassert solution('20 200') == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1,1]) == '1'\nassert solution([1,2]) == '2'\nassert solution([1,3]) == '3'\nassert solution([1,4]) == '4'\nassert solution([1,5]) == '5'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1\"\n) == \"1\"\nassert solution(\n    \"10 10\"\n) == \"0\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('1 1') == '1'\nassert solution('9 9') == '1'\nassert solution('101 101') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 13') == '2'\nassert solution('8 2') == '1'\nassert solution('11 1') == '1'\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"-1 2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 13\") == \"2\""
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"2\"\nassert solution(\"9 1\") == \"1\""
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '10 4\\n'\n    ) == '3'\nassert solution(\n    '10 3\\n'\n    ) == '2'\nassert solution(\n    '10 2\\n'\n    ) == '1'"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"10 5\") == \"8\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 5\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 10\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4\\n') == '3'\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"3\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"10 10\") == \"3\"\nassert solution(\"10 20\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"5 7\") == \"3\"\nassert solution(\"6 1\") == \"2\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4') == '3'\nassert solution('5 6') == '1'\nassert solution('6 9') == '1'\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n10 4\\n\") == \"3\"\n\"\"\""
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 75 25 100') == '50'"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 0 25 100\") == \"75\"\nassert solution(\"0 75 25 100\") == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", \"Case 1\"\nassert solution(\"0 0 25 100\") == \"0\", \"Case 2\"\nassert solution(\"100 100 0 100\") == \"50\", \"Case 3\"\nassert solution(\"0 100 0 100\") == \"0\", \"Case 4\"\nassert solution(\"0 0 0 0\") == \"0\", \"Case 5\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 75 25 100\") == \"50\",'sample test 1'\nassert solution(\"1 100 100 0\") == \"1\",'sample test 2'\nassert solution(\"100 0 0 0\") == \"0\",'sample test 3'\nassert solution(\"100 200 200 100\") == \"200\",'sample test 4'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 75 25 100\n''') == \"50\"\nassert solution('''\n0 75 0 100\n''') == \"0\"\nassert solution('''\n1 10 25 100\n''') == \"35\"\nassert solution('''\n0 50 25 100\n''') == \"0\"\nassert solution('''\n-1 50 25 100\n''') == \"35\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0\") == \"\"\n\"\"\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == \"50\"\nassert solution('0') == \"0\"\nassert solution('0 75 25 100') == \"50\"\nassert solution('100 1000') == \"0\"\nassert solution('1 2 3 4') == \"0\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 0') == '0'\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"50\"\n"
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('1 5 2 8') == '8'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('105') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nN\n1\n''') == '1'\nassert solution('''\nN\n105\n''') == '1'\nassert solution('''\nN\n10\n''') == '0'\nassert solution('''\nN\n100\n''') == '0'\nassert solution('''\nN\n40\n''') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('105') == '1'\nassert solution('100') == '0'"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('105') == '1'\nassert solution('10') == '0'\nassert solution('1') == '0'"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('105') == '1'\nassert solution('4') == '0'\nassert solution('20') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"101\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"10 3\") == \"2\"\nassert solution(\"100 100\") == \"0\"\nassert solution(\"1000000 10000000\") == \"2\"\nassert solution(\"200000000 10\") == \"0\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\", \"wrong result\"\n\nassert solution(\"5 3\") == \"1\", \"wrong result\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"10 9\") == \"8\"\nassert solution(\"10 9\") == \"8\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"1\"\nassert solution(\"8 1\") == \"1\"\nassert solution(\"9 6\") == \"3\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n''') == '1'\nassert solution('''\n1 3\n''') == '1'\nassert solution('''\n2 2\n''') == '0'\nassert solution('''\n2 3\n''') == '1'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '3'\nassert solution('1000 1') == '1'\nassert solution('20 1') == '1'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"6 5\") == \"1\"\n"
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"6 4\") == \"1\""
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"10 3\") == \"9\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"10 10\") == \"9\""
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1'\nassert solution('0 0') == '0'\nassert solution('100 10') == '9'\nassert solution('10 10') == '0'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '999999'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"111\") == \"111\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\nassert solution('11') == '11'\nassert solution('100') == '100'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"111\") == \"111\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"111\"\n\n'''"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '10'\nassert solution('11') == '11'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\n\n\"\"\"\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('111') == '111'\nassert solution('22') == '22'\nassert solution('21') == '21'\nassert solution('11') == '11'\nassert solution('2110') == '2110'\n"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('111') == '111'\nassert solution('111') == '111'\nassert solution('1111') == '111'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\nassert solution('100') == '100'\nassert solution('50') == '50'\nassert solution('1000') == '1000'\nassert solution('111') == '111'"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '5'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('5 7 10') == '7'\n\"\"\"\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"10\""
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 1 2') == '2'\nassert solution('2 1 1') == '3'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 5') == '8'\nassert solution('2 3 5') == '7'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 6 3') == '5'"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 6 3') == '5'"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 6 3') == \"5\"\nassert solution('1 10 10 10') == \"1\"\n\n----Extension----\nIf a and b are positive integers, then a < b, and the minimum cost is the absolute value of a - b.\n\nIf a and b are equal, then the minimum cost is 0.\n\n----Limitations----\nWe have the following constraints:\n - 1 \\leq A_1, A_2, A_3 \\leq 100\n\n\"\"\"\n\na, b, c = map(int, input().split())\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('-1 -2 -3') == '-5'\nassert solution('-1 2 -3') == '-5'\nassert solution('-1 2 3') == '-5'\n"
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 3 2') == '3'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n''') == '5'\nassert solution('''4\n''') == '4'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('8') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"100\") == \"10\"\nassert solution(\"12\") == \"4\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('8') == '5'\n"
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"5\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 2 3\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"No\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 1 1\n''') == 'No'\n\nassert solution('''\n10 9 10 10\n''') == 'No'\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 9 10 10\\n\") == \"No\"\n\n\"\"\"\n\nA,B,C,D=map(int,input().split())\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 7 6 3') == 'No'\nassert solution('10 9 10 10') == 'Yes'\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"3 8 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5 7\") == \"Yes\"\nassert solution(\"3 8 3 8\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"No\"\n\nstdin = input()\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"11 9 11 11\") == \"No\"\n"
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 21 23 24 25\") == \"Yes\"\nassert solution(\"50 99 100 99\") == \"No\"\nprint(solution(input()))\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n10 2 5\n6 3 4\n''') == '5'\nassert solution('''4\n4 3 4 5\n3 2 1 6\n''') == '5'\nassert solution('''8\n4 1 2 3\n3 1 3 4\n3 1 4 5\n4 2 2 6\n2 1 4 3\n2 3 2 2\n3 2 1 3\n3 1 4 1\n''') == '7'\nassert solution('''11\n10 2 5 2 4 5 6 2 7 3 8 2 9 2 1 3\n5 2 5 4 5 8 5 1 6 3 3 4 2 8\n2 1 6 2 5 4 3 6 7 1 1 6 2 3\n3 8 9 9 7 5 1 4 8 4 3 9 3\n8 1 4 5 6 8 8 4 3 9 9 4 1\n2 5 1 8 3 2 7 1 6 6 4 2 2\n2 5 1 5 3 3 8 7 8 8 3 3 4\n4 9 5 5 1 6 4 2 4 4 7 4\n1 3 3 3 1 5 4 3 2 3 2 6\n1 3 3 1 5 5 4 3 2 3 2 6\n''') == '6'\nassert solution('''1\n3\n3 3 3\n''') == '3'\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"3\\n1 1 1\\n2 2 2\") == \"3\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '5'\nassert solution('10') == '15'\nassert solution('6') == '10'"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"5\""
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '5'\nassert solution('5') == '5'\nassert solution('9') == '10'\n\n-----Hints-----\nUse Greedy Algorithm to solve this problem.\n'''\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"10\"\n\"\"\"\n"
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"4\\n8 2 4 10\\n12 3 7 16\\n9 8 5 16\") == \"17\"\nassert solution(\"10\\n7 5 3\\n1 2 5 7 9\") == \"6\"\nassert solution(\"1\\n1 3\") == \"0\"\nassert solution(\"2\\n1 2\") == \"0\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\n##.#\\n##.#\\n##.#\\n##.#') == '###\\n###\\n.##\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 10\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n##.#\\n....\\n##.#\\n.#.#') == '###\\n###\\n.##\\n'\n\n\"\"\"\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n##.#\\n....\\n##.#') == '###\\n###\\n.##\\n'\nassert solution('10 10\\n##.#\\n....\\n##.#\\n##.#\\n##.#\\n##.#\\n##.#\\n##.#\\n###\\n###') == '###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n#.#\\n#.#\\n.##\\n') == '###\\n###\\n.##\\n'\nassert solution('4 4\\n###.\\n####.\\n##.#\\n') == '###.\\n###.\\n##.#\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n##.#\\n###.\\n###.\\n##.#\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.') == '###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###'\nassert solution('2 2\\n##.#\\n###.\\n###.\\n##.#\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.') == '###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###'\nassert solution('5 5\\n##.#\\n###.\\n###.\\n##.#\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.') == '###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###'\nassert solution('1 1\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.') == '#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#'\nassert solution('3 3\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.') == '#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#\\n#'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '###\\n###\\n.##\\n'\nassert solution('7 7') == '###\\n###\\n###\\n###\\n###\\n###\\n###\\n'\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n##.#\n....\n##.#\n\n''') == '###'\nassert solution('''\n3 4\n"
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"2 3\") == \"##\\n##\\n\"\nassert solution(\"2\") == \"##\\n\""
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"###\"\nassert solution(\"1\") == \"###\"\nassert solution(\"1 1\") == \"###\"\nassert solution(\"3 1\") == \"###\"\nassert solution(\"2 2\") == \"###\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '1.5707963267948966'\nassert solution('3') == '0.7853981633974483'\nassert solution('4') == '0.7853981633974483'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '0.0'\nassert solution('3') == '1.4142135623730950488016887242097152'\n\"\"\"\nimport math"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('0') == '6.28318530717958623200'\nassert solution('-1') == '6.28318530717958623200'\nassert solution('1.1') == '6.28318530717958623200'\nassert solution('2.01') == '9.8284375'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '6.28318530717958623200'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"1.57079632679489661923\""
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('1')!= '6.28'\nassert solution('0')!= '0'\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"-2\") == \"6.2831853071795862\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6.28318530717958623200', \"Wrong solution\"\nassert solution('2') == '12.5663706143591721800', \"Wrong solution\"\nassert solution('5') == '79.071194596923747500', \"Wrong solution\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"1.1\") == \"6.28318530717958623200\"\nassert solution(\"1.000\") == \"6.28318530717958623200\"\nassert solution(\"0.0000\") == \"6.28318530717958623200\"\nassert solution(\"-1\") == \"6.28318530717958623200\"\n"
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"0\") == \"6.28318530717958623200\"\nassert solution(\"10\") == \"6.28318530717958623200\"\nassert solution(\"-1\") == \"6.28318530717958623200\"\nassert solution(\"5\") == \"12.566370614359172\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ABCDAB\") == \"Yes\"\nassert solution(\"AAABBB\") == \"Yes\"\nassert solution(\"AAABB\") == \"No\"\nassert solution(\"\") == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASNS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('SSS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"TAC\") == \"No\""
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC') == 'Yes'\nassert solution('ASDA') == 'Yes'\nassert solution('ABCDAB') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASAS') == 'No'\n\n\"\"\""
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASAS') == 'No'\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ASSA') == \"Yes\"\nassert solution('ASAS') == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASSF\") == \"No\"\n"
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ASSA') == \"Yes\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 5') == '7'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1', 'first'\nassert solution('-13 3') == '-10','second'\nassert solution('5 0') == '5', 'third'\n\"\"\"\n\na, b = map(int, input().split())\nprint(max(a + b, a - b, a * b))\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-13 3\") == \"10\"\nassert solution(\"-20 4\") == \"14\"\nassert solution(\"20 5\") == \"25\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"-13 3\") == \"10\"\nassert solution(\"10 20\") == \"50\"\nassert solution(\"15 20\") == \"25\"\nassert solution(\"-13 20\") == \"-27\"\nassert solution(\"10 -20\") == \"-40\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"2 4\") == \"6\"\nassert solution(\"6 6\") == \"12\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-1 -3') == '-1'"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"-5\"\nassert solution(\"4 5\") == \"-10\"\nassert solution(\"0 3\") == \"-3\"\nassert solution(\"12 13\") == \"13\"\nassert solution(\"-100 3\") == \"3\"\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-13 3') == '-10'\nassert solution('-0 -0') == '-0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('-1 2') == '2'\nassert solution('-100 3') == '-103'\nassert solution('-100 -3') == '103'\nassert solution('-100 100') == '-103'\n"
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"-13 3\") == \"10\"\nassert solution(\"13 3\") == \"10\"\nassert solution(\"-1 3\") == \"3\"\nassert solution(\"1 3\") == \"3\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 2\\n') == '1'\nassert solution('4\\n10 8 5 2\\n') == '3'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('10') == '8'\nassert solution('10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10') == '11'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n6 5 6 8\"\n) == \"3\""
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\",\n    \"4 5 6 8\",\n) == \"3\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n5 5 5 5 5''') == '3'\nassert solution('''4\n10 8 4 7''') == '2'\nassert solution('''3\n5 5 5''') == '1'\nassert solution('''3\n5 8 5''') == '2'\nassert solution('''7\n3 1 1 4 3 4 6''') == '2'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"2\") == \"0\"\nassert solution(\"10 5 6 8\") == \"3\"\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n6 5 6 8\n''') == '3'\nassert solution('''\n5\n1 3 4 9 2\n''') == '1'\nassert solution('''\n5\n2 4 1 8 9\n''') == '1'\n"
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == \"1\"\n\nassert solution('''\n4\n1 1 1 1\n''') == \"4\"\n\nassert solution('''\n5\n1 2 3 4 5\n''') == \"1\"\n\nassert solution('''\n5\n1 1 1 1 1\n''') == \"3\"\n\nassert solution('''\n5\n1 2 2 3 3\n''') == \"2\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 2 3 1 2 3 4\") == \"2\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 2 1\") == \"3\"\nassert solution(\"7\\n1 2 3 1 2 3 4\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5\\n1 2 1 2 1\") == \"2\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '2'\nassert solution('4') == '4'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n1 2 3\n    \"\"\",\n) == \"2\"\n\nassert solution(\n    \"\"\"\n1\n    \"\"\",\n) == \"1\"\n\nassert solution(\n    \"\"\"\n5\n1 2 1 2 1\n    \"\"\",\n) == \"3\"\n\nassert solution(\n    \"\"\"\n5\n1 1 1 1\n    \"\"\",\n) == \"1\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n1 2 3 1 2 3 4\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n5\n1 2 1 2 1\n''') == '3'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n1 2 3 1 2 3 4\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n4\n1 1 1 1\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n5\n1 2 1 2 1\n    \"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2'\nassert solution('4') == '4'\nassert solution('5') == '1'\nassert solution('5') == '5'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '2 3 4 1 2 1'"
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2 3 4 5\"\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\nassert solution('''2\n3\n4\n7\n8''') == '2'\nassert solution('''1\n100000''') == '100000'\nassert solution('''100000\n100000''') == '100000'\nassert solution('''100000\n100000''') == '100000'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '7'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n3\n6\n7\n21\n28''') == '1'\nassert solution('''2\n3\n6\n7\n21\n28''') == '2'\nassert solution('''2\n3\n6\n7\n21\n28''') == '1'\nassert solution('''2\n3\n6\n7\n21\n28''') == '2'\nassert solution('''2\n3\n6\n7\n21\n28''') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('3\\n') == '1'\nassert solution('3\\n') == '7'\nassert solution('3\\n') == '4'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3\n6\n7\n21\n28\n''') == '1'\nassert solution('''\n4\n3\n7\n23\n39\n''') == '2'\nassert solution('''\n3\n2\n3\n''') == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n6\n7\n21\n28''') == '1'\nassert solution('''4\n30\n8\n23\n29''') == '2'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '1'\nassert solution(input) == '2'\nassert solution(input) == '1'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n3') == '1'\nassert solution('7\\n6') == '2'\nassert solution('7\\n7') == '1'\nassert solution('7\\n99999999999999999999999999999') == '999999999'\nassert solution('7\\n99999999999999999999999999998') == '999999984'\n"
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n6\n7\n21\n28''') == '1'\n\nassert solution('''2\n3\n6\n7\n21\n28''') == '2'\n\nassert solution('''4\n3\n6\n7\n21\n28''') == '1'\n\nassert solution('''5\n3\n6\n7\n21\n28''') == '2'\n\nassert solution('''8\n3\n6\n7\n21\n28''') == '1'"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\""
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('512 4\\n') == '50', 'Too simple'\nassert solution('1000000000 9\\n') == '1', 'Too simple'\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nassert solution(\"10000000000 9\") == \"1\"\nassert solution(\"1000000009 9\") == \"1\"\nassert solution(\"100010101 9\") == \"100\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000000000 9\") == \"1\"\n"
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4\n4 3 5 1 2 2 1\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n5\n3 7 5 1 5\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n5 1 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"7\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n3 7 5 1 5\n''') == '2 5 1 2 2 3'\nassert solution('''5\n3 7 5 1 5\n''') == '2 5 1 2 2 3'\nassert solution('''3\n5 7 5 1 5\n''') == '2 5 1 2 2 3'\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '2 5 1 2 2 3'"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2\\n1 2 3'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '5 2 1 2 2 3 2'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1 2'\nassert solution(input()) == '5'\nassert solution(input()) == '5 5'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n3 3 2 5 5 1 4 2 3 3\n\n5\n2 1 1 2 3 1\n\n''') == '2 1 1 2 3'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2 2 2\"\nassert solution(\"7\") == \"1 2 2 2 3 2\"\nassert solution(\"5\") == \"4 4 4\"\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n3\n5 1 4\n''') == '4'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'\n"
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5 2'\nprint(solution())"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 10\n10 8\n7 4\n3 1\n5 4\n''') == '2'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"-1\""
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 21\") == \"2\"\nassert solution(\"5 16\") == \"-1\"\nassert solution(\"4 16\") == \"1\"\nassert solution(\"4 17\") == \"1\"\nassert solution(\"10 8\") == \"2\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"2\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\"\n\n'''\n\nn, m = list(map(int, input().split()))\na = []\nb = []\n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a.append(x)\n    b.append(y)\n\nt = 0\n\nfor i in range(len(a)):\n    if (m - b[i] < 0) or (a[i] > m - b[i]):\n        t = -1\n        break\n    else:\n        m -= b[i]\n        t += 1\n\nprint(t)\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\nassert solution('20 7') == '0'\nassert solution('4 6') == '3'\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\nprint(solution(input()))"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_1) == \"2\"\nassert solution(test_input_2) == \"-1\"\n"
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 3') == \"tleelte\"\nassert solution('6 1 1') == \"qwerty\"\nassert solution('6 6 1') == \"abcde\"\nassert solution('5 2 2') == \"abcde\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5 7 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\nassert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"qwerty\"\nassert solution('''5\n5 2 2\n''') == \"abcde\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n'''\n) == 'tleelte', solution(\n'''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n'''\n)\nassert solution(\n'''\n3\n3 1 2\n'''\n) == 'f', solution(\n'''\n3\n3 1 2\n'''\n)\nassert solution(\n'''\n2\n3 1 2\n'''\n) == '', solution(\n'''\n2\n3 1 2\n'''\n)\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"tleelte\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5 3 1\n6 1 1\n6 6 1\n5 2 2''') == 'tleelte'\nassert solution('''1\n5 3 1\n6 1 1\n6 6 1\n5 2 2''') == 'qwerty'\nassert solution('''2\n5 3 2\n6 1 1\n6 6 2''') == 'vvvvv'\nassert solution('''2\n5 3 3\n6 1 1\n6 6 3''') == 'abcde'\nassert solution('''1\n5 2 3\n5 1 1''') == 'a'\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5 3\") == \"tleelte\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\""
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3\") == \"tleel\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n6 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'tleelte'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'qwerty'"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"tleelte\", \"Wrong solution\"\nassert solution(\"\") == \"\", \"Wrong solution\"\nassert solution(\"7 5 3\") == \"tleelte\", \"Wrong solution\"\nassert solution(\"6 1 1\") == \"qwerty\", \"Wrong solution\"\nassert solution(\"6 6 1\") == \"abcde\", \"Wrong solution\"\n"
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 5 3') == 'tleelte'\nassert solution('6 1 1') == 'qwerty'\nassert solution('6 6 1') == 'vvvvvv'\nassert solution('5 2 2') == 'abcde'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 12 6\n''') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 12') == '6'\nassert solution('5 1 12') == '5'\nassert solution('100 1 100') == '100'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([20, 12, 6]) == \"12\"\nassert solution([2, 3, 4]) == \"8\"\nassert solution([5, 7, 11]) == \"60\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 4 10') == '5'\nassert solution('5 20 10') == '5'\nassert solution('20 16 8') == '16'\nassert solution('10 1 4') == '9'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\") == \"1\"\nassert solution(\"5 7 10\") == \"14\"\nassert solution(\"2 2 5\") == \"3\""
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 12 6') == '12'\nassert solution('20 12 6') == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"5 1 3\") == \"5\"\nassert solution(\"1 2 4\") == \"1\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 5 10\") == \"10\"\nassert solution(\"100 10 10\") == \"10\"\nassert solution(\"20 12 6\") == \"12\"\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '12'\n"
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 20 6\") == \"12\"\nassert solution(\"1 2 3\") == \"18\"\nassert solution(\"1 3 4\") == \"12\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n') == '5\\n'\nassert solution('5\\n') == '3\\n'\n\n\"\"\"\n\n\nn = int(input())\ncount = 0\nfor i in range(1,n+1):\n    if n%i == 0:\n        count += 1\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n''') == '2'\nassert solution('''\n7\n''') == '1'\nassert solution('''\n6\n''') == '1'\n'''"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n\n-----Input-----\n1\n\n-----Output-----\n2''') == '2':\n    print('Correct')\nelse:\n    print('Wrong')\n"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\n\n===== Practice:\nYour code should take N as input and print the maximum number of groups\nwhich can be formed.\n\n===== Concepts:\nYou need to understand it for the first time.\n\n===== Implementation:\nFollowing is the implementation of the above approach.\n\n'''"
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '2'\nassert solution('1') == '1'\nassert solution('10') == '4'\nassert solution('4') == '3'\nassert solution('12') == '4'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '2'\nassert solution('4 2') == '2'\nassert solution('7 1') == '1'\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 5\") == \"4\"\n\n'''"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('0 1') == '1'\nassert solution('1 2') == '1'\nassert solution('10 10') == '10'\nassert solution('100 100') == '100'\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1\",\"3\"]) == \"3\"\nassert solution([\"1\",\"1\"]) == \"1\"\nassert solution([\"2\",\"2\"]) == \"2\"\nassert solution([\"2\",\"3\"]) == \"1\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\n\n## Solution #1\na, p = map(int, stdin.split())\nb = p // 3\nc = (p - b * 3) // 2\nd = p - b * 3 - c * 2\nprint(max(b, c, d))\n\n## Solution #2\na, p = map(int, input().split())\nprint(max(1, 2 * (p - 1), 2 * (p - 2), p - 1, p - 2))\n\n## Solution #3\na, p = map(int, input().split())\nprint(max(p // 3, (p + 1) // 3, (p + 2) // 3))\n\n## Solution #4\na, p = map(int, input().split())\nprint(max(p // 3, 2 * p // 5, 3 * p // 7))\n\n## Solution #5\na, p = map(int, input().split())\nprint(max(p // 5, p // 3, 2 * p // 7))\n\n## Solution #6\na, p = map(int, input().split())\nprint(max(p // 5, 2 * p // 3, p // 7))\n\n## Solution #7\na, p = map(int, input().split())\nprint(max(p // 3, p // 5, 2 * p // 7))\n"
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n\"\"\"\n\na, p = map(int, input().split())\n\na = a // 3\np = p // 3\n\nprint(min(a,p))"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '16'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 12') == '16'\nassert solution('1 3') == '4'\nassert solution('3 1') == '3'\n\n\"\"\""
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"2\", 'First'\nassert solution(\"1 2\") == \"1\", 'Second'\nassert solution(\"2 1\") == \"1\", 'Third'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"4 14\") == \"10\"\nassert solution(\"4 11\") == \"13\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '7'\nassert solution('4') == '5'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10') == '5 20'\nassert solution('3 20') == '20 3'\nassert solution('5 10') == '15 20'\nassert solution('3 20') == '20 5'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"10 11\") == \"20 21\"\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 12') == '16'\nassert solution('1 4') == '5'\nassert solution('4 5') == '-1'\n"
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"12 5\") == \"15\"\nassert solution(\"4 5\") == \"10\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"5 1\") == \"0\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('chokudai') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n\n'''\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"chokudai_chokudaiz\") == \"No\"\nassert solution(\"chokudai_chokudaiz_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokudai_chokud"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\nassert solution('chokudai')!= 'Yes'"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"akbchd\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 16'\n) == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"9\"\nassert solution(\"3 4\") == \"9\"\nassert solution(\"2 4\") == \"8\"\nassert solution(\"3 5\") == \"8\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('2 1') == 'IMPOSSIBLE'\nassert solution('3 2') == '9'\nassert solution('5 3') == '2'\nassert solution('7 4') == '2'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('2 3') == 'IMPOSSIBLE'\nassert solution('3 4') == '9'\nassert solution('2 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"10 10\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"1 10\") == \"IMPOSSIBLE\"\nassert solution(\"-1 10\") == \"IMPOSSIBLE\"\nassert solution(\"-1000 1000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"5 5\") == \"IMPOSSIBLE\""
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"97\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"24356\") == \"No\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"11\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117') == 'Yes'\nassert solution('19') == 'No'\nassert solution('92') == 'No'\nassert solution('12') == 'Yes'"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"117\") == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1) == \"No\"\nassert solution(2) == \"Yes\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('9') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('117') == 'Yes'\nassert solution('200') == 'No'\nassert solution('0') == 'No'"
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('117') == \"Yes\"\nassert solution('13') == \"No\"\nassert solution('789') == \"No\"\nassert solution('1') == \"No\"\nassert solution('0') == \"No\"\n\"\"\""
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('117') == 'Yes'\nassert solution('957') == 'No'\n\"\"\""
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('117') == 'Yes'\n\"\"\"\n\nnumber = int(stdin)"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'Yes'\nassert solution('999') == 'No'\nassert solution('100') == 'Yes'"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('1') == 'No'\n\"\"\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"1218\") == \"No\""
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('5') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes'\nassert solution('10') == 'Yes'\nassert solution('123') == 'No'\nassert solution('15') == 'Yes'\nassert solution('12345') == 'No'\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"Yes\"\n\nassert solution(\"21\") == \"No\"\n\nassert solution(\"123\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0 1\\n') == '-1 1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 0 0 1''') == '-1 1 -1 0'\nassert solution('''0 0 1 0''') == '-1 -1 1 -1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '0 0 0 1\\n'\n) == '(-1, 1),(-1, 0),(1, 0),(1, -1)'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 1 1 1') == '-1 1 -1 0'\nassert solution('0 0 0 1') == '1 1 1 1'\nassert solution('0 0 1 1') == '0 0 0 1'\nassert solution('0 1 0 1') == '0 1 0 1'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 1 1 2\") == \"0 -1 -2 1\"\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1\\n') == '-1 1 -1 0', 'Wrong answer'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 1 0') == '-1 -1 -1 0'\n"
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 1 2 4') == '-2 -1 -2 0'\nassert solution('1 1 -2 1') == '0 1 1 -1'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"red blue\\n3 4\\nred\") == \"2 4\"\nassert solution(\"red blue\\n3 4\\nblue\") == \"2 4\"\nassert solution(\"red blue\\n3 4\\nblue\") == \"2 4\"\nassert solution(\"red blue\\n3 4\\nblue\") == \"2 4\"\nassert solution(\"red blue\\n3 4\\nblue\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('red blue') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"4 1\") == \"3 1\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"3 4\") == \"2 4\"\nassert solution(\"3 4\") == \"2 4\"\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''red blue\n    3 4\n    red''') == '2 4'\nassert solution('''red blue\n    5 6\n    red''') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''red blue\n3 4\nred\n''') == '2 4'\n"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('3 3') == '2 3'\nassert solution('3 2') == '1 2'"
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('red blue') == '2 4'"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'No'\nassert solution('abcabc') == 'Yes'\nassert solution('abab') == 'No'\nassert solution('abcdefg') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6\\n\"\n    \"abcabc\"\n    ) == \"Yes\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'Yes'\n\"\"\""
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nabcabc\\n') == 'Yes'\nassert solution('6\\nabcabc\\nabcabc\\n') == 'No'\nassert solution('6\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\nabcabc\\n') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == 'Yes'\nassert solution('7') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'Yes'\nassert solution('5') == 'No'"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == 'Yes'\n"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nabc') == 'Yes'\nassert solution('6\\nabc') == 'No'"
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('3\\nabcabc') == 'Yes'\nassert solution('5\\nabcabc') == 'No'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 3, 1, 2]) == \"1.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1 2') == '3.000000 0'\nassert solution('1 3 1 2') == '0'\n\n'''"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 2') == '2.000000 0', solution('1 1 1 2')\nassert solution('2 3 1 2') == '3.000000 1', solution('2 3 1 2')\nassert solution('2 2 2 2') == '0.000000 0', solution('2 2 2 2')\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('3 2 2 1') == '1.000000 1'\nassert solution('5 1 1 3') == '4.000000 1'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"4 3 2 3\") == \"1.000000 1\"\nassert solution(\"2 2 1 2\") == \"2.000000 0\"\nassert solution(\"5 10 8 4\") == \"9.000000 1\"\nassert solution(\"10 10 1 1\") == \"9.000000 0\"\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3.000000 0'\n\"\"\"\n\nw, h, x, y = map(int, input().split())"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n\"\"\"\n\nfrom math import sqrt\n\ninput_W, input_H, input_x, input_y = input().split()\ninput_W, input_H, input_x, input_y = int(input_W), int(input_H), int(input_x), int(input_y)"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3 1 2\n''') == '3.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''5 5 2 5''') == '8.000000 0'\nassert solution('''2 10 1 5''') == '0.000000 0'\n"
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '1.000000 1'"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"Four\"\nassert solution(\"8\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\n\n\"\"\""
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\nP P P\\n') == 'Three'\nassert solution('3\\nP Y Y Y\\n') == 'Four'\nassert solution('5\\nW W W W\\n') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nPYWYG\n''') == 'Four'\nassert solution('''5\nPYWYG\n''') == 'Three'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nP Y G\") == \"Three\"\nassert solution(\"6\\nP W Y G\") == \"Four\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nP P P''') == 'Three'\nassert solution('''4\nP Y Y Y''') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\nG W Y P Y W''') == 'Four'\nassert solution('''10\nG W Y P Y W Y P G''') == 'Three'\n''')\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Three\"\nassert solution(\"7\") == \"Four\"\nassert solution(\"4\") == \"Three\"\nassert solution(\"1\") == \"Four\"\nassert solution(\"12\") == \"Three\"\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\nG W Y P Y W\n''') == 'Four'\nassert solution('''7\nG W Y P Y W G\n''') == 'Three'\nassert solution('''8\nG W Y P Y W G\n''') == 'Four'\n"
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nP\\nW\\nY\") == \"Three\"\nassert solution(\"4\\nP\\nW\\nY\") == \"Four\"\nassert solution(\"4\\nP\\nW\\nY\\nY\") == \"Four\"\nassert solution(\"4\\nP\\nW\\nY\\nG\") == \"Four\"\nassert solution(\"4\\nP\\nW\\nY\\nG\\nY\") == \"Four\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2\n2 3 1 3 4 2''') == 6\n\n\nassert solution('''5 3 3\n1 2 4 2 3\n''') == 2\n\nassert solution('''5 5 6\n1 2 6 10 3\n''') == 2\n\n\nassert solution('''5 5 2\n1 2 4 2 3\n''') == 0\n\nassert solution('''5 5 3\n1 2 4 2 3\n''') == 2\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 5\") == 6\nassert solution(\"5 2 5\") == 2\nassert solution(\"6 4 4\") == 6\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n'''"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 3') == '2'\nassert solution('5 5 5') == '2'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_from_stdin()) == \"2\""
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution([[1,2,4],[2,3,1],[3,1,2],[1,1,1],[2,2,1]]) == '0'\nassert solution([[3,2,5],[5,4,2],[2,3,5],[1,3,4],[4,1,3],[5,5,1]]) == '3'\n\"\"\"\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 1\n2 3 1 3\n''') == '6'\nassert solution('''3 3 3\n1 2 3\n''') == '4'\nassert solution('''6 6 2\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 1\n1 2 3''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3\n''') == '2'"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\\n2 3 1 3 4 2\\n\") == 6\nassert solution(\"5 3 3\\n1 2 4 2 3\\n\") == 2\nassert solution(\"5 5 6\\n1 2 6 10 3\\n\") == 2"
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 3\n1 2 4 2 3\n''') == '6'\nassert solution('''\n5 3 2\n2 3 1 3 4 2\n''') == '4'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\nassert solution('''\n5 6 6\n1 2 3 1 2 2\n''') == '6'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''\n1\n0\n''') == '0'\nassert solution('''\n3\n1 0 1\n1 2 2\n''') == '0'\nassert solution('''\n2\n3 4 4\n2 4 4\n''') == '3'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''3\n4 8 2 6 2\n4 5 4 1 3\n''') == '0'\nassert solution('''8\n1 1 2 3 4 5 6 7\n1 2 3 4 5 6 7 8\n1 3 4 5 6 7 8 9\n1 4 5 6 7 8 9 10\n1 5 6 7 8 9 10 11\n1 6 7 8 9 10 11 12\n1 7 8 9 10 11 12 13\n1 8 9 10 11 12 13 14\n1 9 10 11 12 13 14 15\n''') == '14'\n\n'''"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2\n4 8 2 6 2\n4 5 4 1 3\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n3\n1 3 2\n1 3 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n5\n1 3 2 5\n1 2 1 3 3\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n10\n3 2 1 1 3 1 1 5 5 2 5 3\n3 3 3 1 1 1 2 1 2 5 5 3\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5\n1 3 2 4 5\n1 2 1 3 3\n\"\"\"\n) == \"0\""
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n2\n2 4 1\n1 3\n''') == '0'\nassert solution('''\n4\n10 1 7 4\n4 2 3 8\n''') == '1'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n5 6 2 1\n10 4 5 4 1''') == '7'\nassert solution('''\n2\n1 1\n''') == '0'\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '7'\nprint(solution())\n"
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 1 3 5 9'\n\n'''\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 5 10') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 4 5 10''') == \"1 1 3 5 9\"\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n1 2 4 5 10\"\"\") == \"\"\"1 1 3 5 9\"\"\"\nassert solution(\"\"\"10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\"\"\") == \"\"\"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1 1 3 5 9\"\nassert solution(input_string='''\n20\n10 200\n''') == \"10 200\"\nassert solution(input_string='''\n2\n3 7 4\n''') == \"3 7 4\"\nassert solution(input_string='''\n100\n5 5 5 5\n''') == \"5 5 5 5\"\n''') == \"1 1 3 5 9\"\n''') == \"1 1 3 5 9\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == \"1 1 3 5 9\"\n\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n'''\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 1 3 5 9\"\nassert solution() == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\n\"\"\"\n"
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(samples[0]) == samples[1]\nassert solution(samples[1]) == samples[2]\n\"\"\""
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''7 10\n1 2\n3 4\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n204 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n280 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n300 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n331 333\n333 334\n334 335\n335 336\n335 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n397 399\n398 400\n399 401\n400 402\n401 403\n402 404\n403 405\n404 406\n405 407\n406 408\n407 409\n408 410\n409 411\n410 412\n411 413\n412 414\n413 415\n414 416\n415 417\n416 418\n417 419\n418 420\n419 421\n420 422\n421 423\n422 424\n423 425\n424 426\n425"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution_tests() == '2'"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n\") == \"1\"\nassert solution(\"17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n\") == \"2\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution([[1,2],[3,4],[5,4],[3,5],[1,5],[1,4]]) == \"1\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == '1'\nassert solution(\"17 15\") == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n\nassert solution('''\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'"
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''\n5 5\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '2'\n\nassert solution('''\n2\n1 1 2\n2 3\n1 3\n''') == '2'\n\nassert solution('''\n2\n1 1 2\n2 3\n1 3\n''') == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 0 0 1 2\") == \"1\"\nassert solution(\"1 0 0 0 2\") == \"4\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == \"1\"\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == \"4\"\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == \"0\""
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '0'\nassert solution('4') == '4'\nassert solution('1') == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\\n\") == \"1\"\nassert solution(\"1 0 0 1 2\\n1 2\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"4\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5''') == '1'\nassert solution('''5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5''') == '4'\nassert solution('''3\n1 1 2\n2 3\n1 3''') == '0'\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"0\""
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0 1 2\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '4'\nassert solution('30') == '0'"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\naz\nbf\n\"\"\") == \"bc\"\nassert solution(\"\"\"\n5\nafogk\nasdji\n\"\"\") == \"alvuw\"\nassert solution(\"\"\"\n6\nnijfvj\ntvqhwp\n\"\"\") == \"qoztvz\"\nassert solution(\"\"\"\n10\nzioabjqbvnhgfgpiklrywhuetxcypj\nnyaqzewxhfrgtblivufnmsobvxct\n\"\"\") == \"jvx\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'bc'\nassert solution('5') == 'alvuw'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\naz\\ntvqhwp\\n\") == \"alvuw\"\nassert solution(\"2\\naz\\ntvqhwp\\n\") == \"bc\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 'a'\nassert solution(\"2\") == 'b'\nassert solution(\"3\") == 'c'\nassert solution(\"4\") == 'd'\nassert solution(\"5\") == 'e'\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz'\n\n\n\"\"\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\naz\\nbf') == 'bc', solution('2\\naz\\nbf')\nassert solution('5\\nafogk\\ntvqhwp\\n') == 'qoztvz', solution('5\\nafogk\\ntvqhwp\\n')\nassert solution('6\\nalvuw\\ndefhvj\\n') == 'defhvj', solution('6\\nalvuw\\ndefhvj\\n')\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"qoztvz\""
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\naz\nbf\n\n\"\"\") == \"bc\"\nassert solution(\"\"\"\n5\nafogk\nasdji\n\n\"\"\") == \"alvuw\"\nassert solution(\"\"\"\n6\nnijfvj\ntvqhwp\n\n\"\"\") == \"qoztvz\"\n"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\naz\\nbf') == 'bc'\nassert solution('5\\nafogk\\ntvqhwp') == 'qoztvz'\nassert solution('6\\nnijfvj\\ntqhwp') == 'def'\n\n\"\"\"\n\nk = int(input())\na = input()\nb = input()\n\nn = k // 2\na_list = a.lower().split()\nb_list = b.lower().split()\na_list.sort()\nb_list.sort()\n\nresult = \"\"\nfor i in range(n):\n    result += a_list[i]\n    result += b_list[i]\nresult += a_list[n]\nresult += b_list[n]\n\nprint(result)"
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\naz\nbf\n''') == 'bc'\n\nassert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\n\nassert solution('''\n6\nnijfvj\ntvqhwp\n''') == 'qoztvz'"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''5 4\n20 10 40 30\n''') == 'NO'\nassert solution('''4 4\n20 10 40 30\n''') == 'YES'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\""
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\nassert solution(\"5 1\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n''') == 'YES'\n\nassert solution('''5 4\n20 10 40 30\n''') == 'NO'\n\nassert solution('''4 4\n20 10 40 30\n''') == 'YES'\n\nassert solution('''4 4\n10 20 30 40\n''') == 'NO'\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n15 13 15 15 12\") == \"YES\"\nassert solution(\"5 4\\n15 13 15 15 12\") == \"NO\"\n"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'"
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n20 10 40 30\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 4 0 2') == 'YES'\nassert solution('4\\n1 2 4 0 2') == 'NO'"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2 1') == \"1 0 1 1 0\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n7 2 5 1 4 3 9 8\n''') == 'NO'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"YES\\n\"\nassert solution(\"10\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n9\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"YES\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"NO\""
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"NO\"\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == 'NO'\nassert solution('''\n10\n0 1 2 3 4 5 6 7 8 9\n''') == 'NO'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == 'YES'\n"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'YES'"
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\"\nassert solution(\"5 1 3 6 8 2 9 0 10 1 2 4 0 2\") == \"YES\"\nassert solution(\"5 1 3 6 8 2 9 0 10 1 2 4 0 2 0 0\") == \"NO\"\nassert solution(\"5 1 3 6 8 2 9 0 10 1 2 4 0 2 0 0 0 1 0\") == \"NO\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    10 2 3 7\n    100 51 51 51\n    1234 1 100 199\n    1000000000 1 1 1000000000\n    \"\"\") == \"3\"\nassert solution(\"\"\"\n    10 2 3 7\n    100 5 100 51\n    1234 1 100 199\n    1000000000 1 1 1000000000\n    \"\"\") == \"0\"\nassert solution(\"\"\"\n    10 2 3 7\n    100 5 100 51\n    1234 1 100 199\n    1000000000 1 1 1000000000\n    \"\"\") == \"1134\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution(\"\"\"\n1 1 1 3\n3 4 5 7\n10 3 1 100\n1 1 1 1\n\"\"\") == '0'\nassert solution(\"\"\"\n5 100 5 1 100\n1 2 3 4 6\n2 4 5 1 6\n10 1 1 10\n\"\"\") == '1134'\nassert solution(\"\"\"\n2 10 2 3 7\n100 50 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n\"\"\") == '0'\nassert solution(\"\"\"\n1 0 1 2\n1 1 2 1\n\"\"\") == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n10 2 3 7\n100 2 100 2\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n10 2 3 7\n100 4 100 4\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n10 2 3 7\n100 101 100 101\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n\n\n------solution------\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\"\nassert solution(\"5\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"5\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"1134\"\nassert solution(\"5\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"5\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"1134\"\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1134'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n10 2 3 7\n100 11 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 99 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n4\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n''') == '0'\n"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n1 2 3 4\n4 1 2 3\n1000000000 1 1 1000000000\n1000000001 1 1 1000000000\n''') == '1134'"
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1'\nassert solution('''\n5\n10 100 10 50\n30 1 2 3\n4 2 1 2\n1 2 2 1\n1 1 2 1\n''') == '1134'\nassert solution('''\n10\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '1134'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n''') == '1'\nassert solution('''4\n''') == '3'\nassert solution('''8\n''') == '1260'\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\""
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\"\n) == \"1\"\nassert solution(\n    \"4\"\n) == \"3\"\nassert solution(\n    \"8\"\n) == \"1260\"\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\nprint(solution(input()))\n"
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == ''"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('1 1') == 'def'"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"\", \"You should return the result of the algorithm\"\nassert solution(\"15 3\") == \"\", \"You should return the result of the algorithm\"\nassert solution(\"15 9\") == \"\", \"You should return the result of the algorithm\"\nassert solution(\"1 2\") == \"\", \"You should return the result of the algorithm\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'def'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('15 9') == 'cccccc'\nassert solution('1 1') == ''"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"15 3\\ncccaabababaccbc\") == \"ccbbabaccbc\"\nassert solution(\"1 1\\nu\") == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"15 3\\n\") == \"cccbbabaccbc\"\nassert solution(\"1 1\\n\") == \"def\""
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"aaaa\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ababacc\") == \"\"\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '123'\n"
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 1\"\n    ) == \"def\"\nassert solution(\n    \"1 2\"\n    ) == \"def\"\nassert solution(\n    \"1 3\"\n    ) == \"def\"\nassert solution(\n    \"1 4\"\n    ) == \"def\"\nassert solution(\n    \"1 5\"\n    ) == \"def\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 0 2 0') == '8'\nassert solution('5 6') == '20'\nassert solution('5 2') == '10'\nassert solution('5 1') == '6'\nassert solution('5 1') == '6'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n0 1 0 2\n0 2\n1 1\n2 1\n''') == '10'\n\nassert solution('''\n4 3\n0 1 1 1\n2 1\n0 1\n2 1\n''') == '7'"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2\n2 4\n''') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''\n5 6\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == '20'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == '8'\nassert solution(\"\"\"\n10 10\n1 2 4 6 9 9 9 9 9 9 9\n2 4\n4 2\n1 5\n1 2\n1 5\n2 3\n2 5\n1 2\n\"\"\") == '31'\nassert solution(\"\"\"\n2 3\n4 2\n1 5\n1 2\n1 5\n2 3\n\"\"\") == '30'\nassert solution(\"\"\"\n2 5\n4 4\n1 5\n1 2\n1 5\n2 3\n2 5\n1 2\n\"\"\") == '32'\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3''') == \"8\"\nassert solution('''5 3\n    4 2\n    3 5\n    4 2\n    2 5''') == \"20\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '8', \"Wrong!\"\nassert solution('5 3') == '20', \"Wrong!\"\nassert solution('10 3') == '11', \"Wrong!\"\nassert solution('4 10') == '2', \"Wrong!\"\nassert solution('4 5') == '7', \"Wrong!\"\n"
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\nassert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n\n''') == \"20\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"3 3\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"10 10\") == \"2 2 1\"\nassert solution(\"10 10\") == \"2 2 1\""
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \".*\\n\"\n    \"*.*\\n\"\n    \"..*\\n\"\n    \"*.\\n\"\n    \".....\\n\"\n    ) == \"3 4 1\\n\"\nassert solution(\n    \"5 5\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    ) == \"3 3 1\\n\"\nassert solution(\n    \"5 5\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    \"***\\n\"\n    ) == \"-\"\n\"\"\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '3 5 2'\nassert solution('3 3') == '3 4 1'\nassert solution('5 5') == '3 5 2'"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '3 4 1'\nassert solution('5 5') == '3 3 1'\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\"\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\\n\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '3 4 1'\nassert solution('3 3') == '-1'\n\nstdin = \"\"\"\n5 5\n*.*\n.*.\n*.*\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 9\n***\n***\n*.*\n***\n***\n**.\n***\n''') == '3 4 1'\n\nassert solution('''\n4 3\n.***\n*.*.\n.***\n*.*.\n''') == '3 3 1'\n\nassert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3 4 1'\n\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\n''') == '3 3 1'\n\nassert solution('''\n5 5\n.*...\n***.\n.*...\n***.\n.....\n''') == '-1'"
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\"\"\") == \"3 4 1\"\nassert solution(\"\"\"5 5\n.*...\n****.\n.****\n..**.\n.....\n\"\"\") == \"3 3 1\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"1000\") == \"No\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1000') == 'No'\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('575') == 'Yes'\nassert solution('123') == 'No'\n\"\"\""
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"575\") == \"Yes\""
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"575\") == \"Yes\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == 'Yes'"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('575') == 'Yes'\nassert solution('36') == 'No'\n\n>>>"
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"2691\") == \"No\"\nassert solution(\"5841\") == \"No\"\nassert solution(\"625\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"Alice\"\nassert solution(\"5 2\") == \"Bob\"\nassert solution(\"2 3\") == \"Draw\"\nprint(solution(input()))"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"Alice\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 5') == 'Bob'\nassert solution('5 8') == 'Draw'"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"Alice\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"Alice\"\nassert solution(\"8 6\") == \"Alice\"\nassert solution(\"7 6\") == \"Bob\"\nassert solution(\"3 5\") == \"Bob\"\nassert solution(\"1 2\") == \"Draw\"\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 6\") == \"Alice\"\nassert solution(\"7 7\") == \"Bob\"\nassert solution(\"1 1\") == \"Draw\""
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 1') == 'Draw'\nassert solution('2 3') == 'Bob'\n"
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 6') == 'Alice'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"happy newyear enjoy\"\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('test,in,sample') == 'test in sample'\nassert solution('test,in,sample,') == 'test in sample'\nassert solution('') == ''\nassert solution('test') == 'test'\n\n-----Explanation-----\nThe test string is empty and should print ''.\nThe test string is empty, should print 'test'.\nThe test string is empty, should print 'test'.\nThe test string is empty and should print 'test'.\nThe test string is empty and should print 'test'.\nThe test string is empty and should print 'test'.\nThe test string is empty and should print 'test'.\nThe test string is empty and should print 'test'.\n\"\"\""
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\""
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"hello,goodbye\") == \"hello goodbye\"\nprint(\"Congratulations! Your solution is correct!\")\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\""
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"happy newyear enjoy\""
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('happy,newyear,enjoy') == \"happy newyear enjoy\"\n\n'''"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'happy newyear enjoy'\n"
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('1 1') == '1 2'"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1\\n1'\nassert solution('6 2') == '4\\n2'\nassert solution('4 1') == '1\\n1'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"7 7\") == \"1\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 2\") == \"1\""
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"1 1\") == \"1\"\n\ninput = '4 3'\noutput = '3 2'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('1 2') == '1 2'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('10 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('20 20') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('4 3') == '1 2 3 4 5'\nassert solution('8 8') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"4 6\") == \"2\\n3\"\nassert solution(\"10 10\") == \"2\\n7\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\\n1\"\nassert solution(\"3 4\") == \"1 2\\n2 3\\n3 4\"\n"
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('3 3') == '1 1 1'\nassert solution('4 4') == '1 1 1 1'\nassert solution('5 5') == '1 1 1 1 1'\nassert solution('6 6') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\n\n'''\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n\n''') == '5'\nassert solution('''\n4\n\n''') == '14'\nassert solution('''\n5\n\n''') == '25'\nassert solution('''\n6\n\n''') == '36'\nassert solution('''\n7\n\n''') == '49'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"14\"\nprint(solution(\"2\"))\nprint(solution(\"2\") == \"14\")\n\"\"\"\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '14'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('3') == '13'\nassert solution('7') == '63'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '14'"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('-1') == '-1'\nassert solution('0') == '0'\n'''\n"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '14'\nprint('PASSED')"
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"15\"\nassert solution(\"4\") == \"16\"\nassert solution(\"5\") == \"17\"\nassert solution(\"6\") == \"18\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n#.#\\n.#.') == 'Yes'\nassert solution('1 1\\n#.') == 'No'\nassert solution('5 5\\n#.#.#\\n.#.#\\n.#.#\\n.#.#\\n#.#.') == 'Yes'\nassert solution('5 5\\n#.#.#\\n.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.') == 'Yes'\nassert solution('5 5\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == 'Yes'\nassert solution('3 5\\n#.#.\\n##.\\n#.#.\\n#.###\\n#.##.\\n#.##.\\n###.\\n#.###\\n#.###.\\n') == 'No'\nassert solution('2 2\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n#.#.\\n') == 'Yes'"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n#.#\\n.#.') == 'Yes'\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2\\n#.#\\n.#.\\n#.#\\n#.\\n') == 'Yes'\nassert solution('5 3\\n#..\\n.#.\\n..#\\n..#\\n#..') == 'No'\nassert solution('2 1\\n#.\\n.\\n') == 'No'\nassert solution('4 3\\n..#\\n...\\n###\\n.##\\n#...\\n') == 'Yes'"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"53\""
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 1 1 4') == '2'\n\n\"\"\""
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"1 2 3\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"1 5 3\") == \"3\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6 2') == '53'\nassert solution('0 0 0') == '0'\nassert solution('5 5 5') == '55'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 5 2') == '53'\nassert solution('10 10 10') == '100'\nassert solution('1 5 2') == '53'\nassert solution('1 5 2') == '53'\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"7 8 9\") == \"159\""
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"2 2 5\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 0 0\") == \"0\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 2 3 4\") == \"7\"\nassert solution(\"1 2 3 4 5\") == \"7\"\n\nThe output will be the maximum possible amount of the allowance.\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 4 5 8\") == \"81\"\nassert solution(\"1 5 2 7\") == \"53\"\nassert solution(\"1 2 3\") == \"1 2 3\"\n"
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 2 3 4\") == \"10\"\nassert solution(\"1 2 3 4 5\") == \"15\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"15950\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4980\\n7980\\n6980\\n') == '15950.0'\nassert solution('3\\n5200\\n6000\\n6980\\n') == '14850.0'\nassert solution('3\\n1200\\n5600\\n6980\\n') == '12900.0'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"15950\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '375'\nassert solution('3') == '1150'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3]) == '15950'\nassert solution([5]) == '19750'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '15950'\nassert solution('5') == '2000'\nassert solution('10') == '33000'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4980\n7980\n6980\n''') == '15950', \"Wrong!\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '15950'\nassert solution('4') == '16600'\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"15950.0\"\nassert solution(\"2\") == \"318.0\"\nassert solution(\"4\") == \"1210.0\"\n"
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '15950'\nassert solution('5') == '15950'\nassert solution('9') == '15950'\nassert solution('10') == '15900'\nassert solution('11') == '15900'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4\\n1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n10\\n10\\n10\\n10\") == \"10\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\\n\""
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"29\") == \"215\""
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"20\") == \"30\"\nassert solution(\"7\") == \"120\"\n\n\"\"\"\n\nimport time\nstart = time.perf_counter()"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '215'\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '215'\nassert solution('10') == '195'\n\n\"\"\"\n\nimport re\nfrom typing import List\nfrom itertools import product\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\n\"\"\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\\n\") == \"215\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"6\"\n"
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '60'\nassert solution('35') == '180'\nassert solution('120') == '210'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('1') == '0.0'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\nassert solution(\"2\\n2 2\") == \"2\"\nassert solution(\"3\\n1 1\") == \"1.0\""
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"3\") == \"0.333333333333333333333333333333\"\nassert solution(\"4\") == \"0.3333333333333333333333333333333\"\nassert solution(\"5\") == \"0.3333333333333333333333333333333\"\nassert solution(\"6\") == \"0.3333333333333333333333333333333\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"3\") == \"7.5\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '7.5'\nassert solution(input()) == '7.49999'\nassert solution(input()) == '7.50001'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1.0\"\nassert solution(\"2\") == \"0.5\"\nassert solution(\"3\") == \"0.333333333333333333333333333333\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"3\") == \"7.50001\"\nassert solution(\"4\") == \"7.49999\"\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n10 20 30\\n') == '7.5'\nassert solution('2\\n10 20 30\\n') == '7.5'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '7.50001'\nprint('Congratulations! All test cases passed :)')"
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '7.50001'\nassert solution(input()) == '7.49999'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1\n3\n4\n''') == '2', \"Wrong answer with sample input\"\nassert solution('''8 4\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '2', \"Wrong answer with another sample input\"\nassert solution('''5 5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '2', \"Wrong answer with another sample input\"\nassert solution('''5 5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '3', \"Wrong answer with another sample input\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2'\nprint(solution(input))\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 1') == '4'\nassert solution('5 2') == '3'\nassert solution('5 3') == '3'\nassert solution('10 10') == '3'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '1'\nassert solution('6 1') == '6'"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2'\nassert solution('5 1\\n10\\n15\\n11\\n14\\n12\\n') == '1'\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 15 11 14 12\") == \"4\""
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"1 2\") == \"0\""
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(\"2 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\nassert solution(\"2 3\\n10\\n15\\n11\\n14\\n12\") == \"2\"\n"
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 2') == '1'\nassert solution('10') == '0'"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"a\"\nassert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"b\"\n\"\"\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.readline().strip()) == \"A\"\n\nprint('solution() is ok')\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"B\") == \"A\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"B\") == \"A\""
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\n\"\"\"\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'A'\nassert solution(input()) == 'a'\nassert solution(input()) == 'B'\n\"\"\"\n\nimport sys\n\nprint(chr(ord(\"A\") + int(input())))\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('B') == 'A'\nassert solution('A') == 'a'\nassert solution('c') == 'c'\n\n--------------------------------------------------"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('C') == 'C'\n"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == 'a'\nassert solution('B') == 'b'"
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"B\") == \"A\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('3 0') == '6'\nassert solution('4 4') == '21'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n''') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '6'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"6\"\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '6'\nassert solution('2 2') == '6'\nassert solution('4 4') == '9'"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'\n"
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"5 3\") == \"3\""
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"10 8\") == \"9\"\nassert solution(\"10 10\") == \"30\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"Test #1 failed\"\nassert solution(\"0119\") == \"YYMM\", \"Test #2 failed\"\nassert solution(\"1219\") == \"MMYY\", \"Test #3 failed\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1234') == 'NA'\nassert solution('1235') == 'AMBIGUOUS'\nassert solution('1237') == 'AMBIGUOUS'\nassert solution('12345') == 'AMBIGUOUS'\nassert solution('1236') == 'NA'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('05') == 'YYMM'\nassert solution('X1905') == 'AMBIGUOUS'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"1905 not a valid year\"\nassert solution(\"1905\") == \"YYMM\", \"1905 not a valid year\"\nassert solution(\"1905\") == \"AMBIGUOUS\", \"1905 is a valid date, but is not a month\"\nassert solution(\"1905\") == \"NA\", \"1905 is not a valid date, nor a month\"\nassert solution(\"1905\") == \"YYMM\", \"1905 not a valid year\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01') == 'YYMM'\nassert solution('05') == 'YYMM'\nassert solution('24') == 'NA'\nassert solution('19') == 'AMBIGUOUS'\n\n'''\n\nfrom typing import Any, List\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"YYMM\"\nassert solution(\"5\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'NA', \"First test case failed\"\nassert solution('1905') == 'YYMM', \"Second test case failed\""
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1233') == 'YYMM', 'Failed:'+ solution('1233')\nassert solution('3533') == 'YYYY', 'Failed:'+ solution('3533')\nassert solution('0123') == 'AMBIGUOUS', 'Failed:'+ solution('0123')\nassert solution('1905') == 'AMBIGUOUS', 'Failed:'+ solution('1905')\nassert solution('12345') == 'NA', 'Failed:'+ solution('12345')"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1905\n''') == 'YYMM'\nassert solution('''1901\n''') == 'YYMM'\nassert solution('''1910\n''') == 'YYYYMM'\nassert solution('''1910\n''') == 'YYMM'\nassert solution('''1901\n''') == 'YYYYMM'\n"
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('19') == 'YYMM'\nassert solution('1') == 'YYMM'\nassert solution('12') == 'YYMM'\nassert solution('01') == 'YYMM'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '1'\n\"\"\""
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"\n\n\"\"\"\nThought:\n\nsum of divisors\n\nnumber of divisors\n\nlet N = number of positive integers\n\nl = {1,2,3,4,5,...,N}\n\n2 N + 1\n\nO(N)\n\n\"\"\"\n\nn = int(input())\neven, odd = 0, 0\n\nfor num in range(1, n+1):\n    if num % 2 == 0:\n        even += 1\n    else:\n        odd += 1\n\nprint(even, odd)\n\n\"\"\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('12') == '4'\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"2\\n\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n\nK = int(input())\n\nodd_odd_even_numbers = defaultdict(int)\neven_odd_even_numbers = defaultdict(int)\n\nfor i in range(1, K+1):\n    if i % 2 == 0:\n        odd_odd_even_numbers[i] += 1\n    else:\n        even_odd_even_numbers[i] += 1\n\ncount = 0\nfor even_odd_even in odd_odd_even_numbers.values():\n    for even_even_even in even_odd_even_numbers.values():\n        count += even_odd_even * even_even_even\n\nprint(count)"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 12\n''') == '21'\nassert solution('''9 12\n''') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == ''\nassert solution(\"10 10\") == '10'\n\n--"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"8 17\") == \"23\""
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 8') == '11'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"18\"\n\"\"\""
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9 12\") == \"21\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"00\"\nassert solution(\"5\") == \"05\"\nassert solution(\"1 0\") == \"01\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''9 12\n''') == '21'\nassert solution('''9 12\n''') == '21'\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"21 22\") == \"22\"\nassert solution(\"21 1\") == \"21\"\nassert solution(\"13 1\") == \"14\"\nassert solution(\"0 0\") == \"00\"\n"
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8') == '15'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('2 4') == '2'\nassert solution('2 5') == '2'\nassert solution('2 6') == '2'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"6 1\") == \"0\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n\n\"\"\""
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2919\n''') == '3719'\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\"\nassert solution(\"10 7\\n\") == \"1137\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 10\") == \"3719\"\n"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '3719'"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2919\n''') == '3719'\n\ninput = open(\"input.txt\").read()"
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 9\") == \"31\"\nassert solution(\"5 5\") == \"7\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 2''') == '4'\nassert solution('''10 2''') == '3'\nassert solution('''11 0''') == '1'\nassert solution('''11 -2''') == '2'\nassert solution('''1 5''') == '2'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2\n\n''') == '1'\nassert solution('''10\n10\n\n''') == '1'\nassert solution('''4\n8\n\n''') == '1'\nassert solution('''3\n8\n\n''') == '1'\nassert solution('''0\n4\n\n''') == '4'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 2') == '4'\nassert solution('12 3') == '3'\n\"\"\"\nfrom collections import deque\nstdin = input()\nN = int(stdin.split()[0])\nK = int(stdin.split()[1])\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"9 2\") == \"1\"\nassert solution(\"8 2\") == \"1\"\nassert solution(\"7 2\") == \"0\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 2') == '4'"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 2') == '4'\nassert solution('1 1') == '2'\n\"\"\""
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"9 5\") == \"3\"\nassert solution(\"13 0\") == \"1\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 2') == '4'\nassert solution('10 9') == '2'\nassert solution('0') == '1'\nassert solution('-1') == '1'\nassert solution('-1 0') == '2'\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"4\"\nassert solution(\"20 8\") == \"3\"\n\n---Time Complexity---\nThe time complexity of this algorithm is O(K)O(K).\nThe space complexity is O(1)O(1).\n'''\n"
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11 2\") == \"4\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"20\") == \"4\"\nassert solution(\"10\") == \"1\"\nassert solution(\"50\") == \"3\""
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '3'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '4'\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\nassert solution(\"20\") == \"5\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3', \"Tests: 3, 4\"\nassert solution('5') == '3', \"Tests: 3, 4\"\nassert solution('6') == '4', \"Tests: 3, 4\"\n"
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\"\"\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\"\"\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['5 4', '0 1', '3 2']) == 'Yay!'\nassert solution(['4 5', '0 1', '3 2']) == 'Yay!'\nassert solution(['6 9', '0 1', '3 2']) == 'Yay!'\nassert solution(['6 8', '0 1', '3 2']) == 'Yay!'\nassert solution(['11 14', '0 1', '3 2']) == 'Yay!'\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('1 5') == 'Yay!'\nassert solution('1 6') == 'Yay!'\nassert solution('5 4') == 'Yay!'\n\n'''"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yay!\"\nassert solution(input()) == \"Yay!\"\n\nE869120 and square1001 were just about to eat A and B of those pieces, respectively,\nwhen they found a note attached to the cake saying that \"the same person should not take two adjacent pieces of cake\".\nCan both of them obey the instruction in the note and take desired numbers of pieces of cake?\n\n-----Constraints-----\n - A and B are integers between 1 and 16 (inclusive).\n - A+B is at most 16.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nIf both E869120 and square1001 can obey the instruction in the note and take desired numbers of pieces of cake, print Yay!; otherwise, print :(.\n\nBoth of them can take desired number of pieces as follows:"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Yay!\"\nassert solution(\"2 3\") == \"Yay!\"\nassert solution(\"3 4\") == \"Yay!\"\nassert solution(\"4 5\") == \"Yay!\"\nassert solution(\"5 6\") == \"Yay!\"\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 5\") == \"Yay!\"\nassert solution(\"6 5\") == \"Yay!\"\nassert solution(\"6 6\") == \"Yay!\"\n\nsolution(\"8 3\")\nsolution(\"8 5\")\nsolution(\"7 7\")\n\n-----Hint: you can find the next even and the previous odd numbers in the input.-----\n"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 1\") == \"E869120 and square1001 are almost same!\"\nassert solution(\"5 2\") == \"E869120 and square1001 are equal!\"\n\n'''"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 4\n''') == 'Yay!'\n\nassert solution('''\n1 2\n''') == 'Yay!'\n\nassert solution('''\n1 3\n''') == 'Yay!'\n\nassert solution('''\n1 4\n''') == 'Yay!'\n\nassert solution('''\n1 5\n''') == 'Yay!'"
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n') == 'Yay!'\nassert solution('5 5\\n') == 'Yay!'\nassert solution('10 10\\n') == 'Yay!'\n\"\"\"\nimport sys"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '34'\n\n\"\"\""
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"123456789\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"0\"\nassert solution(\"123\") == \"0\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"10293864\") == \"10\"\nassert solution(\"123487654321\") == \"10\"\nassert solution(\"17157629380\") == \"16\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == '34'\nassert solution(\"1234\") == '12'\nassert solution(\"567\") == '567'\nassert solution(\"123456789\") == '0'\nassert solution(\"123456789\") == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('567') == '34'\nassert solution('456') == '34'\nassert solution('12345') == '34'\nassert solution('12345678') == '34'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1234567876''') == '34'"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"073756519\") == \"174\"\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567') == '45'\nassert solution('123456789') == '90'\nassert solution('12345678910') == '90'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234567891') == '100'\nassert solution('1') == '0'\nassert solution('13') == '26'\nassert solution('37') == '81'\n"
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\""
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\nassert solution('''2\n2 9''') == '1 7'\nassert solution('''7\n2 1000000000 4 6 8 4 2''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '5 3'\nassert solution('''\n2\n2 9\n''') == '1 7'\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution('''\n6\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5 3'\nassert solution() == '1 7'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 12 6''') == '5 3'\n\nassert solution('''2\n2 9''') == '1 7'\n\nassert solution('''7\n13 52 0 13 26 52''') == '12 13'"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\nassert solution('''2\n2 9\n''') == '1 7'\nassert solution('''7\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3 12 6\n''') == '5 3'\n\nassert solution('''7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\n\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"12 13\"\nassert solution() == \"5 3\"\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '4 8'\n"
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"5 3\""
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 12 6\n''') == '5 3'\n\nassert solution('''2\n2 9\n''') == '1 7'\n\nassert solution('''7\n13 52 0 13 26 52\n''') == '12 13'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 4 1') == '3'\nassert solution('4\\n3 1 4 1') == '2'\nassert solution('5\\n1 1 1 2 2') == '1'"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n3\n1 2\n2''') == '3'\nassert solution('''2\n5\n1 4\n1 4''') == '4'\n\nassert solution('''2\n4\n2 4 1 2''') == '5'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '2'\n\nprint(solution(input_data))\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 1\n''') == '1'\nassert solution('''\n2\n1 1\n''') == '1'\nassert solution('''\n4\n1 1 4 1\n''') == '2'\nassert solution('''\n4\n3 1 4 1\n''') == '2'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 1 1 2 2\n''') == '2'\nassert solution('''\n3\n1 1 1\n''') == '1'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 4 1\n''') == '3'\nassert solution('''4\n3 1 4 1\n''') == '3'\nassert solution('''5\n1 1 1 2 2\n''') == '2'\nassert solution('''7\n10 1 1 3 3 4 3 5 2\n''') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1 4 1') == '3'\nassert solution('4\\n3 1 4 1') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 1 4 1') == '3'\nassert solution('3\\n1 1 4 1') == '2'\nassert solution('5\\n1 1 1 2 2') == '4'"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('4 2') == '4 2'\nassert solution('3 2') == '2'"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"3\""
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0') == '1'\nassert solution('3 2') == '2'"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\""
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\""
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'"
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '2'"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1\\n1 2 3 4 5') == '11'\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == '4'\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\nassert solution(\"5 2\") == \"8\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n1 2 3 4 5\\n1 2') == 11\nassert solution('7 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == 4\nassert solution('8 2\\n2 1 2 1 2 1 1\\n6 4\\n1 5\\n3 1\\n2 3\\n7 5\\n7 4\\n') == 5\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('7 4') == '3'\n\n\"\"\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"7 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution() == '11'\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n1 2\n2 3\n3 4\n3 5\n''') == 11\nassert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == 11\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == 4\n"
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 1\n1 9\n2 2\n2 13\n3 1\n3 12\n\"\"\") == \"1 5\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n4 5 999999999\n1 999999999\n1 2\n1 5\n2 1\n2 3''') == '1 5 1 999999999'\n\nassert solution('''2 3\n5 10000000000\n1 999999999\n1 2\n1 5\n2 1\n2 3''') == '1 5 1 999999999'"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2'\nassert solution('2 3') == '1 5\\n2 1'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 3\"\n    ) == \"1 5\"\nassert solution(\n    \"1 3\"\n    ) == \"1 9\"\nassert solution(\n    \"1 2\"\n    ) == \"2 1\"\nassert solution(\n    \"1 2 3\"\n    ) == \"2 1 3\""
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1 5\\n2 1\"\nassert solution(\"3 3\") == \"1 5\\n2 1\\n2 9999999994\"\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994'\n"
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 5\\n2 1\""
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 6 5 4\n2 1 3''') == '2 1 3'\nassert solution('''40 40 40 60\n20 20 20''') == '20 20 20'\nassert solution('''201 101 101 200\n1 100 100''') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6 5 4') == '2 1 3', \"First\"\nassert solution('40 40 40 60') == '20 20 20', \"Second\"\nassert solution('201 101 101 200') == '1 100 100', \"Third\"\nprint('\"Run\" is good. How is \"Check\"?')\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    6 5 4\n    ''') == '2 1 3'\nassert solution('''\n    40\n    40 40 60\n    ''') == '20 20 20'\nassert solution('''\n    201\n    101 101 100\n    ''') == '1 100 100'\nassert solution('''\n    101 101 101\n    ''') == '1 100 100'\nassert solution('''\n    101 100 100\n    ''') == '1 100 100'\n''') == '1 100 100'"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n40 40 40 60\n''') == '20 20 20'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 6 5 4\n\"\"\") == \"2 1 3\"\nassert solution(\"\"\"\n40 40 40 60\n\"\"\") == \"20 20 20\"\nassert solution(\"\"\"\n201 101 101 200\n\"\"\") == \"1 100 100\"\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 1 3\n''') == '1 2 3'\nassert solution('''\n1 2 3 1\n''') == '1 2 3'\nassert solution('''\n1\n''') == ''\n"
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 6 5 4\"\n    ) == \"2 1 3\"\nassert solution(\n    \"40 40 40 60\"\n    ) == \"20 20 20\"\nassert solution(\n    \"201 101 101 200\"\n    ) == \"1 100 100\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == 'BRBGBRGR'\nassert solution('10') == 'BGRBRBGBGR'\nassert solution('15') == 'BGRBRBGBGBGR'\nassert solution('16') == 'BGRBGBGGRGBGR'\nassert solution('17') == 'BGRBGBGGRGBGBG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'BBGGBRGR'\nassert solution('7') == 'BRBGBRGR'\nassert solution('8') == 'BGRBRBGBGRG'\nassert solution('9') == 'BRBGBGGRBBB'\nassert solution('10') == 'BBGRBGBGBGRG'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1R\") == \"1\"\nassert solution(\"1G\") == \"1\"\nassert solution(\"1B\") == \"1\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\nRBR\n\n\"\"\") == \"\"\"\n1\nRRR\n\"\"\", solution(\n\"\"\"\n2\nBG\n\n\"\"\") == \"\"\"\n2\nGBR\n\"\"\", solution(\n\"\"\"\n1\nRR\n\n\"\"\") == \"\"\"\n3\nRRG\n\"\"\", solution(\n\"\"\"\n3\nRB\n\n\"\"\") == \"\"\"\n4\nRBGB\n\"\"\", solution(\n\"\"\"\n2\nBB\n\n\"\"\") == \"\"\"\n3\nBBGB\n\"\"\", solution(\n\"\"\"\n13\nBBBRRRGGGGGRRR\n\n\"\"\") == \"\"\"\n6\nBBGRBBBGBGBGR\n\"\"\", solution(\n\"\"\"\n5\nBBBB\n\n\"\"\") == \"\"\"\n3\nBBBGBB\n\"\"\", solution(\n\"\"\"\n9\nBBBBBBBBBBBB\n\n\"\"\") == \"\"\"\n2\nBBBBBB\n\"\"\", solution(\n\"\"\"\n5\nBBBBBBBBBBBBBB\n\n\"\"\") == \"\"\"\n2\nBBBBBBBBBBBB\n\"\"\", solution(\n\"\"\"\n6\nBBBBBBBBBBBBBB\n\n\"\"\") == \"\"\"\n1\nBBBBBBBBBBBBBB\n\"\"\", solution(\n\"\"\"\n8\nBBBBBBBBBBBBBB\n\n\"\"\") == \"\"\"\n1\nBBBBBBBBBBBBBB\n\"\"\", solution(\n\"\"\"\n7\nBBBBBBBBBBBBBB\n\n\"\"\") == \"\"\"\n1\nBBBBBBBBBBBBBB\n\"\"\", solution(\n\"\"\"\n3\nRBR\n\n\"\"\") == \"\"\"\n1\nRBR\n\"\"\", solution(\n\"\"\"\n1\nR\n\n\"\"\") == \"\"\"\n1\nR\n\"\"\", solution(\n\"\"\"\n2\nG\n\n\"\"\") == \"\"\"\n1\nG\n\"\"\", solution(\n\"\"\"\n5\nBBBBBBBBBBBBBB\n\n\"\"\") == \"\"\"\n1\nBBBBBBBBBBBBBB\n\"\"\", solution(\n\"\"\"\n1\nB\n\n\"\"\") == \"\"\"\n1\nB\n\"\"\", solution(\n\"\"\"\n2\nR\n\n\"\"\") == \"\"\"\n1\nR\n\"\"\", solution(\n\"\"\"\n3\nRBR\n\n\"\"\") == \"\"\"\n1\nRBR\n\"\"\", solution(\n\"\"\"\n3\nBBR\n\n\"\"\") == \"\"\"\n1\nBBR\n\"\"\", solution(\n\"\"\"\n4\nRGR\n\n\"\"\") == \"\"\"\n1\nRGR\n\"\"\", solution(\n\"\"\"\n5\nRRR\n\n\"\"\") == \"\"\"\n2\nRRR\n\"\"\", solution(\n\"\"\"\n6\nRGR\n\n\"\"\") == \"\"\"\n2\nRGR\n\"\"\", solution(\n\"\"\"\n7\nRGRR\n\n\"\"\") == \"\"\"\n3\nRGRR\n\"\"\", solution(\n\"\"\"\n8\nRGRGR\n\n\"\"\") == \"\"\"\n4\nRGRGR\n\"\"\", solution(\n\"\"\"\n9\nRGRGRR\n\n\"\"\") == \"\"\"\n5\nRGRGRR\n\"\"\", solution(\n\"\"\"\n10\nRGRGRRR\n\n\"\"\") == \"\"\"\n6\nRGRGRRR\n\"\"\", solution(\n\"\"\"\n11\nRGRGRRRR\n\n\"\"\") == \"\"\"\n7\nRGRGRRRR\n\"\"\", solution(\n\"\"\"\n12\nRGRGRRRRR\n\n\"\"\") == \"\"\"\n8\nRGRGRRRRR\n\"\"\", solution(\n\"\"\"\n13\nRGRGRRRRRR\n\n\"\"\") == \"\"\"\n9\nRGRGRRRRR\n\"\"\", solution(\n\"\"\"\n14\nRGRGRRRRGR\n\n\"\"\") == \"\"\"\n10\nRGRGRRRRGR\n\"\"\", solution(\n\"\"\"\n15\nRGRGRRRRGRR\n\n\"\"\") == \"\"\"\n11\nRGRGRRRRGRR\n\"\"\", solution(\n\"\"\"\n16\nRGRGRRRRGRRR\n\n\"\"\") == \"\"\"\n12\nRGRGRRRRGRRR\n\"\"\", solution(\n\"\"\"\n17\nRGRGRRRRGRRRR\n\n\"\"\") == \"\"\"\n13\nRGRGRRRRGRRRR\n\"\"\", solution(\n\"\"\"\n18\nRGRGRRRRGRRRRR\n\n\"\"\") == \"\"\"\n14\nRGRGRRRRGRRRRR\n\"\"\", solution(\n\"\"\"\n19\nRGRGRRRRGRRRRRR\n\n\"\"\") == \"\"\"\n15\nRGRGRRRRGRRRRRR\n\"\"\", solution(\n\"\"\"\n20\nRGRGRRRRGRRRRRRR\n\n\"\"\") == \"\"\"\n16\nRGRGRRRRGRRRRRRR\n\"\"\", solution(\n\"\"\"\n21\nRGRGRRRRGRRRRRRRR\n\n\"\"\") == \"\"\"\n17\nRGRGRRRRGRRRRRRRR\n\"\"\", solution(\n\"\"\"\n22\nRGRGRRRRGRRRRRRRRR\n\n\"\"\") == \"\"\"\n18\nRGRGRRRRGRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n23\nRGRGRRRRGRRRRRRRRRR\n\n\"\"\") == \"\"\"\n19\nRGRGRRRRGRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n24\nRGRGRRRRGRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n20\nRGRGRRRRGRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n25\nRGRGRRRRGRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n21\nRGRGRRRRGRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n26\nRGRGRRRRGRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n22\nRGRGRRRRGRRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n27\nRGRGRRRRGRRRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n23\nRGRGRRRRGRRRRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n28\nRGRGRRRRGRRRRRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n24\nRGRGRRRRGRRRRRRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n29\nRGRGRRRRGRRRRRRRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n25\nRGRGRRRRGRRRRRRRRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n30\nRGRGRRRRGRRRRRRRRRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n26\nRGRGRRRRGRRRRRRRRRRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n31\nRGRGRRRRGRRRRRRRRRRRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n27\nRGRGRRRRGRRRRRRRRRRRRRRRRRRRRRRR\n\"\"\", solution(\n\"\"\"\n32\nRGRGRRRRGRRRRRRRRRRRRRRRRRRRRRRRRR\n\n\"\"\") == \"\"\"\n28\nRGRGRRRRGR"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"13\") == \"6\"\n"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '2'\n\"\"\"\n\nimport math\n\nn = int(input())\ngar = input()"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n9\nRBGRRBRGG\n''') == 'RBGRGBRGR'\nassert solution('''\n8\nBBBGBRRR\n''') == 'BRBGBRGR'\nassert solution('''\n13\nBBRRRRGGGGGRR\n''') == 'BGRBRBGBGBGRG'"
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '1'\nassert solution('RRBBBBR') == '3'\nassert solution('BBGBRRR') == '2'\nassert solution('BBBGBRR') == '3'\nassert solution('BBBBGBR') == '2'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '1'\nassert solution('9') == '1'\nassert solution('7') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '2'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(open(0).read()) == '1'\nassert solution(open(1).read()) == '1'\nassert solution(open(2).read()) == '4'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n3 4 7 5 6 8\\n') == '4'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2'\nassert solution('4\\n10 9 8 7\\n') == '1'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6'"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('6') == '2'\nassert solution('9') == '6'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 4 7 5 6 8\n\n''') == '4'\n\nassert solution('''\n6\n1 3 5 2 4 6\n\n''') == '2'\n\nassert solution('''\n4\n10 9 8 7\n\n''') == '1'\n\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n\n''') == '6'\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == \"6\"\nassert solution('''\n4\n10 9 8 7\n''') == \"1\"\nassert solution('''\n6\n1 3 5 2 4 6\n''') == \"2\"\nassert solution('''\n7\n3 3 4 7 5 6 8\n''') == \"4\"\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"7\") == \"4\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"9\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"5 4\") == \"Yes\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'Yes'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"6 6\") == \"No\"\nassert solution(\"6 3\") == \"Yes\"\nassert solution(\"6 1\") == \"No\"\nassert solution(\"3 3\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 5') == 'No'\nassert solution('4 5') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 1\n    \"\"\") == \"Yes\"\nassert solution(\"\"\"5 5\n    \"\"\") == \"Yes\"\nassert solution(\"\"\"2 2\n    \"\"\") == \"No\"\nassert solution(\"\"\"5 4\n    \"\"\") == \"No\"\nassert solution(\"\"\"1 1\n    \"\"\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'No'\nassert solution('1 2') == 'Yes'"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\n"
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1 2') == 'No'\n\"\"\""
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\n\"\"\"\n\n\"\"\"\n---MY SOLUTION---\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"1 2\") == \"2\"\n\"\"\"\n\nx, y = (int(x) for x in stdin.split())\n\ny = (x * (1/2) for x in range(1, y+1, 2))\n\nprint(int(max(y)))\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 20') == '30'\nassert solution('50 100') == '25'\nassert solution('30 60') == '50'\nassert solution('100 50') == '15'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('81 58') == '110'"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"81 58\") == \"110\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('84 100') == '84'\nassert solution('82 79') == '82'\nassert solution('49 70') == '55'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"11\\n8\\n\") == \"20\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"80 30\") == \"110\"\nassert solution(\"80 99\") == \"150\"\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''81 58''') == '110'\nassert solution('''10 100''') == '100'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\") == \"10\"\nassert solution(\"10 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '8'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\""
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1) == \"8\"\nassert solution(2) == \"8\"\n\nTest.assert_equals(solution(3), \"10\")\nTest.assert_equals(solution(4), \"18\")\nTest.assert_equals(solution(9), \"192\")\nTest."
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"8\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '8'\nassert solution('1') == '1'\nassert solution('3') == '16'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '8'\nassert solution('2') == '8'\nassert solution('1') == '1'\nassert solution('9') == '27'\n\"\"\"\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '8'\nassert solution('2') == '8'\n"
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"8\"\n\nimport re\nregex = re.compile(r\"\\d+\")\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\n\nassert solution(\"10\") == \"NO\"\n\nassert solution(\"9\") == \"YES\"\n\nassert solution(\"1\") == \"NO\"\n\nassert solution(\"12\") == \"YES\""
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('7') == 'YES'\n\n'''"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('7') == 'YES'\nassert solution('4') == 'NO'\nassert solution('9') == 'YES'\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"9\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"NO\""
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"999\") == \"ABC\""
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('999') == 'ABC'\nassert solution('10') == 'AB'\nassert solution('1') == 'A'\nassert solution('0') == 'A'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1') == 'AB'\nassert solution('2') == 'BC'\nassert solution('3') == 'BD'\nassert solution('4') == 'BCD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\nassert solution('0') == 'AA'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('999') == 'ABC'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n12\n''') == 'ABC'\nassert solution('''\n999\n''') == 'ABC999'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\nassert solution('10') == 'DDD'\n"
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('999') == 'ABC'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n4\n8\n9\n15''') == 'Yay!'\nassert solution('''1\n2\n3\n4\n5''') == 'Nay!'\nassert solution('''1\n2\n3\n4\n5''') == 'Yay!'\n\nassert solution('''4\n8\n15\n20\n25''') == 'Nay!'\nassert solution('''4\n8\n15\n20\n25''') == 'Yay!'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Nay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\n\n\"\"\""
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n17\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n18\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n19\") == \"Yay!\"\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Nay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n"
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n10\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n11\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n12\") == \"Nay!\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3200\") == \"pink\"\n\"\"\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3200') == 'pink', \"3200 is not less than 3200\"\nassert solution('99') =='red', \"99 is not less than 3200\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3200') == 'pink'\nassert solution('10') == 'not red'\n'''\n\na = int(input())\ns = input()\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3200') == 'pink'\nassert solution('21') =='red'"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3200') == 'pink'\nassert solution('3100') =='red'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'pink'\n\n'''\n\na = int(input())\ns = input()"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'pink'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(3200) == 'pink'\nassert solution(3200) =='red'\nassert solution(3200) == 'pink'\nassert solution(3200) =='red'\nassert solution(3200) == 'pink'\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"1234\") == \"red\"\nassert solution(\"1234a\") == \"red\"\nassert solution(\"1234ab\") == \"red\"\nassert solution(\"1234abx\") == \"red\"\n"
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3200') == 'pink'\nassert solution('1234') =='red'\nassert solution('123456789') =='red'\nassert solution('1234567') =='red'\nassert solution('12345') =='red'\n\na, s = (int(x) for x in input().split())\nprint('red' if a < 3200 else 'pink')\n\n----------------------------------------------------------------------"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ARC\"\n\"\"\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('1198') == 'ARC'\nassert solution('1197') == 'AGC'\nassert solution('1196') == 'AGC'\nassert solution('1195') == 'ARC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1199') == 'ABC', 'Wrong answer'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('9999') == 'ARC'\nassert solution('11990') == 'AGC'\n\"\"\""
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(123) == \"ABC\"\nassert solution(0) == \"ARC\"\nassert solution(27) == \"AGC\"\nassert solution(1625) == \"ARC\"\nassert solution(1621) == \"ARC\"\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '12') == 'ARC'\nassert solution(\n    '11') == 'ARC'\nassert solution(\n    '10') == 'ARC'\nassert solution(\n    '7') == 'AGC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'ARC'\nassert solution('1199') == 'AGC'\n\"\"\""
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1199') == 'ABC'\n"
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1200') == 'ABC'\nassert solution('1199') == 'ARC'\nassert solution('1000') == 'AGC'\n\"\"\""
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '21'\nassert solution('12') == '21'\nassert solution('123') == '912'\nassert solution('123') == '912'\nassert solution('123') == '912'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == '901', \"123\"\nassert solution('11') == '91', \"11\"\nassert solution('11') == '9', \"1\"\nassert solution('110') == '9', \"10\"\nassert solution('110') == '9', \"10\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\nassert solution('123') == '321'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('99') == '1'\nassert solution('9999') == '9'\nassert solution
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123') == '1231'\nassert solution('1101') == '11011'\nassert solution('11111') == '11111'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('119') == '991'\nassert solution('12345') == '91234'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('119') == '991'\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"112\") == \"1121\"\nassert solution(\"1111\") == \"1111\"\nassert solution(\"1234\") == \"3412\"\nassert solution(\"1111\") == \"1111\"\nassert solution(\"991\") == \"991\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == None, \"The function should return a string\"\nassert solution(\"1\") == \"9\", \"The function should return a string\"\nassert solution(\"11\") == \"99\", \"The function should return a string\"\nassert solution(\"112\") == \"999\", \"The function should return a string\"\nassert solution(\"122\") == \"912\", \"The function should return a string\"\n"
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('119') == '991'\nassert solution('10') == '10'\nassert solution('113') == '1'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"3\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"bcdaf\"\nassert solution(\"3\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"abac\"\nassert solution(\"2\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"bcdaf\"\nassert solution(\"2\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz\") == \"bccddaaf\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzz\\n\") == \"abac\"\nassert solution(\"3\\nab\\nac\\nb\\n\") == \"ac\"\nassert solution(\"2\\nab\\nab\\nb\\n\") == \"ab\"\nassert solution(\"1\\na\\nb\\na\\nb\\n\") == \"ab\""
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"abac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\nabac\nac\nbccddaaf''') == 'abac'\nassert solution('''2\nac\nac''') == 'ac'\nassert solution('''1\nac''') == 'ac'"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"abac\"\n\nassert solution('''\n2\nac\nzzzzzzzzzz\n''') == \"ac\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nabbaac\\nac') == 'abac'\nassert solution('5\\nabcd\\ncd') == 'abc'\nassert solution('1\\nzzzzzzzzzz\\nzzzzzzzzzz') == 'zzzzzzzzzz'"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'aba'\nassert solution('1') == 'abac'\nassert solution('3') == 'bccddaaf'\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'abac'\nassert solution(input()) == 'ac'\nassert solution(input()) == 'bcdaf'"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"abac\"\nassert solution(\"4\") == \"zzzzzzzzzz\"\n"
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''aba\nz\nxyz''') == 'abz'\nprint('all test cases passed')\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"333\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t) == \"0\""
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 4') == '2'\nassert solution('13 9') == '5'\nassert solution('100 13') == '333'\nassert solution('123 456') == '0'\nassert solution('92 46') == '333'"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 4\\n13 9\\n\") == \"2\"\nassert solution(\"5\\n100 13\\n123 456\\n92 46\\n\") == \"333\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 2\\n2 5\\n3 6\\n5 4\") == \"2\"\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n10 4''') == '2'\nassert solution('''5\n100 13''') == '333'\nassert solution('''5\n12 9''') == '4'\nassert solution('''5\n1 2''') == '0'"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n5\n4\n''') == '5'\nassert solution('''\n1\n10\n''') == '10'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '4'\nassert solution(input()) == '333'\nassert solution(input()) == '0'\n"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '4'\nassert solution(input()) == '333'\nassert solution(input()) == '0'"
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == '5'\nassert solution('''7\n5 8\n5 6\n11 10\n100 10\n123 6\n92 6''') == '1'\nassert solution('''10\n30 23\n90 50\n100 75\n200 25\n150 21\n223 29\n280 28\n319 25\n390 36''') == '5'\nassert solution('''12\n23 24\n86 79\n15 12\n24 10\n55 92\n57 63\n15 73''') == '5'"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 1 2') == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n3 4 1 2') == '2.666666666666667'\nassert solution('6 3\\n4 3 2 1 1 2') == '4.0'\nassert solution('8 3\\n4 3 2 1 1 2') == '3.0'\nassert solution('10 10\\n4 3 2 1 1 2') == '5.0'\nassert solution('15 10\\n4 3 2 1 1 2') == '5.0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n3 4 1 2\\n\") == \"2.600000004984722\""
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"2.0\"\nassert solution(\"5 2\") == \"2.0\"\nassert solution(\"5 4\") == \"2.0\"\nassert solution(\"4 3\") == \"2.0\"\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n2 4\n1 2\n''') == '1.5'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2.666666666666667'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2 3\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"1\") == '1'\nassert solution(\"2 1\") == '2.0'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n5 2\n3 4\n6 5\n''') == '1.5'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''5 5\n1 3 2 5 4\n''') == '3.333333333333334'\n"
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2.666666666666667\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'YES'\nassert solution('5') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1''') == 'YES'\nassert solution('''6\n3\n2 3 1\n4 2\n2 1 4 3\n5 2\n2 1 2 3 3\n1 4\n1 3\n4 2\n4 3 2 1\n3 2\n5 1\n1 2 3 4 5\n1''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n5 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n5 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n5 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n5 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n2 2\n2 1 2 3\n1 3\n1 2\n''') == 'NO'\nassert solution('''\n1 2\n2 1\n''') == 'NO'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '21'\nassert solution('4') == '1234'\nassert solution('6') == 'baabbb'"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"2\") == \"z\"\nassert solution(\"3\") == \"z\"\nassert solution(\"4\") == \"z\"\nassert solution(\"5\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"2\") == \"z\"\nassert solution(\"3\") == \"z\"\nassert solution(\"4\") == \"z\"\nassert solution(\"5\") == \"z\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"1\") == \"z\"\nassert solution(\"2\") == \"oo\"\nassert solution(\"3\") == \"ooo\"\nassert solution(\"4\") == \"oopp\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'z'\nassert solution('2') == 'o'\nassert solution('3') == 'p'\nassert solution('4') =='s'\nassert solution('5') == 'p'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"baabbb\"\nassert solution(\"10\") == \"ooopppssss\"\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"aaa\"\nassert solution(\"6\") == \"bab\"\nassert solution(\"10\") == \"oops\"\nassert solution(\"15\") == \"zozzzzzz\""
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'a'\nassert solution('3') == 'ab'\nassert solution('5') == 'aba'\nassert solution('6') == 'baabaa'\nassert solution('8') == 'bababab'\n"
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"bab\\n\") == \"bab\"\nassert solution(\n    \"z\\n\") == \"z\""
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nbaabbb') == 'bab'\nassert solution('10\\noopppssss') == 'oops'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == '0'\nassert solution('3 3') == '1'\nassert solution('5 6') == '2'"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"5 6\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"5 6\") == \"2\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"8 10\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '1'\nassert solution('3 3') == '1'\nassert solution('1 0') == '0'"
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 10') == '1'\nassert solution('4 3') == '1'\nassert solution('3 3') == '0'\nassert solution('1 0') == '0'\nassert solution('5 6') == '2'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nRR\n''') == '2'\n\nassert solution('''3\nGB\n''') == '1'\n\nassert solution('''8\nRGBRGBRBGB\n''') == '0'\n\nassert solution('''6\nBRGB\n''') == '0'\n\nassert solution('''7\nRGBRGBRBBGB\n''') == '0'"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"11\") == \"2\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    2\n    RRRR\n    \"\"\") == \"RRRR\"\nassert solution(\"\"\"\n    2\n    RRG\n    \"\"\") == \"RRG\"\nassert solution(\"\"\"\n    3\n    RRBBB\n    \"\"\") == \"RRBBB\"\nassert solution(\"\"\"\n    4\n    RRBBBBB\n    \"\"\") == \"RRBBBBB\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\""
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\\n\"\n    \"RRRRRRB\"\n) == \"RRRRRRR\"\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'G'\nassert solution('3') == 'R'\nassert solution('10') == 'R'\nassert solution('15') == 'R'\nassert solution('20') == 'R'\n"
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('7') == '3'\nassert solution('10') == '3'\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.1\"\n\"\"\""
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('4\\n100000000 JPY\\n100000000 BTC') == '100000000'\nassert solution('1\\n10\\n0.10000000 BTC') == '10'"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n\"\"\"\nimport sys\nimport math\n\nn = int(input())\ndata = list(map(int, input().split(\" \")))\nyen = 0\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"2 1\") == \"48000.0\"\nassert solution(\"2 1 2\") == \"48000.0\"\nassert solution(\"2 1 2 2\") == \"48000.0\"\nassert solution(\"2 1 2 2 2\") == \"48000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n0.10000000 BTC\") == \"48000.1\"\nassert solution(\"1\\n10000 JPY\") == \"48000.0\"\nprint(\"OK\")\n'''\n\nimport sys\n\ninput_s = sys.stdin.readlines()"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"1\") == \"48000.0\"\nassert solution(\"4\") == \"280000.0\"\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) in (\n    '48000.0',\n    '48000.1',\n)\n"
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0.00000000\"\nassert solution(\"2\") == \"0.00000000\"\nassert solution(\"3\") == \"0.00000000\"\nassert solution(\"4\") == \"0.00000000\"\nassert solution(\"5\") == \"0.00000000\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n\n---Output---\n3\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1, 2, 3, 4]) == '3'\nassert solution([1, 2, 3, 4, 5]) == '4'\nassert solution([1, 2, 3, 4, 5, 6]) == '5'\nassert solution([1, 2, 3, 4, 5, 6, 7]) == '6'\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == '7'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"100 3\") == \"3\"\nassert solution(\"100 4\") == \"4\"\nassert solution(\"100 3\") == \"3\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    4, 1\n]) == '3'\nassert solution([\n    4, 2\n]) == '2'\nassert solution([\n    4, 3\n]) == '1'\nassert solution([\n    4, 4\n]) == '1'\n\n\"\"\""
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '', \"SOLUTION\"\nassert solution(\"3\") == \"2\", \"SOLUTION\"\nassert solution(\"1\") == \"0\", \"SOLUTION\"\nassert solution(\"2\") == \"0\", \"SOLUTION\"\nassert solution(\"4\") == \"0\", \"SOLUTION\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"9 3\") == \"6\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n3') == '1'\nassert solution('4\\n4') == '3'\nassert solution('5\\n4') == '1'\nassert solution('6\\n5') == '3'\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"1\"\nassert solution('4 2') == \"3\"\nassert solution('3 1') == \"2\"\nassert solution('5 6') == \"5\"\nassert solution('100 200') == \"200\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'icpc'\nprint(solution(input()))\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nabcd\\nefgh\\n') == 'abcefgh'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nip cc\") == \"icpc\"\nassert solution(\"10\\nip cc\") == \"icpcicpcicpc\"\nassert solution(\"10\\nip cc\") == \"icpcicpcicpc\"\nassert solution(\"100\\nip cc\") == \"icpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpcicpc\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == \"aibov\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1\n1\n1\n1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"2\n1\n2\n3\n\"\"\") == \"12\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"icpc\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\nabc\n''') == 'abc'\nassert solution('''\n2\nabc\nxyz\n''') == 'xyzabc'\nassert solution('''\n3\nabc\nxyz\n''') == 'abcxyz'\nassert solution('''\n4\nabc\nxyz\n''') == 'abcxyz'\nassert solution('''\n5\nabc\nxyz\n''') == 'abcxyz'\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ip cc\") == \"icpc\"\nassert solution(\"abcdefgh\") == \"bdefghi\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"3\") == \"aab\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BAB\") == \"No\"\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAB') == 'No'"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAC') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AB') == 'No'"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''ABA\n''') == 'Yes'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AABA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABB') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABB') == 'No'\nassert solution('BAA') == 'Yes'\nassert solution('BAAB') == 'Yes'\nassert solution('ABBB') == 'Yes'\nassert solution('ABBA') == 'No'\n"
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRRR') == '2'\nassert solution('RRRRRR') == '3'\nassert solution('RRRRRRRRRR') == '4'\nassert solution('RRRRRRRRRRRRRRRRRR') == '5'\n\ninput_value = int(input())\n\nprint(input_value)"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RRR\") == \"2\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"3\"\nassert solution(\"RRRRRR\") == \"4\"\nassert solution(\"RRRR\") == \"1\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRR\") == \"2\"\nassert solution(\"RR\") == \"1\"\nassert solution(\"RRR\") == \"2\"\nassert solution(\"R\") == \"1\"\nassert solution(\"RRRRRR\") == \"5\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRRS') == '2'\nassert solution('RSR') == '2'\nassert solution('RSS') == '1'\nassert solution('RRRR') == '4'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"R\") == \"0\"\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRS') == '2'\nassert solution('RSR') == '2'\nassert solution('RRRR') == '1'\nassert solution('RSRR') == '2'\nassert solution('RRRRR') == '3'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRR') == '2'\nassert solution('RRS') == '2'\nassert solution('RRSRRR') == '3'\nassert solution('RRRRRRRR') == '1'\nassert solution('R') == '1'\n"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RR\") == \"1\"\nassert solution(\"RRS\") == \"2\"\nassert solution(\"RRRS\") == \"3\"\n\n'''"
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('RR') == '1'\nassert solution('RRS') == '2'"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n') == '3 1 2'\nassert solution('1 1 3\\n') == '1 3 1'\nassert solution('2 2 2\\n') == '2 2 2'\nassert solution('2 2 1\\n') == '2 1 2'\nassert solution('3 3 3\\n') == '3 3 3'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3 1 2\"\nassert solution(input()) == \"3 1 2\"\n\"\"\"\n\nx, y, z = [int(num) for num in stdin.strip().split()]"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n') == '3 1 2'\nassert solution('1 2 3\\n') == '3 1 2'\n'''"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"4 5 6\") == \"6 5 4\"\nassert solution(\"7 8 9\") == \"9 8 7\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3') == '3 1 2'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3 4 5') == '5 1 2 4 3'\nassert solution('1 2 3 4 5 6 7') == '7 1 2 5 3 4 6'\nassert solution('1 2 3 4 5 6 7 8') == '8 1 2 5 3 4 6 7'\nassert solution('1 2 3 4 5 6 7 8 9') == '9 1 2 5 3 4 6 7 8'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 3 2') == '2 3 1'\nassert solution('2 1 3') == '3 1 2'\nassert solution('3 2 1') == '1 3 2'\nassert solution('3 1 2') == '2 3 1'\n"
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\n\"\"\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n\n\"\"\""
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n') == '3 1 2'\nassert solution('5 4 2\\n') == '2 5 4'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n') == '3 1 2 5 4 6 7 8 9 10'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == '0'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"100\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('30 100') == '100'\nassert solution('0 0') == '0'\nassert solution('0 0.0') == '0'\nassert solution('5 6') == '10.0'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('3 1') == '0'\nassert solution('4 3') == '0'\nassert solution('5 6') == '2'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('30 100') == '100'\nassert solution('1\\n0') == '1'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '10'\nassert solution('20') == '20'\nassert solution('30') == '40'\nassert solution('50') == '40'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 25\") == \"25\"\nassert solution(\"20 20\") == \"20\"\nassert solution(\"20 30\") == \"20\"\nassert solution(\"20 6\") == \"6\"\nassert solution(\"20 10\") == \"10\""
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"30 1000\") == \"250\"\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('30 100\\n') == '100'\nassert solution('30 101\\n') == '70'\n"
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"\nprint(solution(\"30 100\"))\nprint(solution(\"10 0\"))"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-++\") == \"2\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++-\") == \"0\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\""
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-++') == '2'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"++--\") == \"1\"\nassert solution(\"+++++\") == \"3\"\nassert solution(\"++++++\") == \"4\"\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == '2'\nassert solution(\"+-++\") == '2'\nassert solution(\"+-++\") == '2'\nassert solution(\"+-++\") == '2'"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '2'\nassert solution('+-++') == '2'\nassert solution('-++-') == '2'\nassert solution('+--') == '1'\nassert solution('--+') == '1'\n"
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\""
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+---+\") == \"2\"\nassert solution(\"+---\") == \"1\"\nassert solution(\"+--+\") == \"2\"\nassert solution(\"+---\") == \"1\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/12/31\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/25') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\n\nstdin = input()\n\nprint(solution(stdin))"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2020/03/30\") == \"TBD\"\nassert solution(\"2019/06/30\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/10/30\") == \"TBD\"\nassert solution(\"2019/10/31\") == \"TBD\"\nassert solution(\"2019/10/02\") == \"TBD\"\nassert solution(\"2019/10/12\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"20/02/2020\") == \"TBD\"\nassert solution(\"12/04/2019\") == \"TBD\"\nassert solution(\"01/06/2019\") == \"TBD\"\nassert solution(\"01/02/2020\") == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"Heisei\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('April 30, 2019') == 'TBD'\nassert solution('April 30, 2020') == 'TBD'\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2019/04/30') == \"Heisei\"\nassert solution('2019/04/29') == \"TBD\"\nassert solution('2019/04/28') == \"TBD\"\n"
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2020/04/30') == 'TBD'\nassert solution('2015/04/30') == 'TBD'\nassert solution('2012/04/30') == 'TBD'\nassert solution('2019/04/29') == 'TBD'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"18 2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == str(14)"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 1 1 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\n''') == '14'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n\n5\n1 2\n3 4\n5 3\n1 2\n4 3\n\n''') == '4', \"Simple tests\"\nassert solution('''\n\n20\n1 2\n3 4\n5 3\n1 2\n4 3\n5 4\n1 5\n6 7\n2 7\n4 6\n7 5\n3 5\n\n''') == '12', \"Simple tests\"\nassert solution('''\n\n20\n1 2\n3 4\n5 3\n1 2\n4 3\n5 4\n1 5\n6 7\n2 7\n4 6\n7 5\n3 5\n\n''') == '12', \"Simple tests\"\n\n''')\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == \"14\""
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '3'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"1 2 3 2 1 3 2\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"10 4\\n\"\n    \"2 3 3 1 1 2 1 2 3 3\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"8 10\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n) == \"7\\n\"\n\nassert solution(\n    \"8 10\\n\"\n    \"1 2 3 4 5 6 7 8\\n\"\n    \"1 3 2 2 5 6 7 8\\n\"\n    \"2 4 3 5 2 6 7 8\\n\"\n    \"5 6 3 4 2 7 8 2\\n\"\n    \"6 7 3 4 5 2 8 2\\n\"\n    \"7 8 3 4 5 6 2\\n\"\n    \"8 2 3 4 5 6 7\\n\"\n) == \"7\\n\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 2 3\n2 1\n1 3''') == '3'\nassert solution('''7 2\n1 2 3 2 1 3 2\n''') == '2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"2\""
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 2 3 2 1 3 2\n''') == '2 2 1 3 2'\nassert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 2 1 3 2'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 \nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n\nassert solution('''\n6 4\n2 3 3 1 1 2 1 \n''') == '3'\n\nassert solution('''\n6 4\n1 2 3 2 1 3 2\n''') == '4'\n\nassert solution('''\n10 5\n1 2 3 2 1 3 2\n''') == '5'"
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2\\n1 3 2'\nassert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1'\n\nassert solution('''\n5\n2 4 8 2 4\n8\n5\n14\n10\n''') == '-1'\n\nassert solution('''\n5\n1\n1\n1\n1\n''') == '2'\n\nassert solution('''\n5\n1\n2\n3\n4\n''') == '2'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1\\n') == '1'\nassert solution('4 2\\n') == '2'\nassert solution('4 3\\n') == '3'\nassert solution('4 4\\n') == '4'\nassert solution('4 5\\n') == '5'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"3 2\"\nassert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\") == \"2 2\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3'\nassert solution('''\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '1'\nassert solution('''\n5 4\n2 4 8 2 4\n8\n10\n''') == '2'\nassert solution('''\n5 4\n2 4 8 2 4\n8\n5\n10\n''') == '-1'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n2 4 8 2 4') == '1'\nassert solution('8\\n5\\n14\\n10') == '3 2'\nprint('ok')\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"\"\"\n3\n2\n\"\"\"\nassert solution(\"\"\"\n4 3\n4\n8\n10\n\"\"\") == \"\"\"\n3\n2\n\"\"\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '3 2'\nassert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '2 3'\nassert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '3 3'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 3 5\n3\n4\n7\n''') == '1 -1 3 2 4 7'\nassert solution('''7\n8\n1\n6\n6\n8\n12\n''') == '6 -1 6 7 1 4 3'\nassert solution('''7\n4\n8\n10\n8\n4\n8\n2\n6\n''') == '3 -1 6 4 1 7'\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"10 10 10 10\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"3\"\n"
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '21'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '21'\nassert solution([3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) == '21'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '21'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 3\\n\"\n    \"1 3 2 8 5 5 8 2 2 8 5 2\\n\"\n    \"1 2 2 5\\n\"\n    \"2 6 7\\n\"\n) == \"21\"\n\nassert solution(\n    \"3 3\\n\"\n    \"9 9 9 9 9 9 9 9 9\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n) == \"0\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 6 7\") == \"0\""
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"21\"\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '21'\nassert solution() == '0'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '21'\nassert solution('4 3') == '0'\nassert solution('3 4') == '1'\nassert solution('4 5') == '1'\n"
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('2 4 6 6 6') == '1 2 3'\nassert solution('3 2 8 10') == '2 3 2 1'\nassert solution('4 1 1 1') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 2 8 10\") == \"2\"\nassert solution(\"4 2 8 10\") == \"1\""
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 4 6 6 6\n\n''') == '2'\nassert solution('''3\n2 8 10\n\n''') == '2'\nassert solution('''4\n1 1 1 1\n\n''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 4 6 6 6\n''') == '2'\nassert solution('''\n4\n2 8 10\n''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2 2'\nassert solution('5') == '2 2 2 1'"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 4 6 6 6\n''') == '2'\nassert solution('''\n4\n2 8 10\n''') == '2'\nassert solution('''\n3\n2 8 10\n''') == '2'\n"
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"0\"\n\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '2'\nassert solution('6 1') == '1'\nassert solution('6 2') == '1'\nassert solution('5 1') == '1'\nassert solution('6 1') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == '1'\n\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == '1'\n\nassert solution('''\n8 1\n1000000000\n11111000000\n1111000001\n1100000010\n1010100001\n1010100010\n1010111010\n1010010001\n1000000011\n1000000010\n''') == '1'\n\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\n''') == '2'\n\nassert solution('''\n8 1\n1000000000\n11111000000\n1111000001\n1100000010\n1010100001\n1010100010\n1010111010\n1010010001\n1000000011\n1000000010\n''') == '2'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n0''') == '0'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '0'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '0'\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"2\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"2\"\nassert solution(\"1 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\"\nassert solution(\"1 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"0\"\nassert solution(\"1 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"2\"\nassert solution(\"1 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0\") == \"1\"\n"
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 2\n0\n''') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\nassert solution('6 1') == '4'"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\"\"\") == \"3\""
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 2') == '1'\nassert solution('4 2') == '1'\nassert solution('5 2') == '1 2'\nassert solution('6 2') == '1 2 3 4 5'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\nassert solution(sys.stdin.read()) == \"1 3 5 6\""
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4\\n1 4 5 6'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4\\n1 3 5 6'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\nassert solution('6 1') == '4'"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 1') == '4'\nassert solution('6 1') == '5'\n"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '4'\nassert solution('6 1') == '1 4 5 6'\nassert solution('7 1') == '3'"
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"1 3 5 6\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n5 6 15 30') == \"31\"\nassert solution('2\\n4\\n10 6 30 15') == \"31\"\nassert solution('3\\n3\\n3 4 6') == \"10\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4\\n5 6 15 30') == '30'\nassert solution('2\\n4\\n10 6 30 15') == '31'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\nassert solution('''\n5\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\nassert solution('''\n5\n3\n3 4 6\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\nassert solution('''\n1\n10\n12\n''') == '1'\nassert solution('''\n2\n10\n5 6\n2\n3 4\n''') == '5'\nassert solution('''\n1\n5\n8\n7 4\n5\n5 7\n''') == '8'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"31\"\nassert solution(\"1\") == \"30\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4\n    5 6 15 30\n    4\n    10 6 30 15\n    3\n    3 4 6\n    \"\"\") == \"31\"\nassert solution(\n    \"\"\"\n    10\n    10 20 50\n    5\n    10 20 40\n    3\n    3 4 6\n    \"\"\") == \"15\"\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n5\\n6\\n15\\n30') == '31'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n10 20 50 60') == '40'\nassert solution('4\\n10 20 50 60') == '30'\nassert solution('1\\n10 20 50 60') == '50'\nassert solution('1\\n100 20 50 60') == '100'\n"
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == \"30\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"42\") == \"1\""
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_1) == \"2\"\nassert solution(example_input_2) == \"1\"\nassert solution(input_data) == output\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2 1\"\nprint(solution(input_))\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\") == \"2\"\nassert solution(\"2\\n3\\n1\\n10\") == \"2\"\nassert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\") == \"1\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1'\nassert solution('6\\n5\\n2 3 4 99 100\\n1\\n42\\n1') == '2\\n1'\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100''') == '2'\nassert solution('''4\n2\n3\n5\n2 3 4 99 100''') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\") == \"1\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\") == \"2\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\") == \"2\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\") == \"2\"\nassert solution(\"2\\n4\\n2 10 1 20\\n2\\n3 6\") == \"1\"\n\n\n\n\"\"\""
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3\n1 2 3\n5 2 6\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3\n1 2 3\n5 2 6\n3 3 5\n3 3 6''') == 'NO'\nassert solution('''1 2 3\n1 2 3\n5 2 6\n3 3 5\n3 3 6''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == \"YES\"\nassert solution('1 2 3 6') == \"NO\"\nassert solution('5 2 6 27') == \"YES\"\nassert solution('3 3 5 18') == \"YES\"\nassert solution('10 1') == \"YES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'NO'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'YES', \"Wrong!\"\nassert solution('1 2 3 6') == 'NO', \"Wrong!\"\nassert solution('5 2 6 27') == 'YES', \"Wrong!\"\nassert solution('3 3 5 18') == 'YES', \"Wrong!\""
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == \"YES\\nNO\\nNO\\nYES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\n"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES'\nassert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO'\n\n'''\n\nimport sys"
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2 7 3 3 1 4\\n') == 'YES\\n2\\n3 7 \\n5\\n7 4 3 2 1\\n'\nassert solution('5 4 3 1 5 3\\n') == 'YES\\n1\\n3 7 \\n4\\n7 4 3 2 1\\n'\nassert solution('5\\n0 1 2 3 4') == 'YES\\n0\\n1\\n3 7 \\n4\\n7 4 3 2 1\\n'\nassert solution('5\\n4 3 2 1 0') == 'YES\\n0\\n1\\n3 7 \\n4\\n7 4 3 2 1\\n'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 5 2\") == \"YES\"\nassert solution(\"3\\n1 5 2\") == \"NO\"\nassert solution(\"3\\n1 5 2\") == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('7 2 7 3 3 1 4') == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n3\n2 3 1\n\n5\n0 1 2 3 4\n'''\n    ) == 'YES'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2 7 3 3 1 4') == 'YES'\nassert solution('5 4 3 1 5 3') == 'YES'\nassert solution('4 3 2 1 5 3') == 'NO'\nassert solution('5 1 2 3 4') == 'NO'"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4 3 2 1 0\n''') == 'YES'\nassert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''7\n7 2 7 3 3 1 4\n''') == 'NO'\nassert solution('''5\n0 1 2 3 4\n''') == 'YES'\nassert solution('''5\n1 1 2 1 2\n''') == 'NO'\n"
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 4 3 2 1\") == \"YES\"\nassert solution(\"5 0 2 3 1\") == \"NO\""
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '7 2 7 3 3 1 4\\n'\n) == 'YES\\n2\\n3 7 \\n5\\n7 4 3 2 1 \\n'\n\nassert solution(\n    '5\\n4 3 1 5 3\\n'\n) == 'YES\\n1\\n3\\n4\\n5 4 3 1 \\n'\n\nassert solution(\n    '5\\n0 1 2 3 4\\n'\n) == 'YES\\n0\\n3\\n4\\n5 4 3 1 \\n'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5 3\") == \"8\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"4 4\") == \"18\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n2 1 1\\n1 0 1\\n1 1 1\\n3 0 0\\n\") == \"18\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"8\"\nassert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\\n\") == \"18\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\""
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\"\"\") == \"8\"\nassert solution(\"\"\"5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n\"\"\") == \"-1\"\nassert solution(\"\"\"8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n\n\"\"\") == \"18\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1''') == '-1'"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"18\"\n"
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 4') == '18'\nassert solution('5 2') == '8'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n3\\n2') == '2'\nassert solution('2\\n1\\n3\\n2') == '7'\nassert solution('4\\n3\\n2\\n4') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"6\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"7\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"7\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"7\"\nassert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\") == \"7\""
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\"\n\nassert solution('''\n3 3\n6 6 8\n1 6\n1 1 2 3\n''') == \"-1\"\n\nassert solution('''\n4 2\n1 1\n2 2\n3 3\n''') == \"2\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '2'\nassert solution('3 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '6'\nassert solution('2 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '-1'\nassert solution('4 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2') == '7'\nassert solution('1\\n') == '-1'"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"\n\nassert solution(\"4\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"6\"\n\nassert solution(\"4\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1\\n5 2\\n4 2') == '7\\n'\nassert solution('4\\n1 1\\n6 4\\n5 2\\n2 2') == '6\\n'\nassert solution('6\\n3 1\\n4 2\\n5 2\\n2 2') == '7\\n'\nassert solution('5\\n5 5\\n5 2\\n2 3\\n4 3\\n5 4\\n6 2') == '7\\n'"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2'\nassert solution('2\\n3\\n4\\n5\\n6') == '6'\nassert solution('3\\n4\\n5\\n6\\n7') == '7'\nassert solution('4\\n5\\n6\\n7\\n8') == '8'\nassert solution('5\\n6\\n7\\n8\\n9') == '9'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n1 1 2 3 1') == '2'\nassert solution('4 2\\n6 4 8 5') == '6'\nassert solution('2 2\\n1 6\\n3 5') == '7'\n"
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\nassert solution() == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('12') == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '5'\nassert solution('5') == '5'\nassert solution('12') == '0'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 8 15 16 23\n''') == '5'\nassert solution('''\n12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nprint('Tests finished.')"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 8 15 16 23\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\n"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\nassert solution(input()) == '0'"
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n7\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'\nassert solution('''\n8\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '92'\nassert solution('''\n9\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '87654322'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n6\n100 100\n130 130\n19 19\n19 19\n19 19\n''') == '11'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input(\"\")) == \"92\"\nprint(solution(input()))\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '3'\nassert solution(input()) == '2'\nassert solution(input()) == '92'\nassert solution(input()) == '87654322'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"0\"\nassert solution(input) == \"1\"\nassert solution(input) == \"2\"\nassert solution(input) == \"92\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n5 5\\n13 42') == '0'\nassert solution('2\\n5 5\\n13 42') == '3'\nassert solution('2\\n1337 420\\n123456789 1000000000\\n100500 9000') == '92'\nassert solution('2\\n123456789 1000000000\\n100500 9000') == '91'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n5 5\n13 42\n18 4\n1337 420\n''') == '0'\nassert solution('''\n1\n1\n1\n''') == '0'\nassert solution('''\n3\n3 3\n45 4\n67 5\n''') == '3'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n2\n2 2\n2 2\n''') == '1'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n5 5\\n13 42') == '0\\n3\\n2\\n92\\n87654322\\n9150'\nassert solution('6\\n5 5\\n8 9\\n13 37\\n123 45678\\n100 010\\n100 005') == '0\\n3\\n2\\n92\\n87654322\\n9150'\n"
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'\nassert solution(input('')) == '3'"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '12339'\nassert solution(input()) == '0'\nassert solution(input()) == '15'\nassert solution(input()) == '54306'\nassert solution(input()) == '999999995'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 2\\n1 5\") == \"12339\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\nassert solution('''\n7\n0 6 9\n7 8 9\n8 7 6\n4 2 7\n0 4 3\n6 7 9\n9 8 5\n5 7 3\n''') == \"0\"\nassert solution('''\n7\n7 4 3\n0 9 8\n1 2 4\n3 6 7\n7 6 8\n0 0 0\n5 4 3\n''') == \"4\"\nassert solution('''\n7\n4 3 7\n3 8 5\n9 7 6\n7 6 8\n0 0 0\n0 0 0\n5 4 3\n''') == \"1\"\nassert solution('''\n7\n5 3 4\n3 1 7\n5 2 3\n1 5 3\n3 6 7\n0 0 0\n2 4 1\n''') == \"4\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"12339\"\nassert solution(\"\"\"\n7 7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"0\"\nassert solution(\"\"\"\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"185\"\nassert solution(\"\"\"\n7 7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"54306\"\nassert solution(\"\"\"\n10 999999999\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"999999998\""
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\nassert solution('''6\n0 0 0\n1 1 1\n3 1 2\n2 3 3\n3 2 2\n4 4 4\n''') == \"0\"\nassert solution('''10\n1 1 1\n3 1 2\n2 3 3\n3 2 2\n4 4 4\n''') == \"10\"\nassert solution('''3\n7 7 7\n7 6 7\n7 5 7\n''') == \"7\"\nassert solution('''7\n1 5 7\n1 6 7\n1 7 7\n1 8 7\n1 9 7\n1 10 7\n''') == \"1\""
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\n\nassert solution('''\n2\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n\nassert solution('''\n7\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '8'\n\nassert solution('''\n3\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '5'\n\nassert solution('''\n4\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '4'"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"0\"\nassert solution('''7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\n"
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 5 12345\\n\") == \"12339\"\nassert solution(\"5 0 4\\n\") == \"0\"\nassert solution(\"10 5 15\\n\") == \"15\"\nassert solution(\"17 8 54321\\n\") == \"54306\"\nassert solution(\"499999993 9 1000000000\\n\") == \"185\"\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\nassert solution('3') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"6\"\nassert solution(\"7 2\") == \"8\"\nassert solution(\"3 1\") == \"4\""
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution(\n'''\n8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution(\n'''\n7 3\n1 2 2 3 2 4 5\n''') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 2 3 4''') == '6'\nassert solution('''4 3\n1 2 3 4''') == '5'\nassert solution('''5 1\n1 2 3 4''') == '4'\nassert solution('''1 1\n1 2 3 4''') == '1'\n\n\n\n\"\"\""
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\n"
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\""
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10\\n') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10\\n') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5\\n') == '4'\nprint(solution('7 3\\n1 2 2 3 2 4 5\\n'))\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('3 4 5') == '3 4 5'\nassert solution('4 5 6') == '4 5 6'\nassert solution('7 8 9') == '7 8 9'\nassert solution('A B C') == 'a b c'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 1 2 3') == '1 3 1 2 3'\nassert solution('1 3 1 2 3 3 1 1 3 1 2 3 1') == '1 3 1 2 3 3 1 1 2 3 1'\nassert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\nassert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'\nassert solution('1 2 3 4 5 6 7 8') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"2 1\"\nassert solution(\"3 1\") == \"a 1\"\nassert solution(\"4 1\") == \"a 1\"\nassert solution(\"5 1\") == \"a 1\"\nassert solution(\"10 1\") == \"A 1\"\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 ABCDEF') == '1 2 3 4 5 ABCDEF'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"aBC\"\n\na = input()\nfor i in range(len(a)):\n    if a[i] == '0' or a[i] == '1' or a[i] == '2' or a[i] == '3' or a[i] == '4' or a[i] == '5' or a[i] == '6' or a[i] == '7' or a[i] == '8' or a[i] == '9':\n        continue\n    else:\n        print(a[i])"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"aBC\"\nprint(solution(\"3 1\"))"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('A') == 'a'\nassert solution('B') == 'b'\nassert solution('C') == 'c'\nassert solution('ABC') == 'abc'\n"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"AA\"\nassert solution(\"3 3\") == \"CCC\"\nassert solution
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"aBC\"\n\nS = stdin.readline().rstrip('\\n')\nK = int(stdin.readline().rstrip('\\n'))\nprint(S[K - 1].lower())"
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1\nABCD''') == 'ABCD'\nassert solution('''4 2\nCBABC''') == 'CBABC'\nassert solution('''10 3\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 1 5 2'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"5\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    6\n    khabarovsk 20\n    moscow 10\n    kazan 50\n    kazan 35\n    moscow 60\n    khabarovsk 40\n''') == '3 4 6 1 5 2'\n\n\"\"\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 1 5 2'\nassert solution('1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\n') == '1 2 3 4 5 6 7 8 9 A B C D E F G'\nassert solution('6\\nM\\nO\\nM\\nS\\nB\\nS\\nL\\n') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3 4 6 1 5 2\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 1 5 2'\nassert solution('10\\nmoscow 80\\nmoscow 75\\nmoscow 60\\nmoscow 50\\nmoscow 95\\nmoscow 90\\nmoscow 95\\nmoscow 70\\nmoscow 60\\nmoscow 90\\nmoscow 80\\nmoscow 95\\nmoscow 60\\nmoscow 95\\nmoscow 85\\nmoscow 80\\nmoscow 95\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\n') == '6 9 2 1 5 8 4 3 7 4 1 2 5'\nassert solution('1\\nmoscow 80\\nmoscow 75\\nmoscow 60\\nmoscow 50\\nmoscow 95\\nmoscow 90\\nmoscow 95\\nmoscow 70\\nmoscow 60\\nmoscow 95\\nmoscow 80\\nmoscow 95\\nmoscow 85\\nmoscow 80\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmoscow 85\\nmoscow 90\\nmoscow 95\\nmos"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n"
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 1 5 2'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == 'Yes'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('4 900') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('4 500') == 'Yes'\nassert solution('5 5') == 'No'"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('4 1') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 100\\n\") == \"Yes\"\nassert solution(\"2 100\\n\") == \"No\"\nassert solution(\"1 100\\n\") == \"Yes\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == 'Yes'\nassert solution('5 10') == 'No'"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 200') == 'No'\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('100 900') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 900\") == \"Yes\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '0.145833333333'"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10') == '0.1458333333'\nprint(solution(input()))\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('5 5') == '0.0039860185263'"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0.1458333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"0.145833333333\"\nassert solution(\"2 3\") == \"0.145833333333\"\nassert solution(\"3 3\") == \"0.145833333333\"\nassert solution(\"4 4\") == \"0.145833333333\"\nassert solution(\"5 5\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10\\n') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"0.145833333333\"\nassert solution(\"2 10\") == \"0.145833333333\"\nassert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"4 10\") == \"0.145833333333\"\nassert solution(\"5 10\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10') == '0.145833333333'\n"
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('20 10') == '0.013791016162'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"2\"\nassert solution(\"MON\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('SAT') == \"1\"\n\n\"\"\""
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"SAT\") == \"1\""
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '1'\nassert solution('SUN') == '2'\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"WED\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"THU\") == \"3\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n"
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"0\"\nassert solution(\"MON\") == \"0\"\nassert solution(\"TUE\") == \"0\"\nassert solution(\"WED\") == \"0\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n\"\"\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"\nassert solution('5 5 10') == \"1290\\n2570\\n5130\\n10250\\n330\"\nassert solution('2 4 10') == \"30\\n50\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\nprint('AC')"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30 50 90 170 330 650 1290 2570 5130 10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10 20\") == \"30\"\nassert solution(\"2 10 50\") == \"50\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\nassert solution(\"2 10 10\") == \"30\\n50\"\nassert solution(\"2 10 5\") == \"30\\n50\"\nassert solution(\"2 5 10\") == \"30\\n50\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\"\nassert solution(\"2 15 10\") == \"50\"\nassert solution(\"2 13 8\") == \"13\"\nassert solution(\"2 2 1\") == \"2\"\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\nassert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n"
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\nassert solution('2 1 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\nassert solution('2 5 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\"\nassert solution(\"3\\n4 1 2\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\nassert solution('''\n3\n4 1 2\n''') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('1 2 3 4 5') == '5'"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('1 3 1 1 4') == '5'\nassert solution('3 4 2 1') == '4'\nassert solution('4 1 2') == '0'\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1 3 1 1 4\") == \"5\"\nassert solution(\"3 1 2\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1 3 1 1 4\") == \"5\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4 1 2\") == \"4\"\nassert solution(\"2 1\") == \"2\""
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n5 2 3\n5 5 5\n3 3 3\n''') == 'YES'\nassert solution('''\n2\n5 2 3\n1 1 1\n''') == 'NO'\nassert solution('''\n5\n5 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n3\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\"\"\") == \"YES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n\"\"\"), \"Should return YES\"\nassert solution(\"\"\"\n5\n3 2 3\n1 1000000000 1000000000\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\"\"\") == \"YES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES\\n\"\"\"), \"Should return YES\"\nassert solution(\"\"\"\n5\n3 2 3\n1 1000000000 1000000000\n10 30 20\n50 49 49\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\"\"\") == \"NO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\n'''\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES\\n1 1 1000000000\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 3\n100 100 100''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'YES'\nassert solution('''5\n1 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'NO'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nNO\\nNO\\nYES\\n1 1 1000000000\nassert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nNO\\nNO\\nYES\\n1 1 1000000000\n''' == 'NO\\nNO\\nNO\\nNO\\nNO\\n''')\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\n"
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 2 3\n100 100 100\"\"\") == \"YES\"\nassert solution(\"\"\"5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n\"\"\") == \"NO\"\nassert solution(\"\"\"5\n5 5 5\n10 10 10\n10 10 10\n1 1000000000 1000000000\n\"\"\") == \"YES\""
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2''') == '4'\nassert solution('''5 1 4\n4 2 3 4 1''') == '1'\nassert solution('''5 3 3\n1 2 3 1 1''') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2 6\n5 2 1 4 2\n''') == '4'\nassert solution('''\n5 1 4\n4 2 3 4 1\n''') == '1'\nassert solution('''\n5 3 3\n1 2 3 1 1\n''') == '5'\n\nassert solution('''\n10 1 4\n1 1 1 1 1 1 1 1 1\n''') == '10'\n\nassert solution('''\n10 1 1\n1 1 1 1 1 1 1 1 1\n''') == '10'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 2 6\\n\"\n    \"5 2 1 4 2\\n\"\n    ) == \"4\"\nassert solution(\n    \"5 1 4\\n\"\n    \"4 2 3 4 1\\n\"\n    ) == \"5\"\nassert solution(\n    \"5 3 3\\n\"\n    \"1 2 3 1 1\\n\"\n    ) == \"5\""
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\n\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '5'\n\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\""
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n5 2 6\n5 2 1 4 2\n\"\"\"\n    ) == \"4\"\n\nassert solution(\n    \"\"\"\n5 1 4\n4 2 3 4 1\n\"\"\"\n    ) == \"5\"\n\nassert solution(\n    \"\"\"\n5 3 3\n1 2 3 1 1\n\"\"\"\n    ) == \"5\""
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"4\"\nprint(solution(input_))\n"
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 2\") == \"12\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10 1\") == \"0\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 2\\n\"\n    \"abacaba\\n\"\n    \"a b\") == \"12\"\n\nassert solution(\n    \"10 3\\n\"\n    \"sadfaasdda\\n\"\n    \"f a d\") == \"21\"\n\nassert solution(\n    \"7 1\\n\"\n    \"aaaaaaa\\n\"\n    \"b\") == \"0\""
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nabacaba\") == \"12\"\nassert solution(\"10 3\\nabacaba\") == \"21\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2\") == \"12\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"7 1\") == \"0\""
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7 2\nabacaba\na b\n\n\"\"\") == \"12\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 2\") == \"12\"\nassert solution(\"10 3\") == \"21\"\nassert solution(\"7 1\") == \"0\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"1 3\") == \"0\"\n"
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '12'\nassert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"-1\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"10\") == \"-2999999997\"\nassert solution(\"6\") == \"-2999999997\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '-1'\nassert solution('5') == '2'\nassert solution('10') == '6'\nassert solution('6') == '-2999999997'"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\") == \"2\"\nassert solution(\"4\\n-1 -2 -1 -3\") == \"6\"\nassert solution(\"10\\n-2 8 3 8 -4 -15 5 -2 -3 1\") == \"-2999999997\""
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"5\") == \"\", \"Empty\"\nassert solution(\"1 2 3 -1 -2\") == \"\", \"Empty\"\nassert solution(\"4\") == \"2\", \"Size 1\"\nassert solution(\"-1 -2 -1 -3\") == \"6\", \"Size 1\"\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n1 2 3 -1 -2''') == '2'\nassert solution('''4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'"
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 2') == '3 5'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4 1'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 5\\n\"\n    \"4 3\\n\"\n    \"1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\"\n\nassert solution(\n    \"4 6\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"3 4\") == \"4 1\\n1 2\\n1 3\\n\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '4 1\\n1 2\\n1 3'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4'"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == \"4 1\\n1 2\\n1 3\\n\"\nassert solution('''8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8''') == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1'\n"
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '3 2'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '40'\nassert solution('499993') == '41664916690999888'"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n5\n499993\n''') == '0'\nassert solution('''3\n1\n5\n499993\n''') == '40'\nprint('tests passed')\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '40'\nassert solution('5') == '41664916690999888'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '40'\nassert solution() == '41664916690999888'"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\", \"Wrong answer\"\nassert solution(\"4\") == \"40\", \"Wrong answer\"\nassert solution(\"6\") == \"41664916690999888\", \"Wrong answer\""
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1''') == '0'\nassert solution('''1\n5''') == '40'\nassert solution('''2\n5\n6''') == '41664916690999888'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n5\\n499993\") == \"0\\n40\\n41664916690999888\""
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '1'\nassert solution('3') == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('1') == '40'\n"
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '40'\nassert solution() == '4166496'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '1 1 1 2 -1 1 1 3 1 1'"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\""
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 1 1 2 -1 1 1 3 1 1\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2\n4''') == \"0 1 1 1 1 1 1 1\"\n\nassert solution('''\n3\n1 1 1\n2 2\n3 3\n''') == \"1 1 1 2 -1 1 1 1 1 1 1 1 1 1 1 2 -1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 -1\""
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\n4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2\"\nassert solution(\"5\\n2 4 6 5 1\") == \"1 3\"\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 1 1 2 -1 1 1 3 1 1'\nprint('Congratulations!')"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n4\n5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n64\n32\n97\n2\n12345''') == 'YES\\n2 4 8'\nassert solution('''5\n64\n32\n97\n2\n12345''') == 'NO\\nNO\\nNO\\nNO\\nYES'\nassert solution('''5\n64\n32\n97\n2\n987654321''') == 'NO\\nNO\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\nassert solution('''\n3\n2\n1\n''') == 'NO'\nassert solution('''\n3\n4\n3\n''') == 'NO'\nassert solution('''\n1\n1\n0\n''') == 'NO'\nassert solution('''\n1\n1\n0\n''') == 'NO'\n''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == 'NO'\nassert solution('''5\n32\n97\n2\n12345''') == 'YES'\nassert solution('''8\n64\n32\n97\n2\n12345''') == 'YES'\nassert solution('''1\n2\n3\n4\n5''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n64\n32\n97\n2\n12345''') == 'YES'\n\nassert solution('''1\n1''') == 'NO'\n\nassert solution('''1\n2''') == 'YES'\n\nassert solution('''1\n3''') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2\n12345\n''') == \"NO\"\nassert solution('''\n5\n64\n32\n97\n2\n12345\n''') == \"YES\"\nassert solution('''\n5\n4\n48364\n''') == \"YES\"\nassert solution('''\n5\n10\n12345\n''') == \"NO\"\nassert solution('''\n5\n2\n10\n''') == \"YES\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES\\n2 4 8\\nNO\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"12345\") == \"YES\"\nassert solution(\"64\") == \"NO\"\nassert solution(\"32\") == \"NO\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('2') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\nbbbb\n\"\"\") == \"2\n\nassert solution(\"\"\"\n6\nababab\n\"\"\") == \"0\n\nassert solution(\"\"\"\n2\naa\n\"\"\") == \"1\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nbbbb''') == '2'\nassert solution('''6\nababab''') == '0'\nassert solution('''2\naa''') == '1'"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"bbbb\") == 2\nassert solution(\"ababab\") == 0\nassert solution(\"aa\") == 1\nassert solution(\"a\") == 1\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nabbc') == 'abca'\nassert solution('4\\nbbbb') == 'abba'\nassert solution('6\\nababab') == 'ababab'\nassert solution('2\\naa') == 'ba'\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"0\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"abba\"\n"
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\nba\""
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"abba\"\nassert solution(\"6\") == \"ababab\"\nassert solution(\"2\") == \"ba\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\nassert solution(\"\"\"\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\"\"\") == \"9\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15', 'First Example'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9', 'Second Example'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 1\n3 1\n4 3\n0 0\n\n''') == \"15\"\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == \"9\""
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"15\") == \"15\"\nassert solution(\"8\") == \"15\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == \"9\"\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\n''') == \"15\"\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\n''') == \"9\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"15\"\nassert solution(\"5 2\\n1 0\\n2 0\\n3 2\\n0 3\\n\") == \"9\"\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n'''\n\n\nfrom bisect import bisect_left\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom heapq import heappush, heappop\nfrom collections import defaultdict, deque, Counter\nfrom itertools import product,permutations, combinations, accumulate\nimport math\nimport random\nfrom functools import reduce\n"
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\nassert solution(\"\"\"\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n\"\"\") == \"9\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"2\"\nassert solution(\"1\\n\") == \"2\"\nassert solution(\"1\\n\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1\\n2\\n3\") == \"1\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('3') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '1'\nassert solution('1') == '1.000000000000'\nassert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('4') == '1.000000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"0.8\") == \"1.000000000000\"\nassert solution(\"1.2\") == \"0.96\""
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('4') == '0.9'\nassert solution('5') == '0.98999'\n\n\"\"\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1.000000000000\"\nassert solution(\"10\") == \"1.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1.000000000000'\nassert solution('5') == '0.999999999999'\nassert solution('4') == '1.000000000000'\n\nimport math\nfrom sys import stdin\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('2') == '0.9600000000000'\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('5') == '1.000000000000'\n\n\"\"\""
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.000000000000\"\nassert solution(\"1.8\") == \"1.000000000000\"\nassert solution(\"2.5\") == \"1.000000000000\"\nassert solution(\"3\") == \"1.000000000000\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"1\") == \"0.999999999999\"\n"
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000000'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"Hello World\""
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"13\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'Hello World'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"10\"\nassert solution(\"\") == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"Hello World\"\nassert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"Hello World\"\nassert solution(\"3\") == \"Hello World\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Hello World','sample_tuple'\nassert solution('2') == '2','sample_tuple'\nassert solution('1') == 'Hello World','sample_string'\nassert solution('2') == '2','sample_string'\nassert solution('3') == 'Invalid input','sample_string'"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 'Hello World'\nassert solution('') == 'Hello World'\nassert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('2') == 'A+B'\n\"\"\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"Hello World\"\nassert solution('2') == \"5\"\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == 'Hello World\\n'\nassert solution('2\\n') == '10\\n'\nassert solution('2\\n10\\n') == '12\\n'\n"
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Hello World\"\nprint(solution(input()))\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '21'\nassert solution('3') == '31'\nassert solution('4') == '14'\nassert solution('5') == '245'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n3 4\n2 3\n1 2\n2 1\n1 3''') == '1 3'\nassert solution('''5 6\n3 4\n2 3\n1 2\n2 1\n1 3''') == '1 3'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('4 2') == '2'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"3333\"\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '12', solution('1 2')\nassert solution('5 6') == '666', solution('5 6')\nassert solution('2 1') == '21', solution('2 1')\nassert solution('3 2') == '332', solution('3 2')\nassert solution('4 5') == '5555', solution('4 5')\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('2 1 3') == '2 3 1'\nassert solution('3 1 2') == '1 2 3'"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n''') == '3333'\n\nassert solution('''8 9\n''') == '909'\n\nassert solution('''1 8\n''') == '8'\n\nassert solution('''1 2\n''') == '12'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '333'\nassert solution('0 1 2') == '222'\n"
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n3') == '3'\nassert solution('3\\n4') == '3'\nassert solution('4\\n5') == '5'\nassert solution('5\\n6') == '6'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"a\"\nassert solution(\"c\") == \"z\""
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"A\") == \"B\"\nassert solution(\"Z\") == \"A\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'b'\nassert solution('A') == 'B'\nassert solution('b') == 'A'\nassert solution('aA') == 'B'\nassert solution('ba') == 'A'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"c\") == \"b\"\nassert solution(\"z\") == \"a\"\nassert solution(\"Z\") == \"a\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'z'\nassert solution('z') == 'z'\nassert solution('c') == 'c'\nassert solution('n') == 'n'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('a') == 'b'\nassert solution('a,b') == 'b,a'\nassert solution('a, b') == 'b,a'\nassert solution('A,B') == 'B,A'\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"c\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"c\") == \"d\"\nassert solution(\"z\") == \"a\"\n"
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"\n\"\"\""
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'b'\nassert solution('z') == 'a'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oder atc\") == \"atcoder\""
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('physics') == 'physics'\nassert solution('computer science') == 'compsci'\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nprint(solution(input()))\n\"\"\"\n\ns = input()\nt = input()\n\nprint(''.join([t, s]))\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'atcoder'\n\"\"\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('oder') == 'oder'\nassert solution('otc') == 'otc'"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"123 abc\") == \"123abc\""
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"coder atcoder\") == \"atcoder\"\nassert solution(\"coder\") == \"coder\"\nassert solution(\"coder coder\") == \"coder\"\nassert solution(\"oder atcoder\") == \"atcoder\"\n\"\"\""
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"oder\") == \"oder\"\nassert solution(\"oder oer\") == \"oeroder\"\n"
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\nassert solution(\"sreap s\") == \"sreeap\"\nassert solution(\"sreeeap\") == \"reeeap\"\nassert solution(\"\") == \"\"\nassert solution(\"sreepoo\") == \"sreeeepoo\"\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5\n1\n2\n3\n4\n''') == '0'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('1000000 1000000') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\nassert solution('''\n2\n1 2\n''') == '1'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('2') == '1000000'\nassert solution('5 5 7 8 2') == '0'\n\nstdin = \"\"\"\n5\n1 5 7 8 2\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('5 1 5 7 8 2') == '0'\nassert solution('6') == '1000000'\nassert solution('6 1000000') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '5\\n1 5 7 8 2\\n') == '0'\nassert solution(\n    '6\\n5 1000000 1000000\\n') == '1000000'\n"
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '0'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 3 1\n1 3 5 4 2 7 6''') == '5'\nassert solution('''6 1 1 100 99\n100''') == '1'"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 2 3 3''') == '5'\nassert solution('''1 1 100 99''') == '1'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 3 3\") == \"5\"\nassert solution(\"6 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\""
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"6\"\nassert solution(solution.__doc__) == \"2\"\nassert solution(solution.__doc__) == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1\") == \"4\"\nassert solution(\"1 1 100 99\") == \"1\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 100 99') == '5'\nassert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 3 3\\n7 10 50 12 1 8\") == \"5\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"1 1 100 99\\n100\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == \"5\"\nassert solution('''\n1 1 100 99\n100\n''') == \"1\"\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == \"6\""
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 100 99\n100\n''') == '5'\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\nassert solution('''\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\n''') == '6'\nassert solution('''\n5 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n''') == '6'\n"
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('7 4 2 1') == '6'"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"6 3\") == \"3\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0'\nassert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n7 4\n1 2 3 4 5 6 7\n''') == '7'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n3 2 0 6 10 12\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n''') == '0 1 2 3'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n2 2 2\n''') == '3'\nassert solution('''\n4 4\n0 1 2 3\n''') == '0'"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"4 2\") == \"0 1 2 3\""
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 2 0 6 10 12\n\n0 1 2 3\n''') == '3'\nassert solution('''4 2\n0 1 2 3\n\n0 1 2 3\n''') == '0'\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3 2\"\nassert solution(\"5 4\") == \"1 0 2 1 0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"6 3\") == \"3 2 0 6 10 12\"\n"
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"4 2\") == \"0\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0 2 0\\n2 4') == '8'\nassert solution('5 6') == '8'\nassert solution('5 3\\n3 5') == '20'\nassert solution('5 3\\n4 2') == '20'\nassert solution('5 3\\n2 5') == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\nassert solution('''\n7 2\n1 3\n2 3\n1 4\n1 5\n2 6\n3 5\n''') == \"14\"\nassert solution('''\n5 3\n3 2\n1 5\n1 2\n1 5\n2 3\n''') == \"20\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '20'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 2\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"10\"\nassert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n\nOutput\n7\n''') == \"10\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"20\"\nassert solution(\"\") == \"20\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '20'"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n2 3\n3 5''') == '8'\nassert solution('''6\n5 2\n1 2\n4 2\n1 5\n3 3\n4 4''') == '14'\nassert solution('''6\n3 3\n4 4\n3 2\n2 4\n5 4\n4 5''') == '9'\nassert solution('''5\n5 5\n4 5\n3 5\n2 5\n5 5''') == '10'\nassert solution('''5\n1 5\n4 4\n3 2\n2 4\n5 4''') == '7'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\"\n) == \"8\"\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '5 6\\n'\n    '1 2 0 2 0\\n'\n    '2 4\\n'\n    '3 3\\n'\n    '1 5\\n'\n    '1 2\\n'\n    '1 5\\n'\n    '2 3\\n'\n) == '20'\nassert solution(\n    '5 3\\n'\n    '4 2\\n'\n    '3 5\\n'\n    '4 2\\n'\n    '2 5\\n'\n) == '24'\n"
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"8\", \"Wrong!\"\nassert solution(\"10 10\") == \"20\", \"Wrong!\"\nassert solution(\"5 1\") == \"1\", \"Wrong!\"\nassert solution(\"3 3\") == \"3\", \"Wrong!\"\nassert solution(\"5 2\") == \"2\", \"Wrong!\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n1 1 1 1 1 1 1 1\\n2\\n1 1 1 1 1 1 1 1') == 'YES'\nassert solution('5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n1 1 1 1 1 1 1 1') == 'NO'"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''\n5\n1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1 1\n10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\n\n\"\"\"\n\nimport sys\nimport math\nfrom itertools import combinations, combinations_with_replacement\nfrom functools import reduce\nfrom bisect import bisect, bisect_left\n\nsys.stdin = open('input.txt', 'r')\n"
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\\n2\\n1 1 1 1 1 1 1 1\\n1\\n10000 10000 10000 10000\") == \"YES\\nYES\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\nassert solution('''\n8 5 4\n1 5 2\n2 4 1\n2 3 1\n2 5 1\n2 6 1\n1 7 1\n5 7 3\n5 8 2\n''') == '6'\nassert solution('''\n5 6 3\n1 4 2\n3 2 1\n3 3 2\n4 2 1\n4 1 2\n''') == '5'\nassert solution('''\n5 3 2\n3 4 2\n1 4 1\n2 2 1\n1 1 2\n''') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 7\\n2 3 1\\n5 6 4\\n1 6 5\\n3 6 2\\n3 4 5') == '3'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 10 5\") == \"3\"\nassert solution(\"2 6 2\") == \"2\"\nassert solution(\"3 6 3\") == \"2\"\nassert solution(\"8 2 1\") == \"1\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\nassert solution('1 1') == '1'\nassert solution('2 3') == '1'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 4 5\") == \"4\"\nassert solution(\"2 6 2\") == \"2\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 2 1\") == \"1\"\nassert solution(\"2 1 5\") == \"5\"\n"
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n') == '3'\nassert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n') == '9'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3 1\"\nassert solution(\"6\") == \"7 2\"\nassert solution(\"10\") == \"7486 3\""
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 12 13 2 15\") == \"7486 3\"\nassert solution(\"10\") == \"7486 3\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 1\\n1 1 1 1 1\\n'\nassert solution('6') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10') == '7486 3\\n3 3 3 2 2 2 2 1 1 1 1\\n'\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 1 3 4 2\n\n''') == '3 1'\n\nassert solution('''6\n1 5 12 13 2 15\n\n''') == '7 2'\n\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n\n''') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 1 3 4 2\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\n6\n1 5 12 13 2 15\n\"\"\") == \"7 2\"\nassert solution(\"\"\"\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n\"\"\") == \"7486 3\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\n\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3 1\\n1 1 1 1 1\"\nassert solution(\"6\") == \"7 2\\n2 2 1 1 2 1\"\nassert solution(\"10\") == \"7486 3\\n3 3 3 2 2 2 2 1 1 1\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3 1\"\nassert solution(\"5\") == \"3 1 1 1 1\"\nassert solution(\"10\") == \"7486 3\"\nassert solution(\"10\") == \"7486 3\"\n"
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3 1\"\nassert solution(\"6\") == \"7 2\"\nassert solution(\"10\") == \"7486 3\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('4') == \"2\"\nassert solution('8') == \"3\"\nassert solution('16') == \"4\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4') == '4'\nassert solution('2\\n7') == '1'\nassert solution('5\\n10') == '1'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"100\") == \"4\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"9876\") == \"7\"\nassert solution(\"10000\") == \"4\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n5009\\n7\\n9876\\n10000\\n10\\n') == '2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n10\n10\n''') == '1'\nassert solution('''\n1000\n10\n''') == '4'\nassert solution('''\n10\n10\n''') == '2'"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '4'\nassert solution(input()) == '1'\nassert solution(input()) == '4'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '1'\nassert solution('8') == '4'\nassert solution('4') == '4'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"9876\") == \"7\"\nassert solution(\"10000\") == \"4\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 3 3 2 1 3'\nprint('It is solved, it is: ', solution('''\n3\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n'''))\n\n\"\"\"\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n====================================================================================================================\n\"\"\""
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '\\n'.join(map(str, [1, 1, 1, 1, 3, 3, 2, 2, 2, 2, 4, 4, 1, 1, 1, 4, 4]))\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1'\nassert solution('6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3') == '1 1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''.strip()"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == \"1 1 1 1 1\"\nassert solution('''6\n4\n4 6 1 2 3 5\n2\n4 1 5 3 2\n5\n5 6 1 2 4 3\n1\n3\n1 2 3 4 5\n2\n4 4 4 1 4\n4\n5 5 5 5 5\n''') == \"4 4 4 1 4\"\nassert solution('''6\n5\n4 6 1 2 3 5\n2\n4 1 5 3 2\n5\n5 6 1 2 4 3\n1\n3\n1 2 3 4 5\n2\n4 4 4 1 4\n4\n5 5 5 5 5\n''') == \"4 4 4 1 4\"\nassert solution('''6\n5\n4 6 1 2 3 5\n2\n4 1 5 3 2\n5\n5 6 1 2 4 3\n1\n3\n1 2 3 4 5\n2\n4 4 4 1 4\n4\n5 5 5 5 5\n''') == \"4 4 4 1 4\"\nassert solution('''5\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == \"1 1 1 1 1\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 1 2 3 4\\n1\\n2\\n1\\n3\\n\") == \"3 3 3\\n2 3 2 2 1 3\\n1\\n2 2 2 2\\n4 4 1 4\\n\"\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 1 2 1 1 1 1 2'\nassert solution() == '2 3 2 3 1 3'\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2') == '2 3 3 2 2 1 2 3'\nprint('all tests passed')\n"
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\"\"\") == \"3 3 3 2 1 3\"\nassert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\"\"\") == \"2 3 3 2 1 2\"\nassert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\"\"\") == \"2 3 3 2 1 1\"\nassert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\"\"\") == \"2 3 3 2 1 1\"\nassert solution(\"\"\"6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\"\"\") == \"2 3 3 2 1 1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1 2 2\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"4\n1 2 2\n3\n1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 2 1\n3\n1 2 1\n4\n1 1 1\n5\n1 1 1\n\"\"\") == \"3\"\n\n\"\"\"\n--- Day 10: Adapter Array ---\n\nPatched into the aircraft, you discover a programming language that uses uninitialized memory to store settings and modes instead of the default 128 uninitialized bits.\n\nThe language is still very much like it used to be, but you can also create new settings and modes (via XOR) based on previous settings and modes.\n\nThe current settings and modes are initialized to 0.\n\nYour goal is to find the highest setting XOR combination that causes the computer to produce output.\n\nTo do this, you need to find values of the settings and modes that produce the highest XOR combination for each setting.\n\nSo, for example, when the settings are 0 and the modes are 0, the XOR combination is 0. So your program should find a setting and mode that will cause the computer to output the HIGHEST XOR.\n\nIn the above example, this is combination #2, so you should return the value 1.\n\nYour program should perform this calculation for ALL of the settings and modes. If there are multiple combinations of settings and modes that yield the highest XOR, your program should return the one that uses the fewest number of settings and modes.\n\nIf your program uses more than one combination of settings and modes that results in the highest XOR, it should return the one that uses the most settings.\n\nIn the above example, the following settings and modes are all combinations that result in the highest XOR:\n\n0, 0, 0, 0, 0\n0, 0, 0, 1, 0\n0, 0, 1, 0, 0\n0, 0, 1, 1, 0\n0, 1, 0, 0, 0\n0, 1, 0, 1, 0\n0, 1, 1, 0, 0\n0, 1, 1, 1, 0\n1, 0, 0, 0, 0\n1, 0, 0, 1, 0\n1, 0, 1, 0, 0\n1, 0, 1, 1, 0\n1, 1, 0, 0, 0\n1, 1, 0, 1, 0\n1, 1, 1, 0, 0\n1, 1, 1, 1, 0\nWhen testing your program, we usually sample a small range of values for the settings and modes using the TEST SETTINGS and TEST MODES.\n\n-- Python\nThis one is a bit different from previous exercises, because the input to your program is a single line and it has to be parsed as a list of integers. The list consists of a number of settings and modes that each setting requires and each mode requires.\n\nSo, the following input is a list of numbers:\n\n1 2 3 4 5\n4\n2 1 2 1\n1 3 1 1\n2 1 1 1\n\nThe program should calculate the XOR of the settings (0, 0, 0, 0, 0) and modes (0, 0, 0, 1, 0) and return the highest XOR.\n\nThe following is one possible XOR combination (0, 0, 0, 0, 0):\n\n0, 0, 0, 0, 0\n0, 0, 0, 1, 0\n0, 0, 1, 0, 0\n0, 0, 1, 1, 0\n0, 1, 0, 0, 0\n0, 1, 0, 1, 0\n0, 1, 1, 0, 0\n0, 1, 1, 1, 0\n1, 0, 0, 0, 0\n1, 0, 0, 1, 0\n1, 0, 1, 0, 0\n1, 0, 1, 1, 0\n1, 1, 0, 0, 0\n1, 1, 0, 1, 0\n1, 1, 1, 0, 0\n1, 1, 1, 1, 0\n1, 2, 0, 0, 0\n1, 2, 0, 1, 0\n1, 2, 1, 0, 0\n1, 2, 1, 1, 0\n1, 3, 0, 0, 0\n1, 3, 0, 1, 0\n1, 3, 1, 0, 0\n1, 3, 1, 1, 0\n2, 0, 0, 0, 0\n2, 0, 0, 1, 0\n2, 0, 1, 0, 0\n2, 0, 1, 1, 0\n2, 1, 0, 0, 0\n2, 1, 0, 1, 0\n2, 1, 1, 0, 0\n2, 1, 1, 1, 0\n3, 0, 0, 0, 0\n3, 0, 0, 1, 0\n3, 0, 1, 0, 0\n3, 0, 1, 1, 0\n3, 1, 0, 0, 0\n3, 1, 0, 1, 0\n3, 1, 1, 0, 0\n3, 1, 1, 1, 0\n4, 0, 0, 0, 0\n4, 0, 0, 1, 0\n4, 0, 1, 0, 0\n4, 0, 1, 1, 0\n4, 1, 0, 0, 0\n4, 1, 0, 1, 0\n4, 1, 1, 0, 0\n4, 1, 1, 1, 0\n5, 0, 0, 0, 0\n5, 0, 0, 1, 0\n5, 0, 1, 0, 0\n5, 0, 1, 1, 0\n5, 1, 0, 0, 0\n5, 1, 0, 1, 0\n5, 1, 1, 0, 0\n5, 1, 1, 1, 0\n6, 0, 0, 0, 0\n6, 0, 0, 1, 0\n6, 0, 1, 0, 0\n6, 0, 1, 1, 0\n6, 1, 0, 0, 0\n6, 1, 0, 1, 0\n6, 1, 1, 0, 0\n6, 1, 1, 1, 0\n--- Part Two ---\n\nWith each test case, the program now calculates the XOR of the settings and modes. If the XOR of the settings and the modes is the highest XOR, the program produces the settings and modes that will cause the computer to output HIGHEST XOR.\n\nOtherwise, the XOR is less than the highest XOR. The program now calculates the XOR of the settings and modes for each combination of settings and modes and keeps the settings and modes that produce the highest XOR.\n\nIf there are multiple combinations of settings and modes that produce the highest XOR, the program should return the settings and modes that use the fewest number"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == \"2\"\nassert solution('''1\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == \"1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3 2 1\"\n\nassert solution(\"\"\"\n3\n1 2 3\n3\n1 2\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"4\"\nassert solution(\"8\") == \"3\""
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 \n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '0 0 1 2 3 4'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2 \nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\""
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 "
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n\n''') == '5 4 0 5 3 3 9 0 2 5 '"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2\"\nassert solution(\"10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n\") == \"5 4 0 5 3 3 9 0 2 5\"\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 \n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n10 4 10 15\\n1 2') == '0 0 1 2 \nassert solution('4 2\\n10 4 10 15\\n1 2\\n4 3') == '5 4 0 5 3 3 9 0 2 5'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6') == '5 4 0 5 3 3 9 0 2 5'\n"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 '"
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2 \nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5 \nprint(solution(input()))"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\\\n5 2\n1 2 3\n1 3 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\\\n5 2\n1 2 3\n1 3 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\\\n3 2\n1 2 3\n1 3 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 2 3\\n1 3 2') == 'YES'\nassert solution('3 2\\n1 2 3\\n1 3 2') == 'NO'\nassert solution('3 2\\n1 2 3\\n1 3 2') == 'YES'\n\n\n'''\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 2 3\n1 3 2\n''') == 'YES'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"abb\"\nassert solution(\"1 3 2\") == \"abb\"\nassert solution(\"1 2 3 1 2 1 2 1\") == \"aabb\"\nassert solution(\"1 2 3 1 2 1 3\") == \"aabb\"\nassert solution(\"1 2 3 1 3 2\") == \"aabb\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'abb', \"should return abb\"\nassert solution('1 2 3 4 5') == 'aabb', \"should return aabb\"\nassert solution('1 2 3 4 5 6 7') == 'aaaaa', \"should return aaaaa\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n1 3 2\\n') == 'NO'\nassert solution('1 2 3\\n1 3 2\\n') == 'YES'\nassert solution('1 2 3\\n1 3 2\\n') == 'YES'\n\nassert solution('1 2 3\\n1 3 2\\n') == 'YES'\nassert solution('1 2 3\\n1 3 2\\n') == 'YES'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '3 2\\n1 2 3\\n1 3 2\\n') == 'YES'\nassert solution(\n    '1\\n1\\n1\\n') == 'NO'\n"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('6 2') == 'NO'"
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 2 3\n1 3 2\n''') == 'YES'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution() == '4'\n\nimport sys"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n10 10 10 10\n''') == '43'\nassert solution('''4\n5 4 5 4 4 5\n''') == '69'\nassert solution('''6\n5 4 5 4 4 5\n''') == '64'\nassert solution('''2\n1 4\n''') == '2'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_from_file(\"test_case_2.txt\")) == \"69\"\nassert solution(input_from_file(\"test_case_1.txt\")) == \"43\"\nprint(\"All test cases passed...\")\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\nassert solution('''\n1\n0\n''') == '0'"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '64'\nassert solution('6') == '69'\nassert solution('2') == '3'\nassert solution('1') == '2'"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '69'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\n"
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n20 10 20') == '43'\nassert solution('4\\n10 10 10 10') == '69'\nassert solution('6\\n5 4 5 4 4 5') == '69'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"4\\n2 5 1 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"5\\n3 1 5 2 4\\n\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"5\""
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '10'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('5 2 5 1 3') == '3'\nassert solution('2 1 1 1 1 1') == '1'"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n3 2 5 1') == '1'\nassert solution('5\\n3 1 5 2') == '1'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 2 5 1 3\n''') == '3'\nassert solution('''1\n2 3\n''') == '0'\nassert solution('''1\n2 3 4 5\n''') == '3'\nassert solution('''3\n3 1 2\n''') == '2'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\n\n\"\"\""
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '7'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2 5 1 3\\n\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\"\nassert solution(\"4\\n2 3 4 5\\n\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 2 5 1 3\\n') == '3'\n"
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n4 2 5 1 3\n''') == '3'\nassert solution('''\n5\n4 2 5 1 3\n''') == '3'\nassert solution('''\n2\n5 2 1\n''') == '1'\nassert solution('''\n2\n5 2 1\n''') == '0'"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 3 3 3\n''') == '1'\nassert solution('''5\n3 3 3 3 3\n''') == '3'\nassert solution('''4\n1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('1\\n') == '0'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 3, 3, 3]) == '1', \"Wrong answer!\"\nassert solution([4, 2, 4, 1, 4, 2, 4]) == '2', \"Wrong answer!\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 3 3\") == \"1\"\nassert solution(\"2\\n4 2\\n5 3\") == \"1\"\nassert solution(\"4\\n3 3 3 3\") == \"0\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n3 3 3 3\n''') == '1'\nassert solution('''4\n3 3 3 3\n''') == '0'\nassert solution('''5\n4 1 5 3 4\n''') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"4 5 6 7\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 1 2 2 2') == '1'\nassert solution('1 1 1 1 1') == '1'"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 2 3 4 5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 3 2 4 5') == '3'\nassert solution('1 4 3 2 5') == '4'\nassert solution('1 5 3 2 4') == '5'\n\n'''\n\nimport math\n\nstdin = input()\n\nx_1, x_2, x_3, x_4, x_5 = stdin.split()\n\nx_1 = int(x_1)\nx_2 = int(x_2)\nx_3 = int(x_3)\nx_4 = int(x_4)\nx_5 = int(x_5)"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '1'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 2 4 3 5') == '2'\nassert solution('0 2 3 4 5') == '3'\nassert solution('0 2 3 4 5') == '4'\nassert solution('0 2 3 4 5') == '5'\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\""
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 0 5\") == \"0\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 1 2 3 4') == '2'\nassert solution('0 1 2 3 4 5') == '3'\nassert solution('0 1 2 3 4 5 6') == '4'\nassert solution('0 1 2 3 4 5 6 7') == '5'\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 5]) == '0'\nassert solution([2, 2]) == '0'\nassert solution([2, 1]) == '1'\nassert solution([1, 2]) == '2'\nassert solution([10, 10]) == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5, 5]) == \"0\"\nassert solution([2, 4]) == \"0\"\nassert solution([1, 3]) == \"1\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '0'\nassert solution('10 5') == '-1'\nassert solution('100 100') == '0'\nassert solution('5 2') == '1'\nassert solution('15 15') == '15 15'"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"6 5\") == \"0\"\nassert solution(\"2 4\") == \"10\""
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '0'\nassert solution('4 5') == '1'\nassert solution('12 30') == '2'\nassert solution('10 20') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 5]) == 0\nassert solution([2, 5]) == 1\nassert solution([1, 5]) == 4\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"6 6\") == \"4\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 3') == '6'\nassert solution('5 2') == '1'"
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"10 2\") == \"8\"\nassert solution(\"10 10\") == \"16\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"No\"\n\n---\n\n\"1 10 100\"\n\"4 5 9\"\n\"2 5 9\"\n\"4 5 8\"\n\"4 6 7\"\n\"4 5 7\"\n\"4 6 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 6 7\"\n\"4 5 7\"\n\"4 6 7\"\n\"4 6 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\"\n\"4 5 7\""
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 10 100\n''') == 'Yes'\nassert solution('''\n3\n1 10 100\n''') == 'No'\nassert solution('''\n4\n1 20 100 100\n''') == 'Yes'\n'''"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n10 10\n''') == 'Yes'\n\nassert solution('''\n2\n10\n''') == 'No'\n\nassert solution('''\n3\n1 10 100\n''') == 'Yes'\n\nassert solution('''\n3\n1 10 1\n''') == 'No'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 10 100\n''') == 'Yes'\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 10 100\") == \"Yes\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"5\") == \"No\""
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 10 100\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"1 1 1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\"\n    \"1 10 100\"\n) == \"Yes\"\n\"\"\"\nimport math\n\na = list(map(int, stdin.split()))\n\nfor i in range(1, len(a)):\n    if a[i]!= a[i - 1]:\n        if (a[i] // math.gcd(a[i], a[i - 1])) % 4!= 0:\n            return \"No\"\n    else:\n        if (a[i] % 4!= 0):\n            return \"No\"\n\nreturn \"Yes\"\n"
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('1 1 100') == 'No'"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"xy\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"\nassert solution(\"xyy\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'No'\nassert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('abx') == 'No'\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"xy\") == \"No\"\nassert solution(\"y\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 5 4') == 'NO'\n\nprint(solution())\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 10 1\") == \"YES\"\nassert solution(\"1 9 3\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 9 5\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 2 0') == 'NO'\nassert solution('5 2 1') == 'YES'\nassert solution('2 5 1') == 'NO'\nassert solution('0 5 1') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 100\n''') == 'YES'\n\nassert solution('''\n10 10 1\n''') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 3 2') == 'NO'\nassert solution('3 3 3') == 'YES'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"9 5 1\") == \"NO\"\nassert solution(\"1 9 5 1\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 5 10') == 'NO'\nassert solution('1 2 3') == 'NO'\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('5 6 7') == 'NO'\n\"\"\"\n\nimport math\n\nA, B, C = (int(x) for x in stdin.split())"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"20 10 2\") == \"YES\"\nassert solution(\"8 10 2\") == \"NO\"\nassert solution(\"5 5 1\") == \"YES\"\nassert solution(\"5 2 5\") == \"YES\"\n"
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '2'\nassert solution('4 5') == '3'\nassert solution('4 5') == '3'\nassert solution('5 7') == '4'\nassert solution('2 3') == '1'"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n''') == '1'\nassert solution('''\n3 3\n''') == '3'\nassert solution('''\n4 4\n''') == '1'\nassert solution('''\n5 5\n''') == '1'\nassert solution('''\n6 6\n''') == '1'\n'''"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n\n1 1 1\n\n1 1 1\n\n1 1 1\n''') == '1', \"First\"\nassert solution('''\n3 2\n\n1 1 1\n\n1 1 1\n\n1 1 1\n''') == '2', \"Second\"\nassert solution('''\n5 5\n\n1 1 1 1 1\n\n1 1 1 1 1\n\n1 1 1 1 1\n\n1 1 1 1 1\n\n1 1 1 1 1\n''') == '9', \"Third\"\nassert solution('''\n5 6\n\n1 1 1 1 1 1\n\n1 1 1 1 1 1\n\n1 1 1 1 1 1\n\n1 1 1 1 1 1\n\n1 1 1 1 1 1\n''') == '12', \"Fourth\"\nassert solution('''\n4 4\n\n1 1 1 1\n\n1 1 1 1\n\n1 1 1 1\n\n1 1 1 1\n''') == '6', \"Fifth\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\""
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '1'\nassert solution('1 2') == '3'\nassert solution('2 3') == '6'\n\nmy_list = [1, 2, 3]\nfor i in range(len(my_list)):\n    my_list[i] = i * i\n\nprint(my_list)\n\nmy_list = [[i * i] for i in range(3)]\nprint(my_list)\n\nx = int(input())\ny = int(input())\n\nmy_list = [i * i for i in range(x)]\nprint(my_list)\n\nmy_list = []\nfor i in range(x):\n    my_list.append(i * i)\n\nprint(my_list)\n\nmy_list = [i * i for i in range(x)]\nprint(my_list)\n\nmy_list = [i * i for i in range(x) if i % 2 == 0]\nprint(my_list)\n\nmy_list = [i * i for i in range(x) if i % 2 == 0 if i < 5]\nprint(my_list)\n\nmy_list = [i * i for i in range(x) if i % 2 == 0 and i < 5]\nprint(my_list)\n\nmy_list = [i * i for i in range(x) if i % 2 == 0 if i < 5]\nprint(my_list)\n\nmy_list = [i * i for i in range(x) if i % 2 == 0 or i < 5]\nprint(my_list)\n\nmy_list = [i * i for i in range(x) if i % 2 == 0 or i < 5]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11)]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if i!= j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if i + j!= 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 if (i + j) < 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 if (i + j) < 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or (i + j) < 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or (i + j) < 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 and (i + j) < 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 and (i + j) < 10]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i == j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i == j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i == j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i == j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy_list = [(i, j) for i in range(1, 11) for j in range(1, 11) if (i + j) % 2 == 0 or i < j]\nprint(my_list)\n\nmy"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"13 3 1\\n\") == \"3\"\nprint(solution(\"13 3 1\\n\"))\n\"\"\"\nfrom math import sqrt\nfrom math import floor\n\nx, y, z = map(int, input().split())\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '3'\nassert solution('10 5 4') == '4'\nassert solution('10 10 3') == '3'\nassert solution('5 1 1') == '2'\nassert solution('5 10 3') == '2'\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 1\n''') == '3'\nassert solution('''\n6 6 1\n''') == '4'\nassert solution('''\n10 10 1\n''') == '11'\n'''\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15 1 1') == '3'\nassert solution('10 1 2') == '2'\nassert solution('10 3 2') == '2'\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 3 3\") == \"0\"\nassert solution(\"20 10 5\") == \"4\"\nassert solution(\"20 10 5\") == \"4\"\nassert solution(\"20 10 0\") == \"0\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\") == \"3\"\nassert solution(\"2 7 1\") == \"1\"\nassert solution(\"2 7 1\") == \"1\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 3 1\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('12 1 0') == '1'\n"
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 7 1\") == \"3\"\nassert solution(\"13 3 1\") == \"3\"\nassert solution(\"2 5 4\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\n\nassert solution('''\n2\n2 2\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '0'\n\nassert solution('''\n2\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '1'\n\n'''"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 2, 1, 3, 1, 2]) == 2\nassert solution([5, 5, 4, 4, 3, 2]) == 2\nassert solution([5, 4, 3, 2, 1, 0]) == 1\nassert solution([2, 1, 0, 1]) == 1\nassert solution([3, 1, 4, 3]) == 0\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10\n5 4\n7 9\n1 2\n8 3\n6 6\n4 7\n5 8\n2 8\n8 9\n6 6\n5 2\n4 3\n1 7\n9 8\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"0 4\") == \"4\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '2'\nassert solution('''\n3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\n''') == '1'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n1 6\n''') == '4'\n'''\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '7'\nassert solution(input()) == '7'\nassert solution(input()) == '7'\n\"\"\"\n\nfrom math import gcd"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 4]) == '7'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '7'\nassert solution('1 2') == '1'\nassert solution('3 4') == '6'\nassert solution('100 50') == '501'\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n0 3\") == \"7\"\nassert solution(\"2 8\\n0 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\") == \"10\"\nassert solution(\"1 1\\n0\") == \"1\""
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\nassert solution('''5 5\n2 3 2 2\n''') == '6'\nassert solution('''10 10\n2 3 2 3 2 2 2 2 2 3\n''') == '1'"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"7\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"2 1\") == \"8\"\nassert solution(\"1 2\") == \"7\"\nassert solution(\"1 2\") == \"7\"\n"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1 4\n0 3\"\"\") == \"7\"\n\nassert solution(\"\"\"1 2\n0 1\"\"\") == \"1\"\n\nassert solution(\"\"\"1 2\n0 2\"\"\") == \"1\"\n\nassert solution(\"\"\"4 2\n0 1\"\"\") == \"2\"\n\nassert solution(\"\"\"4 2\n0 1\"\"\") == \"2\""
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n0 1\n1 2\n2 3\n3 4\n''') == '7'\n\nassert solution('''1 1\n''') == '0'\n\nassert solution('''3 0\n1 2\n1 3\n''') == '3'\n\nassert solution('''5 0\n1 1\n3 4\n2 3\n''') == '5'\n\nassert solution('''5 0\n1 1\n3 4\n2 3\n''') == '5'"
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) in range(1, 1+1)\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '1'\nassert solution('10') == '0'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n\"\n    \"L 1\\n\"\n    \"R 2\\n\"\n    \"R 3\\n\"\n    \"?\" 2\n) == \"1\"\nassert solution(\n    \"10\\n\"\n    \"L 100\\n\"\n    \"R 100000\\n\"\n    \"R 123\\n\"\n    \"L 101\\n\"\n    \"? 123\\n\"\n    \"L 10\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R 101\\n\"\n    \"? 100\\n\"\n    \"L 4\\n\"\n    \"R 115\\n\"\n    \"? 100\\n\"\n    \"R 110\\n\"\n    \"? 115\\n\"\n    \"L 5\\n\"\n    \"R 4\\n\"\n    \"R 1\\n\"\n    \"L 4\\n\"\n    \"R"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '1'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''\n11\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\nL 100\nR 100000\nR 123\n? 123\nL 101\n? 100\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\n"
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '4'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '4'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\") == \"0\"\nassert solution(\"3\\n1\") == \"1\"\nassert solution(\"4\\n1\") == \"1\"\nassert solution(\"5\\n1\") == \"1\"\nassert solution(\"8\\n1\") == \"1\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n10\n25\n30\n14\n27\n1000000000000000000''') == '4'\nassert solution('''1\n10\n25\n30\n14\n27\n1000000000000000000''') == '6'\nassert solution('''2\n4\n4\n2\n3\n2\n2\n2''') == '-1'\nassert solution('''5\n2\n3\n4\n2\n4\n4\n6''') == '72'\nassert solution('''5\n2\n3\n4\n2\n4\n4\n6''') == '4'"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '4'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '0'\nassert solution('1') == '1'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution() == \"4\"\nassert solution() == \"6\"\nassert solution() == \"6\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\nassert solution('''\n2\n4\n3\n7\n1000000000000000000\n''') == '6'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n1\n4\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''\n4\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n1\n4\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\""
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n1 1 3\n4\n1 1 2 1''') == 'YES'\nassert solution('''3\n1 1 3\n4\n1 1 2 1''') == 'NO'\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1''') == 'YES'\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1''') == 'NO'"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100'\n    ) == 'YES'\nassert solution(\n    '2\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100'\n    ) == 'NO'\nassert solution(\n    '2\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100'\n    ) == 'YES'\nassert solution(\n    '2\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100'\n    ) == 'NO'\nassert solution(\n    '2\\n'\n    '3\\n'\n    '1 1 3\\n'\n    '4\\n'\n    '1 1 2 1\\n'\n    '2\\n'\n    '11 11\\n'\n    '1\\n'\n    '100'\n    ) == 'NO'"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\nassert solution('''4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\nassert solution('''6\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"NO\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\n'\nassert solution('5\\n5\\n3 1 3 1 1 3\\n4\\n1 1 2 1 1\\n2\\n100\\n') == 'YES\\nYES\\nYES\\nYES\\n'\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"YES\\nNO\\nYES\\nYES\""
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1 1 3\") == \"YES\"\nassert solution(\"2\\n4\\n1 1 2 1\") == \"YES\"\nassert solution(\"2\\n2\\n1 1 2 1\") == \"NO\"\nassert solution(\"2\\n3\\n1 1 2 1\") == \"YES\"\n"
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2') == 'YES'\nassert solution('2\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2') == 'NO'\nassert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2') == 'NO'\nassert solution('3\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2') == 'YES'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == 4\nassert solution('5\\nzcabd\\dbacz') == 0\n\n'''"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == 4\nassert solution('5\\nzcabd\\dbacz') == 0\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '0'"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\nabacaba\nbacabaa\n''') == \"4\"\nassert solution('''\n5\nzcabd\ndbacz\n''') == \"0\"\nassert solution('''\n10\nabcdefghijklmnopqrstuvwxyz\nxzyxwvutsrqponmlkjihgfedcba\n''') == \"0\"\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('7') == '4'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\dbacz\\n\") == \"0\""
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '0'\n\n\"\"\"\n\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('5\\nzcabd\\dbacz\\n') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"2999999997\"\nassert solution(\"1000000000 1 6\") == \"0\"\nassert solution(\"1 1 1000000000\") == \"2\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"8\"\nassert solution(\"5 2 3\") == \"8\"\nassert solution(\"1 10 5\") == \"198\"\nassert solution(\"1000000000 1 6\") == \"2999999997\"\nassert solution(\"1 1 1000000000\") == \"0\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('100 1 4') == '198'\nassert solution('1 1000000000 1 6') == '2999999997'\nassert solution('1 1 999999999') == '0'\nassert solution('1 1 999999999') == '1'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == \"198\"\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"198\"\n\nassert solution(\"\"\"\n6\n5 2 3\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n\"\"\") == \"2999999997\"\n\nassert solution(\"\"\"\n6\n1 10 5\n1 1000000000\n1 1 999999999\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6\n1 10 5\n1000000000 1 6\n1 1 1000000000\n\"\"\") == \"1\""
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\n"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 198"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8198'\n\nassert solution('''\n5\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n''') == '198'\n\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 1000000000\n1 1 999999999\n''') == '-17'\n\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n''') == '2999999997'\n\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n''') == '0'"
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == \"8\"\nassert solution('100 1 4') == \"198\"\nassert solution('1 1000000000 1 6') == \"2999999997\"\nassert solution('1 1 999999999') == \"0\"\nassert solution('1 1 999999999') == \"1\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\") == \"3\"\nassert solution(\"10\\n1\") == \"10\"\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '13'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('1000000000000000000') == '1350851717672992089'\nassert solution('6') == '9'\nassert solution('1') == '3'\nassert solution('4') == '7'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '9'\nassert solution('6') == '13'\nassert solution('13') == '27'\nassert solution('14') == '27'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n1000000000000000000') == '3\\n9\\n13\\n27\\n6561\\n19683\\n1350851717672992089'\n"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\nassert solution('''\n1\n2\n7\n13\n14\n8\n13\n12\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13\n14\n12\n12\n13"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\n\nassert solution('''\n1\n12\n3620\n10000\n1000000000000000000\n''') == '27'\n\nassert solution('''\n3\n2\n4\n1\n1\n2\n''') == '4'\n\nassert solution('''\n3\n2\n3\n1\n1\n2\n''') == '4'\n\nassert solution('''\n4\n1\n2\n3\n3\n4\n''') == '5'"
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n30\n12\n2\n''') == '3'\nassert solution('''\n6\n40\n13\n0\n''') == '6'\nassert solution('''\n14\n14\n9\n13\n''') == '9'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '70'\nassert solution(input()) == '77'\nassert solution(input()) == '177177'\nassert solution(input()) == '999999999000000000'\nassert solution(input()) == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '77'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '70'\nassert solution('''6\n10 11 2 1 5\n10 11 9 1 10\n10 11 8 5 3''') == '55'\nassert solution('''7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '99999'\nassert solution('''1\n10 10 8 5 3''') == '100000'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"77\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"177177\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"999999999000000000\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"999999999000000000\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 10 8 5 3\") == \"70\"\nassert solution(\"12 8 8 7 2\") == \"77\"\nassert solution(\"12343 43 4543 39 123212\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"1000000000000000\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '77'\nassert solution('''10 11 2 1 5\n10 11 9 1 10''') == '55'\nassert solution('''10 1 2 1 5''') == '10'\nassert solution('''10 1000000000 1000000000 1 1 1''') == '10'\nassert solution('''1000000000 1000000000 1 1 1''') == '1000000000'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"70\"\nassert solution(\"7\\n10 11 2 1 5\\n10 11 9 1 10\\n\") == \"77\"\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10 8 5 3') == '70'\nassert solution('12 8 8 7 2') == '77'\nassert solution('12343 43 4543 39 123212') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1') == '999999999'\nassert solution('1000000000 1000000000 1 1 1000000000') == '999999999'\n"
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"70\"\nassert solution(input) == \"77\"\nassert solution(input) == \"177177\"\nassert solution(input) == \"999999999000000000\"\nassert solution(input) == \"999999999\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n    2 3\n    10 10\n    2 4\n    7 4\n    9 3\n    ''') == \"1\"\nassert solution('''\n    5\n    2 3\n    10 10\n    2 4\n    7 4\n    9 3\n    ''') == \"0\"\nassert solution('''\n    5\n    2 3\n    10 10\n    2 4\n    7 4\n    9 3\n    ''') == \"2\"\nassert solution('''\n    5\n    2 3\n    10 10\n    2 4\n    7 4\n    9 3\n    ''') == \"2\"\nassert solution('''\n    5\n    2 3\n    10 10\n    2 4\n    7 4\n    9 3\n    ''') == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3\\n10 10\") == \"1\"\nassert solution(\"5\\n2 4\\n7 4\\n9 3\\n\") == \"2\"\nassert solution(\"5\\n4 4\\n7 5\\n9 5\\n\") == \"1\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n\") == \"1\\n\"\nassert solution(\"2 3\\n\") == \"0\\n\"\nassert solution(\"2 4\\n\") == \"2\\n\"\nassert solution(\"7 4\\n\") == \"1\\n\"\nassert solution(\"9 3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '2'\nassert solution() == '1'\nassert solution() == '1'\n\"\"\"\n\nfrom heapq import heappush, heappop"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''3\n1\n1\n''') == '1'\nassert solution('''4\n1\n4\n3\n''') == '2'\nassert solution('''5\n1\n2\n''') == '2'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3') == '0'\nassert solution('5 2\\n10 10') == '1'\nassert solution('5 2\\n9 9') == '0'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"3\"\n"
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nprint(\"You're a smart cookie!\")"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n22\\n9999\\n1\\n777\") == \"13\"\nassert solution(\"5\\n33\\n1312\\n1\\n777\") == \"90\"\nassert solution(\"1\\n77\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"4\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n10\n2\n777\n22\n22\n''') == '90'\nassert solution('''\n4\n1\n2\n777\n22\n\n''') == '1'\nassert solution('''\n2\n1\n2\n''') == '0'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777\\n') == '13'\n\nassert solution('2\\n1\\n11\\n111\\n1111\\n2\\n222\\n2222\\n222\\n22\\n') == '10'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n11\n22\n9999\n\"\"\") == \"13\"\n\nassert solution(\"\"\"\n5\n77\n22\n9999\n1111\n7777\n\"\"\") == \"12\"\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n22\n1111\n''') == '13'\nassert solution('''\n1\n999\n123456789\n''') == '90'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n11\\n22') == '13'\nassert solution('3\\n1\\n2') == '3'\nassert solution('4\\n1\\n22') == '13'\nassert solution('5\\n1\\n1') == '2'"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777') == '13'\nassert solution('2\\n1\\n11\\n111\\n1111\\n22\\n222\\n2222\\n22222\\n1111\\n22222222\\n2222222222\\n222222222222') == '13'\n"
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"13\"\n\nassert solution() == \"90\"\n\nassert solution() == \"1\"\n\nassert solution() == \"66\""
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '13'\nassert solution('''\n1\n11\n1111\n111111\n1\n2\n22\n2\n22\n2222\n''') == '90'\n\"\"\""
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1\"\n) == \"1\"\nassert solution(\n    \"22\"\n) == \"1\"\nassert solution(\n    \"9999\"\n) == \"2\"\nassert solution(\n    \"1\"\n) == \"1\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\") == \"YES\\n2 6\"\nassert solution(\"3\\n1\\n5\\n5\\n1 1 1 1 1\") == \"NO\"\nassert solution(\"4\\n6\\n2 2 2 2 2\\n5\\n2 2 2\") == \"YES\\n2 2\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n''') == 'YES'\nassert solution('''\n2\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''\n4\n6\n2 2 2 2 2 2\n5\n2 2 2 2 2\n3\n2 2 2\n5\n2 2 2 2 2\n''') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''\n2\n3\n1 1 1 1 1\n1\n1\n''') == 'NO'\nassert solution('''\n4\n6\n2 2 2 2 2\n5\n2 2 2\n3\n2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''\n1\n5\n1 1 1 1 1\n2\n2 2 2\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\n\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n\nassert solution('5') == 'NO'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('4') == 'NO'"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n3\n3 2 1 3 2\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n5\n5\n1 1 1 1 1\n2\n2 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n1\n5\n5\n1 1 1 1 1\n2\n2 2 2\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5'\nassert solution('''\n3 -1 0 2\n3\n''') == '6'\nassert solution('''\n2 -3 -1 0 2\n1\n''') == '13'\n'''\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"[-1,4,2,-3]\\n1\") == '5'\nassert solution(\"[4,-2,3]\\n1\") == '5'\nassert solution(\"[3,-1,0,2]\\n3\") == '6'\nassert solution(\"[2,-3,-1,5,-4]\\n2\") == '13'\nassert solution(\"[1,4,2,3]\\n2\") == '13'\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4,2,3') == 5\nassert solution('3,-1,0,2') == 6\nassert solution('2,-3,-1,5,-4') == 13\nassert solution('4,2,3') == 5\nassert solution('3,-1,0,2') == 6\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('[4,2,3]\\n1\\n') == '5'\nassert solution('[3,-1,0,2]\\n3\\n') == '6'\nassert solution('[2,-3,-1,5,-4]\\n2\\n') == '13'"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"13\"\nassert solution(input2) == \"6\"\nassert solution(input3) == \"13\"\nassert solution(input4) == \"13\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4,2,3\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\n\"\"\"\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[4,2,3]') == 5\nassert solution('[3,-1,0,2]') == 6\nassert solution('[2,-3,-1,5,-4]') == 13\nassert solution('[2,-3,-1,5,-4]') == 13\nassert solution('[2,3,1,5,4]') == 14\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5\nassert solution('''\n3 -1 0 2\n3\n''') == '6\nassert solution('''\n2 -3 -1 0 2\n2\n''') == '6\nassert solution('''\n2 -3 -1 0 2\n1\n''') == '5\n''')"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"[-3,-1,0,2]\") == 6\nassert solution(\"[2,-3,-1,5,-4]\") == 13\nassert solution(\"[4,2,3]\") == 5\nassert solution(\"[3,-1,0,2]\") == 5\nassert solution(\"[2,-3,-1,5,-4]\") == 13\n"
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4,-2,3\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\nassert solution(\"2,5,5,5,0,-1,0,3\") == 14\nassert solution(\"1,1,0,0,3,1,5,4,0,1\") == 13\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'false'\n'''\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == 'true'\nassert solution('1\\n2\\n3\\n4') == 'false'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nInput: A = [0,2,1,-6,6,-7,9,1,2,0,1]\nOutput: true\nExplanation: 0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1\n\nInput: A = [0,2,1,-6,6,7,9,-1,2,0,1]\nOutput: false\n\nInput: A = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: true\nExplanation: 3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4\n\nInput: A = [-3,-2,-1,0,1,2]\nOutput: false\n\nInput: A = [-1,-2,1,2]\nOutput: false\n\nInput: A = [-1,-2,1,-2,1,2]\nOutput: true\n\nInput: A = [-1,2,-3,4,-5,6,7,8]\nOutput: false\n\nInput: A = [-3,2,-1,-2,1,2]\nOutput: true\n\nInput: A = [-3,2,1,-2,1,2]\nOutput: true\n\nInput: A = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: false\n\nInput: A = [-3,2,1,-2,1,2]\nOutput: false\n\nInput: A = [1]\nOutput: true\n\nInput: A = [-3,-2,1,2]\nOutput: false\n\nInput: A = [1,-3,2,2]\nOutput: false\n\nInput: A = [-2,1,-1,2,2]\nOutput: false\n\nInput: A = [1,-3,2,2]\nOutput: true\n\nInput: A = [-3,2,1,2]\nOutput: true\n\nInput: A = [2,-3,-4,-3,5,6,7,8,-4,5]\nOutput: true\n\nInput: A = [2,-3,-4,-3,5,6,7,8,-4,5,1]\nOutput: false\n\nInput: A = [-2,-3,0,1,2,3,-4,5,6,7]\nOutput: false\n\nInput: A = [2,2,2,2,2,2,2,2]\nOutput: true\n\nInput: A = [0,2,1,-6,6,7,9,1,2,0,1]\nOutput: true\n\nInput: A = [0,2,1,-6,6,7,9,1,2,0,1]\nOutput: true\n\nInput: A = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: true\n\nInput: A = [1,0,1]\nOutput: false\n\nInput: A = [-1,1,2,3]\nOutput: true\n\nInput: A = [-2,-2,1,2]\nOutput: true\n\nInput: A = [1,-1,1]\nOutput: true\n\nInput: A = [-2,-1,1,2]\nOutput: false\n\nInput: A = [2,2,2,2,2,2,2,2]\nOutput: true\n\nInput: A = [2,2,2,2,2,2,2,2]\nOutput: false\n\nInput: A = [2,2,2,2,2,2,2,2]\nOutput: true\n\nInput: A = [-2,2,2,2,2,2,2,2]\nOutput: true\n\nInput: A = [-2,2,2,2,2,2,2,2]\nOutput: false\n\nInput: A = [-2,2,2,2,2,2,2,2]\nOutput: true\n\nInput: A = [-2,2,2,2,2,2,2,2]\nOutput: false\n\nInput: A = [-2,2,2,2,2,2,2,2]\nOutput: true\n\nInput: A = [3,3,6,5,-2,2,5,1,-9,4]\nOutput: true\n\nInput: A = [1,-3,2,2]\nOutput: false\n\nInput: A = [1,1,2,2]\nOutput: true\n\nInput: A = [-2,1,2,2]\nOutput: false\n\nInput: A = [-2,-1,1,2]\nOutput: false\n\nInput: A = [1,-2,1,2]\nOutput: false\n\nInput: A = [-2,-1,1,2]\nOutput: false\n\nInput: A = [1,2,3,4]\nOutput: true\n\nInput: A = [-1,2,3,4]\nOutput: true\n\nInput: A = [-1,2,3,4]\nOutput: false\n\nInput: A = [1,2,3,4]\nOutput: false\n\nInput: A = [-2,-2,1,2]\nOutput: true\n\nInput: A = [-2,-2,1,2]\nOutput: false\n\nInput: A = [-2,-2,1,2]\nOutput: true\n\nInput: A = [-2,-2,1,2]\nOutput: false\n\nInput: A = [1,-2,1,2]\nOutput: true\n\nInput: A = [1,-2,1,-2,1,2]\nOutput: false\n\nInput: A = [1,2,3,4,5,6,7,8,9]\nOutput: true\n\nInput: A = [1,2,3,4,5,6,7,8,9]\nOutput: true\n\nInput: A = [-1,-2,1,2,2]\nOutput: true\n\nInput: A = [1,1,1,1,1]\nOutput: true\n\nInput: A = [0,2,1,-6,6,7,9,1,2,0,1]\nOutput: false\n\nInput: A = [0,2,1,-6,6,7,9,1,2,0,1]\nOutput: false\n\nInput: A = [0,2,1,-6,6,7,9,1,2,0,1]\nOutput: true\n\nInput: A = [1,2,3,4,5,6,7,8,9,10]\nOutput: false\n\nInput: A = [1,2,3,4,5,6,7,8,9,10]\nOutput: true\n\nInput: A = [-3,2,1,2]\nOutput: false\n\nInput: A = [1,2,3,4]\nOutput: false\n\nInput: A = [-3,-2,1,2]\nOutput: false\n\nInput: A = [-3,2,1,2]\nOutput: true\n\nInput: A = [-3,2,1,2]\nOutput: true\n\nInput: A = [-3,2,1,2]\nOutput: true\n\nInput: A = [-3,2,1,2]\nOutput: true"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 2 1\n''') == 'true'\nassert solution('''\n0 2 1\n''') == 'false'\nassert solution('''\n0 2 1\n''') == 'true'\nassert solution('''\n0 2 1\n''') == 'false'\nassert solution('''\n3 3 6 5 -2 2 5 1 -9 4\n''') == 'true'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"[-2,1,-3,4,-1,2,1,-5,4]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == 'true'\nassert solution('2') == 'false'\nassert solution('1') == 'false'\nassert solution('-6') == 'true'\nassert solution('6') == 'false'\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n0 2 1\n\"\"\") == \"true\"\nassert solution(\"\"\"\n0 2 1\n\"\"\") == \"false\"\nassert solution(\"\"\"\n3 3 6 5 -2 2 5 1 -9 4\n\"\"\") == \"true\"\nassert solution(\"\"\"\n3 3 6 5 -2 2 5 1 -9 4\n\"\"\") == \"false\"\n\nassert solution(\"\"\"\n3 3 6 5 -2 2 5 1 -9 4\n\"\"\") == \"true\"\n"
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0\n2\n1\n-6\n6\n-7\n9\n1\n2\n0\n1\n''') == 'true'\nassert solution('''\n0\n2\n1\n-6\n6\n-7\n9\n1\n2\n0\n1\n''') == 'false'\nassert solution('''\n0\n2\n1\n-6\n6\n-7\n9\n1\n2\n0\n1\n''') == 'true'\nassert solution('''\n3\n3\n6\n5\n-2\n2\n5\n1\n-9\n4\n''') == 'true'\nassert solution('''\n3\n3\n6\n5\n-2\n2\n5\n1\n-9\n4\n''') == 'false'\n'''\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beet and vet'\nassert solution('1\\n1') == '1'\nassert solution('10\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet\\nbeet') == 'beet and beet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beat and vet\""
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet'\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\na\nb\n\"\"\") == \"a\"\nassert solution(\"\"\"2\na\nb\n\"\"\") == \"a\"\nassert solution(\"\"\"3\na\nb\n\"\"\") == \"a\"\nassert solution(\"\"\"4\na\nb\n\"\"\") == \"a\"\nassert solution(\"\"\"5\na\nb\nc\n\"\"\") == \"b\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\"\"\") == \"beet and vet\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet'\nassert solution('8\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbeet') == 'beat and vet'\nassert solution('5\\nbeet\\nvet\\nbeat\\nbed\\nvet\\nbeet') == 'beat and vet'\nassert solution('10\\nbeet\\nvet\\nbeat\\nbed\\nvet\\nbeet\\nbed\\nvet\\nbeet\\nbed') == 'beet and vet'"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n\n\"\"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    7\n    beat\n    vet\n    beet\n    bed\n    vet\n    bet\n    beet\n    ''') == 'beat and vet'\nprint(solution(input()))\n\n\"\"\"\nSolution:\nWe use a dictionary to keep track of the total votes per ballot (string).\nWe use a stack to keep track of the next string to check.\nWhen we find a new vote, we update its count with the count of votes in the dictionary.\nThen we add the string to the stack.\n\nWe don't need to use a stack for the test case.\n\"\"\"\n"
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet', 'incorrect solution'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"6\"\n\n'''\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 8\") == \"8\"\nassert solution(\"5 0\") == \"0\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"12\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"24\"\nassert solution(\"5\") == \"30\"\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '8'\nassert solution(input('2\\n4 8\\n')) == '8'\nassert solution(input('4\\n6 8\\n')) == '16'\nassert solution(input('5\\n7 8 9 10\\n')) == '17'\nassert solution(input('7\\n0 9 1 2 3 4 5\\n')) == '12'\n\n'''\n\nimport sys\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '8'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(input())"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '8'\nassert solution('4') == '8'\n\"\"\""
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 8\") == \"8\"\nassert solution(\"4\\n4 6\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234\\n150\\n100') == '84'\nassert solution('1234\\n150\\n100') == '84'\nassert solution('1234\\n150\\n100') == '84'\nassert solution('1234\\n150\\n100') == '84'"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '84'\nassert solution('100') == '1084'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '84'"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234\\n150\\n100') == '84'\nassert solution('12\\n-3\\n10') == '23'\nprint(\"You passed all tests!\")"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == '84'\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n\n\"\"\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\nassert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1234\\n150\\n100\") == \"84\"\nprint(solution(\"1234\\n150\\n100\"))\n"
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '84'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '8'\n\"\"\""
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"3 3\") == \"12\"\nassert solution(\"5 5\") == \"160\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2\n''') == '8'\nassert solution(\n'''3 1\n''') == '10'\nassert solution(\n'''3 2\n''') == '7'\nassert solution(\n'''4 4\n''') == '17'\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\nimport math\nfrom functools import reduce\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n4 2\n''') == '12'\n\nassert solution('''1 2\n2 1\n''') == '1'\n\nassert solution('''1 10\n3 2\n''') == '12'"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\n\nfrom itertools import permutations\nfrom collections import Counter"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 2\"\n) == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"\n\"\"\"\n\nN, M = list(map(int, stdin.split()))"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"100 100\") == \"754476\"\nassert solution(\"2 2\") == \"8\"\n"
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"8\"\nassert solution(\"2 2\") == \"8\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('4 5') == 'IMPOSSIBLE'\nassert solution('1 1') == 'POSSIBLE'"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == 'POSSIBLE'\nassert solution('''4 1\n2 1\n2 3\n1 3''') == 'IMPOSSIBLE'\nassert solution('''5 3\n1 2\n3 4\n2 5\n3 1\n4 5''') == 'POSSIBLE'"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'POSSIBLE'"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'POSSIBLE'"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 3') == 'POSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n\"\"\""
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'POSSIBLE'\n\nassert solution('3 2') == 'POSSIBLE'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('acdefg') == 'cdefg'\nassert solution('catdog') == 'adog'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('p') == 'p'\n'''"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoder') == 'acdr'\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\n"
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\ns = input()\n\nprint(''.join([s[2*i + 1] for i in range(len(s) // 2)]))\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla banana') == 'NO'\nassert solution('apple gorilla banana') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('A B C') == 'NO'"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n\n\"\"\"\n\nA, B, C = stdin.read().strip().split()"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('abc') == 'NO'\n'''"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng monkey apple') == 'NO'\nassert solution('rng monkey apple') == 'YES'"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"rng\", \"gorilla\", \"apple\"]) == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng gorilla banana') == 'NO'\n\"\"\""
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n"
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"apple\") == \"YES\"\nassert solution(\"rng\") == \"YES\"\nassert solution(\"apple\") == \"YES\"\nassert solution(\"gorilla\") == \"NO\"\nassert solution(\"gorilla\") == \"YES\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"GREATER\"\nassert solution(\"6\") == \"LESS\""
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"36\") == \"GREATER\"\n\"\"\"\n\nA, B = list(map(int, input().split()))\nprint(\"GREATER\" if A > B else \"LESS\" if A < B else \"EQUAL\")"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"36\") == \"GREATER\"\nassert solution(\"24\") == \"LESS\"\nassert solution(\"3\") == \"EQUAL\"\nassert solution(\"3\") == \"EQUAL\""
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"36\") == \"GREATER\""
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"GREATER\"\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'GREATER'\nassert solution('AB') == 'LESS'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'LESS'\nassert solution('1 0') == 'GREATER'\nassert solution('1 -1') == 'EQUAL'\nassert solution('0 -1') == 'GREATER'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'LESS'\nassert solution('3') == 'EQUAL'\nassert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\nassert solution('3624') == 'GREATER'\n"
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"36\\n24\") == \"GREATER\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\napple\norange\napple\n1\ngrape\n\n''') == '2'\n\nassert solution('''\n3\napple\norange\napple\n1\ngrape\n\n''') == '2'\n\nassert solution('''\n5\nbanana\napple\norange\napple\napple\n\n''') == '5'\n\nassert solution('''\n10\nbanana\napple\norange\napple\norange\nbanana\napple\norange\napple\norange\nbanana\n\n''') == '1'"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nN\ns_1\ns_2\n:\ns_N\nM\nt_1\nt_2\n:\nt_M\n\"\"\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    apple\n    orange\n    apple\n    1\n    grape\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4\n    atcoder\n    atcode\n    btcoder\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    5\n    atcoderr\n    atcode\n    bvcoder\n    bcoder\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    10\n    a\n    at\n    atcoder\n    atcode\n    atcoderr\n    atcode\n    atcoderr\n    atcode\n    atcoderr\n    atcode\n    atcoderr\n    atcode\n    atcoderr\n    atcode\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"\n\nn = int(input())\na = input()\nb = input()\nc = input()\nd = input()"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('8') == '0'\nassert solution('12') == '12'\nassert solution('10') == '0'"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"0\"\n\"\"\""
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\""
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'T'\nassert solution('T') == 'C'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n"
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\""
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\nassert solution('3\\n3 2 2 4 1') == '1'"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\""
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 2 4 1\") == \"14\"\nassert solution(\"5\\n3 2 2 4 1\") == \"14\"\nassert solution(\"10\\n6 1 2 1 3 4 5 6 8 9 10\") == \"18\"\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution('''1\n1\n''') == '1'\nassert solution('''8\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n''') == '28'\nassert solution('''10\n
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '14'\nassert solution('6') == '17'\nassert solution('3 3 3 3 1') == '10'\nassert solution('5 1 1 1') == '14'\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"14\"\nassert solution('''5\n3 2 2 4 1''') == \"14\"\n\"\"\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '14'"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 2 4 1') == '14'\n\"\"\"\n\nimport sys\nimport math\n\nN = int(input())\nA = list(map(int, input().split()))\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\") == \"1\"\nassert solution(\"5 3\\n2 2 2 1 1\") == \"2\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n2 2 2\\n\") == \"1\"\nassert solution(\"3 3\\n2 2 2\\n\") == \"2\"\nassert solution(\"10 3\\n2 2 2 2 2 2 2\\n\") == \"8\""
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n2 2 2\\n') == '1'\nassert solution('3 3\\n1 2 1\\n') == '0'"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution([1, 2, 4, 2, 3, 3, 1, 2, 1, 1, 5, 1]) == \"1\"\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 2 2\\n\") == \"1\"\nassert solution(\"7 4\\n6 1 3\\n\") == \"1\"\nassert solution(\"7 7\\n2 1 2\\n\") == \"4\"\nassert solution(\"7 8\\n3 2 3\\n\") == \"0\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '4'\nassert solution('10') == '5'\n"
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n4 4\\n\") == \"1\"\nassert solution(\"3 2\\n2 1\\n\") == \"1\"\nassert solution(\"4 5\\n5 5\\n\") == \"1\"\nassert solution(\"6 6\\n6 6\\n\") == \"1\"\nassert solution(\"7 7\\n7 7\\n\") == \"1\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"2 3 4 5 6 7 8\\n3 6 5 8 7 6 9 8\\n1 5 4 7 9 1 2 3\\n9 2 6 5 1 8 3 4 7\\n5 7 4 2 1 9 8 3 6 5\\n8 9 2 1 3 7 4 5 6\\n3 5 7 8 9 2 1 4 5 6\\n4 6 1 2 5 9 8 7 3\\n5 9 7 4 1 3 8 6 2\\n7 5 4 9 1 8 2 6 3\\n4 8 6 7 5 9 2 1 3\\n3 7 8 9 5 1 4 2 6\\n8 9 5 4 7 2 3 1 6\\n2 6 4 5 8 7 1 9\\n7 3 5 2 9 4 8 1\\n2 7 5 1 8 4 3 9\\n3 6 8 9 5 1 4 2\\n4 5 6 7 8 9 2 1\\n5 2 6 7 3 1 4 8\\n5 1 3 7 4 9 8 2\\n4 8 3 9 5 1 2 6\\n1 5 3 4 2 7 8 9\\n5 9 7 6 8 1 4 3\\n1 4 9 8 7 5 2 3\\n2 8 6 7 9 5 1 4\\n5 1 3 4 8 7 9 2\\n8 2 1 5 4 7 9 3\\n7 9 5 3 8 6 1 4\\n5 4 8 9 2 7 3 6\\n9 8 7 6 5 3 4 1\\n1 1 1 1 7 7 7 7\\n1 1 7 7 7 7 7 7\\n9 1 1 7 7 7 7 7\\n3 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7 7\\n4 1 1 7 7 7 7"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(Takahashi) == 'Yes'\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 1 0\") == \"Yes\"\nassert solution(\"2 1 0\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0 1\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"1 3 1\") == \"Yes\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"2 1 2\") == \"Yes\"\nassert solution(\"1 0 1\") == \"Yes\"\nassert solution(\"1 0 0\") == \"No\"\nassert solution(\"2 1 1\") == \"No\"\n"
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 0 1\n2 1 2\n1 0 1\"\"\") == \"Yes\"\nassert solution(\"\"\"1 0 1\n2 1 2\n1 0 1\"\"\") == \"No\"\nassert solution(\"\"\"1 0 1\n2 1 2\n1 0 1\"\"\") == \"Yes\""
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n1 0 1\\n1 0 1\") == \"Yes\""
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ARC\") == \"ARC\"\nassert solution(\"ABC\") == \"ARC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'ARC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ABC\") == \"ARC\"\n\"\"\"\n"
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 8 2') == '3'"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '1'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('4 6 8') == '3'\nassert solution('5 10 2') == '3'\nassert solution('1 2 3 4 5') == '4'\nassert solution('10 100 2') == '0'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 8 2\n''') == '3'\n\nassert solution('''5 2 9\n''') == '3'\n\nassert solution('''4 5 8 2\n''') == '2'\n\nassert solution('''4 5 8 3\n''') == '3'\n\nassert solution('''4 4 2\n''') == '2'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 8, 2]) == '3'\nassert solution([4, 8, 3]) == '0'\nassert solution([4, 8, 1]) == '1'\nassert solution([4, 8, 5]) == '3'\nassert solution([4, 8, 10]) == '3'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 8 2\n''') == '3'\n''')"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('7 3 2') == '3'"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('3 3 1') == '0'\nassert solution('1 5 9') == '1'\n"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n\"\"\"\n\na, b, x = map(int, input().split())"
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('4 8 2') == '3'"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(25) == \"Christmas\"\nassert solution(24) == \"Christmas Eve\"\nassert solution(23) == \"Christmas Eve Eve\"\nassert solution(22) == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('24') == 'Christmas Eve Eve Eve Eve Eve'\nassert solution('25') == 'Christmas'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('23') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('25') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"23\") == \"Christmas Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == \"Christmas\"\nassert solution(2) == \"Christmas Eve\"\nassert solution(3) == \"Christmas Eve Eve\"\nassert solution(4) == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"25\") == \"Christmas\"\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n"
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == \"Christmas\", 'answer'\nassert solution('26') == \"Christmas Eve\", 'answer'\nassert solution('23') == \"Christmas Eve Eve\", 'answer'\nassert solution('24') == \"Christmas Eve Eve Eve\", 'answer'"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '4'\nassert solution('7') == '4'\nassert solution('8') == '3'\nassert solution('3') == '2'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"8\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '4'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '7'\nassert solution('20') == '5'\nassert solution('50') == '5'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('3') == '1'\n"
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"5\"\nassert solution(\"8\") == \"3\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2 3\") == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 2 1') == 'Yes'\nassert solution('1 2 3 1') == 'No'"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 3 4') == 'No'\nassert solution('4 7 9 3') == 'Yes'"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 5 5 3\") == \"No\"\nassert solution(\"3 3 3 3\") == \"Yes\""
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"3 2 3 3\") == \"No\""
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Yes\"\nassert solution(\"1 2 3 5\") == \"No\"\nassert solution(\"4 5 2 3\") == \"Yes\"\nassert solution(\"3 3 2 3\") == \"Yes\"\nassert solution(\"5 5 2 3\") == \"No\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"0 1 2 3\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"Yes\"\n"
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('4 5 6 7') == 'No'\n\nprint(solution(input()))\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'ABC'\nassert solution('ATCODER') == 'ABC'\nassert solution('ATCODER,CONTEST') == 'ABC'\nassert solution('atcoder,contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"python book\") == \"PYTHON\"\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\n\n'''\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nprint(solution(input()))\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('give me one grand today night') == 'GIVEMEONEGREGANDAYSUNNIGHT'\nassert solution('hello world') == 'HELLOWORLD'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nassert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n"
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 100 200\") == \"No\"\nassert solution(\"50 100 300\") == \"Yes\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('10 20 30') == 'No'\n\"\"\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''50 100 120''') == 'Yes'"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 10 10\") == \"No\"\nassert solution(\"10 10 10 -2\") == \"No\""
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"10 50 120\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'No','solution'\nassert solution('1 2 3') == 'Yes','solution'"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 100 120\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n"
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10\") == \"Yes\"\nassert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"50 100 50\") == \"No\"\n\"\"\"\n\nA, B, C = map(int, input().split())\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 2 3 4\") == \"10\"\nassert solution(\"1 2 3 4 5\") == \"10\"\nassert solution(\"1 2 3 4 5 6\") == \"10\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8') == '5'\nassert solution('4 8') == '4'\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8') == '5'\nassert solution('3 5') == '1'\nassert solution('4 7') == '2'\nassert solution('3 7') == '1'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 8\") == \"5\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"9 9\") == \"9\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"6 7\") == \"3\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 8') == '5', solution('4 8')\nassert solution('5 8') == '5', solution('5 8')\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n7 9 8 9\\n\") == \"5\"\nassert solution(\"4 8\\n6 6 6 6\\n\") == \"3\"\nassert solution(\"4 8\\n3 3 3 3\\n\") == \"1\"\nassert solution(\"4 8\\n2 2 2 2\\n\") == \"0\"\nassert solution(\"5\\n8\\n\") == \"0\"\n"
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"20 5\") == \"15\"\nassert solution(\"24 8\") == \"15\"\nassert solution(\"50 4\") == \"15\"\nassert solution(\"128 4\") == \"15\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nprint('tests passed')\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"1\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1\\n1 2 3 4\\n2 2 2 2\\n3 3 3 3\") == \"1 2 3 4\\n2 2 2 2\\n3 3 3 3\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == \"1 2 3 4\\n1 2 3 4\\n4 2 1 3\\n3 2 1 3\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3 2 1'\nassert solution('5') == '3 2 1 2'\nassert solution('6') == '3 2 1 2 3'\nassert solution('10') == '3 2 1 2 3 4'\nassert solution('4') == '4 1 1 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2''') == '2 1'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3 4\\n') == '4 2 1 3'"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4') == '1 2 1 3 4'\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 3 4') == \"4 2 1 3\"\nassert solution('4\\n4 4 4 4') == \"4 4 4 4\"\nassert solution('4\\n5 5 5 5') == \"5 5 5 5\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\\n\") == \"4 2 1 3\"\n"
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"2\\n1 2\") == \"2 1\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"No\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3\") == \"Yes\", \"test 1 failed\"\nassert solution(\"10 4\") == \"No\", \"test 2 failed\"\nassert solution(\"10 3\") == \"Yes\", \"test 3 failed\"\nassert solution(\"10 4\") == \"No\", \"test 4 failed\"\nassert solution(\"10 3\") == \"Yes\", \"test 5 failed\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 1\") == \"Yes\"\nassert solution(\"10 2\") == \"Yes\"\nassert solution(\"10 3\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('1 10') == 'No'"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('7 1') == 'No'\n'''\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"5 1\\n1 2 2 2 3\\n\") == \"Yes\"\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\""
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('7 5\\n5 2 1') == 'No'\nassert solution('7 5\\n2 4 1') == 'Yes'\n"
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"10 1\") == \"Yes\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '1'\nassert solution('abaabab') == '1'\nassert solution('abaababa') == '0'\nassert solution('abaabab') == '0'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == 5\nassert solution(\"abaabab\") == 4\nassert solution(\"abaaba\") == 4\nassert solution(\"aba\") == 3\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '10'\nassert solution('abaababa') == '10'\nassert solution('abaabab') == '9'\nassert solution('abaaba') == '9'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abcabc') == '6'\nassert solution('aaaaaaaaaa') == '6'\nassert solution('aab') == '2'\nassert solution('bab') == '2'\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == 1\nassert solution(\"abaababa\") == 2\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaababaab') == '6', \"Wrong!\""
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 1\nassert solution('abaabab') == 4\nassert solution('abaaba') == 2\nassert solution('aba') == 1\n\"\"\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"2\"\nassert solution(\"abaabab\") == \"0\"\nassert solution(\"abaabab\") == \"0\"\nassert solution(\"abaabaa\") == \"1\"\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('abaababaab') == 6\nassert solution('abababaa') == 9\nassert solution('ababab') == 6\nassert solution('abaaba') == 5\n"
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bac') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\n\"\"\""
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('abb') == 'Yes'\nassert solution('abc') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bca') == 'No'\n\"\"\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('aac') == 'No'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No'\nassert solution('ac') == 'Yes'\nassert solution('aac') == 'Yes'\nassert solution('aabc') == 'Yes'\nassert solution('ababc') == 'Yes'\n"
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '646'\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''2\n1000000\n1000000\n''') == '757402647'\nassert solution('''1\n1000000\n1000000\n''') == '20'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '3'"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1000000\n1000000\n''') == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '646'\nprint(solution())"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '20'\nassert solution('1000000') == '757402647'\n"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1000000\\n1000000\\n') == '700000000'\nassert solution('1\\n1000000\\n1000000\\n') == '700000000'\nassert solution('1\\n1000000\\n1000000\\n') == '700000000'\nassert solution('1\\n1000000\\n1000000\\n') == '700000000'"
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2 3 4\n3\n1 2\n2 3\n3 4\n''') == \"74\"\nassert solution('''\n5\n1 8 7 2 4\n9 7 2 9 3\n''') == \"646\""
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1000000\\n1000000') == '757402647'\nassert solution('2\\n1 3\\n4 2') == '20'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n5 4\\n\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\") == \"17\""
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n''') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\n\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\n\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '17'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 5\\n2 1\\n6 5\") == \"7\"\nassert solution(\"4 5 3\\n2 1\\n3 1\\n6 5\") == \"7\"\nassert solution(\"5 1 4\\n2 5\\n4 1\") == \"17\"\nassert solution(\"2 4\\n3 4\\n5 4\") == \"7\"\n"
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1 4\n2 5 7 4 6\n5 4''') == '17'\nassert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n''') == '17'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n''') == '17'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\n\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '0'\n\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '1'\n'''\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"7\") == \"1\"\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == '0'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n5 7\\n') == '0'"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([7]) == '0'\nassert solution([7]) == '1'\n"
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '1999999999'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == \"10\"\nassert solution('''\n10000000\n3\n''') == \"1999999999\"\nassert solution('''\n1000000001\n3\n''') == \"1000000001\"\nassert solution('''\n1\n2\n''') == \"1\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '15'\nassert solution('''\n5 10\n5 3\n2 8\n1 7\n8 9\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n1 1000000000\n''') == '29'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7') == '1'\nassert solution('3 7') == '1'\nassert solution('2 1') == '1999999999'\nassert solution('3 2') == '113'\nassert solution('2 0') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n4 9\n2 3\n3 4\n1 2\n1 3\n''') == '11'\n''')\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '1999999999'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1000000000'\nassert solution('1000000000 1000000000') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1999999999'\nassert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '113'\nassert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1000000001'\nassert solution('''\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1'\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 7\") == \"1\"\nassert solution(\"4 12\") == \"2\"\nassert solution(\"2 1000000000\") == \"1000000001\"\nassert solution(\"7 97\") == \"1999999999\"\nassert solution(\"1000000000 1000000000\") == \"1\"\n"
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 7\") == \"15\"\nassert solution(\"1000000000 1000000000\") == \"1999999999\"\nassert solution(\"2 1\") == \"1\""
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n3\n5 2 5 2\n2 3\n1 2\n3 2''') == '3'\nassert solution('''4 2\n2 3\n1 2\n2 1\n3 2''') == '2'\nassert solution('''20 4\n1 2 1 2 3 2 1 2 1 2\n3 4\n3 2\n2 4\n1 5\n1 6''') == '7'\nassert solution('''10 4\n2 3\n1 2\n2 1\n3 2\n3 2\n1 3\n1 3\n2 1\n2 2\n3 1\n2 2\n3 1\n3 2\n1 3\n2 2\n3 2''') == '3'\nassert solution('''15 4\n3 4\n3 2\n1 4\n2 4\n1 3\n1 4\n2 4\n1 3\n2 3\n2 4\n2 4\n3 3\n2 3\n1 4\n1 3\n1 4\n2 3\n1 4\n2 3\n1 4\n3 4\n2 4\n3 2\n2 3\n1 4\n2 4\n1 4\n2 4\n2 4\n2 3\n3 4\n1 3\n1 4\n2 4\n1 4\n2 4\n1 3\n1 4\n2 4\n2 4\n2 3\n1 4\n2 4\n1 4\n2 4\n3 4\n2 4\n1 4\n2 4\n1 4\n2 4\n3 4\n2 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n2 4\n1 4\n1 4\n1 4\n2 4\n1 4\n2 4\n2 4\n2 4\n1 4\n1 4\n1 4\n2 4\n2 4\n1 4\n2 4\n2 4\n2 4\n2 4\n1 4\n1 4\n1 4\n2 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n1 2 3 2 1 3 2\n''') == '2 1'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2\n1 2 3 2 1 3 2\n''') == '2 1 3 2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2 1 2 1 2 3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n2 2 3\\n') == '2 3'\nassert solution('2 3\\n1 2 3\\n') == '1 3'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3'\n"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2'\nassert solution('10 4') == '3'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2 3 2 1 3 2\") == \"2\\n2 1\"\nassert solution(\"5 2\\n2 3 3 1 1 2 2\") == \"3\\n3 1 2\""
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1 2') == '2\\n1 2'\nassert solution('10\\n3 2') == '3\\n1 2'"
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 2 3 3 1'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '263'\nassert solution('''3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3''') == '263'\nassert solution('''10\n1\n2\n1 3\n3\n1 4\n2\n1 5\n1 6\n3\n2\n3\n3\n4\n1''') == '213'\nassert solution('''5\n1\n1\n1\n3\n1''') == '3'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"263\"\nassert solution(\"1\") == \"18\"\nassert solution(\"3\") == \"7\"\nassert solution(\"1\") == \"3\"\nassert solution(\"0\") == \"0\""
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"263\"\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1 2\\n1 3\\n2\\n1 4\\n1 5\\n2\\n1 6') == 263\nassert solution('2\\n5\\n4\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6') == 80\nassert solution('3\\n7\\n5\\n1 2\\n1 3\\n1 4\\n1 5\\n2\\n1 6') == 87\nassert solution('4\\n5\\n3\\n1 2\\n1 3\\n1 4\\n1 5\\n2\\n1 6') == 180\nassert solution('5\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n5') == 8\n\n'''\n\n\n\nfrom itertools import permutations\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n"
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100') == '263'\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == \"263\"\nassert solution(\"\"\"\n6\n1\n1\n1\n2\n1\n2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3\n10\n1\n2\n3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n2\n5\n1\n1\n1\n2\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6\n3\n2\n1\n1\n2\n1\n1\n1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"abacaba\",\n    5,\n    [\n        \"2 1 4\",\n        \"1 4 b\",\n        \"1 5 b\",\n        \"2 4 6\",\n        \"2 1 7\",\n    ],\n) == \"3\"\nassert solution(\n    \"dfcbbcfeeedbaea\",\n    15,\n    [\n        \"1 6 e\",\n        \"1 4 b\",\n        \"2 6 14\",\n        \"1 7 b\",\n        \"1 12 c\",\n        \"2 6 8\",\n        \"2 1 6\",\n        \"1 7 c\",\n        \"1 2 f\",\n        \"1 10 a\",\n        \"2 7 9\",\n        \"1 10 a\",\n        \"1 14 b\",\n        \"1 1 f\",\n        \"2 1 11\",\n    ],\n) == \"5\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(\"test_solution.txt\", \"r\").read()) == \"1\"\nprint(solution(open(\"input.txt\", \"r\").read()))"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n''') == '3'\nassert solution('''\ndfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == '5'\n'''"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == None"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n"
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\""
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873296'\nassert solution('2\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '13873296'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\"\n                \"154873296\\n\"\n                \"386592714\\n\"\n                \"729641835\\n\"\n                \"863725149\\n\"\n                \"975314628\\n\"\n                \"412968357\\n\"\n                \"631457982\\n\"\n                \"598236471\\n\"\n                \"247189563\\n\") == \"154873396\\n\"\nassert solution(\"2\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\") == \"1\\n\"\nassert solution(\"3\\n\"\n                \"4\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\"\n                \"4\\n\"\n                \"2\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\") == \"1\\n\"\nassert solution(\"5\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\"\n                \"1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"154873396\"\nassert solution(\"2\") == \"336592714\"\nassert solution(\"3\") == \"729645835\"\nassert solution(\"4\") == \"863725145\"\nassert solution(\"5\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\n\nassert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n389992714\n863725149\n975314628\n412958357\n631457992\n998236471\n247789563\n863725149\n975314628\n412968357\n631457982\n998236471\n247189563''') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n389992714\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563\\n863725149\\n975314628\\n412968357\\n631457982\\n998236471\\n247189563'\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"154873296\"\nassert solution(\"2\") == \"154873296\"\nassert solution(\"3\") == \"154873296\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"154873296\"\nassert solution(\"2\") == \"63725149\"\nassert solution(\"3\") == \"729645835\"\nassert solution(\"4\") == \"837914628\"\nassert solution(\"5\") == \"979314628\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n\"\nassert solution(\n\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n\"\n"
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"\"\"154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n\"\"\"\nassert solution(\"\"\"\n15873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"\"\"158732963\n386592715\n729641835\n863725145\n979314628\n412968357\n631457982\n598236471\n247789563\n\"\"\"\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"\"\"154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n\"\"\"\nassert solution(\"\"\"\n15873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"\"\"158732963\n386592715\n729641835\n863725145\n979314628\n412968357\n631457982\n598236471\n247789563\n\"\"\"\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"\"\"154873396\n336592714\n729645835\n863725145\n979314628\n412958357\n631457992\n998236471\n247789563\n\"\"\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2 1\\n1 4') == '3'\nassert solution('5 5\\n1 1 2 3 1\\n3 2\\n2 3 4\\n4 5\\n5 4\\n3 1\\n2 5\\n3 1\\n2 1\\n4\\n4 3\\n3 5\\n3 5\\n2 1\\n4\\n1 1\\n1 2\\n1 3\\n3 4\\n2 4\\n4 5\\n3 5\\n5 2\\n1 4\\n1 1\\n2 5\\n2 4\\n3 2\\n5 4\\n2 5\\n3 4\\n3 5\\n3 5\\n5 4\\n2 3\\n4 4\\n2 5\\n3 5\\n4 2\\n3 5\\n5 1\\n4 5\\n5 3\\n4 3\\n3 4\\n3 2\\n1 2\\n2 4\\n3 3\\n3 1\\n2 3\\n5 3\\n2 2\\n2 3\\n4 2\\n1 4\\n2 1\\n2 5\\n4 4\\n1 3\\n2 3\\n3 1\\n4 1\\n3 4\\n1 3\\n2 2\\n3 5\\n4 1\\n3 4\\n2 5\\n3 5\\n5 5\\n3 5\\n4 5\\n1 5\\n2 4\\n1 3\\n1 3\\n1 2\\n3 3\\n2 4\\n3 1\\n4 1\\n4 5\\n2 3\\n2 4\\n2 3\\n4 5\\n5 5\\n4 4\\n1 3\\n3 3\\n5 2\\n1 4\\n2 4\\n1 3\\n2 3\\n3 3\\n4 4\\n3 5\\n4 5\\n1 5\\n5 5\\n5 3\\n4 5\\n5 2\\n2 4\\n3 2\\n3 5\\n1 5\\n4 4\\n2 4\\n3 2\\n3 4\\n1 5\\n4 2\\n3 3\\n5 3\\n4 2\\n5 2\\n3 3\\n2 3\\n3 4\\n3 3\\n2 4\\n2 2\\n3 3\\n5 2\\n3 4\\n4 5\\n3 5\\n3 5\\n2 5\\n2 5\\n4 2\\n1 3\\n5 3\\n4 1\\n5 3\\n1 2\\n1 3\\n2 4\\n3 5\\n4 3\\n3 5\\n3 5\\n4 5\\n2 3\\n4 3\\n3 4\\n2 4\\n4 2\\n2 4\\n3 5\\n2 3\\n4 1\\n3 4\\n2 3\\n3 4\\n2 5\\n4 4\\n3 4\\n2 4\\n4 5\\n1 3\\n4 4\\n2 5\\n3 4\\n3 2\\n5 4\\n3 4\\n4 3\\n1 3\\n2 5\\n2 3\\n2 4\\n4 5\\n2 4\\n5 4\\n4 5\\n3 5\\n3 5\\n2 4\\n3 2\\n5 4\\n3 4\\n2 3\\n3 4\\n5 5\\n1 5\\n3 4\\n2 4\\n4 3\\n1 3\\n1 5\\n2 3\\n5 3\\n5 4\\n4 2\\n1 3\\n2 3\\n2 3\\n5 4\\n3 4\\n3 2\\n3 4\\n3 4\\n2 4\\n5"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 6') == '3'\nassert solution('1 1 1 3 5 3 5 7') == '6'\nassert solution('3 1') == '8'\nassert solution('1 5') == '4'\nassert solution('3 4') == '7'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\nassert solution(stdin=\"6 6 7 8 9 4 5 3\") == \"8\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 4\n    2 1 1 2 3 3\n    1 2\n    1 3\n    2 4\n    1 5\n    3 4\n    3 5\n    4 5\n    \"\"\"\n) == \"9\"\nassert solution(\n    \"\"\"\n    4 5\n    3 4\n    3 5\n    4 5\n    \"\"\"\n) == \"4\"\nassert solution(\n    \"\"\"\n    4 1\n    3 1\n    3 4\n    4 1\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    4 1\n    2 1\n    3 1\n    4 1\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n    1 2\n    1 3\n    2 1\n    2 2\n    3 1\n    3 2\n    4 1\n    4 2\n    \"\"\"\n) == \"3\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 9') == '9 4'\nassert solution('4 9') == '-1'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"8\"\nassert solution(\"\"\"\n6 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"9\"\nassert solution(\"\"\"\n9 2\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n2 2\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '2', 'Odd number'\nassert solution('9 6') == '6', 'Even number'\nassert solution('1 1 1 3 5 3 5 7') == '3', 'Ordered list'"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution('''\n5 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\n"
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 2\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2\n1 3\n3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 3\n3 4\n2 3\n4 3\n3 1\n4 1\n1 1\n4 1\n3 4\n2 3\n3 5\n5 4\n3 4\n4 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('10 20 15 14') == 'NO'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'NO'"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"YES\""
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5\n3 2\n1 100000000\n''') == 'NO'\nassert solution('''2\n2 1\n1 1\n''') == 'NO'\nassert solution('''2\n1 1\n1 100000000\n''') == 'YES'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''5 5 2 2 8\n100 101 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO'"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 2 8') == \"YES\"\nassert solution('100 101 102 105') == \"YES\"\nassert solution('10 20 15 14') == \"NO\"\nassert solution('101 101 101 3') == \"YES\"\n\n'''\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 2 8\\n') == 'YES\\n'\nassert solution('10 20 15 14\\n') == 'NO\\n'\n"
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('10 20 15 14') == 'NO'\nassert solution('101 101 101 3') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3 5\") == \"3 4 6 5\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2 2\") == \"3 3 \nprint(solution(input()))"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5 \n\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n\nassert solution('''0 0\n1 1''') == '2 2'\n\nassert solution('''0 0\n2 1''') == '3 3'"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"3 4 6 5\"\nassert solution(\"5 5\") == \"9 8 12 6 8\""
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5'\n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"3 4 6 5\"\nassert solution(\"5 5\\n2 1 5 3 5\\n\") == \"9 8 12 6 8\"\nassert solution(\"2 10\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3\"\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '3 4 6 5 '\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 '\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2 2\n''') == '3 3 \nassert solution('''\n''') == '''\n'''\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 \n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '3 4 6 5 \\n'\nassert solution(sys.stdin.read()) == '3 4 6 5 \\n'\n"
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"4\""
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n1 2 3 4\n''') == '3 4 6 5 \n\nassert solution('''\n5 5\n2 1 5 3 5\n''') == '9 8 12 6 8 \n\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 "
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 6\\n\"\n    \"[3, 8, 9, 10]\\n\"\n    \"[2, 4, 6]\\n\"\n    \"[2, 1, 5]\\n\"\n    \"[4, 8, 2]\") == \"YES\\n\"\n\nassert solution(\"5 3\\n\"\n    \"[1 2]\\n\"\n    \"[2 3]\\n\"\n    \"[3 4]\\n\"\n    \"[1 4]\") == \"NO\\n\"\n\n\"\"\"\n\nfrom typing import List\nfrom collections import deque, defaultdict\nimport sys\nfrom heapq import heappush, heappop, heapify\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('6 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 6') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([10, 6,\n    '1 2',\n    '1 3',\n    '1 4',\n    '2 5',\n    '2 6',\n    '3 7',\n    '7 8',\n    '7 9',\n    '9 10',\n    '4 3 8 9 10',\n    '3 2 4 6',\n    '3 2 1 5',\n    '3 4 8 2',\n    '2 6 10',\n    '3 5 4 7']) == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 6\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"10 6\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 5\\n\"\n    \"2 6\\n\"\n    \"3 7\\n\"\n    \"7 8\\n\"\n    \"7 9\\n\"\n    \"9 10\\n\"\n    \"4 3 8 9 10\\n\"\n    \"3 2 4 6\\n\"\n    \"3 2 1 5\\n\"\n    \"3 4 8 2\\n\"\n    \"2 6 10\\n\"\n    \"3 5 4 7\\n\"\n    ) == \"YES\\n\"\nassert solution(\n    \"10 4\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"1 4\\n\"\n    \"2 5\\n\"\n    \"2 6\\n\"\n    \"3 7\\n\"\n    \"3 8\\n\"\n    \"3 9\\n\"\n    \"4 10\\n\"\n    \"2 3\\n\"\n    \"2 1\\n\"\n    \"3 4\\n\"\n    \"3 5\\n\"\n    \"3 6\\n\"\n    \"4 7\\n\"\n    \"4 8\\n\"\n    \"4 9\\n\"\n    \"5 10\\n\"\n    \"2 4\\n\"\n    \"4 5\\n\"\n    \"4 6\\n\"\n    \"4 7\\n\"\n    \"4 8\\n\"\n    \"4 9\\n\"\n    \"5 10\\n\"\n    \"2 3\\n\"\n    \"5 1\\n\"\n    \"5 2\\n\"\n    \"5 3\\n\"\n    \"5 4\\n\"\n    \"5 5\\n\"\n    \"5 6\\n\"\n    \"5 7\\n\"\n    \"5 8\\n\"\n    \"5 9\\n\"\n    \"5 10\\n\"\n    \"6 7\\n\"\n    \"6 8\\n\"\n    \"6 9\\n\"\n    \"6 10\\n\"\n    \"7 8\\n\"\n    \"7 9\\n\"\n    \"7 10\\n\"\n    \"8 9\\n\"\n    \"8 10\\n\"\n    \"9 10\\n\"\n    \"4 3 8 9 10\\n\"\n    \"3 2 4 6\\n\"\n    \"3 2 1 5\\n\"\n    \"3 4 8 2\\n\"\n    \"2 6 10\\n\"\n    \"3 5 4 7\\n\"\n    ) == \"NO\\n\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"YES\\nYES\\nYES\\nYES\\n\"\nassert solution(\"4\") == \"YES\\nYES\\nYES\\nYES\\n\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nNO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4\\n1 2 2 1 3\\n3\\n1 1 1\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"1\\n5\\n1 1 1\") == \"YES\\n1 2\\n2 3\\n3 4\\n1 5\"\nassert solution(\"4\\n1\\n1 1\\n4\\n1 2\\n2 3\") == \"NO\""
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\nassert solution('4\\n5\\n1 2 2 1 3\\n4\\n1 1 1') == 'NO'\nassert solution('4\\n5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 2'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5\\n1 2 2 1 3\\n3\\n1 1 1\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"2\\n5\\n1 1 1\\n4\\n1 2 3\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"3\\n5\\n1 1000 101 1000\\n4\\n1 2 3 4\") == \"YES\\n1 2\\n2 3\\n3 4\\n1 1000\\n1 101\\n1 1000\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\nassert solution('7') == 'NO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\nassert solution('''\n1\n1 1 1\n''') == 'YES\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\n''' == 'YES\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\n'''\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"01011110\"\nassert solution(input()) == \"0101111\"\nassert solution(input()) == \"0011111\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"01011110\""
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '01'\nassert solution('8 5') == '01011110'\nassert solution('7 9') == '01011110'\nassert solution('11011010') == '01011110'\nassert solution('7 11') == '01011110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 5\n1111100\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100''') == '0101111'\nassert solution('''3\n11011010\n7 9\n1111100''') == '0101111'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 5') == '01011110'\n\n\"\"\"\nfrom bisect import bisect_left\nimport sys"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\nassert solution('''\n3\n7 9\n1111100\n7 11\n1111100\n''') == '0011111'\nassert solution('''\n7\n2\n10\n''') == '0'\nassert solution('''\n10\n2\n1\n''') == '1'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0011111\"\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"01011110\"\n\n\n\n\"\"\"\n\n\nimport itertools\nimport math\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n''') == '01011110'\n"
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"01011110\"\nassert solution(input()) == \"0101111\"\nassert solution(input()) == \"0011111\"\n\"\"\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"5 1\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 2 3 4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 2 3 4'\nassert solution('6 1') == '4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution() == '1 3 5 6'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"1\\n7 2\\n\") == \"3\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '4\\n1 2 3 5 6'"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '4'\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n1 2 3\"\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_1) == \"3\\n1 2 4\"\nprint(solution(stdin))\n\"\"\"\n\nn, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\nc.sort()\ngood_points = []\nfor i in c:\n    if len(good_points) < k:\n        if i not in good_points:\n            good_points.append(i)\n    else:\n        break\n\nprint(len(good_points))\nprint(*good_points)\n"
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 3\\n1 2 3\\n3 4\\n2 2\\n1 2\\n2 2\") == \"1 3 4\"\n\nassert solution(\n    \"7 4\\n9 11\\n11 11\\n7 8\\n8 9\\n7 8\\n9 11\\n7 9\\n\") == \"3 4 7\"\n\nassert solution(\n    \"10 2\\n1 1\\n2 2\\n2 2\\n3 3\\n2 3\\n1 1\\n2 1\\n2 2\\n3 3\\n2 2\\n\") == \"1 2 3\""
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '0'\nassert solution('4') == '5'"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n-3 0\") == \"0\"\nassert solution(\"3\\n1 3 2\\n-100 2 3\\n\") == \"3\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5 2 1\n2 2 2 3 4\n''') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution('2 1\\n-100 2 3') == '3'\nassert solution('5 2 1\\n2 2 2 3 4') == '19'\nprint('all test cases passed')"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 1\n-1 -3 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1 2 3 1\n0 1 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n2 1 4 3 5\n2 2 2 3 4\n\"\"\") == \"19\"\nassert solution(\"\"\"\n1\n1 2\n1 1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''\n2\n2 1\n-3 0\n''') == '0'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n"
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\nassert solution('''\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '10'\nassert solution('''\n2\n1 1\n1 1\n''') == '0'"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5') == '21 7 15 21 3'\nassert solution('1 2') == '0 0'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5\\n' +\n                '1 2 1\\n' +\n                '3 2 3\\n' +\n                '2 4 1\\n' +\n                '4 5 2\\n' +\n                '5 7 4\\n' +\n                '3 6 2\\n' +\n                '5 2 3 4 1\\n') == \"21 7 15 21 3 \n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n\n'''\n2. \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u044b\u043f\u0430\u0434\u0435\u043d\u0438\u0439 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438.\n\n\u0421\u0447\u0435\u0442\u0447\u0438\u043a \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438 - \u044d\u0442\u043e \u0441\u0442\u043e\u043b\u0431\u0446 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\n\n\u0412 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438 \u0447\u0438\u0441\u043b\u0430 1, 2, 3, 4, 5, 6, 7, 8, 9 \u0438 10 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u043c 0.\n\n\u0412 \u043a\u0430\u043a\u043e\u043c \u0441\u0442\u043e\u043b\u0431\u0446\u0435 \u0438\u0441\u043a\u043e\u043c\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f?\n'''"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 5\\n\"\n    \"1 2 1\\n\"\n    \"3 2 3\\n\"\n    \"2 4 1\\n\"\n    \"4 5 2\\n\"\n    \"5 7 4\\n\"\n    \"3 6 2\\n\"\n    \"5 2 3 4 1\\n\"\n) == \"21 7 15 21 3\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 2 1\\n\"\n    \"2 3 2\\n\"\n    \"1 3 2\\n\"\n) == \"1 3 3\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 2 1\\n\"\n    \"2 3 2\\n\"\n    \"1 3 2\\n\"\n) == \"1 3 3\""
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n\nassert solution('''\n10 1\n10 4 1\n3 4 3\n3 6 5\n2 5 6\n6 2 3\n3 5 4\n2 4 2\n4 7 2\n2 6 5\n4 6 7\n2 6 1 3\n5 2 2\n5 7 4\n6 4 3\n5 4 2\n2 6 3\n4 2 4\n3 6 2\n1 6 3\n''') == '11 11 13'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1') == '21 7 15 21 3'\nassert solution('4 6\\n1 2 1\\n2 3 2\\n3 4 2\\n4 5 3\\n2 5 3 4 1') == '1 3 3'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3'\nassert solution('3 3') == '1 3 3'\nassert solution('5 5') == '0 0'\nassert solution('8 7') == '1 7 9'\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3 '\nassert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '1 3 3 '\nassert solution('''1 2\n1 2\n''') == '0 0 '\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3 '\nassert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3 '\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == \"21 7 15 21 3\"\nassert solution('''\n1 2\n1 2\n''') == \"0 0\"\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == \"1 3 3\"\nassert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == \"21 7 15 21 3\"\n"
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n\nassert solution('''\n1 2\n1 2\n''') == '0 0'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'YES', \"First\"\nassert solution('4') == 'YES', \"Second\"\nassert solution('5') == 'NO', \"Third\"\n\n\"\"\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n1 2 2\\n4\\n5 5 5 5\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1\\n100') == 'YES'\nassert solution('4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'NO'\nassert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n''') == 'NO'\n\n'''"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\nassert solution('''\n1\n2\n3\n4\n5\n5\n5\n4\n3\n2\n1\n100\n''') == \"YES\"\nassert solution('''\n1\n1\n1\n100\n''') == \"NO\"\nassert solution('''\n1\n5\n4\n3\n2\n100\n''') == \"NO\"\nassert solution('''\n1\n5\n4\n3\n2\n100\n''') == \"NO\"\n\nimport sys\nimport io\n\nsys.stdin = io.BytesIO(input().encode())\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES', 'First'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES', 'Second'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO', 'Third'\n"
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n2\n4\n3 5 3\n4 5 5\n2\n1 2 3 4 5 6 7 8 9 10\n3\n3 4 5 6 7 8 9 10 11 12 13 14 15\n4\n4 3 1 2\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n3\n4 3 2 1\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n3\n4 3 2 1\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n4\n4 3 2 1\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n3\n4 3 2 1\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n3\n4 3 2 1\n4\n3 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 4\n1010\n1101\n\n\"\"\"\n    ) == \"12\"\n\nassert solution(\n    \"\"\"\n4 5\n1001\n10101\n\n\"\"\"\n    ) == \"11\""
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1001\\n\") == \"11\"\nassert solution(\"4 5\\n1001\\n\") == \"11\""
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_sample_01) == '12'\nassert solution(input_sample_02) == '11'"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1001\\n') == '11'\nassert solution('4 5\\n1001\\n') == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1010\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n1101\\n') == '11'\nassert solution('4 5\\n1001\\n') == '11'\nprint(solution(input()))\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == '12'\nassert solution(input_string_2) == '11'\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\n"
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '12'\nassert solution('4 5') == '11'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2\\n4\\n6\\n8\\n10\\n') == 'YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == 'NO'"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''\n1\n2\n3\n4\n5\n''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n5\n4\n''') == 'NO'\nassert solution('''8\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''6\n1\n2\n4\n6\n8\n10\n''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n4\n6''') == '2 4 1 5'\nassert solution('''5\n4\n6''') == 'NO'\nassert solution('''5\n10\n15''') == 'YES'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4'\nassert solution('''\n1\n4\n4\n3\n4\n''') == '0'\nassert solution('''\n2\n1\n4\n1\n''') == '1'"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '0'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5\"\nassert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"4\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"4\"\nassert solution() == \"0\""
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n2\n1 1 2\n2\n1\n1\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\\n5\\n1 1 1 1 1\\n8\\n8 7 6 5 4 3 2 1\\n1\\n1\") == \"5\\n1\\n0\\n4\\n0\\n\""
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '4\\n1\\n0\\n4\\n0\\n', 'First example'\nassert solution('''4\n8\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '3\\n0\\n0\\n3\\n0\\n', 'Second example'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '2\\n0\\n0\\n4\\n0\\n', 'Third example'\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '0'\nassert solution(\"5\") == '0'\n\nstdin = \"\"\"\n3\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"0\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '3'\n\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '4'\n\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '2'\n\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"2\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == \"3\"\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == \"2\"\nassert solution('''4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3''') == \"4\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3\n2 4\n2 3\n3 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n4\n2 4\n2 3\n3 4\n2 3\n3 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n5\n2 4\n2 3\n3 4\n2 3\n3 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n6\n2 4\n2 3\n3 4\n2 3\n3 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n4\n2 4\n2 3\n3 4\n2 3\n3 4\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4\\n\"\n    \"4\\n\"\n    \"1 5\\n\"\n    \"2 4\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"5\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n    \"2 5\\n\"\n    \"3 5\\n\"\n    \"2 2\\n\"\n    \"3\\n\"\n    \"1 3\\n\"\n    \"2 4\\n\"\n    \"2 3\\n\"\n    \"7\"\n    ) == \"3\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"7\"\n"
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '60'\nassert solution('4 20') == '1180'\nassert solution('23 59') == '1439'\nassert solution('23 0') == '60'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    3\n    5 7\n    15 20 30\n    \"\"\") == \"1\"\nassert solution(\"\"\"\n    2\n    3 4\n    \"\"\") == \"0\"\nassert solution(\"\"\"\n    1\n    2 1\n    \"\"\") == \"59\"\nassert solution(\"\"\"\n    1\n    0 1\n    \"\"\") == \"60\""
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n11 -1\n17 -1\n13 -1\n19 -1\n15 -1\n17 -1\n''') == \"6\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59''') == '61'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '6'\nassert solution(solution.__doc__, True) == '60'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"60\"\nassert solution(\"\"\"\n1\n24 0\n24 0\n\"\"\") == \"1439\"\nassert solution(\"\"\"\n1\n13 1\n13 1\n\"\"\") == \"13\"\nassert solution(\"\"\"\n1\n0 1\n0 1\n\"\"\") == \"1180\"\nassert solution(\"\"\"\n1\n0 0\n0 0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '60'\nassert solution('2\\n') == '1439'\nassert solution('3\\n') == '1180'\nassert solution('4\\n') == '1'"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"60\"\nassert solution(\"2\") == \"1439\"\nassert solution(\"3\") == \"1180\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n23 55\\n23 0\\n0 1') == '60'\nassert solution('2\\n4 20\\n23 59') == '1439'\n"
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n13 60\n6 2\n0 1\n6 6\n0 0\n''') == '1439'\n\nassert solution('''\n1 19\n8 3\n0 1\n''') == '19'\n\nassert solution('''\n5 6\n1 2\n3 4\n0 1\n0 2\n''') == '5'\n\nassert solution('''\n7 6\n8 2\n3 4\n1 2\n0 1\n0 2\n''') == '5'"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == '2'\nassert solution(\"5\") == '4'\nassert solution(\"1\") == '1'\nassert solution(\"10\") == '0'\nassert solution(\"2\") == '-1'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\nLURD') == '4'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"1 4\"\nassert solution() == \"3 4\"\nassert solution() == \"-1\"\nassert solution() == \"0 0\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\"\n) == \"1 4\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''1\n3\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '1 4'\nassert solution('''2\n5\nRU\n5\nLR\n5\nUD\n5\nLRD\n5\nRU\n5\nRD\n5\nRU\n5\nRD\n5\nRD\n5\nUD\n5\nRU\n5\nLRD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nRD\n5\nRD\n5\nUD\n5\nRU\n5\nUD\n5\nRD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU\n5\nUD\n5\nUD\n5\nRU"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1 2\"\nassert solution(\"\") == \"-\"\nassert solution(\"RRURDD\") == \"3 4\"\nassert solution(\"RRRUUD\") == \"-1\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"LURD\") == \"URDD\"\nassert solution(\"RRUDU\") == \"URDD\"\nassert solution(\"LURD\") == \"URDD\"\nassert solution(\"LLDDR\") == \"LLDD\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n''') == '1 4'\nassert solution('''\n3\nRLD\n5\nRLD\n''') == '1 4'\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"LRU\") == \"1 2\"\nassert solution(\"LLD\") == \"1 4\"\nassert solution(\"RRD\") == \"3 4\"\nassert solution(\"UURD\") == \"1 4\"\n"
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\nR\nLURDLRDU''') == '1 4'\nassert solution('''3\nR\nRUDDDRR''') == '1 4'\nassert solution('''2\nRRRD''') == '-1'\nassert solution('''5\nRU''') == '1 4'\nassert solution('''4\n
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 3 4 5\n4 2 2 4''') == '3'\nassert solution('''7\n1 2 3 4 5 6 7\n3 4 5 4 4 4''') == '4'\nassert solution('''3\n1 2 3\n4 5 6\n7''') == '2'\nassert solution('''5\n7 3 6 2 1 4 3\n5 6''') == '2'\nassert solution('''5\n7 3 6 2 1 4 3\n5 6''') == '1'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '0'\nassert solution('''\n2\n3 2\n1 2\n1\n''') == '0'\nassert solution('''\n8\n6 5 2 3 1 3 4 5\n1\n2\n3\n4\n''') == '0'\nassert solution('''\n4\n4 2 4 1 4 3 4\n5\n1 1 5 4 3\n1\n2\n4\n2 1 1 3\n''') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n7 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3\\n1\\n0\\n2'\nassert solution('3\\n1 1 1 3') == '2'"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n5\n2 4 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '1'\nassert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '2'\nassert solution('''2\n5\n2 4 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '0'\nassert solution('''3\n7\n2 4 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '2'\nassert solution('''1\n5\n2 4 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3''') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3\\n') == '1'\n\nprint('Check your code')\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n1\n3\n4\n1 1 1 3\n''') == '2'\n"
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n4''') == '1'\n\nassert solution('''1\n2\n4\n1\n1\n4''') == '0'\n\nassert solution('''2\n5\n5\n5''') == '0'\n\nassert solution('''3\n4\n4\n4''') == '0'\n\nassert solution('''4\n3\n2\n2''') == '1'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"8\") == \"121\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"8\") == \"121\"\nassert solution(\"1337\") == \"0\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution('1') == '0'\nassert solution('1\\n3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8') == '121'\nassert solution('1\\n3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n1 3\\n1 4') == '121'\nassert solution('1\\n3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8\\n1 3\\n1 4') == '121'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"12\") == \"12\"\nassert solution(\"99999\") == \"99999\"\nassert solution(\"12345\") == \"45123\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\n9 4 1 7 10 1 6 5\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8') == '121'\nassert solution('1\\n1337') == '0'"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"8\"\n) == \"121\"\nassert solution(\n    \"1\"\n) == \"0\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1337\") == \"0\"\nassert solution(\"1\\n10\\n1\") == \"10\"\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1337\n''') == '0'\nassert solution('''\n3\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nprint(solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n'''))\n"
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1337''') == '0'\nassert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8''') == '121'\nassert solution('''1\n1\n1\n1\n1''') == '0'"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"4 3\") == '18'\nassert solution(\"10 6\") == '227'\nassert solution(\"5 10\") == '8'\nassert solution(\"4 5\") == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"18\"\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\nassert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n4 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '1'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\n\n'''\n---Output---\n\n12\n30\n2\n36\n56\n'''\n\n'''\n---Explanation---\n\nThe first test case is easy. Just increase $x$:\n\n1) $x=1$, $a = [1, 2, 1, 3]$ => $a = [1, 2, 1, 4]$.\n2) $x=2$, $a = [1, 2, 1, 4]$ => $a = [1, 2, 1, 5]$.\n3) $x=3$, $a = [1, 2, 1, 5]$ => $a = [1, 2, 2, 5]$.\n4) $x=4$, $a = [1, 2, 2, 5]$ => $a = [1, 2, 3, 5]$.\n5) $x=5$, $a = [1, 2, 3, 5]$ => $a = [1, 2, 4, 5]$.\n6) $x=6$, $a = [1, 2, 4, 5]$ => $a = [1, 2, 5, 6]$.\n7) $x=7$, $a = [1, 2, 5, 6]$ => $a = [1, 2, 6, 7]$.\n8) $x=8$, $a = [1, 2, 6, 7]$ => $a = [1, 3, 6, 7]$.\n9) $x=9$, $a = [1, 3, 6, 7]$ => $a = [1, 4, 6, 7]$.\n10) $x=10$, $a = [1, 4, 6, 7]$ => $a = [1, 5, 6, 7]$.\n11) $x=11$, $a = [1, 5, 6, 7]$ => $a = [1, 6, 6, 7]$.\n12) $x=12$, $a = [1, 6, 6, 7]$ => $a = [1, 7, 6, 7]$.\n\nSo, we need to find the minimum number of moves to achieve this. \n\nLet's look at the last element $a_n = a_{n-1}$ and $a_n-1 = a_{n-2}$. Let's consider the case where we increase $a_n-1$ by adding $x$ to it and then add $x$ to $a_n$.\nIf we consider case where we increase $a_n$ by adding $x$ to it and then add $x$ to $a_n-1$, we see that it's equal to the case where we increase $a_n-1$ by adding $x$ to it and then add $x$ to $a_n$. \n\nIn order to solve this problem, we need to have a way to track the number of operations. To do so, we need to store the number of operations needed to increase $a_n-1$:\n\nLet's consider this example. The number of operations needed to add $x$ to $a_n$ is always equal to the number of operations needed to add $x$ to $a_n-1$. \n\nIf we look at the last element $a_n$ and the number of operations needed to add $x$ to $a_n$, we can see that it is equal to the number of operations needed to add $x$ to $a_n-1$. \n\nSo, we can solve this problem by tracking the number of operations needed to increase $a_n-1$:\n\nThe first step is to track the number of operations needed to increase $a_n$:\n\nStart with the number of operations needed to increase $a_n-1$:\n\nIf we increase the last element of the array by adding $x$, we know that we need to increase the number of operations needed to increase $a_n$:\n\nSo, we need to make sure that we increase the number of operations needed to increase $a_n$:\n\nThe last element $a_n$ is equal to the last element of $a_n-1$:\n\nIf we increase the last element of the array by adding $x$, we know that we need to increase the number of operations needed to increase $a_n$. \n\nSo, we need to track the number of operations needed to increase $a_n$:\n\nThe first step is to track the number of operations needed to increase $a_n-1$:\n\nIf we increase the first element of the array by adding $x$, we know that we need to increase the number of operations needed to increase $a_n$:\n\nSo, we need to make sure that we increase the number of operations needed to increase $a_n$:\n\nSo, it's easy to think that we need to keep track of the number of operations needed to increase $a_n$. Let's look at one more example. \n\nConsider the array $a = [1, 4, 6, 7]$. $x=7$ is already enough to increase $a$ by 1:\n\nLet's consider $a = [1, 4, 6, 7]$ and $x=7$;\n\nIf we increase the first element by adding $x$ to"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '18'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '0'\n\n\"\"\""
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == \"6\"\nassert solution('''5 10\n1 2 3 4 5 6 7 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == \"18\"\nassert solution('''5 10\n1 2 3 4 5 6 7 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == \"227\"\nassert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == \"8\"\nassert solution('''3 4\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == \"0\"\n\n'''\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution(\n'''\n5 4\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution(\n'''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution(\n'''\n5 10\n1 2 3 4 5 6 7 8\n''') == '8'\nassert solution(\n'''\n5 10\n1 2 3 4 5 6 7 8 9\n''') == '0'\n"
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"10 6\") == \"227\"\nassert solution(\"5 10\") == \"8\"\nassert solution(\"20 100 50 20 100500\") == \"0\"\nassert solution(\"10 25\") == \"8\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"4\\n1 2 3\") == \"1\"\nassert solution(r\"3\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('1,2,3') == '2'\nassert solution('1,1') == '1'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1,2') == '1'\nassert solution('1,2,3') == '1'\nassert solution('1,1') == '1'\nassert solution('5,6,7,8,9') == '5'\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[1,2,3], [1,1]\") == \"1\"\nassert solution(\"[1,2], [1,2,3]\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1,2\\n1,1\") == \"2\"\nassert solution(\"1,2\\n1,1\\n\") == \"2\"\nassert solution(\"1,2\\n1,1\\n2,3\") == \"1\"\nassert solution(\"1,2\\n1,1\\n3,4\") == \"2\"\nassert solution(\"1,2\\n1,1\\n3,4\\n\") == \"3\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1,2,3],[1,1]) == 1\nassert solution([1,2],[1,2,3]) == 2\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 2\n1 3\n2 4\n3 4\n3 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n1 2\n1 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n2\n1''') == '1'''\n\nassert solution('''1\n1\n2\n2''') == '1'''\n\nassert solution('''1\n1\n2\n1''') == '2'''\n\nassert solution('''1\n1\n1\n2''') == '1'''"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n''') == '1\\n2\\n3\\n3\\n1\n''')\nassert solution('''\n6\n''') == '1\\n2\\n3\\n3\\n2\\n1\n''')\n'''\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        ans = [1]\n        for i in range(rowIndex):\n            ans = [1] + [ans[j] + ans[j + 1] for j in range(len(ans) - 1)] + [1]\n        return ans"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1,3,3,1\"\nassert solution(\"6\") == \"1,3,3,1,2,4\"\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(3) == [1,3,3,1]\n'''\n\n\nclass Solution:\n    # With Space Optimization\n    # O(N) Space\n    def solve(self, n):\n        # Using Recursion\n        '''\n        if n == 0:\n            return [1]\n        elif n == 1:\n            return [1, 1]\n        else:\n            return [1] + self.solve(n-1) + [1]\n        '''\n        # Using DP\n        '''\n        res = [1]\n        for i in range(1, n+1):\n            temp = [1]\n            for j in range(1, i):\n                temp.append(res[j-1] + res[j])\n            res = temp\n        return res\n        '''\n        # Iteration\n        res = [1]\n        for i in range(1, n+1):\n            temp = [1]\n            for j in range(1, i):\n                temp.append(res[j-1] + res[j])\n            res = temp\n        return res\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == ['1']\nassert solution('2') == ['1','1']\nassert solution('3') == ['1','3','3','1']\nassert solution('4') == ['1','4','6','4','1']\nassert solution('5') == ['1','5','10','10','5','1']\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n\n''') == '1', 'First'\nassert solution('''\n3\n\n''') == '3', 'Second'\nassert solution('''\n9\n\n''') == '9', 'Third'\n'''\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([0]) == [\"\"]\nassert solution([1]) == [\"1\"]\nassert solution([2]) == [\"1\", \"1\"]\nassert solution([3]) == [\"1\", \"3\", \"3\", \"1\"]\nassert solution([4]) == [\"1\", \"4\", \"6\", \"4\", \"1\"]\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1 3 3 1', 'Should be 1 3 3 1'\nassert solution('1') == '1', 'Should be 1'\n'''"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1\\n2'\nassert solution('3') == '1\\n3\\n1'\nassert solution('4') == '1\\n4\\n6\\n4'\nassert solution('5') == '1\\n5\\n10\\n10\\n5'\n"
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1,4,6,4,1'\n\"\"\""
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('11111111111111111111111111111101') == '31'\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"11111111111111111111111111111101\") == 31"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n\n'''\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000000000000000000000000001011\") == '3'\nassert solution(\"00000000000000000000000010000000\") == '1'\nassert solution(\"11111\") == '31'\n\n'''"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('11111111111111111111111111111101') == 31\n"
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\""
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('11111111111111111111111111111101') == '31'\n'''\n\n\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n:\n            res += 1\n            n = n & (n-1)\n        return res"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('521') == '52'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == ['1']\nassert solution('100') == ['1','0','0','0','0','1']\nassert solution('1234') == ['1','2','3','4','5','6']\nassert solution('10') == ['1','0','0','0','0','0','0','1']\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"4 3 2 1\""
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1\n10\n2\n6\n11\n10\n''') == '''\n3\n1\n12\n2\n7\n8\n9\n'''\n\nprint(solution('''\n10\n2\n12\n3\n20\n2\n21\n2\n22\n2\n23\n2\n24\n2\n25\n2\n26\n2\n27\n2\n28\n2\n29\n2\n30\n2\n31\n2\n32\n2\n33\n2\n34\n2\n35\n2\n36\n2\n37\n2\n38\n2\n39\n2\n40\n2\n41\n2\n42\n2\n43\n2\n44\n2\n45\n2\n46\n2\n47\n2\n48\n2\n49\n2\n50\n2\n51\n2\n52\n2\n53\n2\n54\n2\n55\n2\n56\n2\n57\n2\n58\n2\n59\n2\n60\n2\n61\n2\n62\n2\n63\n2\n64\n2\n65\n2\n66\n2\n67\n2\n68\n2\n69\n2\n70\n2\n71\n2\n72\n2\n73\n2\n74\n2\n75\n2\n76\n2\n77\n2\n78\n2\n79\n2\n80\n2\n81\n2\n82\n2\n83\n2\n84\n2\n85\n2\n86\n2\n87\n2\n88\n2\n89\n2\n90\n2\n91\n2\n92\n2\n93\n2\n94\n2\n95\n2\n96\n2\n97\n2\n98\n2\n99\n2\n100\n2\n101\n2\n102\n2\n103\n2\n104\n2\n105\n2\n106\n2\n107\n2\n108\n2\n109\n2\n110\n2\n111\n2\n112\n2\n113\n2\n114\n2\n115\n2\n116\n2\n117\n2\n118\n2\n119\n2\n120\n2\n121\n2\n122\n2\n123\n2\n124\n2\n125\n2\n126\n2\n127\n2\n128\n2\n129\n2\n130\n2\n131\n2\n132\n2\n133\n2\n134\n2\n135\n2\n136\n2\n137\n2\n138\n2\n139\n2\n140\n2\n141\n2\n142\n2\n143\n2\n144\n2\n145\n2\n146\n2\n147\n2\n148\n2\n149\n2\n150\n2\n151\n2\n152\n2\n153\n2\n154\n2\n155\n2\n156\n2\n157\n2\n158\n2\n159\n2\n160\n2\n161\n2\n162\n2\n163\n2\n164\n2\n165\n2\n166\n2\n167\n2\n168\n2\n169\n2\n170\n2\n171\n2\n172\n2\n173\n2\n174\n2\n175\n2\n176\n2\n177\n2\n178\n2\n179\n2\n180\n2\n181\n2\n182\n2\n183\n2\n184\n2\n185\n2\n186\n2\n187\n2\n188\n2\n189\n2\n190\n2\n191\n2\n192\n2\n193\n2\n194\n2\n195\n2\n196\n2\n197\n2\n198\n2\n199\n2\n200\n2\n201\n2\n202\n2\n203\n2\n204\n2\n205\n2\n206\n2\n207\n2\n208\n2\n209\n2\n210\n2\n211\n2\n212\n2\n213\n2\n214\n2\n215\n2\n216\n2\n217\n2\n218\n2\n219\n2\n220\n2\n221\n2\n222\n2\n223\n2\n224\n2\n225\n2\n226\n2\n227\n2\n228\n2\n229\n2\n230\n2\n231\n2\n232\n2\n233\n2\n234\n2\n235\n2\n236\n2\n237\n2\n238\n2\n239\n2\n240\n2\n241\n2\n242\n2\n243\n2\n244\n2\n245\n2\n246\n2\n247\n2\n248\n2\n249\n2\n250\n2\n251\n2\n252\n2\n253\n2\n254\n2\n255\n2\n256\n2\n257\n2\n258\n2\n259\n2\n260\n2\n261\n2\n262\n2\n263\n2\n264\n2\n265\n2\n266\n2\n267\n2\n268\n2\n269\n2\n270\n2\n271\n2\n272\n2\n273\n2\n274\n2\n275\n2\n276\n2\n277\n2\n278\n2\n279\n2\n280\n2\n281\n2\n282\n2\n283\n2\n284\n2\n285\n2\n286\n2\n287\n2\n288\n2\n289\n2\n290\n2\n291\n2\n292\n2\n293\n2\n294\n2\n295\n2\n296\n2\n297\n2\n298\n2\n299\n2\n300\n2\n301\n2\n302\n2\n303\n2\n304\n2\n305\n2\n306\n2\n307\n2\n308\n2\n309\n2\n310\n2\n311\n2\n312\n2\n313\n2\n314\n2\n315\n2\n316\n2\n317\n2\n318\n2\n319\n2\n320\n2\n321\n2\n322\n2\n323\n2\n324\n2\n325\n2\n326\n2\n327\n2\n328\n2\n329\n2\n330\n2\n331\n2\n332\n2\n333\n2\n334\n2\n335\n2\n336\n2\n337\n2\n338\n2\n339\n2\n340\n2\n341\n2\n342\n2\n343\n2\n344\n2\n345\n2\n346\n2\n347\n2\n348\n2\n349\n2\n350\n2\n351\n2\n352\n2\n353\n2\n354\n2\n355\n2\n356\n2\n357\n2\n358\n2\n359\n2\n360\n2\n361\n2\n362\n2\n363\n2\n364\n2\n365\n2\n366\n2\n367\n2\n368\n2\n369\n2\n370\n2\n371\n2\n372\n2\n373\n2\n374\n2\n375\n2\n376\n2\n377\n2\n378\n2\n379\n2\n380\n2\n381\n2\n382\n2\n383\n2\n384\n2\n385\n2\n386\n2\n387\n2\n388\n2\n389\n2\n390\n2\n391\n2\n392\n2\n393\n2\n394\n2\n395\n2\n396\n2\n397\n2\n398\n2\n399\n2\n400\n2\n401\n2\n402\n2\n403\n2\n404\n2\n405\n2\n406\n2\n407\n2\n408\n2\n409\n2\n410\n2\n411\n2\n412\n2\n413\n2\n414\n2\n415\n2\n416\n2\n417\n2\n418\n2\n419\n2\n420\n2\n421\n2\n422\n2\n423\n2\n424\n2\n425\n2\n426\n2\n427\n2\n428\n2\n429\n2\n430\n2\n431\n2\n432\n2\n433\n2\n434\n2\n435\n2\n436\n2\n437\n2\n438\n2\n439\n2\n440\n2\n441\n2\n442\n2\n443\n2\n444\n2\n445\n2\n446\n2\n447\n2\n448\n2\n449\n2\n450\n2\n451\n2\n452\n2\n453\n2\n454\n2\n455\n2\n456\n2\n457\n2\n458\n2\n459\n2\n460\n2\n461\n2\n462\n2\n463\n2\n464\n2\n465\n2\n466\n2\n467\n2\n468\n2\n469\n2\n470\n2"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('[1,2,3]') == '[1,2,4]'\nassert solution('[4,3,2,1]') == '[4,3,2,2]'\nassert solution('[4,3,2,1]') == '[5,4,3,2]'\nassert solution('[4,3,2,1]') == '[5,4,3,2]'\nassert solution('[4,3,2,1]') == '[5,4,3,2]'\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1,2,3]) == ['1','2','4']\nassert solution([4,3,2,1]) == ['4','3','2','2']\n\nstdin = \"\"\"\n5\n12345\n3\n12\n2\n12\n\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '1 2 3'\n) == '1 2 4'\nassert solution(\n    '4 3 2 1'\n) == '4 3 2 2'\n\nimport unittest\nimport random\n\n\nclass Test_Solution(unittest.TestCase):\n    def test_1(self):\n        self.assertEqual(\n            solution(\n                '1 2 3'\n            ),\n            '1 2 4'\n        )\n\n    def test_2(self):\n        self.assertEqual(\n            solution(\n                '4 3 2 1'\n            ),\n            '4 3 2 2'\n        )\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([0]) == [\"0\"]\nassert solution([0,1,2]) == [\"0\", \"1\", \"1\"]\nassert solution([1,2,3]) == [\"1\", \"2\", \"4\"]\nassert solution([4,3,2,1]) == [\"4\", \"3\", \"2\", \"2\"]\n"
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\", \"Should be 1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\", \"Should be 4,3,2,2\"\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"4\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 5') == '12'\nassert solution('5 5') == '10'"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3', 'Wrong result'\nassert solution('3 1') == '4', 'Wrong result'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '4'\nassert solution('5 2') == '6'\nassert solution('10 2') == '10'\nassert solution('0 2') == '0'\nassert solution('-100 2') == '-50'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 2') == '4'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n''') == '4'\nassert solution('''3 5\n''') == '7'\n"
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"20 5\") == \"25\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"-20 -5\") == \"5\""
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\", \"Should return 4\"\nassert solution(\"4 5\") == \"8\", \"Should return 8\"\nassert solution(\"1 1\") == \"2\", \"Should return 2\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n1 1\\n2 2\") == \"3\"\nassert solution(\"5 5\\n0 5\\n-2 4\\n3 4\\n4 -4\") == \"3\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\nassert solution('''2 3\n1 1\n3 5''') == '1'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0\\n'\nassert solution('2 2') == '2\\n'\nassert solution('1 2') == '0\\n'\nassert solution('1 1 2') == '2\\n'\nassert solution('1 1 3') == '0\\n'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4''') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"3\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 20\") == \"5\"\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '2'\nassert solution('1 1') == '2'\nassert solution('10 10') == '7'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('1 1') == '2\\n'\nassert solution('5 5') == '3\\n'\nassert solution('4 3') == '2\\n'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"13\") == \"No\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'No'\nassert solution('8') == 'Yes'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('11') == 'No'"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('23') == 'No'\nassert solution('1') == 'Yes'\n\n'''"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(13) == \"No\"\n\"\"\""
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('0') == 'No'\nassert solution('1234') == 'Yes'"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"112\") == \"Yes\"\nassert solution(\"1121\") == \"No\"\nassert solution(\"11212\") == \"Yes\"\n"
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('100') == 'No'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '12'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"12\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n\"\n    \"5 -1\"\n) == \"12\"\nassert solution(\n    \"2\\n\"\n    \"3 5 -1\"\n) == \"8\"\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '12'\nassert solution('5') == '8'\nassert solution('4') == '4'\nassert solution('7') == '10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '8'\nassert solution('1') == '10'"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 5, -1]) == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 5 -1\n\n''') == '12\\n8\\n10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '8'\nassert solution('1') == '10'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '12'\n"
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 5 -1\n\n''') == '12'\nassert solution('''3\n2 5 -1\n\n''') == '8'\nassert solution('''3\n1 3 -1\n\n''') == '10'"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\""
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('c') == 'vowel'\nassert solution('d') == 'consonant'\nassert solution('e') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"vowel\"\nassert solution(\"a\") == \"vowel\"\nassert solution(\"b\") == \"consonant\"\nassert solution(\"c\") == \"consonant\"\n\n\"\"\"\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n"
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n\"\"\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BBBWW') == '1'"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''BWB\n''') == '1'\nassert solution('''BWB\nBWBBBWB\n''') == '2'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BWWBW') == '1'\nassert solution('BWWBWB') == '2'\nassert solution('BWWBWB') == '2'\nassert solution('BWWBW') == '1'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''BBBWW''') == '1'\nassert solution('''BWBWW''') == '1'\nassert solution('''BWBWBW''') == '2'\nassert solution('''WBBWBW''') == '2'\nassert solution('''WBBWBBW''') == '2'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nBBBWW\n''') == '1'\nassert solution('''\nWWWWW\n''') == '2'\nassert solution('''\nWWWWW\n''') == '1'\nassert solution('''\nBBBWW\n''') == '0'\nassert solution('''\nWWWWW\n''') == '0'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBBBBWW') == '2'\nassert solution('BBBBBBBBWW') == '3'\nassert solution('BBBBBBBBWW') == '0'\nassert solution('BBBBBBBBWWWWWWBBBBBBB') == '8'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BBBWW') == '1'\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == \"1\"\nassert solution('BBWBWW') == \"2\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WWWWBBBB\") == \"4\"\nassert solution(\"WWWWWWWWW\") == \"2\"\nassert solution(\"BBBWWWWWWWWWW\") == \"1\"\nassert solution(\"WWWWWWWWWWWWWWWWWWWW\") == \"0\"\n"
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBWWBWW') == '2'\nassert solution('BWBWWBWW') == '1'\nassert solution('BWBWBWWBWB') == '1'\nassert solution('BWBWWBWBWB') == '2'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 11') == 'No'\nassert solution('123 45') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 21') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 21\n''') == 'Yes', solution.__doc__\nassert solution('''\n2 12\n''') == 'No', solution.__doc__\nassert solution('''\n2 1\n''') == 'No', solution.__doc__\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('3 2') == 'No'\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 11\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 21') == 'Yes'\n\n---Output---\n\n## Sample Test 2"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1 2 2\") == \"Yes\"\nassert solution(\"1 2 2 3\") == \"No\""
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 21\\n\") == \"Yes\"\nassert solution(\"2 21\\n\") == \"No\"\n\n----\nsolution(sys.stdin)"
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\""
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"7\n3 1 4 1 5 9 2\"\"\") == \"4\"\nassert solution(\"\"\"5\n10 1 2 3 4\"\"\") == \"3\"\nassert solution(\"\"\"4\n1 2 5 1\"\"\") == \"4\"\nassert solution(\"\"\"5\n2 1 3 9 1\"\"\") == \"5\"\nassert solution(\"\"\"7\n2 1 4 1 5 9 2\"\"\") == \"6\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n3 1 4 1 5 9 2\n''') == '4'\n\nprint(solution('''\n2\n1 1\n'''))\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 5 2\\n') == '4'\nassert solution('7\\n5 3 1 6 4 2\\n') == '4'\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('0') == '0'"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == None\nassert solution('1') == '1'\nassert solution('7') == '4'\nassert solution('10') == '4'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('2') == '1'\nassert solution('1') == '0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '8'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '10'\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '4'\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0\") == \"1\\n\"\nassert solution(\"3\\n1\") == \"2\\n\"\nassert solution(\"3\\n2\") == \"0\\n\"\nassert solution(\"4\\n2\") == \"0\\n\"\nassert solution(\"5\\n3\") == \"0\\n\"\n"
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5\") == \"YES\", \"1, 3, 5, output: YES\"\nassert solution(\"2 4 6\") == \"NO\", \"2, 4, 6, output: NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1.5\") == \"NO\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 5 6') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('2 2 2') == 'NO'\nassert solution('3 5 8') == 'YES'\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'NO'\n\"\"\"\na, b, c = map(int, stdin.split())\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == 'YES', \"Sample case\"\nassert solution('5 6 3') == 'NO', \"Sample case\"\nassert solution('2 4 6') == 'NO', \"Sample case\"\n\"\"\""
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\""
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('6 4 2') == 'NO'"
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\\n\") == \"YES\"\nassert solution(\"5 3 2\\n\") == \"NO\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('27') == 'No'\nassert solution('4') == 'Yes'\nassert solution('55') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29') == 'Yes'\nassert solution('8') == 'No'\nassert solution('1') == 'Yes'\nassert solution('24') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('21') == 'Yes'\nassert solution('100') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('100100') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('29') == 'Yes'\nassert solution('33') == 'No'\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('29') == 'Yes'\nassert solution('28') == 'No'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"29\") == \"Yes\"\nassert solution(\"27\") == \"No\"\nassert solution(\"38\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('29') == \"Yes\"\nassert solution('28') == \"No\"\nassert solution('87') == \"Yes\"\nassert solution('88') == \"Yes\"\nassert solution('123') == \"No\"\n"
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"15\") == \"Yes\", \"First\"\nassert solution(\"24\") == \"No\", \"Second\""
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == 'Yes'\nassert solution('1') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5') == '1'\nassert solution('5 1 2 3 4 5') == '0'"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3\") == \"1\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3\") == \"1\""
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 4 1 5') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4 3') == '1'\nassert solution('5 3 2') == '2'\nassert solution('5 2 4') == '0'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 2 3') == '2'\nassert solution('4 1 1') == '2'\nassert solution('5 2 4') == '2'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('3 5 3') == '1'\n"
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 3 3\n1 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"5 3 3\n1 3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"5 3 3\n2 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"5 3 3\n3 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"5 3 3\n4 4 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"./sample_input.txt\") == \"Yes\"\nassert solution(\"./sample_input.txt\") == \"No\"\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == 'Yes'\n'''\n\nimport math\nfrom collections import deque\nclass Solution:\n    def solve(self, H, W, s):\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        "
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n###''') == 'Yes', 'Should print Yes'\n\nassert solution('''3 3\n.##''') == 'No', 'Should print No'\n\nassert solution('''2 2\n##''') == 'Yes', 'Should print Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"6 6\") == \"No\"\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n##.\\n###') == 'Yes'\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 1\") == \"No\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'Yes'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'Yes', 'Test #1'\nassert solution('10 10') == 'No', 'Test #2'\nassert solution('10 10') == 'Yes', 'Test #3'\nassert solution('20 20') == 'Yes', 'Test #4'\nassert solution('20 20') == 'No', 'Test #5'\n\"\"\"\n"
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == \"Yes\"\nassert solution('4 4') == \"Yes\"\nassert solution('1 10') == \"No\"\nassert solution('5 5') == \"Yes\"\nassert solution('5 5') == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"100 10 10\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"5 5 5\") == \"Yes\"\nassert solution(\"5 1 1\") == \"No\""
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 20 30\") == \"Yes\"\nassert solution(\"100 50 10\") == \"No\""
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"2 2 2\") == \"No\"\nassert solution(\"8 8 4\") == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 3 5') == 'No'\nassert solution('1 3 5') == 'No'\n\"\"\""
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"20 30 20\") == \"No\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 10 30') == 'Yes'\nassert solution('5 5 5') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 0 0') == 'Yes'\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"20 10 30\") == \"Yes\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"30 30 30\") == \"Yes\"\n"
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 10 10') == 'No'"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 1 1') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Left'\nassert solution(input()) == 'Balanced'\nassert solution(input()) == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('4 5 10 5') == 'Balanced'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Right'\nassert solution('1 2 3 4 5') == 'Balanced'\nassert solution('1 2 3 4 5 6') == 'Left'"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 2 3 4') == 'Right'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == 'Left'\nassert solution('4\\n') == 'Right'\nassert solution('3 4 7 1\\n') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"9 9 9 9\") == \"Balanced\"\nassert solution(\"3 4 7 1\") == \"Right\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 8 7 1''') == 'Left'\nassert solution('''10 3 6 1''') == 'Right'\nassert solution('''5 8 7 1''') == 'Right'\nassert solution('''1 8 7 1''') == 'Left'\nassert solution('''3 5 1 1''') == 'Left'\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"5 6 9 5\") == \"Right\"\nassert solution(\"1 2 3 4\") == \"Right\"\n"
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('4 5 8 7 1') == 'Right'\nassert solution('5 5 7 1') == 'Left'\nassert solution('1 5 7 1') == 'Left'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1') == '8'\nassert solution('2\\n1 1 0 1 0 0 0 1 0 1') == '10'\nassert solution('2\\n2 2 -1 -1 0 0 -1 0 0 -1') == '0'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == '8'\nassert solution(\"3\\n4 5 6 7 8 9 -2 -3 4 -2\") == '10'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 1 0 1 0 0 0 1 0 1\\n\"\n    \"3 4 5 6 7 8 9 -2 -3 4 -2\\n\"\n) == \"8\"\n\nprint(solution(\n    \"1\\n\"\n    \"0 0 1 1 1\\n\"\n    \"0 0 0 1 1\\n\"\n))\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"3\") == \"8\"\nassert solution(\"1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"8\"\nassert solution(\"5\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\\n\") == \"13\"\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '8'\nassert solution('3 4 5 6 7 8 9 -2 -3 4 -2') == '8'"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 0 1 0 1 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n4\n1 1 1 1 0 0 0 1 1 1\n3 2 3 4 3 4 -1 -2 -3\n''') == '12'\nassert solution('''\n5\n1 1 1 1 0 0 0 1 1 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '12'\nassert solution('''\n7\n1 1 1 1 1 1 1 0 1 1\n4 4 5 6 7 8 9 -2 -3 4 -2\n''') == '27'\nassert solution('''\n12\n1 1 1 1 1 1 1 1 1 1\n1 2 3 4 5 6 7 8 9 10\n''') == '12'"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '7'\nassert solution('3') == '7'\n"
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"3 4\") == \"No\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'Yes'\n\"\"\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n269-6650''') == 'Yes'\nassert solution('''4 5\n212-4556''') == 'No'\nassert solution('''5 6\n23-5614''') == 'No'\nassert solution('''9 9\n333-4411''') == 'Yes'\nassert solution('''8 8\n1111-1111''') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 4\n269-6650\"\"\") == \"Yes\"\nassert solution(\"\"\"1 2\n1\"\"\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"Yes\""
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n269-6650\\n') == 'Yes'\nassert solution('1 2\\n1 2\\n') == 'Yes'\nassert solution('3 3\\n3 3\\n') == 'No'\nassert solution('3 3\\n3 3\\n') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n', '269-6650') == 'Yes'\nassert solution('2 2\\n', '1234') == 'No'\nassert solution('1 1\\n', '8') == 'No'\nassert solution('4 3\\n', '2-5') == 'Yes'\nassert solution('4 2\\n', '80-90') == 'Yes'\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''A 2\nB 3\nS''') == \"Yes\"\nassert solution('''5\nA\nS''') == \"No\"\n"
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n\") == \"Yes\"\nassert solution(\"10 10\\n\") == \"Yes\"\nassert solution(\"1 1\\n\") == \"No\"\nassert solution(\"1 1\\n\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\") == \"1\"\nassert solution(\"3 2 3\") == \"0\"\nassert solution(\"3 2 3\") == \"0\"\nassert solution(\"3 2 3\") == \"0\"\nassert solution(\"3 2 3\") == \"0\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 6') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n\nNote: This question is the same as 3195: \"The Minimum Distance to the Middle of Two Arrays\"\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('5 3 2') == '2'\nassert solution('10 5 2') == '3'\nassert solution('5 5 3') == '1'\nassert solution('10 10 3') == '0'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('8 9 6') == '1'\nassert solution('6 9 9') == '3'\nassert solution('1 1 2') == '1'\nassert solution('1 2 2') == '0'\n\"\"\"\n\nW,a,b=map(int, input().split())"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 4\") == \"0\"\nassert solution(\"10 0 5\") == \"1\"\nassert solution(\"5 1 6\") == \"1\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 2') == '0'\nassert solution('4 5 2') == '1'\nassert solution('7 8 4') == '2'\nassert solution('8 7 2') == '3'\nassert solution('2 2 2') == '3'\n\n\"\"\""
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('15 4 5') == '2'\nassert solution('20 8 10') == '3'\nassert solution('2 1 4') == '1'"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1\\n') == '1'\n"
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('3 2 4') == '2'\nassert solution('4 3 2') == '2'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 2\") == \"3\"\nassert solution(\"2 3 5\") == \"3\"\nassert solution(\"1 2 5\") == \"5\"\nassert solution(\"1 5 2\") == \"2\"\nassert solution(\"10 9 3\") == \"3\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"3 1 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 5 3\") == \"3\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\nassert solution(\"5 5 3\") == \"3 4 5 6 7\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"6 3 1\") == \"1 3 6\"\nassert solution(\"3 8 4\") == \"3 4\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8 2') == '3 4 7 8'\nassert solution('5 4 4 4 3') == '3 4 5 6 7'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('1 2 1') == '1'\nassert solution('-1 -2 -3') == '-1 -2 -3'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('1 3 3') == '1'\nassert solution('-5 6') == '-5'\nassert solution('-9 -9') == '-9'\nassert solution('9 9') == '9'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 8 2') == '3 4 7 8'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('8 7 2') == '8'\nassert solution('8 7 6') == '7'\nassert solution('8 7 8') == '8'\nassert solution('8 7 9') == '7'\n"
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"10 3 10\") == \"10\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"5 5 5 5 5\") == \"5\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC', 'Error'\nassert solution('AtCoder Expert Contest') == 'ABC', 'Error'\nassert solution('AtCoder Master Contest') == 'ABC', 'Error'\nassert solution('AtCoder Grandmaster Contest') == 'ABC', 'Error'\nassert solution('AtCoder Infinitesimal Contest') == 'ABC', 'Error'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ABC\""
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder s Contest') == 'AXC'\nassert solution('AtCoder s Contest') == 'AXC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('AtCoder Beginner Contest') == 'ABC'\nassert solution('AtCoder s Contest') == 'AXC'\n'''\n\nimport sys"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"Wrong Answer\"\nassert solution(\"AtCoder s Contest\") == \"ABC\", \"Wrong Answer\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"Wrong Answer\"\n\n\"\"\""
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"ABC\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC'\n\n\"\"\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AtCoder s Contest') == 'AxC'\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Wrong Answer\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"Wrong Answer\"\nassert solution(\"AtCoder Beginner Contest 2\") == \"ABC\", \"Wrong Answer\"\nassert solution(\"AtCoder Beginner Contest 3\") == \"ABC\", \"Wrong Answer\"\nassert solution(\"AtCoder Beginner Contest 4\") == \"ABC\", \"Wrong Answer\"\n"
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\"\"\"\n\n\"\"\"\nRuntime: 280 ms, faster than 99.90% of Python3 online submissions for Shortest Bridge.\nMemory Usage: 23.2 MB, less than 95.95% of Python3 online submissions for Shortest Bridge.\n\"\"\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 1\") == \"YES\"\nassert solution(\"3 5 4\") == \"NO\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 4\") == \"YES\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 3 4') == 'NO'"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 5 4') == 'YES'\nassert solution('1 2 5 4') == 'NO'"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 4\n''') == 'YES', 'First'\nassert solution('''\n5 2 4\n''') == 'NO', 'Second'\nassert solution('''\n3 5 4\n''') == 'YES', 'Third'\n''')\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 5') == 'YES'\nassert solution('1 2 4') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == 'NO'\nassert solution('5 5 4') == 'YES'\n\"\"\""
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 3 5\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 5 5') == 'NO'\nassert solution('3 10 4') == 'YES'\nassert solution('1 5 4') == 'NO'\n"
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10\n2 5\n\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"\n5\n2 5\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 17') == '83'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100 17') == '83'\nassert solution('0 100') == '0'\nassert solution('1 1') == '1'\nassert solution('100 100') == '99'\nassert solution('100 -1') == '100'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('100\\n') == '83\\n'\nassert solution('5\\n') == '13\\n'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100 17') == '83'\nassert solution('10 1') == '10'\nassert solution('1 2') == '1'\nassert solution('1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7\") == \"83\"\nassert solution(\"1 5\") == \"83\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"5 20\") == \"83\"\nassert solution(\"0 5\") == \"83\"\n\nimport math\n\nX, T = map(int, input().split())\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100 17') == '83'\nassert solution('1 10') == '9'\nassert solution('2 3') == '2'\nassert solution('5 2') == '3'\nassert solution('3 3') == '3'"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('4 5') == '3'\nassert solution('1 4') == '4'\nassert solution('10 10') == '10'"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100 17\\n') == '83'\nassert solution('1 1\\n') == '1'\nassert solution('10 10\\n') == '10'\nassert solution('10 100\\n') == '10'\nassert solution('100 100\\n') == '100'\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 5\") == \"8\"\nassert solution(\"2 100\") == \"92\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100 17') == '83'\nassert solution('1 1') == '1'\nassert solution('2 3') == '3'\nassert solution('2 1000000000') == '2000000000'\nassert solution('2 1000000000 1') == '2000000000'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1000000000000000000\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1000000000000000000', \"You failed on the first test!\"\nprint('Test #1: OK')\n\nassert solution('3') == '-1', \"You failed on the second test!\"\nprint('Test #2: OK')\n\nassert solution('4') == '-1', \"You failed on the third test!\"\nprint('Test #3: OK')\n\nassert solution('5') == '-1', \"You failed on the fourth test!\"\nprint('Test #4: OK')\n\nassert solution('6') == '-1', \"You failed on the fifth test!\"\nprint('Test #5: OK')"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1000000000000000000'\nassert solution('2') == '1000000000000000000'\nassert solution('2') == '1000000000000000000'\n\"\"\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n\") == \"1\"\nassert solution(\"3\\n1\\n\") == \"1\"\nassert solution(\"4\\n1\\n\") == \"1\"\nassert solution(\"5\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"1000000000 1000000000\") == \"1000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nprint(solution())"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '123', solution('3')\nassert solution('2') == '123', solution('2')\n"
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('3\\n10000000000 1000000000') == '1000000000000000000'\nassert solution('4\\n10000000000 1000000000') == '-1'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == 'Yes'\nassert solution('500') == 'Yes'\nassert solution('1000') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == \"Yes\", 'First'\nassert solution(2) == \"No\", 'Second'\nassert solution(3) == \"No\", 'Third'\nassert solution(4) == \"Yes\", 'Fourth'\nassert solution(5) == \"Yes\", 'Fifth'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('101') == 'No'\n\"\"\"\n\nn = int(input())\na = int(input())\n\ni = 0\nwhile n - i >= a:\n    i += 1\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0\\n') == 'Yes'\nassert solution('2\\n1\\n') == 'No'\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n1\n''') == 'Yes', '3'\nassert solution('''4\n0\n3\n''') == 'No', '4'\nassert solution('''100\n25\n27\n''') == 'Yes', '100'\n'''"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2018\") == \"Yes\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'\nassert solution('1500') == 'No'\nprint(solution(input()))\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('5') == 'Yes'"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2018\\n218') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('10') == 'No'\nassert solution('10') == 'Yes'\n\"\"\""
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') =='safe'\nassert solution('10 10 10') == 'dangerous'\n\n---Output---\nThe program has reached its end.\n\"\"\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 6\") == \"dangerous\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('6 3 6') == 'dangerous'\nassert solution('0 3 6') == 'dangerous'\nassert solution('0 0 0') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 5') =='safe'\nassert solution('3 3 5') == 'dangerous'\nassert solution('5 3 6') == 'dangerous'\nassert solution('4 3 5') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n6 3 6\n''') =='safe'\n\nassert solution(\n'''\n1 4 7\n''') == 'dangerous'\n\nassert solution(\n'''\n7 2 3\n''') == 'dangerous'\n\nassert solution(\n'''\n7 7 7\n''') == 'dangerous'\n\nassert solution(\n'''\n1 4 1\n''') == 'dangerous'"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 6') =='safe'\nassert solution('1 2 3') == 'dangerous'\nassert solution('1 2 2') == 'dangerous'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'dangerous'\nassert solution('2 3') =='safe'\nassert solution('2 2') =='safe'\nassert solution('3 2') == 'dangerous'"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 6') =='safe'\n"
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"3 5 6\") == \"dangerous\"\nassert solution(\"2 3 6\") == \"dangerous\"\nassert solution(\"3 6\") == \"dangerous\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"6\"\nassert solution(\"7\") == \"9\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '9'\nprint(solution('10'))\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"123\") == \"9\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('10\\n') == '9'\nassert solution('10\\n') == '9'\nassert solution('100\\n') == '99'\nassert solution('100\\n') == '99'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"9\"\nassert solution(\"3\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n') == '9', solution('10\\n')\nassert solution('100\\n') == '100', solution('100\\n')\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '9'\nassert solution('1234') == '1234'"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10\n''') == '9'\nassert solution('''1\n''') == '1'\nassert solution('''5\n''') == '25'\nassert solution('''6\n''') == '36'\nassert solution('''8\n''') == '64'\n"
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"10\"\n) == \"9\""
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n3 2''') == '10'\nassert solution('''3\n2 3\n1 1\n3 2''') == '10'\nassert solution('''4\n2 3\n1 1\n3 2\n''') == '11'\nassert solution('''5\n2 3\n1 1\n3 2\n4 5\n''') == '14'\nassert solution('''6\n2 3\n1 1\n3 2\n4 5\n6 7\n''') == '16'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"2\") == \"5\"\nassert solution(\"2 1\") == \"3\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == '10'\nassert solution('10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10') == '100'\nassert solution('4\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('2\\n2 2') == '0'\nassert solution('5\\n2 2\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3') == '10'"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n2 3\n1 1\n3 2\n\"\"\") == \"10\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    2 3\n    1 1\n    3 2\n    5 4\n    7 6\n    ''') == '10'\nassert solution('''\n    7\n    2 3\n    1 1\n    3 2\n    5 6\n    7 4\n    ''') == '14'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3\\n1 1\\n3 2\\n') == '10'\nassert solution('3\\n5 4\\n1 1\\n2 2\\n') == '7'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 2\") == \"10\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"10\"\nassert solution(\"1 1\") == \"10\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"5 5\") == \"17\"\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 3\n1 1\n3 2\n''') == '10'\nassert solution('''\n6\n2 2\n1 1\n4 3\n2 2\n3 2\n5 1\n6 3\n''') == '18'\n"
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '10'\nassert solution('2') == '10'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('abc') == 'no'\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('C++') == 'no'\nassert solution('aaa') == 'yes'"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"abcde\") == \"yes\"\nassert solution(\"abcdeabc\") == \"no\"\nassert solution(\"abcabcde\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"none\") == \"no\"\nassert solution(\"\") == \"no\"\nassert solution(\"1\") == \"no\""
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == 'yes'"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"yes\"\nassert solution(\"ACD\") == \"yes\"\nassert solution(\"123\") == \"yes\"\nassert solution(\"def\") == \"no\"\nassert solution(\"bac\") == \"no\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"\") == \"no\"\nassert solution(\"a\") == \"yes\"\nassert solution(\"ab\") == \"no\"\nassert solution(\"aabc\") == \"yes\"\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\""
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\n\nimport os\nimport sys\n\nprint(os.getpid())\nprint(sys.path)\n\nclass Solution:\n    def __init__(self):\n        self.s = \"\"\n\n    def __repr__(self):\n        return f\"<SOLUTION {self.s}>\"\n\n    def __str__(self):\n        return f\"<SOLUTION {self.s}>\"\n\n    def solution(self, stdin: str) -> str:\n        self.s = stdin\n        return self.s\n"
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abcdefgh') == 'yes'\nassert solution('abcdefghi') == 'no'\nassert solution('Hello') == 'yes'"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('4\\nWEEWE') == '1'\nassert solution('3\\nWWWE') == '1'\nassert solution('2\\nWE') == '2'\nassert solution('1\\nWE') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('2\\nAAB') == '1'\nassert solution('2\\nAAAB') == '2'\nassert solution('4\\nEAEB') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"4\\nWWEEW\") == \"1\"\nassert solution(\"3\\nWWEEW\") == \"1\"\nassert solution(\"2\\nWEEW\") == \"0\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nWEEWW\") == \"1\""
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"8\") == \"3\"\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('6\\nNEEWNESW') == '2'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\n"
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"7 5\") == \"3\\n3\\n2\\n1\\n1\\n1\\n2\"\nassert solution(\"4 4\") == \"4\\n4\\n2\\n2\""
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4') == '2\\n2\\n1\\n1'\nassert solution('6 4\\n1 3\\n2 4\\n3 6\\n4 5\\n5 6\\n6 7') == '4\\n4\\n2\\n2'"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == '2'\nassert solution('''3 5\n1 2\n1 3\n2 4\n2 5\n3 4''') == '3'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == '2'\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == '1'\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\") == '4'"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2 1\\n3 4\\n') == '2'\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 4\") == \"1\"\n"
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 6\") == \"4\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n10\n15\n\n''') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '25'\n\nimport sys\n\nn = int(sys.stdin.readline())\na = []\nfor _ in range(n):\n    s = int(sys.stdin.readline())\n    a.append(s)\na.sort(reverse=True)\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"25\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"25\"\n\n\"\"\""
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"5\") == \"30\"\nassert solution(\"15\") == \"0\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"25\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '25'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"30\"\n"
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('abc') == '1'\nassert solution('aabc') == '2'\nassert solution('abbc') == '1'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nabcd\") == \"2\"\nassert solution(\"10\\naaabbbbca\") == \"3\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nabcd') == '3'\nassert solution('10\\nabcd') == '2'\n\nimport sys"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\naabbca\\n') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"abc\") == \"2\"\nassert solution(\"aab\") == \"2\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"3\"\nassert solution(\"6\\n\") == \"2\""
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('7') == '0'\nassert solution('8') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nababbca\") == \"2\"\nassert solution(\"5\\naaaaaa\") == \"1\"\nassert solution(\"5\\naabbca\") == \"0\"\nassert solution(\"6\\n\") == \"0\"\nassert solution(\"3\\nabc\") == \"0\"\n"
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n\na\n\na''') == '1'\nassert solution('''5\n\nbc\n\na''') == '2'\nassert solution('''8\n\naaaa\n\naabc\n\naacb\n\naadc\n\naaa\n\na\n\naaaaaaaa\n\naaaaaaaa''') == '2'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Sunny\\n') == 'Cloudy'\nassert solution('Cloudy\\n') == 'Sunny'\nassert solution('Sunny\\n') == 'Sunny'\n\"\"\""
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\n\nsolution(\"Cloudy\")\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Sunny') == 'Cloudy'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\n\n\"\"\"\n\n\nimport re\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\""
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Sunny\nCloudy\nRainy\nSunny\nCloudy\nRainy\nSunny\nCloudy\nRainy\n''') == \"Cloudy\"\nassert solution('''Sunny\nSunny\nRainy\nSunny\nCloudy\nSunny\nCloudy\nRainy\n''') == \"Cloudy\"\nassert solution('''Rainy\nSunny\nCloudy\nRainy\nSunny\nCloudy\nRainy\n''') == \"Cloudy\"\nassert solution('''Sunny\nCloudy\nRainy\nSunny\nCloudy\nSunny\nCloudy\nRainy\n''') == \"Cloudy\"\nassert solution('''Sunny\nCloudy\nRainy\nSunny\nCloudy\nSunny\nCloudy\nRainy\n''') == \"Cloudy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Cloudy\"\n"
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\n\n\"\"\"\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"12\", 'Wrong answer'\nassert solution(\"1 1 1\") == \"1\", 'Wrong answer'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 120\\n') == '119', solution('3 5 120\\n')\nassert solution('5 3 120\\n') == '120', solution('5 3 120\\n')\nassert solution('2 5 120\\n') == '119', solution('2 5 120\\n')\nassert solution('20 10 120\\n') == '120', solution('20 10 120\\n')\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('14 13 21') == '111'"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('2 20 100') == '200'\nassert solution('1 20 100') == '100'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"7 17 120\") == \"119\"\n\n\"\"\"\n\nimport math\n\nstdin = input().split()\nN = int(stdin[0])\nA = int(stdin[1])\nB = int(stdin[2])\n\nprint(math.ceil((N * A) + (N * B) / 2))\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('20 20 120') == '119'\nassert solution('10 2 10') == '10'\n"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 6 100') == '100'\nassert solution('5 5 0') == '0'\nassert solution('2 5 0') == '0'\nassert solution('1 1 0') == '0'"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 17 120') == '119'\n\n--------------------------------------\n\nNumber Pattern\n\nimport math"
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 17 120\") == \"119\""
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 17 120') == '119','sample test fail'\nassert solution('3 8 7') == '15','sample test fail'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == str(3800)\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1900'\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"3800\"\nassert solution(\"\"\"\n2 1\n\"\"\") == \"3700\"\nassert solution(\"\"\"\n10 1\n\"\"\") == \"3800\"\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '3800'\nassert solution('1 100') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"3 3\") == \"500\"\n\"\"\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1900'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\n\"\"\"\nn, m = list(map(int, stdin.split()))"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '3800'\n"
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"3800\""
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"4 2\") == \"5248\"\n\"\"\"\n\nimport sys\nimport math\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abcdefg\") == \"e\"\nassert solution(\"aaaaaaaaa\") == \"a\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('a') == 'b'\nassert solution('aaaa') == 'b'\nassert solution('aabb') == 'a'\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\"\"\""
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"b\"\n\n'''\n\nimport re"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\nassert solution('atcoderregularcontest') == 'b'\n\"\"\"\n\nimport sys\nfrom collections import Counter\nimport itertools\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('bcdabc') == 'c'\nassert solution('a') == None\nassert solution('pqr') == None\nassert solution('a') == None\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"atcoderregularcontest1\") == None\nassert solution(\"atcoderregularcontest2\") == \"a\"\nassert solution(\"atcoderregularcontest3\") == \"c\"\nassert solution(\"atcoderregularcontest4\") == \"d\"\n"
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('z') == 'None'\nassert solution('b') == 'b'\nassert solution('z') == 'None'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 4 4 3\n''') == '4 3'\nassert solution('''2\n4 4 3\n''') == '3 4'\nassert solution('''5\n2 4 4 3\n''') == '3 4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '7 8 9 10'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('8') == '2'\nassert solution('16') == '3'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 4 3') == \"4 3 4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'N'\nassert solution('4') == '4'\nassert solution('2 4 4 3') == '4 3 4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2 3 4''') == '4'\nassert solution('''4\n1 1 1 1''') == '2'\nassert solution('''3\n2 1 2''') == '3'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['4', '2', '4', '3']) == '4 3 3 4'\nassert solution(['2', '4', '4', '3']) == '4 3 3 4'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4 4 4 3') == '4\\n3\\n3\\n4\\n'\nassert solution('4\\n2 3 4 5') == '3\\n4\\n4\\n5\\n'\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"3\\n3\\n3\\n4\"\nassert solution(\"6\") == \"4\\n4\\n4\\n4\\n4\\n4\"\n"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3 4 4 4 4'\nassert solution('3') == '4 3 3'\nassert solution('10') == '4 3 3 4 4'\n\n\"\"\"\n\nfrom math import floor"
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"4\\n3\\n3\\n4\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('6') == '0'\nassert solution('10') == '1'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n3 1 2 4 2 1') == '2'\nassert solution('4\\n1 2 3 4') == '0'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('10') == '0'\n\nsolution('10')"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2 4 2 1\") == \"2\"\nassert solution(\"5 3 2 4 1 5\") == \"5\"\nassert solution(\"5 2 4 1 5 3\") == \"1\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 2 4 2 1') == '2'\nprint(solution('3 1 2 4 2 1'))\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('6 1 2 4 2 1') == '2'\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\n\n\"\"\"\nimport itertools"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2 3 4 5\n''') == '2', '3'\n\nassert solution('''\n4\n1 1 2 1\n''') == '1', '3'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8', \"Wrong\"\nassert solution('7') == '4', \"Wrong\"\nassert solution('5') == '1', \"Wrong\"\nassert solution('10') == '5', \"Wrong\"\nassert solution('6') == '1', \"Wrong\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"8\", \"Testing\"\nassert solution(\"4\") == \"7\", \"Testing\"\nassert solution(\"5\") == \"1\", \"Testing\"\nassert solution(\"8\") == \"8\", \"Testing\"\nassert solution(\"9\") == \"10\", \"Testing\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '8'\nassert solution('10') == '8'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\nassert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\nassert solution('''\n2\n3\n2\n''') == '3'\nassert solution('''\n1\n3\n2\n''') == '2'\nassert solution('''\n1\n5\n1\n''') == '1'\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"8\"\nassert solution(\"8\") == \"8\"\nassert solution(\"15\") == \"24\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 7, 1, 2, 5, 10]) == 8\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3\n1\n''') == '4'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n2\n100''') == '2'\nassert solution('''2\n2\n2\n200''') == '1'\nassert solution('''2\n2\n2\n200''') == '0'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n4\n5\n20\n''') == '2'\n\nassert solution('''\n2\n1\n10\n''') == '1'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n1000\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2000\") == \"2\"\nassert solution(\"2\\n2\\n2\\n1000\") == \"2\"\nassert solution(\"2\\n2\\n2\\n2000\") == \"2\""
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 -3 2') == 'No'\nassert solution('1 -2 3') == 'Yes'\nassert solution('1 2 3') == 'Yes'\nassert solution('1 2 2') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 3, 2]) == 'Yes'\nassert solution([-1, 3, 2]) == 'No'\nassert solution([1, -3, 2]) == 'Yes'\nassert solution([-1, -3, 2]) == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('10 5 2') == 'No'\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('1 3 3') == 'No'\nassert solution('4 5 6') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 2 1') == 'Yes'\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == \"Yes\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 4 3\") == \"No\"\nassert solution(\"-2 -1 -3\") == \"Yes\"\nassert solution(\"-2 4 -3\") == \"No\"\nassert solution(\"-1 -1 2\") == \"No\"\n"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('2 3 1') == 'No'"
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2\") == \"Yes\""
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == 'Yes'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\") == \"9\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1000 120 100 140\") == \"9\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1000') == '9'\nassert solution('3 1') == '3'\nassert solution('3 10') == '3'\nassert solution('10 20') == '3'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1000\\n120\\n100\\n') == '9'\nassert solution('3 1000\\n120\\n100\\n140\\n') == '6'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1000\n120\n100\n140\n\n\"\"\") == \"9\"\nassert solution(\"\"\"\n2 10\n10\n20\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 20\n10\n10\n\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"2 3 2\") == \"2\"\nassert solution(\"2 3 2 2\") == \"4\"\nassert solution(\"3 3 3\") == \"6\"\nassert solution(\"10 5 4 3 2\") == \"9\"\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('3 1000\\n10\\n20\\n30\\n') == '1'\nassert solution('3 3\\n1\\n2\\n3\\n') == '3'\nassert solution('5 20\\n14\\n14\\n15\\n20\\n') == '2'\nassert solution('5 20\\n1\\n2\\n3\\n4\\n5\\n') == '3'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\n"
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('3 2\\n1\\n2\\n') == '2'\n\"\"\""
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1000\") == \"9\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"10 10\") == \"5\""
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\napple\\norange\\napple\\n') == '2'\nassert solution('3\\napple\\norange\\napple\\n') == '2'"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\napple\norange\napple\n''') == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n\nimport sys\nsys.setrecursionlimit(10**7)"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2100\\n1500\\n2700\\n1500\\n2700\\n1500\\n2700\\n1500\\n2700') == '2 2'\nassert solution('2\\n2100\\n1500\\n2700\\n1500\\n2700\\n1500\\n2700\\n1500\\n2700') == '2 2'\nassert solution('3\\n2100\\n1500\\n2700\\n1500\\n2700\\n1500\\n2700\\n1500\\n2700') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''\n5\n2000 1000 2000 2000 2000\n''') == '3 3'\nassert solution('''\n6\n2000 2000 2000 3000 3000 4000\n''') == '3 2'\nassert solution('''\n7\n3000 4000 7000 7000 7000 3000\n''') == '3 1'\nassert solution('''\n8\n3000 3000 3000 3000 3000 3000 3000\n''') == '3 3'\n'''\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2100 2500 2700 2700\n''') == '2 2'\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\\n\") == \"2 2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"3 3\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2100 2500 2700 2700') == '2 2'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nmax_n = max(a)\nmin_n = min(a)"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"5\") == \"2 2\"\n"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '2 2'\n\n###"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '2 2'"
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\""
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('o') == '700'\nassert solution('x') == '900'"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xoo\") == \"900\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ooxx\") == \"2000\"\nassert solution(\"xo\") == \"1200\"\nassert solution(\"o\") == \"700\"\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('o') == '700'\nassert solution('x') == '700'\nassert solution('ooo') == '900'\nassert solution('ooxx') == '700'\nassert solution('xooxx') == '700'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xox') == '700'\nassert solution('oox') == '900'\nassert solution('xoxo') == '900'\nassert solution('xoox') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '900'\nassert solution('oox') == '900'\nassert solution('xxo') == '900'\nassert solution('xxx') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('o') == '700'\nassert solution('x') == '700'\nassert solution('ox') == '900'\nassert solution('xx') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('xoxo') == '900'\nassert solution('ooxx') == '800'"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\nassert solution('oo') == '900'\nassert solution('xx') == '900'\nassert solution('xxxx') == '900'\n"
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n\"\"\""
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D D') == 'D'\nassert solution('H H H') == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"H\"\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'H'\n"
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D D\") == \"D\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('2212') == '1+2+2+2=7'\nassert solution('1212') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('0102') == '1-2+2-2=7'\nassert solution('0013') == '0+2+3-1=7'\nassert solution('0201') == '0+1+2+3-1=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1+2+3+4=7''') == '1+2+3+4=7'\nassert solution('''0+2+3+4=7''') == '0+2+3+4=7'\nassert solution('''9+2+3+4=7''') == '9+2+3+4=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABCD') == \"1+2+2+2=7\"\nassert solution('1222') == \"1+2+2+2=7\"\nassert solution('98877') == \"1+2+2+2=7\"\nassert solution('335923') == \"1+2+2+2=7\"\nassert solution('111111111111111111111111') == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1112') == '1+2=3'\nassert solution('1011') == '1-1=2'\nassert solution('11') == '1+1=2'\nassert solution('10') == '1-1=1'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1+2+2+2=7') == '1+2+2+2=7'\nassert solution('1-2-2-2=7') == '1-2-2-2=7'\nassert solution('1-2+3+4=7') == '1-2+3+4=7'\nassert solution('1-2+3-4=7') == '1-2+3-4=7'\nassert solution('1-2-3+4=7') == '1-2-3+4=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1222''') == '1+2+2+2=7'\nassert solution('''12123''') == '1-2+3-2=7'\nassert solution('''121232''') == '1+2-3+2-2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABCD\") == \"1+2+2+2=7\"\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('12233') == '1+2+3+3=7'\nassert solution('1122') == '1+1+1+2=7'\n"
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"1+2+3=6\"\nassert solution(\"1223\") == \"1+2+3=6\"\nassert solution(\"122356\") == \"1+2+3=6\"\nassert solution(\"122345\") == \"1+2+3=6\"\nassert solution(\"123456\") == \"1+2+3=6\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 1 2 2\n\n\"\"\") == \"2 2 0 0 0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2 1 1\\n2 1 1\\n1 1 1\\n\") == \"2 2 0 0 0\"\nassert solution(\"5\\n1 1 2 2\\n2 1 1\\n3 1 1\\n4 2 2\\n5 2 2\\n\") == \"3 2 1 0 0 0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1 2 2''') == '2 2 0 0 0'"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2 2 0 0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"2 2 0 0 0\"\n"
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2\\n2\\n0\\n0\\n0'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4'\nassert solution('15') == '6'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\".\\input\\input_01.txt\") == \"3\"\nassert solution(\".\\input\\input_02.txt\") == \"2\"\nassert solution(\".\\input\\input_03.txt\") == \"1\"\nassert solution(\".\\input\\input_04.txt\") == \"6\""
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\nassert solution(\"15\") == \"14\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"6\"\nassert solution(\"6\") == \"3\"\nassert solution(\"15\") == \"9\"\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '3'\n"
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1118\") == \"Yes\""
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1111') == 'Yes'\nassert solution('1000') == 'No'\nassert solution('876') == 'Yes'"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1118') == 'Yes', 'Test 1 Failed'\nassert solution('1112') == 'No', 'Test 2 Failed'\nassert solution('11111') == 'No', 'Test 3 Failed'\nassert solution('11111') == 'Yes', 'Test 4 Failed'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes','solution needs to return \"Yes\"'\nassert solution('3120') == 'No','solution needs to return \"No\"'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1118') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1000') == 'No'\nassert solution('12345') == 'No'\nassert solution('91231') == 'Yes'\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1018') == 'No'\nassert solution('1234') == 'Yes'"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"32\") == \"No\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1233\") == \"Yes\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n\n''') == '3'"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 1, 5, 2, 4, 3, 6]) == \"3\""
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6\\n') == '3'\nassert solution('3\\n1 1\\n2 3\\n3 5\\n') == '1'\nassert solution('1\\n1 1\\n2 3\\n3 5\\n') == '2'\nassert solution('2\\n1 5\\n2 4\\n3 6\\n') == '0'\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\n\n'''\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '3'"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nassert solution(\"3\\n1 2 5\\n1 4 3\\n1 3 2\") == \"2\"\nassert solution(\"3\\n3 1 5\\n3 4 3\\n3 2 2\") == \"1\"\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '0'\nassert solution('4') == '0'\n'''\n"
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('10') == '12'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"C D\") == \">\"\nassert solution(\"E F\") == \"=\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"X Y\") == \">\"\nassert solution(\"A Z\") == \"=\"\nprint(\"=====HW2_1_passed=====\")\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"<\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"<\""
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution(\"A D E A\")) == \"> =\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A B\") == \"<\"\nassert solution(\"A C\") == \">\"\nassert solution(\"A D\") == \"=\"\nassert solution(\"A E\") == \"<\"\nassert solution(\"A F\") == \">\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A B') == '<'\n\n\"\"\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A A\") == \">\nprint(solution(\"A A\"))\nprint(solution(\"A A\") == \"=\")\nprint(solution(\"B A\") == \"<\")\nprint(solution(\"B A\") == \">\")\nprint(solution(\"A B\") == \"=\")\nprint(solution(\"B A\") == \"<\")\nprint(solution(\"B A\") == \">\")\nprint(solution(\"B B\") == \"=\")\nprint(solution(\"A A\") == \"<\")\nprint(solution(\"B A\") == \">\")\nprint(solution(\"A A\") == \"=\")\nprint(solution(\"B A\") == \"<\")\nprint(solution(\"B A\") == \">\")\nprint(solution(\"A B\") == \"=\")\nprint(solution(\"B A\") == \"<\")\nprint(solution(\"B A\") == \">\")\n\"\"\"\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A B') == '<'\nassert solution('A D') == '<'\nassert solution('B A') == '>'\nassert solution('B D') == '>'\nassert solution('A E') == '='\n"
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A B\") == \"<\", \"Should be <.\"\nassert solution(\"A A\") == \"=\", \"Should be =.\"\nassert solution(\"B B\") == \">\", \"Should be >.\""
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1#2#1'\nprint(solution(input()))"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"123\", solution(\"2 3\")\nassert solution(\"3 5\") == \"11211\", solution(\"3 5\")\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"3 5\") == \"1#2#1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"4 5\") == \"1112\""
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"11211\"\n\n'''\n\nimport sys"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"11211\", \"Test 1 Failed\"\n\n-----\nSample Input\n5 3\n....\n....\n\n-----Sample Output\n1#2#1\n1#2#1\n11211\n1#2#1\n1#2#1\n\nExplanation\nThe first line contains the height and width of the H x W grid.\nThe second line contains H strings, each of which contains W characters.\nThe i-th character in the i-th line of the second line is the i-th character in the corresponding square of the H x W grid.\nIn the third line, there are 1 bomb squares adjacent to the empty square.\nSimilarly, in the fourth line, there are 1 bomb squares adjacent to the empty square.\nAnd so on.\n\nThe i-th line of the fifth line, contains i x i strings, each of which contains i characters.\nThe i-th character in the i-th line of the fifth line is the i-th character in the corresponding square of the i x i grid.\nThus, we print the first line of the fifth line.\n\nFor example, in the first line of the second line, the i-th character is the i-th character in the corresponding square of the H x W grid.\n\nH: height of the H x W grid\nW: width of the H x W grid\nS: size of the string\nT: H x W grid\n\nH: height of the H x W grid\nW: width of the H x W grid\nS: size of the string\nT: H x W grid\n\nH: height of the H x W grid\nW: width of the H x W grid\nS: size of the string\nT: H x W grid\n\nH: height of the H x W grid\nW: width of the H x W grid\nS: size of the string\nT: H x W grid\n\nH: height of the H x W grid\nW: width of the H x W grid\nS: size of the string\nT: H x W grid\n\nThe i-th character in the i-th line of the H x W grid is the i-th character in the corresponding square of the H x W grid.\n\n-----Constraints-----\n - 1 \\leq H,W \\leq 50\n - S_i is a string of length W consisting of # and..\n\n-----Input-----\nInput is given from Standard Input in the following format:  \nH W\nS_1\n:\nS_H\n\n-----Output-----\nPrint the H strings after the process.\n\nThe i-th line should contain a string T_i of length W, where the j-th character in T_i corresponds to the square at the i-th row from the top and j-th row from the left in the grid (1 \\leq i \\leq H, 1 \\leq j \\leq W).  \n\nThe i-th character in T_i should be the character corresponding to the empty square at the i-th row from the top and j-th row from the left in the grid.\n\nThe following rules must be followed:\n    - If there are no bomb squares adjacent to the empty square, print #.\n    - If there is at least one bomb square adjacent to the empty square, replace. with 1.\n\nFor example, let us observe the empty square at the first row from the top and first column from the left.\n\nThere is one bomb square adjacent to this empty square: the square at the second row and second column.\n\nThus, the. corresponding to this empty square is replaced with 1.\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"11211\"\nassert solution(input()) == \"11211\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"4 5\") == \"11211\"\nassert solution(\"5 5\") == \"11211\"\nassert solution(\"10 10\") == \"123456789101112\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"5 5\") == \"1#2#1\"\nassert solution(\"10 10\") == \"1#2#3\"\nassert solution(\"20 20\") == \"1#2#1\"\nassert solution(\"15 20\") == \"1#2#2\"\n"
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n\n''') == '11211'"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 2 100\") == \"2\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"2 2 5\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 5\") == \"3\"\nassert solution(\"2 3 4\") == \"2\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n\") == \"3\"\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\nassert solution('''3 4 300\n60 90 120\n80 150 80 150\n''') == '4'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\\n\") == \"3\"\nassert solution(\"4 6 240\\n60 90 120\\n80 150 80 150\\n\") == \"4\"\nassert solution(\"3 2 240\\n60 90 120\\n80 150 80 150\\n\") == \"0\"\nassert solution(\"3 4 240\\n1 2 3\\n1 2 3\\n1 2 3\\n\") == \"2\"\nassert solution(\"1 2 3\\n4 5 6\\n1 2 3\\n1 2 3\\n\") == \"0\"\n\n---\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"5 5 100\") == \"5\"\nassert solution(\"3 4 240\") == \"3\""
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\nassert solution('''\n3 4 60\n80 90 120\n150 150 80 150\n''') == '1'\n'''\n"
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 240\\n60 90 120\\n80 150 80 150\\n') == '3'\nassert solution('2 3 300\\n10 20 50\\n60 10 20 50\\n') == '2'\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1500 2000 1600 3 2\n''') == \"7900\"\nassert solution('''\n2 2000 800 2 2\n''') == \"2800\"\nassert solution('''\n2000 2000 800 2 2\n''') == \"18800\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nprint(\"\\u2713\") if solution(\"1500 2000 1600 3 2\") == \"7900\" else print(\"\\u2717\")\nprint(\"\\u2713\") if solution(\"1500 2000 1600 3 2\") == \"7900\" else print(\"\\u2717\")\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1500 2000 1600 3 2''') == '7900'\nassert solution('''1500 1500 1500 300 2''') == '295000'\nassert solution('''1500 1500 1500 300 2''') == '295000'\nassert solution('''1500 1500 1500 300 2''') == '295000'\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"5000 10000 1500 2000 1600 3 2\") == \"7900\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A 5 B 4\") == \"80\"\nassert solution(\"A 15 B 8\") == \"126\"\nassert solution(\"A 10 B 8\") == \"142\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('10 50 30 100 2') == '105'"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 3 2\") == \"7900\""
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1\"\n"
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 1 1\") == \"2\"\nassert solution(\"5 5 3 1\") == \"6\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('10') == '2'\nassert solution('6') == '4'"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('12') == '6'\nassert solution('18') == '6'\nassert solution('25') == '8'\nassert solution('49') == '9'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('10') == '0'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('12') == '12'\nassert solution('15') == '15'\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"4\"\n\"\"\"\n\nfrom math import factorial"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('12') == '4'\nassert solution('2') == '0'\nassert solution('3') == '1'\n\n===================================================================================================================\n\n\"\"\"\n\nimport math\n\nn = int(input())\ndiv = 0\nfor i in range(1, int(math.sqrt(n)) + 1):\n    if n % i == 0:\n        div += 2\nprint(div)\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"24\") == \"4\"\nassert solution(\"27\") == \"3\"\nassert solution(\"100\") == \"3\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3''') == '4'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '4'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '99'\nassert solution('10000') == '99'\nassert solution('100000') == '99'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '9'\n\"\"\"\n\nstdin = input()\nn = int(stdin)"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"8\"\nassert solution(\"9\") == \"9\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('100') == '99'\nassert solution('1000000000') == '9999999999'\nassert solution('1000000000.2') == '1000000000.3'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"9\""
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('7') == '7'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('1000000') == '99999'"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"9\""
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '9'\n"
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '9'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == \"3\"\nassert solution('''1\n1\n1\n1''') == \"4\"\nassert solution('''6\n12\n10\n8\n6\n10\n4''') == \"4\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2', solution\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('2\\n12\\n12') == '1'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"./kagami-mochi/input.txt\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n10\n8\n8''') == '3'\nassert solution('''2\n5\n6\n7\n8\n8''') == '4'\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\nassert solution(\"4\\n20\\n10\\n8\\n6\") == \"3\"\nassert solution(\"4\\n10\\n8\\n6\") == \"1\""
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n8\\n10\") == \"3\"\nassert solution(\"2\\n4\\n3\\n5\") == \"2\"\n"
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('3\\n10\\n8\\n6') == '2'\nassert solution('5\\n15\\n20\\n10\\n5') == '4'\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\n\ns = input().strip()"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '26'\n\n\"\"\""
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('QWERTYASDFZXCV') == \"5\"\nassert solution('QWERTYASDFZXCVA') == \"4\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\nassert solution
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'"
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n\nSample Test case\nInput\nQWERTYASDFZXCV\nOutput\n5\n\n\n\"\"\""
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == 'ASDFZ'\nassert solution('ZYXWVUTSRQPONMLKJIHGFEDCBA') == 'ZYXWVUTSRQPONMLKJIHGFEDCBA'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n8 12 40\\n') == '2'\nassert solution('4\\n10 20 30\\n') == '3'"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\n\"\"\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n8 12 40') == '2'\nassert solution('3\\n8 12 40\\n') == '2'\nassert solution('3\\n8 12 40\\n8 12 40') == '2'\nassert solution('3\\n8 12 40\\n8 12 40\\n') == '2'\nassert solution('10\\n1234') == '4'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"2\""
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"3\\n8 12 40\\n\") == \"2\"\nassert solution(\"3\\n8 12 40\\n20\") == \"2\"\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n8 12 40\n''') == '2'\nassert solution('''\n3\n5 6 11\n''') == '1'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '7'\nassert solution('1000') == '233'\nassert solution('10000') == '4420'\n"
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"3\\n10 2 50\") == \"1\"\nassert solution(\"6\\n12 2 40 4 9\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('6') == '2'\nassert solution('7') == '4'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '24'\nassert solution('5') == '120'\nassert solution('6') == '216'"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == 6\nassert solution(3) == 6\nassert solution(7) == 18\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\""
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '24'\nassert solution('5') == '120'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"36\"\nassert solution(\"1000000000\") == \"6159018409534106525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238156525153514223815652515351422381565251535142238"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '96'\nassert solution('123') == '198'\nassert solution('20') == '16'\nassert solution('123456789') == '40176140536'\n"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nprint(solution('3'))"
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"100\") == \"101\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2\n3\n3\n''') == '6'\nassert solution('''5\n5\n4\n3\n2\n1\n''') == '11'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\n\nprint(solution(input()))\n\"\"\"\nfrom math import factorial"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '8'\nassert solution('5') == '10'\nassert solution('6') == '12'\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nprint('PASSED')\n\n\"\"\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '6'\nassert solution('3') == '3'\nassert solution('10') == '23'\nassert solution('100') == '987654321'\n\"\"\"\n\nN = int(input())\nresult = 0\n\nfor i in range(1, N + 1):\n    result += i\n\nprint(result)"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"12\"\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"7\") == \"11\"\nprint(solution(input()))\n"
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '10'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('6') == '5'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('2\\n2 2') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1', \"Wrong answer\"\nassert solution('2') == '2', \"Wrong answer\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3 1\n''') == '2'\nassert solution('''3\n2 3 1\n''') == '1'\nassert solution('''100\n
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"7\"\nassert solution(\"100\") == \"72\""
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"15\") == \"1\"\nassert solution(\"20\") == \"1\"\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1\n''') == '2'\n\nassert solution('''5\n5 7\n''') == '1'\n\nassert solution('''8\n8 1\n''') == '0'\n\nassert solution('''7\n1 1 2\n''') == '1'\n\nassert solution('''12\n1 1 2 2 3 4 5 5 7 8 9 10 11\n''') == '2'\n"
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3\n\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n2\n1 2\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('3 1') == '3 0'\n\"\"\"\nimport sys\nsys.setrecursionlimit(100000)\n\nn, m = list(map(int, stdin.readline().split()))\nproblem_list = list(map(str, stdin.readline().split()))\nsubmission_list = list(map(str, stdin.readline().split()))\n\ncount_AC = 0\ncount_WA = 0\n\nfor i in range(n):\n    if submission_list[i] == 'AC':\n        count_AC += 1\n    elif submission_list[i] == 'WA':\n        count_WA += 1\n\ncount_penalty = count_AC\nfor i in range(1, m):\n    if problem_list[i-1] == 'AC':\n        count_penalty += 1\n\nprint(count_AC, count_WA, count_penalty)\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('1 1') == '1 1'\nassert solution('1 10') == '1 2'\nassert solution('10 10') == '2 2'\n'''\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 1\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '1 1'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"1 WA\") == \"1 1\"\nassert solution(\"2 WA\") == \"2 1\"\nassert solution(\"2 AC\") == \"2 0\"\nassert solution(\"1 AC\") == \"1 0\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''3 6\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n1 WA\n1 AC''') == '2 2'\nassert solution('''3 7\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n1 WA\n1 AC''') == '1 2'\nassert solution('''3 6\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n1 WA\n1 AC''') == '1 2'\nassert solution('''3 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n1 WA\n1 AC''') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n2 AC\\n2 WA\\n1 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n2 WA\\n2 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('2 5\\n1 WA\\n2 WA\\n1 AC\\n2 AC\\n2 WA') == '2 2'\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"2 2\"\nassert solution(\"1 WA\") == \"1 1\"\nassert solution(\"2 WA\") == \"1 2\"\nassert solution(\"3 WA\") == \"1 1\"\nassert solution(\"3 AC\") == \"2 1\"\n"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"2 2\"\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\nassert solution('''2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA''') == '2 2'\n\n'''"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n3 1 5''') == '5'\nassert solution('''2 2\n2 1 4''') == '1'\nassert solution('''2 3\n3 1 5''') == '4'\nassert solution('''2 4\n2 1 4 5''') == '0'"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"2\""
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"6 1\") == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '5'\nassert solution('2 1') == '4'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n1 1\n4 1 5\n\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"\n2 3\n4 1 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '5'"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 3\n4 1 5\n''') == '5'\n\nassert solution('''2 1\n1 2 5\n''') == '2'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2'\nassert solution('3 1') == '5'\nassert solution('2 2') == '4'\nassert solution('1 1') == '2'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10\\n2\") == \"4\"\nassert solution(\"1\\n10\\n3\") == \"7\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('2\\n10\\n1\\n') == '8'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"16\"\nassert solution(\"2\") == \"2\"\nassert solution(\"20\") == \"16\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '16'"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '16'"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '4'\n"
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"15\""
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution([1, 1]) == \"1\"\nassert solution([1, 1, 1]) == \"2\""
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"400\") == \"400\"\nassert solution(\"800\") == \"800\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nprint(solution(input()))"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"\nprint(solution(input()))\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '220'\nassert solution('420') == '400'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '520'\nassert solution('1') == '5'\nassert solution('1000') == '500'\nassert solution('5000') == '500'\nassert solution('-1') == '500'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n800\n100\n100\n100\n''') == '200'\nassert solution('''\n8\n3\n2\n1\n''') == '14'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520'\nassert solution('0\\n1\\n2\\n3\\n') == '0'"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"\nassert solution(\"422\") == \"422\"\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nassert solution('1\\n1\\n1\\n1') == '0'\nassert solution('0\\n0\\n0\\n0') == '0'\nassert solution('0\\n0\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"300\\n220\\n420\") == \"300 + 220 = 520\"\nassert solution(\"600\\n300\\n220\\n420\\n\") == \"300 + 220 = 520\"\nassert solution(\"600\\n300\\n220\\n420\\n40\") == \"300 + 220 = 520\""
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n2 4 4 0 2\n\"\"\") == \"4\"\nassert solution(\"\"\"10\n2 4 4 0 2 1 2 3 4\n\"\"\") == \"6\"\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"0\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 4 4 0 2\\n') == '4'\nassert solution('5\\n3 4 4 0 2\\n') == '4'\nassert solution('5\\n4 4 4 0 2\\n') == '4'\nassert solution('5\\n4 4 4 0 2\\n') == '4'\nassert solution('5\\n4 4 4 0 2\\n') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\""
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('4\\n1 2 4 5 0') == '4'\nassert solution('6\\n1 2 4 5 3 6') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('4\\n2 4 4 0 2') == '4'\nassert solution('3\\n2 4 4 0 2') == '0'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 4 4 0 2\n''') == '4'\n\nassert solution('''\n5\n0 0 0 1 2\n''') == '0'\n\nassert solution('''\n5\n3 0 0 0 1\n''') == '3'\n\nassert solution('''\n5\n0 0 1 0 2\n''') == '2'"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 4 4 0 2\\n') == '4\\n'\nassert solution('6\\n1 2 4 3 5 2\\n') == '3\\n'\n"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 4 4 0 2\\n') == '4'\nassert solution('10\\n2 1 3 5 7 9 10 2 7\\n') == '3'\n\n----"
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 2 5') == 84\nassert solution('100 100 3') == 0\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == 84\nassert solution(\"3\") == 0\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 3 9\") == \"62\"\nassert solution(\"20 2 5\") == \"84\""
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"5 2 2\") == \"0\"\nassert solution(\"100 4 10\") == \"16\"\nassert solution(\"1 100 100\") == \"0\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''20 2 5\n''') == '84'\nassert solution('''16 4 9\n''') == '35'\nassert solution('''1 100\n''') == '100'\nassert solution('''100 100\n''') == '10000'\nassert solution('''1 0\n''') == '1'\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 2 5') == '84'"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 2 5') == \"84\"\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['4', '3', '20']) == '84'\nassert solution(['5', '4', '2']) == '5'\nassert solution(['7', '2', '3']) == '26'\nassert solution(['2', '3', '2']) == '2'\n\n--3--\n"
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"20 10 3\") == \"5\"\nassert solution(\"20 20 5\") == \"84\""
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 2 5') == '84'\nassert solution('5 3') == '6'\nassert solution('5 4') == '10'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == None\nassert solution(\"\") == None\nassert solution(\" \") == None\nassert solution(\"0\") == None\nassert solution(\"01\") == None\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'ABC'\nassert solution('10') == 'ABC10'\nassert solution('100') == 'ABC100'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ABC100\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('5') == 'ABC'\nassert solution('10') == 'ABC'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"ABC1\"\nassert solution(\"2\") == \"ABC2\"\nassert solution(\"3\") == \"ABC3\"\nassert solution(\"4\") == \"ABC4\"\nassert solution(\"5\") == \"ABC5\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100') == 'ABC100'\nprint(solution(input()))"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'ABC100'\nassert solution('5') == 'ABC5'\nassert solution('8') == 'ABC8'\nassert solution('13') == 'ABC13'\nassert solution('17') == 'ABC17'\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"ABC100\"\nassert solution(\"2\") == \"ABC2\"\nassert solution(\"5\") == \"ABC5\"\nassert solution(\"9\") == \"ABC9\"\nassert solution(\"12\") == \"ABC12\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('100') == 'ABC100'\n\"\"\"\n"
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100') == 'ABC100'\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n\") == \"1\\n\"\nassert solution(\"5 5\\n\") == \"5\\n\"\nassert solution(\"5 6\\n\") == \"4\\n\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '5'"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '5'\n\"\"\""
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '5'\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '5'\n\"\"\"\n\na, b = map(int, input().split())\n\nprint(a, b)"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n        3 3\n        3 2\n        2 1\n        ''') == '5'\n\nassert solution('''5 5\n        2 2\n        3 3\n        4 4\n        ''') == '4'\n\nassert solution('''5 5\n        5 5\n        4 4\n        3 3\n        2 2\n        ''') == '5'\n\nassert solution('''10 10\n        1 1\n        2 2\n        3 3\n        4 4\n        5 5\n        6 6\n        7 7\n        8 8\n        9 9\n        10 10\n        ''') == '10'\n\nassert solution('''3 3\n        1 1\n        2 2\n        3 3\n        ''') == '1'"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '5'\nassert solution('10 4') == '6'\nassert solution('12 3') == '0'"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"1 5\") == \"1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '-1'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"2 1 1 2\") == \"2\""
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '-1'\nassert solution('3') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\n\"\"\"\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '1'\nassert solution('5\\n') == '2'\nassert solution('1\\n') == '-1'\nassert solution('2\\n') == '-1'\nassert solution('3\\n') == '-1'"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"\nfrom math import inf\nfrom itertools import combinations"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '-1'\nassert solution('2') == '2'\nassert solution('1') == '0'\nassert solution('3') == '-1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10\") == \"10\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('10000000') == '1'\nassert solution('11000000') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n6\\n2\\n6') == '1'\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"100\") == \"1\"\n"
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n6\n2\n6\n''') == '1'\nassert solution('''3\n6\n2\n6\n''') == '1'\nassert solution('''1\n2\n3\n4\n5\n6\n''') == '6'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 2 5') == '1'\nassert solution('10 10 10 10 10') == '1'"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"4 3\\n1 2 3 4\") == \"2\"\nassert solution(\"100 10\\n1 2 3 4 5 6 7 8 9 10\") == \"9\"\nassert solution(\"10 3\\n2 3 4 4 5 5 6 6 7 7 8 8\") == \"8\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\nassert solution('10 3') == '1'\nassert solution('5 4') == '2'\nassert solution('10 4') == '3'\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"100000 2\\n100100 100100\\n\") == \"2\"\nassert solution(\"5 5\\n1 1 2 2 3\\n\") == \"2\"\nassert solution(\"1 3\\n1 1 2 2\\n\") == \"1\"\nassert solution(\"1 10\\n1 1 2 2 3 3 3 4 4 4 4\\n\") == \"1\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"10 5\") == \"2\""
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"5 1\\n1 2 3 4 5\\n\") == \"5\"\n\nimport sys\nsys.stdin = open(\"input.txt\", \"rt\")\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n2\\n2\\n\") == \"2\"\nassert solution(\"1\\n2\\n2\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 2 5\") == \"1\""
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 0') == '0'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 2\n''') == \"Yes\"\nassert solution('''5\n2 3 1 2\n5 2 1 5\n''') == \"No\"\nassert solution('''6\n2 5 2 4 1\n5 5 5 5 5\n''') == \"Yes\"\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 2\n''') == 'Yes'\n\nassert solution('''\n2\n5 2 4\n5 5 5\n''') == 'No'\n\nassert solution('''\n1\n2 2\n''') == 'Yes'\n\nassert solution('''\n2\n1 1\n''') == 'No'\n\nassert solution('''\n2\n1 1\n''') == 'No'"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('4\\n2 1 4\\n4 3 2\\n8 3 2') == 'Yes'\nassert solution('2\\n1 1\\n2 1\\n1 1\\n2 1') == 'No'\nassert solution('8\\n0 0\\n1 1\\n2 0\\n1 1\\n3 0\\n2 1\\n2 1\\n3 0\\n3 0') == 'Yes'\n\"\"\"\nfrom math import inf\nfrom itertools import chain, combinations"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\nassert solution('6') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 1 1\n6 1 1\n''') == 'Yes'\nassert solution('''\n2\n1 1 1\n6 1 1\n''') == 'No'\n'''\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'No'\nassert solution('10 1 1') == 'No'"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'No'\nassert solution('1') == 'Yes'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'No'\nassert solution('10') == 'No'\n\"\"\""
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\""
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\nassert solution('10 10') == '10'\nassert solution('1 2') == '1'\nassert solution('3 3') == '3'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 3\n''') == '2'\nassert solution('''\n1 3\n''') == '2'\nassert solution('''\n7 3\n''') == '8'\nassert solution('''\n7 3\n''') == '8'\nassert solution('''\n5 3\n''') == '6'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n') == '2'\nassert solution('1 2\\n') == '1'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3\n''') == '2'\nassert solution('''\n10 20\n''') == '20'\n''')\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '2'\nassert solution('0 0') == '0'\n\n--- Output ---\nExpected:\n2\nActual:\n2\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 2') == '2'\nassert solution('3 4') == '3'\nassert solution('4 5') == '4'\nassert solution('7 6') == '7'\n"
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1 3\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n10 5\n\"\"\"\n) == \"11\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n1 2\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == '4'\nassert solution(\"4 4\\n1 3\\n2 4\\n3 5\\n3 6\\n4 6\\n4 7\\n5 7\\n\") == '0'\n\nimport collections\nimport math\nimport sys"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''5 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n8 9''') == '0'\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 5\n1 5\n2 4\n4 3\n4 5\n5 3\n4 3\n3 2\n3 5\n4 5\n\n\"\"\") == \"0\"\n\"\"\"\nfrom typing import List\nfrom collections import defaultdict, deque\n\nclass Solution:\n    def solution(self, stdin: str):\n        graph = defaultdict(set)\n        edges = defaultdict(int)\n        for edge in stdin.split():\n            u, v = int(edge[0]), int(edge[1])\n            graph[u].add(v)\n            graph[v].add(u)\n            edges[u] += 1\n            edges[v] += 1\n        que = deque()\n        count = 0\n        for v in graph:\n            if v > 0 and edges[v] == 1:\n                que.append(v)\n        while que:\n            u = que.popleft()\n            count += 1\n            for v in graph[u]:\n                edges[v] -= 1\n                if edges[v] == 1:\n                    que.append(v)\n        return count\n\nassert Solution().solution(\"\"\"\n5 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n\"\"\") == \"4\"\nassert Solution().solution(\"\"\"\n5 5\n1 5\n2 4\n4 3\n4 5\n5 3\n4 3\n3 2\n3 5\n4 5\n\n\"\"\") == \"0\"\n\"\"\"\nfrom typing import List\nfrom collections import defaultdict, deque\n\nclass Solution:\n    def solution(self, stdin: str):\n        graph = defaultdict(set)\n        edges = defaultdict(int)\n        for edge in stdin.split():\n            u, v = int(edge[0]), int(edge[1])\n            graph[u].add(v)\n            graph[v].add(u)\n            edges[u] += 1\n            edges[v] += 1\n        que = deque()\n        count = 0\n        for v in graph:\n            if v > 0 and edges[v] == 1:\n                que.append(v)\n        while que:\n            u = que.popleft()\n            count += 1\n            for v in graph[u]:\n                edges[v] -= 1\n                if edges[v] == 1:\n                    que.append(v)\n        return count\n\nassert Solution().solution(\"\"\"\n5 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 7') == '4'"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 7') == '4'"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\nassert solution('''5 1\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6''') == '2'\n\"\"\""
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"4\"\nassert solution([\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"3\",\"3\",\"4\",\"4\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4\",\"4\",\"3\",\"3\",\"4"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == \"4\"\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '4'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2\n3 4''') == '0'\nassert solution('''5 5\n1 2\n3 4\n5 6\n4 5\n5 6''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'\nassert solution('''10 10\n1 2\n3 4\n5 6\n7 8\n9 10\n2 5\n8 9\n6 10\n''') == '8'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == '5'\nassert solution('5 7 5') == '7'\nassert solution('5 7 5') == '5'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('6 6 6') == '6'\nassert solution('1 1 2') == '1'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('5 2 5') == '2'\nassert solution('5 7 6') == '7'\n\n\"\"\""
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == '7'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == '7'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 7 5''') == '7'\nassert solution('''5 7 6''') == '5'\nassert solution('''5 7 7''') == '6'"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('5 7 5') == '7'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"7\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 1 10 20 15 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1 2 10 20 15 200'\n) == '110 10'"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n\n\"\"\"\n\ninput = input().split()\n\nA = int(input[0])\nB = int(input[1])\nC = int(input[2])\nD = int(input[3])\nE = int(input[4])\nF = int(input[5])"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n\"\"\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1 2 10 20 15 200\"]) == \"110 10\"\nassert solution([\"1 2 1 1 200\"]) == \"1 200\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 30 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 30 200\") == \"110 10\"\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 1 1') == '100 100'\n\n\"\"\"\n\n\nimport sys\n\nfrom typing import List\n"
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n\"\"\""
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 1 100') == '110 10'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"internationalization\") == \"i18n\"\nassert solution(\"Internationalization\") == \"i18n\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nprint(solution(\"internationalization\"))\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '', \"Wrong result!\"\nassert solution('internationalization') == 'i18n', \"Wrong result!\""
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\n\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('hello') == 'he'\nassert solution('hi') == 'hi'\nassert solution('solution') =='sol'\nassert solution('a') == 'a'\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\nprint(solution('internationalization'))"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"i18n\"\n"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\n\n---"
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"x\") == \"x\"\nassert solution(\"\") == \"\"\nassert solution(\"d\") == \"d\""
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"pot\") == \"YES\", 'Expected: YES'\nassert solution(\"top\") == \"YES\", 'Expected: YES'\nassert solution(\"happy\") == \"NO\", 'Expected: NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pot') == 'YES', \"Wrong answer!\"\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"\") == \"YES\"\nassert solution(\"xyz\") == \"YES\""
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n"
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'YES'\nassert solution('top') == 'YES'\nassert solution('pot') == 'NO'\n\"\"\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"b\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abababc\") == \"ab\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"bba\") == \"b\"\nassert solution(\"aaa\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"b\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'b'\nassert solution('abacd') == 'b'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aba\n4''') == 'b'\nassert solution('''ababc\n4''') == 'b'\nassert solution('''ababab\n4''') == 'b'\nassert solution('''ababc\n4''') == 'b'\nassert solution('''ababab\n4''') == 'b'\n\n---Submission---\nEnter your code here. Read input from STDIN. Print output to STDOUT\n\n\"\"\""
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"b\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aba') == 'b'\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"aaa\") == \"a\"\nassert solution(\"aabc\") == \"b\"\nassert solution(\"abbc\") == \"b\"\nassert solution(\"baaaa\") == \"a\"\n"
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abab\") == \"b\"\nassert solution(\"ababc\") == \"b\"\nassert solution(\"ababab\") == \"b\"\nassert solution(\"abaaaab\") == \"b\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 4 3\") == \"5\""
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 2\") == \"9\"\nassert solution(\"100 100 2\") == \"9\"\nassert solution(\"5 5 3\") == \"9\"\nassert solution(\"100 100 2\") == \"9\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('2 2 1') == '1'\nassert solution('5 4 2') == '9'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == \"9\"\nassert solution('''5 5 5 5\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == \"42\"\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == '9'\nassert solution('5 4 2') == '9'\nassert solution('3 3 4') == '9'\n\n\"\"\"\n\nfrom typing import Dict, List\nimport sys"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''10 10 3\n6 9 3\n4 6 4\n''') == '6'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5 4 2\n2 1 1\n3 3 4\n'''\n) == '9'\nassert solution(\n'''\n5 5 2\n2 3 4\n'''\n) == '14'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nassert solution('''5 4 3\n1 2 3\n3 2 4\n3 4 5''') == '8'\n"
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"4 2 6\") == \"22\"\nassert solution(\"4 5 4\") == \"22\"\nassert solution(\"100 101 3\") == \"125\"\nassert solution(\"100 101 100\") == \"1000\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '12'\nassert solution('3') == '11'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n6 5 1\n1 10 1\n\n\"\"\") == \"12\"\nassert solution(\"\"\"\n4\n4 2 1\n1 10 1\n2 10 1\n3 10 1\n\n\"\"\") == \"11\"\nassert solution(\"\"\"\n5\n8 1 1 1 1\n1 10 1\n2 10 1\n3 10 1\n4 10 1\n\n\"\"\") == \"0\""
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '12\\n11\\n0\\n'\nassert solution('6') == '12\\n11\\n0\\n'\nassert solution('5') == '12\\n11\\n0\\n'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"6\") == \"11\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n6 5 1') == '12'\nassert solution('4\\n6 5 1') == '11'\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6 5 1\\n1 10 1\") == \"12 11 0\"\nassert solution(\"3\\n6 5 1\\n1 10 1\") == \"12 11 0\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '12 11 0'\nprint(solution(input()))\n\n--- Output ---\n6 4 1\n6 4 2\n6 3 1\n6 3 2\n6 2 1\n6 2 2\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n6 5 1\n1 10 1\n\"\"\") == \"12 11\"\n"
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"12\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"*.\\n*.\\n*.\\n*.\\n\""
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n.\\n.\\n\") == \".\\n.\\n.\""
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n', solution('2 2')\nassert solution('1 1') == '1.', solution('1 1')\n\nprint('solution() finished')"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"**\\n**\\n**\\n**\\n**\\n\", \"Correct result if sample case is passed\"\nassert solution(\"5 5\") == \"*\\n*\\n*\\n*\\n*\\n\", \"Correct result if sample case is passed\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 2\\n'\n    '*.\\n'\n    '.*'\n) == '**\\n***\\n**\\n***'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n'\nassert solution('3 3') == '*.*\\n.*.*\\n.*.*\\n*.*.*\\n'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"1 1\") == \"C\\nC\\nC\\nC\\n\"\nassert solution(\"2 5\") == \"C\\nC\\nC\\nC\\nC\\n\"\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == '*\\n*.\\n*.\\n*.\\n'"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n*.\\n*.\\n') == '*.\\n*.\\n*.\\n*.\\n'\nassert solution('2 2\\n*.\\n.*\\n') == '*.\\n*.\\n*.\\n*.\\n'\n"
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \".*\"\nassert solution(\"1 1\") == \".\"\nassert solution(\"5 5\") == \".*\"\nassert solution(\"5 5\") == \".*\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 1 2 2 3\") == \"NO\""
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2 6 1 4 5\n''') == \"YES\"\nassert solution('''7\n1 2 3 4 5 6 7\n''') == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n2 6 1 4 5\n\"\"\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 4 1\\n') == 'YES'\nassert solution('1\\n0\\n') == 'NO'"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"YES\""
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 6 1 4 5\n''') == 'YES'\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"5 2 1 4 5\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\nassert solution(\"8\\n4 2 5 6 7 2 6 8\") == \"NO\"\nassert solution(\"2\\n3 2 1\") == \"YES\"\nassert solution(\"3\\n4 1 5 2\") == \"NO\"\n"
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\", \"TEST 1\"\nassert solution(\"5\") == \"YES\", \"TEST 2\"\nassert solution(\"4\") == \"NO\", \"TEST 3\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"3\"\nassert solution(\"8\") == \"4\"\nassert solution(\"6\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == '2'\nassert solution(input_2) == '4'\nassert solution(input_3) == '4'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5') == '2'\nassert solution('2\\n5\\n1 2 2 1 2 1\\n3\\n1 3 3') == '4'\nassert solution('3\\n5\\n1 3 3') == '1'\nassert solution('4\\n5\\n1 1 3 4 2 2') == '3'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '3'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '4'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3\\n6\\n1 1 3 4 2 2\\n') == '1'\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n2 2 2 1\n8\n1 2 3 4 5''') == \"2\"\nassert solution('''5\n3\n3 2 1\n8\n1 3 4 5''') == \"4\"\nassert solution('''5\n3\n3 1 2\n8\n1 2 4 5''') == \"2\"\nassert solution('''5\n3\n4 1 1\n8\n1 3 4 5''') == \"2\"\nassert solution('''5\n2\n1 2 1\n8\n1 3 4 5''') == \"4\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\") == \"3\"\nassert solution(\"5\\n2 2 2 1 2 1 2 2\\n8\\n6 6 6 6 6 6 8 8\") == \"2\"\nassert solution(\"5\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"4\"\nassert solution(\"5\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"2\"\n"
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8') == '3\\n4\\n1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13''') == '3'"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n5 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''\n10\n7 3\n1 5\n22 5\n987 13\n''') == '1'\nassert solution('''\n10\n7 3\n4 6\n1 5\n22 5\n987 13\n''') == '5'\nassert solution('''\n10\n7 3\n8 9\n1 5\n22 5\n987 13\n''') == '8'\nassert solution('''\n10\n7 3\n8 9\n1 5\n22 5\n987 13\n''') == '10'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n7 3\n1 5\n22 5\n987 13\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n10 4\n1 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n10 10\n1 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n6 2\n2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n6 4\n1 5\n6 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n5\n1\n22\n5''') == '3'\nassert solution('''1\n7\n3\n5\n1\n22\n5''') == '3'\nassert solution('''4\n7\n3\n5\n1\n22\n5''') == '2'\nassert solution('''5\n7\n3\n5\n1\n22\n5''') == '1'\nassert solution('''6\n7\n3\n5\n1\n22\n5''') == '5'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('12') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''5\n7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''8\n7 3\n1 5\n22 5\n987 13''') == '3'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13\\n') == '3'\nassert solution('5\\n5 2\\n22 7\\n987 13\\n') == '1'\nassert solution('10\\n1 3\\n1 2\\n4 5\\n2 6\\n7 8\\n6 9\\n8 10\\n') == '9'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n7 3\n1 5\n22 5\n987 13\n\"\"\") == \"3\"\nassert solution(\"\"\"6\n10 10\n1 2 1 2 1 2 1 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"4\n7 3\n1 5\n22 5\n987 13\n\"\"\") == \"1\"\n\nimport sys\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n7 3\n1 5\n22 5\n987 13''') == '3'\nassert solution('''5\n10 4\n4 5\n1 2\n2 2\n10 4\n1 5\n22 5\n987 13''') == '5'\nassert solution('''2\n7 5\n1 2\n2 2\n10 4\n1 5\n22 5\n987 13''') == '3'\nassert solution('''8\n10 4\n4 5\n1 2\n2 2\n10 4\n1 5\n22 5\n987 13''') == '1'\n"
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n7 3\n1 5\n22 5\n987 13\n''') == \"3\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(s) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(s) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 2\nabca\n1 3\n10 5\ncodeforces\"\"\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\n\"\"\"\n)\n\nassert solution(\n\"\"\"3 2\nabca\n1 3\n10 5\ncodeforces\"\"\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\n\"\"\"\n)\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n4 2\\nabca\\n1 3\\ntest\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\nassert solution(\n    \"2\\n8 6\\nqwe\\n1 3\\ntest\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('4 2') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution('10 5') == '26 10'\nassert solution('20 10 1 2 3 5 10 5 9 4') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2'"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t1) == a\nassert solution(t2) == a, b\nassert solution(t3) == b, c\nassert solution(t4) == c, d\nassert solution(t5) == d, e\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n')\nassert solution('2') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n')\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"26 10 1 2 3 5 10 5 9 4\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(input()) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\n"
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(input()) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(input()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\""
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 2\") == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n2 2 2\n10 10\n5 5\n2 4\n3 2\n3 2\n''') == '3'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\"\"\") == \"1999999994\"\n\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n7\n1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\n\nassert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\n\nassert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"1 1000000000 1000000000\") == \"1999999994\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6''') == '0'\nassert solution('''6\n3 2 5\n3 2 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5''') == '1999999994'\nassert solution('''5\n3 2 5\n3 2 6\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5''') == '4'\nassert solution('''6\n3 2 5\n3 2 6\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5''') == '0'\nassert solution('''1\n2 2 1\n2 2 1\n1 1 2\n1 1 2\n1 1 2''') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"4\"\nassert solution(\"1 1000000000 1000000000\") == \"1999999994\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\nassert solution('''\n1 1\n1\n''') == '1'\nassert solution('''\n2 2\n1\n''') == '0'\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"0\\n36\\n0\\n0\\n1999999994\\n1999999994\\n2\\n4\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 4\") == \"0\"\nassert solution(\"10 20 30\") == \"36\"\n"
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n3\n3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\nassert solution('''\n2\n1 1 1\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('------------')\n        print(out)\n        print('------------')\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"2\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\"\n        output = \"\"\"0\n36\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"3\n3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\"\"\"\n        output = \"\"\"1999999994\"\"\"\n        self."
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n5\n1 1 1 1 1\n1\n1 1 1 1\n1\n1\n1\n''') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n2 4 7 6 10 9 8 11\n2\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''1\n1\n1''') == 'NO'\nassert solution('''2\n5\n2 4 7 6 10 9 8 11\n2\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''5\n1\n3\n2\n4\n3''') == 'NO'\nassert solution('''5\n1\n2\n4\n3\n2''') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n9\\n1 2 3 4 5 6 7 8') == 'YES\\nNO\\nYES\\nNO\\nYES\\nNO\\nYES\\nNO'\nassert solution('4\\n2 1 5 7') == 'YES\\nNO\\nYES\\nNO\\nYES'"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n1 2 3') == 'YES'\nassert solution('5\\n1 2 3 4 5\\n3 4 5 6 8') == 'YES'\nassert solution('7\\n1 2 3 4 5 6 7\\n1 1 2 3 4 5 6 7') == 'YES'\nassert solution('7\\n1 2 3 4 5 6 7\\n6 7 8 9 10') == 'YES'\nassert solution('7\\n1 2 3 4 5 6 7\\n1 1 2 3 4 5 6 7') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n4 5 6''') == 'YES'\nassert solution('''3\n1 2 3\n4 5 6''') == 'NO'\nassert solution('''4\n1 2 3\n4 5 6''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\n''') == 'YES'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == \"YES\"\n\nassert solution('''\n6\n1 2 3 4 5 6\n2\n3 2 1 5\n1 2 3 5\n1 3 2 5\n2 3 1 5\n3 2 1 5\n1 1 2 3 5\n1 2 1 2 3\n1 2 1 2 3\n''') == \"YES\"\n\nassert solution('''\n1\n1 1\n1 1\n1 1\n''') == \"YES\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '22'\nassert solution('6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n') == '13'\nassert solution('10 0\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '0'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n5 3\\n') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\n\"\"\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 2 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == \"22\"\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == \"13\"\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '22'\nassert solution('''5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5''') == '13'\n"
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'\n\n'''"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '3'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '9'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '13'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '27'\nassert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '6561'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '69'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('10\\n20') == '11'\nassert solution('10\\n30') == '31'\nassert solution('4\\n17') == '19'\nassert solution('9\\n43') == '41'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"3\\n9\\n13\\n27\\n6561\\n19683\"\nassert solution(\n    \"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"4\\n9\\n13\\n27\\n6561\\n19683\"\nassert solution(\n    \"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"5\\n9\\n13\\n27\\n6561\\n19683\"\nassert solution(\n    \"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"6\\n9\\n13\\n27\\n6561\\n19683\"\nassert solution(\n    \"1\\n2\\n6\\n13\\n14\\n3620\\n10000\\n\") == \"7\\n9\\n13\\n27\\n6561\\n19683\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n5') == '9'\nassert solution('5\\n100') == '7777'\nassert solution('10\\n919') == '1777'\nassert solution('15\\n99999') == '958393'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"27\"\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('6\\n13') == '9'\nassert solution('1\\n3620') == '27'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '13'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3\n    1\n    2\n    6\n    ''') == '3'\nassert solution('''\n    100\n    1\n    2\n    6\n    ''') == '97'\nassert solution('''\n    1000\n    1\n    2\n    6\n    ''') == '983'\nassert solution('''\n    10000\n    1\n    2\n    6\n    ''') == '9683'\nassert solution('''\n    15\n    1\n    2\n    6\n    ''') == '973'\n"
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '6561'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 3 3 3 2 2 1 3 4 4 1 4'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''10\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1 1\"\nassert solution(\n\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"3 3 3 3 3 3\"\nassert solution(\n\"\"\"\n6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"2 1\") == \"1 1\"\nassert solution(\"2 1 2\") == \"1 1 1 1 1 1 1\"\nassert solution(\"2 2 2\") == \"1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '2 2 2 2 2 2'"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\"\n) == \"1 2 3 4 5\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n5\\n5 1 2 4 3\\n\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == \"3 3 3\"\nassert solution('5') == \"1 1 1 1\"\nassert solution('4') == \"2 2 2 2\"\nassert solution('3') == \"1\"\nassert solution('2') == \"2\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1') == '3 3 3\\n2 2 2\\n4 4 1\\n1'\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n5\n5 1 2 3 4\n3\n2 1 3 4 5\n5\n3 1 2 4 5\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n    \"\"\") == \"2 3 3 2 1 3\"\n"
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2 2 2 2 1 3 3 2 1\"\nassert solution() == \"1 1 1 1 1 2 1 2 2 2 2 2 2 1\"\nassert solution() == \"2 2 2 2 2 2 1 2 1 1 1 2 1 2 1\"\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '8'\nassert solution('''\n5 5\n3 4 1\n''') == '7 5 4 1 -2'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7 5 -2 4 -1 2'\nassert solution('1 5') == '-1 2 6 4 0 3'"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n2 6\n1 5\n    ''',\n    '''\n8\n-1 2 6 4 0 3 \n    ''') == '8'"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 6\\n1 5\\n') == '8'\nassert solution('3 5\\n0 3 1\\n') == '7'"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '-1 2'\nassert solution('2 6') == '8 -1 2 6 4 0 3'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7'\nassert solution('''\n2 3\n1 1\n''') == '1'\nassert solution('''\n2 2\n1 1\n''') == '1'\nassert solution('''\n10 10\n1 9 9 8 7 9 8 7 9 7 5\n''') == '0'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution('''\n1 10\n5 1\n''') == '3'\nassert solution('''\n1 10\n5 0\n''') == '6'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1\n''') == '8'\n\nassert solution('''3\n0\n3\n2\n''') == '7'\n"
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 10\n3 5\n''') == '7 5 -2 4 -1 2'''\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\n\n---\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''\n2\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''\n1\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n4\n6\n2 4\n0 1\n3 3\n2 3\n''') == 'YES'"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n\nsolution()\n    pass\n\n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"RUUURRRRUU\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"RRRRUUU\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\"\n    \n>>> solution()\n    \"NO\"\n    \n>>> solution()\n    \"YES\""
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''3\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\nassert solution('''4\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''5\n1 2\n0 1\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\nassert solution('''5\n1 2\n0 1\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'YES'\n\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == 'NO'\n\nassert solution('''1\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''2\n4\n3 0\n2 2\n1 3\n4\n3\n0\n2\n''') == 'YES'\nassert solution('''2\n4\n0 0\n1 1\n3 3\n4\n2\n0\n2\n''') == 'YES'\nassert solution('''5\n4\n1 3\n2 2\n3 3\n4\n2\n1\n1\n''') == 'NO'\nassert solution('''1\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"5 3\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\n"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'NO'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\n'''"
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n1\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n2\n3\n1 2\n1 0\n3 3\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n'''\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nprint(solution(input()))\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '8'\nassert solution('1 1') == '0'\nassert solution('500 4') == '2128012501878'\nassert solution('217871987498122 10') == '899999999999999999'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3') == '4\\n'\nassert solution('10\\n4\\n10000000000') == '1\\n9999999999999999999\\n'\n\n\n'''\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '8'\nassert solution(input()) == '0'\nassert solution(input()) == '500'\nassert solution(input()) == '2128012501878'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"500 4\") == \"2\"\nassert solution(\"217871987498122 10\") == \"1\"\nassert solution(\"100000000000000001 1\") == \"4\""
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"500 4\") == \"1\"\nassert solution(\"217871987498122 10\") == \"899999999999999999\"\nassert solution(\"100000000000000001 1\") == \"899999999999999999\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '0'\nassert solution('''\n500 10\n217871987498122 10\n100000000000000001 1\n''') == '500'\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2\\n1 2\") == \"3\"\nassert solution(\"1\\n2 1\") == \"1\"\nassert solution(\"2\\n1 1\") == \"2\"\nassert solution(\"3\\n3 5\\n4 8\") == \"3\"\n"
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''5\n4\n1 1 0 1 1\n3\n1 1 1 1\n3\n1 1 1 1\n5\n1 1 1 1\n''') == '4'\nassert solution('''5\n5\n1 1 0 1 1\n3\n1 1 1 1\n3\n1 1 1 1\n5\n1 1 1 1\n''') == '5'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '1'\nassert solution('''6\n7\n1 1 0 1 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '3'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1''') == '2'\nassert solution('''5\n7\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1''') == '4'\nassert solution('''5\n7\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1''') == '1'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1''') == '0'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"8\") == \"1\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n0 0 1 0 1 0 1''') == '2'\nassert solution('''5\n7\n0 0 1 0 1 0 1''') == '0'\nassert solution('''3\n1 0 0''') == '0'\nassert solution('''6\n1 0 0 0 0 1''') == '1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n\"\"\") == \"0\""
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '0'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4\n0 0 1 0 1\n5\n1 0 0''') == '0'\nassert solution('''5\n1\n0''') == '1'\nassert solution('''3\n1\n1\n1''') == '2'\nassert solution('''5\n1\n1\n1\n1''') == '3'\nassert solution('''5\n1\n1\n1\n1''') == '4'\n"
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 3\\n4 4\\n6 2') == 'cbcacab'\nassert solution('2\\n4 4\\n7 3\\n') == 'abcd'\nassert solution('3\\n4 4\\n6 2\\n') == 'baabab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'ab'\nassert solution('3') == 'cbc'\nassert solution('4') == 'cba'\nassert solution('5') == 'abab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == 'abcd'\nassert solution(\"4\") == 'abac'\nassert solution(\"6\") == 'bbaab'"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4 3\n    3 4\n    4 1\n    3 3\n    3 5\n    ''') == \"cbacab\"\nassert solution('''\n    5 3\n    1 2\n    3 4\n    5 1\n    1 5\n    ''') == \"abcd\"\nassert solution('''\n    5 5\n    5 1\n    1 5\n    3 5\n    1 3\n    ''') == \"ccbbaaa\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 3\\n4 4\\n6 2\") == \"cbcacab\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'cbcacab'\nassert solution('4') == 'abcd'\nassert solution('6') == 'baabab'"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'cbca'\nassert solution(input()) == 'abcd'\nassert solution(input()) == 'baab'\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n7 3\n4 4\n6 2\n\"\"\") == \"abcd\"\nassert solution(\"\"\"\n3\n1\n2\n\"\"\") == \"abc\"\nassert solution(\"\"\"\n5\n3\n3\n3\n3\n\"\"\") == \"abcabcabcabc\"\nassert solution(\"\"\"\n10\n10\n\"\"\") == \"abcabcabcabcabcabcabcabcabc\"\n"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'cccbbb'\nassert solution(input()) == 'bbabab'\nassert solution(input()) == 'baabaa'"
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"a\"\nassert solution(\"3\") == \"b\"\nassert solution(\"4\") == \"ab\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n5\n1 5 5 5 5\n2\n7\n5 9 1 1 5\n5\n1 1 1 1 1\n11\n5 9 1 1 5\n5\n1 1 1 1 1\n11\n5 9 1 1 5\n''') == '2 1 2\nassert solution('''\n7\n9\n2 5 1 9 5 5 5 5 5\n3\n8\n7 8 8 8 8 8 8 8 8\n8\n8 9 8 8 8 8 8 8 8\n4\n8 8 8 8 8 8 8 8 8\n9\n1 1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n11\n1 1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n5\n1 1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n11\n1 1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1 1\n11\n1 1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1 1\n''') == '1 3'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '''6 23 21'''\nassert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '''4 5 5 4'''\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2\n4\n7\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\"\"\"\n) == \"1 1000 0\\n2 1 2\\n6 45 46\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n1\n2\n2\n1 1\n3\n1 2 3\n4\n1 1 1 1\n1 1 1 1\n3\n1 2 3 4\n2\n2 1\n2\n3\n2 1\n3 1\n4\n3 3 2 3\n3\n1 1 1 1\n2\n2 1\n3\n3\n\"\"\"\n) == \"6 23 21 1 1000 0 2 2 1 3 4 2\"\n\nassert solution(\n    \"\"\"\n1\n2\n2\n1 1\n3\n1 2 3\n4\n1 1 1 1\n1 1 1 1\n3\n1 2 3 4\n2\n2 1\n2\n3\n2 1\n3 1\n4\n3 3 2 3\n3\n1 1 1 1\n2\n2 1\n3\n3\n\"\"\"\n) == \"6 23 21 1 1000 0 2 2 1 3 4 2\"\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '8 3\\n5 2\\n11 6\\n3 1 4 1 5 9 2 6 5 3 5\\n4 2\\n2 1\\n6 3\\n2 2 1\\n7 2\\n3 3 2'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '''6 23 21'''\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n''') == '''2 2 2'''\n\nassert solution('''\n3\n1 1 1\n1 2\n1 3\n''') == '''5 2 1'''"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6 23 21'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 23 21'"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\n"
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n    ''') == '''6 23 21'''\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n    ''') == '''2 2 1'''\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nprint(solution('''\n2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''')) == '39'\nprint(solution('''\n2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''')) == '11'\nprint(solution('''\n2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''')) == '17'\nprint(solution('''\n2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''')) == '11'\nprint(solution('''\n2\n1 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''')) == '27'"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n1 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\"\n) == \"27\"\n\nassert solution(\n    \"\"\"\n2 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\"\n) == \"39\"\n\nassert solution(\n    \"\"\"\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\"\n) == \"11\"\n\nassert solution(\n    \"\"\"\n2 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\"\n) == \"17\"\n\nassert solution(\n    \"\"\"\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\"\n) == \"6\""
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\"\n    ) == \"27\"\nassert solution(\n    \"5\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"11\"\nassert solution(\n    \"5\\n10 9 10 10 9\\n4 0\\n2 2 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"17\"\nassert solution(\n    \"5\\n10 9 10 10 9\\n4 4 5 4\\n2 2 5 4 3\\n2 4 2 3\\n4 4\"\n    ) == \"39\"\nassert solution(\n    \"5\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3\\n5 3\"\n    ) == \"6\"\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\n\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 3\n5 2\n1 2\n3 2\n''') == '27'\nassert solution('''\n2\n3 2\n4 2\n1 2\n''') == '17'\nassert solution('''\n5\n5 4\n4 4\n5 5\n5 4\n5 5 6 6 5\n''') == '11'\nassert solution('''\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n5\n5 4\n4 4\n5 5\n5 4\n5 5 6 6 5\n''') == '11'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '6'\nassert solution('2 1') == '27'\nassert solution('3 4') == '39'\nassert solution('5 5') == '11'\nassert solution('5 5 6 6 5') == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '6'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '27'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '39'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '11'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '17'\n"
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '6'\nassert solution('''5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5''') == '27'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45 '\nprint(solution(input()))\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 2\\n\"\n    \"7 6 18 6 16 18 1 17 17\\n\"\n    \"6 9 3 10 9 1 10 1 5\\n\"\n) == \"0 7 13 18 24 35 36 37 40 45\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"10 2\\n\"\n    \"7 6 18 6 16 18 1 17 17\\n\"\n    \"6 9 3 10 9 1 10 1 5\\n\"\n) == \"0 7 13 18 24 35 36 37 40 45\""
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '0 7 13 18 24 35 36 37 40 45'\nprint(solution(''))\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n\"\"\"\n    ) == \"0 7 13 18 24 35 36 37 40 45\"\n\nassert solution(\n\"\"\"\n8 2\n7 6 7 6 7 6 8 2\n8 3 4 3 4 3 4 5\n\n\"\"\"\n    ) == \"0 2 4 7 8 11 13 14 16 17\"\n"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\") == \"0 2 4 7 8 11 13 14 16 17\"\nassert solution(\"10 1\\n3 2 3 1 3 3 1 4 1\") == \"0 2 4 7 8 11 13 14 16 17\""
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('3 1') == '0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802"
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 3 1 3 3 1 4 1\n''') == '0 7 13 18 24 35 36 37 40 45 \nassert solution('''\n10 1\n7 6 18 6 16 18 1 17 17\n''') == '0 7 13 18 24 35 36 37 40 45 \nassert solution('''\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == 'aaabb'\nassert solution('5 2') == 'aabab'\nassert solution('5 8') == 'baaba'\nassert solution('5 10') == 'bbaaa'\nassert solution('3 1') == 'aaaaabaaaaabaaaaaaaa'\n\n\"\"\""
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 1\\n\"\n    \"5 2\\n\"\n    \"5 8\\n\"\n    \"5 10\\n\"\n    \"3 1\\n\"\n    \"3 2\\n\"\n    \"20 100\"\n    ) == \"aaaaabaaaaabaaaaaaaa\"\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aabab'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'baaba'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa'\nassert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n7 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'aaaaabaaaaabaaaaaaaa'\nassert solution('5\\n6 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'aabaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n2\n1 1\n1 2\n2 2\n\"\"\") == \"bbb\"\n\nassert solution(r\"\"\"\n2\n2 3\n3 2\n\"\"\") == \"bab\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n5 1\\n5 2') == 'aaabb'\nassert solution('5 1\\n5 2') == 'aabab'\nassert solution('5 10\\n5 2') == 'baaba'\nassert solution('3 1\\n3 2') == 'bbba'\nassert solution('20 100\\n3 1\\n3 2') == 'aaaaabaaaaabaaaaaaaa'\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n\"\"\") == \"aaaaabaaaaabaaaaaaaa\"\n"
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n\"\"\") == \"aabba\"\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"6\"\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"5\"\n'''\nthe code below will not be passed\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '6'\nassert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n1000000000') == '1000000000'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\n\n'''\nTime: O(n + k)\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n1 3 2\n3 2 1''') == '2'\nassert solution('''4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000''') == '1'\nassert solution('''5\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n3 5''') == '1'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n2\n4 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '4'\nassert solution('''\n5\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n'''\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n\nprint(solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n'''))\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3''') == '1\\n10\\n5\\n10\\n10\\n10'\n\n''')\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '1'\nassert solution('3 2') == '2'\nassert solution('5 1') == '1'\nassert solution('5 1000000000') == '10'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 1') == '6'\nassert solution('5 1') == '1'\nassert solution('3 1') == '1'\nassert solution('1000000000 1000000000') == '1000000000'\nassert solution('1000000000') == '1000000000'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\n\nassert solution(\"\"\"\n1\n0\n1\n2\n1\n1\n10\"\"\") == \"2\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 3\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"2\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"10\"\n) == \"1\"\n\nassert solution(\n    \"4 3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n) == \"0\"\n\nassert solution(\n    \"4 3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n) == \"0\"\n\nassert solution(\n    \"4 3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n) == \"0\"\n\nassert solution(\n    \"4 3\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n) == \"0\""
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n7 3\n0\n1\n2\n2\n0\n0\n10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n1\n2\n1\n2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n3\n4''') == '0'\nassert solution('''4 3\n1\n2\n3\n4''') == '1'\nassert solution('''4 3\n1\n2\n3\n4''') == '2'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3') == \"1\"\nassert solution('4 3') == \"0\""
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '0'\nassert solution('10 7') == '2'\n"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1\\n1\\n1\") == \"1\"\nassert solution(\"3 3\\n1\\n2\\n1\") == \"2\"\nassert solution(\"4 3\\n1\\n2\\n1\") == \"3\"\nassert solution(\"4 4\\n1\\n1\\n1\\n1\") == \"1\""
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '0'"
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == \"1\"\nassert solution('''4 3\n1\n2\n1\n2''') == \"0\"\nassert solution('''4 3\n1\n2\n1\n2''') == \"0\"\nassert solution('''4 3\n1\n2\n1\n2''') == \"0\"\nassert solution('''4 3\n1\n2\n1\n2''') == \"0\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '13 22'"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10 \\n 26 32 20 38 44 50 10 1 10 13 4 19 22 25 16 7 \\n'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 49 20 40 30 50 10'"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 49\\n5 20 50\\n6 20 50') == '1 49 20 40 30 50 10\\n26 32 20 38 44 50 10\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nprint(solution(input()))\n'''\n\nimport math"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"20 40 30 50 10\"\nassert solution(\"6 20 50\") == \"20 40 30 50 10\"\nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 \\n20 40 30 50 10 \\n26 32 20 38 44 50 11 13 19 25 16 7 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7 \\n''', 'basic test 1'\nassert solution('''\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '6 20 50 \\n9 13 22 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7 \\n''', 'basic test 2'\nassert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '6 20 50 \\n''', 'no next el'\nassert solution('''\n5 20 50\n4 3 8\n9 13 22\n''') == '6 20 50 \\n''', 'no prev el'\nassert solution('''\n5 20 50\n6 20 50\n5 2 8\n9 13 22\n''') == '6 20 50 \\n''', 'no prev el'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\n3 4\n''') == '1 2'\nassert solution('''5\n1 1\n1 1\n2 2\n2 2\n2 2\n''') == '1 1 1 1 2 2'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n332 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n398 399\n399 400\n400 401\n401 402\n402 403\n403 404\n404 405\n405 406\n406 407\n407 408\n408 409\n409 410\n410 411\n411 412\n412 413\n413 414\n414 415\n415 416\n416 417\n417 418\n418 419\n419 420\n420 421\n421 422\n422 423\n423 424\n424 425\n425 426\n426 427\n427 428\n428 429\n429 430\n430 431\n431 432\n432 433\n433 434\n434 435\n435 436\n436 437\n437 438\n438 439\n439 440\n440 441\n441 442\n442 443\n443 444\n444 445\n445 446\n446 447\n447 448\n448 449\n449 450\n450 451\n451 452\n452 453\n453 454\n454 455\n455 456\n456 457\n457 458\n458 459\n459 460\n460 461\n461 462\n462 463\n463 464\n464 465\n464 466\n465 467\n466 468\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"20 40 30 50 10\"\nassert solution(\"6 20 50\") == \"26 32 20 38 44 50 \nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\nassert solution(\"9 13 22\") == \"1 10 13 4 19 22 25 16 7\"\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10'\nassert solution('''\n10 1 2 3 4 5 6 7 8 9 10\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '5 20 50 2 6 20 50 10'\n"
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 1 49\\n\"\n    \"5 20 50\\n\"\n    \"6 20 50\\n\"\n    \"5 3 8\\n\"\n    \"9 13 22\\n\") == \"1 49 20 40 30 50 10 6 20 50 8 23 18 13 3 19 10 13 4 19 22 25 16 7\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('6 3 1 2 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('3 4 2 5 1') == '1 2 3 4'\nassert solution('4 3 2 5 1') == '1 2 3 4'"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"2 5 1 2\") == \"1 2 5\"\nassert solution(\"5 5 7 6 1 3\") == \"1 2 3 5 7\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 3 1 2\"\"\") == \"1 2 3\"\nassert solution(\"\"\"2 5 2 2 1\"\"\") == \"2 1 1 2 5\"\nassert solution(\"\"\"6 5 7 1 2 8 4\"\"\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"\"\"1 2 3 4 5 6 7 8 9 10\"\"\") == \"10 9 8 7 6 5 4 3 2 1\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 5, 1, 2, 5, 9, 3, 7, 8, 1]) == '1 2 3 5 7 8 9'\n\"\"\"\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"4 4 5 1\") == \"5 1 4\"\nassert solution(\"5 5 3 1\") == \"1 5 3\"\n\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('10 10 1 2 3 4 5 6') == '1 2 3 4 5 6 10'\n\n\"\"\""
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('2 2 3') == '1 2 3'\nassert solution('3 3 1 2') == '1 2 3'\nassert solution('4 3 1 2') == '1 3 2'\nassert solution('5 3 1 2') == '1 3 2'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1 2 3'\n"
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3 2 1''') == '1 2 3'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\n'\nassert solution('''\n3\n3 3 3\n3\n2 2 2\n4\n4 4 4\n4\n1 1 1 1\n''') == 'NO\\n'\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\n'\nassert solution('''\n5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES\\n'\nassert solution('''\n4\n1 1 1 1\n''') == 'NO\\n'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('4') == 'NO'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2\n3\n4\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"NO\"\n\n\n\"\"\"\nfor i in range(int(input())):\n    n = int(input())\n    nums = list(map(int, input().split()))\n    s = 0\n    for i in range(n):\n        if i % 2 == 0:\n            s += nums[i]\n    if s % 2!= 0:\n        print('YES')\n    else:\n        print('NO')\n\"\"\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3\") == \"YES\"\nassert solution(\"3\\n3 3 3\") == \"YES\"\nassert solution(\"4\\n5 5 5 5\") == \"YES\"\nassert solution(\"5\\n3 3 3 3\") == \"NO\"\nassert solution(\"6\\n6 6 6 6\") == \"NO\""
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"YES\"\nassert solution(\"4\\n\") == \"NO\"\nassert solution(\"4\\n\") == \"YES\"\nassert solution(\"5\\n\") == \"NO\""
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3\\n4\") == \"YES\"\nassert solution(\"5\\n2 3\\n4\") == \"NO\"\nassert solution(\"3\\n3 3\\n4\") == \"YES\"\nassert solution(\"4\\n5 5 5 5\") == \"NO\"\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '9 6 10 8 4 7 3 1 5 2'\nassert solution(input) == '5 3 6 2 4 1 7 3 1 4 2'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2', 'Should return permutation'\nassert solution('''\n10\n4\n4\n3\n5\n3\n''') == '5 3 6 2 4 1 7 3 1 5 2', 'Should return permutation'\nassert solution('''\n10\n5\n5\n2\n3\n2\n''') == '-1', 'Should not exist'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"2\\n8\") == \"-1\"\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '-1'\nassert solution(\"3\") == '1 2'\nassert solution(\"4\") == '-1'\nassert solution(\"5\") == '1 2 3 4'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '9 6 10 8 4 7 3 1 5 2'\nassert solution() == '-1'\nassert solution() == '3 1 4 2'\nassert solution() == '5 1 3 6 2 4 7'\nassert solution() == '5 1 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2'"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '3 1'\nassert solution('2\\n4') == '-1'\nassert solution('3\\n5') == '5 3 6 2 4 1'\nassert solution('4\\n6') == '9 6 10 8 4 7 3 1 5 2'"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n5\n2\n4\n6\n7\n10\n13\n''') == '5 3 6 2 4 1 7 1 10 8 4 2 13'\n\nassert solution('''\n4\n6\n3\n1\n7\n2\n''') == '4 1 7 2 3 6'\n\nassert solution('''\n10\n6\n2\n4\n3\n8\n1\n13\n9\n10\n5\n11\n12\n''') == '6 5 4 1 3 10 2 9 8 13 11 12'\n\nassert solution('''\n1\n''') == '-1'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n2\n4\n6\n7\n13\n''') == '9 6 10 8 4 7 3 1 5 2', 'Should be 9 6 10 8 4 7 3 1 5 2'\nassert solution('''\n10\n3\n4\n6\n7\n13\n''') == '-1', 'Should be -1'\nassert solution('''\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '-1'\nassert solution('4') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('5') == '-1'\nassert solution('6') == '9 6 10 8 4 7 3 1 5 2 13'\n"
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    10\n    2\n    4\n    6\n    7\n    13\n''') == '9 6 10 8 4 7 3 1 5 2', 'Case 1'\n\nassert solution('''\n    10\n    2\n    4\n    6\n    7\n    13\n''') == '-1', 'Case 2'\n\nassert solution('''\n    10\n    2\n    4\n    6\n    7\n    13\n    13\n''') == '4 2 6 7 3 1 5 8 10 13 12 11', 'Case 3'\n\nassert solution('''\n    10\n    2\n    4\n    6\n    7\n    13\n''') == '5 1 3 6 2 4 7 3 1 5 2', 'Case 4'\n\nassert solution('''\n    10\n    2\n    4\n    6\n    7\n    13\n''') == '-1', 'Case 5'"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''1\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\nassert solution('''6\n4\n4 2 2 6 7 9 1\n7\n1 3 5 2 8 2 3\n1\n2 4 4 6 8 9 9\n4\n7\n4 3 5\n5\n1 4 7\n2\n2 5 5\n1\n2 4 4\n1\n5 2 4\n5\n4\n3\n4\n4 3\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''3\n3 2 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n3 2 7 6\\n3\\n3 2 6') == '1'\nassert solution('2\\n4\\n3 2 7 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '2'"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '2'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"2\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\n'''\n"
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n0\\n2\\n') == '2'"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n5\n0 0 1 0 0\n1 2\n1 3\n1 4\n1 5\n\n''') == '0 -1 1 -1 1 1 0 2'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3 1 -1 3 1\"\n\nassert solution(\"6\") == \"2 2 -1 2 1 -1 1\"\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"2 2 2 2 1 1 0 2\"\nassert solution(\"4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n\") == \"0 -1 1 -1\""
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 1 1 1 0 0 0 0 1') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1 -1 2 -1'\nassert solution('6') == '0 -1 1 -1'"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n') == '2 2 2 2 1 1 0 2'\nassert solution('10\\n0 0 1 1 0 1 0 0 0 0\\n1 2\\n1 3\\n3 4\\n') == '1 2 2 1 1 0 2 1 1 0 1 1 1 0 2'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1 '\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\nassert solution('7\\n0 0 1 0 0 0 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9') == '0 -1 1 -1'\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '2 2 2 2 1 1 0 2'\nassert solution('7\\n0 0 1 0 0 0 0 0\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n') == '0 -1 1 -1 0 2 2 2 1 1 0 2'\nprint('tests passed')\n"
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2 2 2 2 2 1 1 0 2'\nprint(solution(), end=\"\")\nassert solution() == '-1 1 -1'\nprint(solution(), end=\"\")"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"2\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1\") == \"0\"\nassert solution(\"7\\n2\") == \"1\"\nassert solution(\"7\\n3\") == \"1\"\nassert solution(\"7\\n12\") == \"2\"\nassert solution(\"7\\n12345\") == \"36\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n12') == '2'\nassert solution('7\\n1') == '0'\nassert solution('6\\n12') == '2'\nassert solution('1\\n5') == '-1'\nassert solution('5\\n1') == '-1'\n\n'''"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"12\") == \"36\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '-1'\nassert solution('123') == '1'\nassert solution('1234') == '-1'\nassert solution('12345') == '1'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '36'\nassert solution('12345') == '36'\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"2\"\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"0\"\nassert solution('''\n4\n8\n18\n48\n''') == \"0\"\nassert solution('''\n6\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == \"-1\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"0\"\nassert solution(\"1\\n-1\") == \"-1\"\nassert solution(\"7\\n15116544\") == \"2\""
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 0, \"7\"\nassert solution('3') == -1, \"3\"\nassert solution('5') == 2, \"5\"\nassert solution('10') == -1, \"10\"\nassert solution('111') == -1, \"111\"\n"
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5 2') == '0'\nassert solution('BGGGG') == '1'\nassert solution('5 3') == '0'\nassert solution('RBRGR') == '3'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '0'\nassert solution() == '3'\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"1\"\nassert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"3\"\nassert solution('''\n5 5\nBBBRR\n5 5\nBBBRR\n''') == \"1\"\nassert solution('''\n5 5\nBBBRR\n5 5\nBBBRR\n''') == \"1\"\nassert solution('''\n5 5\nBBBRR\n5 5\nBBBRR\n''') == \"0\"\n'''\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '0'\nassert solution('5 3') == '1'\nassert solution('5 5') == '2'\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"5 5\") == \"2\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nBGGGG\\n5 3\") == \"0\"\nassert solution(\"5 2\\nRBRGR\\n5 5\") == \"3\"\nassert solution(\"5 5\\nBBBRR\\n5 5\") == \"3\"\nassert solution(\"5 5\\nBBBRR\\n5 5\") == \"3\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n\"\"\") == \"0\"\n"
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"3\""
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\n\nassert solution('5\\n5 3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\n\nassert solution('5\\n7 3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\nassert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"5\\n4 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"5\\n5 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"5\\n6 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"2\""
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == \"3\"\nassert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == \"3\""
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '3'\nassert solution('5') == '3'"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == '1 5 2 4 3'\nassert solution('''6\n5\n4 1 2 3 5\n3\n1 2 4 5\n4\n3\n1\n1''') == '1 4 5 3 2'\n\nprint(solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1'''))"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1') == '1 2 4 3 5'\nassert solution('2\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1') == '1 2 4 3 5'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n    \"\"\"\n) == \"1 2 3 4 5\"\nassert solution(\n    \"\"\"\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n    \"\"\"\n) == \"1 2 3 4 5\"\nassert solution(\n    \"\"\"\n5\n4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n    \"\"\"\n) == \"1 2 3 4 5\"\nassert solution(\n    \"\"\"\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n    \"\"\"\n) == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n'''\n    ) == '1 5 2 4 3'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nassert solution('''\n1\n5 4 1 3 2\n''') == '1 2 4 3 5'\n'''\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5', 'First'\nassert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5 4 1 3 2', 'Second'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5 4 1 3 2', 'Third'\nassert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5 4 1 3 2', 'Fourth'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5 4 1 3 2', 'Fifth'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 1 3 2\") == \"1 5 2 4 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n5 4 1 3 2\n4\n1 2 4 3\"\"\") == \"\"\"1 5 2 4 3\"\"\"\nassert solution(\"\"\"4\n5 4 1 3 2\n4\n1 2 4 3\"\"\") == \"\"\"1 2 3 4\"\"\"\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n5 4 1 3 2') == '1 5 2 4 3'\nassert solution('4\\n4 3 2 1') == '1 2 3 4'\n"
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4'\nassert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 3 2 4'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\"\nassert solution(\"4\\n5\\n1 2 3 4\\n3\\n1 3 2\") == \"NO\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"YES\""
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\\nYES\\nNO\\nYES\\nYES\\nYES\"\n\nassert solution(\"4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\\nYES\\nYES\\nYES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"1\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"NO\"\nassert solution(\"4\\n1\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"3\\n1\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES\\nYES\\nYES\\nYES\\nYES'\nassert solution('4') == 'YES\\nYES\\nNO\\nYES'\nassert solution('3') == 'NO\\nNO\\nNO\\nYES'\nassert solution('5') == 'YES\\nYES\\nNO\\nYES\\nYES'"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\"\n\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"NO\"\n\nassert solution('''\n5\n5\n1 2 3 4 5\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\"\n\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == \"YES\""
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nYES\\nYES\\nYES'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'YES'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'NO'\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'NO'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"75015\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"18\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''\n5 1\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''5 1\n2 7\n6 2\n1 1\n1 100000\n''') == '6'\nassert solution('''6 1\n3 4\n4 5\n5 6\n5 7\n5 9\n3 4\n2 5\n1 8\n''') == '9'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n\nassert solution('''5 3\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\n\nassert solution('''5 1\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\n\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '6'\n\nassert solution('''5 3\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"18\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"75015\"\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == \"5\"\nassert solution('''\n5 4\n4 4\n2 5\n2 5\n''') == \"6\"\nassert solution('''\n5 8\n4 6\n2 2\n5 5\n''') == \"9\"\nassert solution('''\n5 10\n2 8\n4 7\n4 5\n5 3\n''') == \"11\""
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n"
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"19 4\") == \"18\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"6 2\") == \"75015\"\nassert solution(\"100000 50010\") == \"75015\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n2 1 1\n1 0\n1 0\n1 0\n1 1\n1 1\nNO''') == 'YES'\nassert solution('''8 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES'\nassert solution('''8 4\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'NO'\nassert solution('''4 2\n3 1\n1 0\n1 0\n1 1\n1 1\n1 1\nYES''') == 'YES'\nassert solution('''5 3\n2 1 1\n1 0\n1 0\n1 0\n1 0\n1 1\nNO''') == 'NO'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'''\n\nassert solution('''\n5\n3 10\n100 4\n8 7\n97 2\n8 8\n''') == 'NO\\n'''\n\nassert solution('''\n7\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n'\n\nassert solution('''\n10\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n'\n\nassert solution('''\n10\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\n'"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"YES 2 2 2 2 2 2 2 2\"\nassert solution(\"10 3\") == \"YES 3 2 2 4\"\nassert solution(\"100 4\") == \"YES 5 4 4 4 4\"\nassert solution(\"8 7\") == \"YES 5 5 5 5 5 5 5 5 5\"\nassert solution(\"97 2\") == \"YES 55 5 5 5 5 5 5 5 5 5\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n3 3\n''') == 'YES'\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES'\nassert solution('''\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES'\nassert solution('''\n10 3\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'NO'\nassert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'NO'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"YES 4 2 4\"\nassert solution(\"10 3\") == \"YES 4 2 4\"\nassert solution(\"100 4\") == \"YES 55 5 5 35\"\nassert solution(\"8 7\") == \"YES 55 5 5 35\"\nassert solution(\"97 2\") == \"YES 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4'\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1\n3 2\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n1\n8 2\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n1\n100 4\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n1\n8 7\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n1\n3 10\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'''\nprint(solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n'''))\n"
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n7 3') == \"YES 2 5 2 1\"\nassert solution('1\\n1') == \"YES 1 1 1 1 1 1 1\"\nassert solution('1\\n9') == \"NO\"\nassert solution('100\\n
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution('''\n7\n5 3\n2 1\n3 2\n1 2\n3 2\n5 3\n''') == \"YES\\n3 2 2\\nNO\\nNO\\nYES\\n\"\nassert solution('''\n7\n5 3\n1 1\n3 2\n1 2\n3 2\n5 3\n''') == \"YES\\n3 2 2\\nNO\\nYES\\n1 1 1\\n\"\nassert solution('''\n7\n5 3\n1 1\n3 2\n1 2\n3 2\n5 3\n''') == \"YES\\n3 2 2\\nYES\\n1 1 1\\n1 1 1\\n\"\nassert solution('''\n7\n5 3\n1 1\n3 2\n1 2\n3 2\n5 3\n''') == \"YES\\n3 2 2\\nYES\\n1 1 1\\n1 1 1\\n\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n1 1 2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '15000000000000000'\nassert solution('''\n1 2\n1 1 2\n1 2 2\n1 2 1\n''') == '3'\nassert solution('''\n1 2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '3'\nassert solution('''\n3\n1 1 2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '3'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == \"55\"\nassert solution('''3\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == \"51\"\nassert solution('''3\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == \"42\""
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n2 1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '51'\nassert solution('''\n5 1 2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '104'\nassert solution('''\n2 1 100\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '100'\nassert solution('''\n3 1 2\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '100'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 3 4\\n1 10 100\\n10000000000000000 10000000000000000 10000000000000000\\n23 34 45\"\n) == \"55\""
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n2 2 3\n1 10\n1\n''') == '2'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == \"55\"\nassert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34\n''') == \"51\"\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 10 100\") == \"55\"\nassert solution(\"10000000000000000 10000000000000000 10000000000000000\") == \"51\""
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 4') == '55'\nassert solution('1 10 100') == '51'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == '55'\nassert solution('1 10 100') == '51'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '15000000000000000'\n"
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\n1 2 3\n1 2 2\n''') == '3'\nassert solution('''\n5\n10\n1 2 3\n1 2 2\n1 2 4\n1 2 5\n1 3 4\n1 3 5\n1 4 6\n1 4 8\n1 5 2\n1 5 4\n1 5 6\n1 6 8\n1 6 10\n1 7 8\n1 7 10\n1 8 10\n1 8 6\n1 8 2\n1 8 1\n1 9 1\n1 9 2\n1 9 3\n1 9 4\n1 9 5\n1 9 6\n1 9 7\n1 9 8\n1 9 9\n2\n1 2 3\n1 2 2\n''') == '7'\nassert solution('''\n3\n1\n1 2\n1 3\n2 4\n3 5\n3 6\n3 7\n4 8\n4 9\n5\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n3 8\n3 9\n4\n1 2\n1 3\n2 4\n3 5\n3 6\n''') == '9'\nassert solution('''\n5\n1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2\n1 2\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n1 10\na aa\n1 10\n''') == '10'\nassert solution('''\n5 5\na b c\na c\n''') == '6'\nassert solution('''\n1 10\na\n''') == '10'\nassert solution('''\n1 10\na\n''') == '10'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '15'"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 2') == '2'\nassert solution('4 2') == '1'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 3\naaaa\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa''') == '6'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa''') == '3'\nassert solution('''6 3\naaaa\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa''') == '5'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa''') == '4'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa''') == '15'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '1'\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10''') == \"6\"\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10''') == \"3\"\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10''') == \"5\"\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10''') == \"4\"\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10''') == \"15\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n6 2\nabcb\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n6 3\naaee\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '4'\n'''"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 5\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"5 4\") == \"NO\""
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO\\n', \"Wrong result\"\nassert solution('2\\n3 3\\n4 5\\n3 2\\n1 3\\n0') == 'YES\\n1 3\\nNO\\nNO\\n', \"Wrong result\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO\\nNO'\nassert solution('2\\n10 4\\n1 2 3 4 5\\n1 2 8 4 10 2') == 'YES\\n1 2\\nNO\\nNO\\nNO'\nassert solution('3\\n15 4\\n1 2 3 4 5\\n1 2 8 4 10 2') == 'YES\\n1 2\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO\\n', solution(\"\"\"\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\")"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\") == \"YES\\n1 3 5\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 3 5\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\nassert solution('''2\n2\n2\n''') == 'NO'\nassert solution('''2\n2\n2\n''') == 'NO'"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2\\n') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n"
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\n\n\nassert solution('''\n6 2\n1 2 3 4 5 6\n6 2\n1 2 8 4 10 2\n''') == 'NO'\n\n\nassert solution('''\n3 4\n4 4 1 2\n1 1 2 2\n''') == 'YES'\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\n    \"11111111111111111111111111111111\") == \"3221225471\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"101\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"1\") == \"1\"\nassert solution(\"111111111111111111111111111111111\") == \"10111111111111111111111111111111\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"000000000000101111111111101101010010101111011100\") == \"964176192\"\nassert solution
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_str) == '964176192'\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == '964176192'\nassert solution(\"111111111111111111111111111111101\") == '3221225471'\n\n'''\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\n\n'''\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11001010010000111010010111101001') == '964176192'\nassert solution('11001010010000111010010111101001') == '964176192'\nassert solution('11001010010000111010010111101001') == '964176192'\n"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\", \"error\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\", \"error\"\nassert solution(\"01010111010101110101011101010101\") == \"18446744073709551615\", \"error\"\n\"\"\"\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        return int(bin(n)[2:].zfill(32)[::-1],2)"
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00000000000000000000000000000001') == '111001111111111111111111111111110'\nassert solution('0000000000000000000000000000001') == '111001111111111111111111111111101'\nassert solution('0000000000000000000000000000010') == '1110011111111111111111111111111100'\nassert solution('0000000000000000000000000000011') == '1110011111111111111111111111111101'\nassert solution('0000000000000000000000000000100') == '1110011111111111111111111111111110'\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n''') == stdin('''\n1\n1 1\n1 2 1\n1 3 3 1\n1 4 6 4 1\n''')\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n''') == '''\n[\n    [1],\n    [1,1],\n    [1,2,1],\n    [1,3,3,1],\n    [1,4,6,4,1],\n    [1,5,10,10,5,1]\n]'''\nassert solution('''2\n''') == '''\n[\n    [1],\n    [1,1]\n]'''"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n3\n7 8 9 10 11\n12 13 14 15 16\n17 18 19 20 21\n22 23 24 25 26\n27 28 29 30 31\n''') == '\\n'.join('''1\n2 3\n3 4 5\n4 5 6 7\n5 6 8 9 10\n6 7 8 9 10 11\n7 8 9 10 11 12\n8 9 10 11 12 13\n9 10 11 12 13 14\n10 11 12 13 14 15\n11 12 13 14 15 16\n12 13 14 15 16 17\n13 14 15 16 17 18\n14 15 16 17 18 19\n15 16 17 18 19 20'''.splitlines())"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n''') == \"[\\n[1],\\n[1,1],\\n[1,2,1],\\n[1,3,3,1],\\n[1,4,6,4,1]\\n]\\n\"\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '\\n'.join([str(i) for i in pascals_triangle(5)]), \"All test cases passed.\"\nassert solution('1') == '\\n'.join([str(i) for i in pascals_triangle(1)]), \"All test cases passed.\"\nassert solution('6') == '\\n'.join([str(i) for i in pascals_triangle(6)]), \"All test cases passed.\"\n\n\n'''\nclass Solution:\n    def get_row(self, r):\n        if r == 1:\n            return [1]\n        res = [1]\n        for i in range(1, r):\n            res.append(self.get_row(r - 1) + self.get_row(r - 1))\n        return res\n\n    def pascal(self, n):\n        if n == 0:\n            return []\n        res = self.get_row(n)\n        return res"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n''') == '''\n[\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n'''\nassert solution('''\n10\n''') == '''\n[\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1],\n [1,5,10,10,5,1],\n [1,6,15,20,15,6,1],\n [1,7,21,35,35,21,7,1],\n [1,8,28,56,70,56,28,8,1],\n [1,9,36,84,126,126,84,36,9,1]\n]\n'''"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5) == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution(0) == []\n\"\"\""
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"7\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\""
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\nassert solution('1') == [[1]]\nassert solution('2') == [[1], [1, 1]]\nassert solution('3') == [[1], [1, 1], [1, 2, 1]]\nassert solution('4') == [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]\n"
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '\\n'.join(['1', '1', '1', '1', '1'])\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\n    \"abcd@yahoo.com\",\n    \"gmskhh@naver.com\",\n    \"hjibwwx@virginia.edu\"\n]) == [\"hjibwwx@virginia.edu\", \"gmskhh@naver.com\", \"abcd@yahoo.com\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n1@1.c''') == ['1@1.c', '1@1.c', '1@1.c']\nassert solution('''1\n2\n3\n1@1.c''') == ['1@1.c', '1@1.c', '1@1.c']\nassert solution('''1\n2\n3\n1@1.c''') == ['1@1.c']\nassert solution('''1\n2\n3\n1@1.c''') == []\nassert solution('''1\n2\n3\n4@1.c\n5@1.c\n6@1.c''') == ['4@1.c', '5@1.c', '6@1.c']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n@gmail.com\\n@yahoo.com\\n@uc.cl\\n@aol.com\\n@sales.us\\n@alaska.edu\\n@mac.com\\n@career.uc.edu\\n@career.uc.edu\") == [\"@gmail.com\", \"@yahoo.com\", \"@uc.cl\", \"@sales.us\", \"@alaska.edu\", \"@mac.com\"]\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    4\n    john.doe@gmail.com\n    johnny.mccoy@somemail.com\n    jack@gmail.com\n    john.doe@gmail.com\n    johnny.mccoy@somemail.com\n    jack@gmail.com\n    ''') == ['john.doe@gmail.com', 'jack@gmail.com', 'johnny.mccoy@somemail.com']\n    \n\n'''"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2@gmail.com\\n3@gmail.com\") == [\"2@gmail.com\", \"3@gmail.com\"]\nassert solution(\"2\\n1@gmail.com\\n2@gmail.com\") == [\"1@gmail.com\"]\nassert solution(\"3\\n1@gmail.com\\n3@gmail.com\") == [\"1@gmail.com\", \"3@gmail.com\"]\n=====Sample Input/Output=====\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([]) == [\"\"]\nassert solution([\n    \"test.email+alex@leetcode.com\",\n    \"test.e.mail+bob.cathy@leetcode.com\",\n    \"testemail+david@lee.tcode.com\"\n]) == [\"test.email@leetcode.com\", \"test.e.mail@leetcode.com\", \"testemail@lee.tcode.com\"]\nassert solution([\n    \"a@leetcode.com\",\n    \"b@leetcode.com\",\n    \"c@leetcode.com\"\n]) == [\"b@leetcode.com\", \"a@leetcode.com\", \"c@leetcode.com\"]\n\n=====Sample Input & Output=====\nSample Input 1\n\n3\nleetcode.com\nleetcode.com\nleetcode.com\nSample Output 1\n\n[\"leetcode.com\",\"leetcode.com\",\"leetcode.com\"]\n\n=====Explanation=====\nTest Case 1\nThe first valid email address is leetcode.com because it starts with leet, which is the first character of the email domain name leetcode.com.\nThe second valid email address is leetcode.com because it starts with leet, which is the first character of the email domain name leetcode.com.\nThe third valid email address is leetcode.com because it starts with leet, which is the first character of the email domain name leetcode.com.\n\nTest Case 2\nThe first valid email address is a@leetcode.com because it starts with a, which is the first character of the email domain name a@leetcode.com.\nThe second valid email address is b@leetcode.com because it starts with b, which is the first character of the email domain name b@leetcode.com.\nThe third valid email address is c@leetcode.com because it starts with c, which is the first character of the email domain name c@leetcode.com.\n\nTest Case 3\nThe first valid email address is neither a@leetcode.com nor b@leetcode.com because a@leetcode.com doesn't start with leet, and b@leetcode.com doesn't start with leet.\n\"\"\"\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['andrew@stevens.edu']) == ['andrew@stevens.edu']\nassert solution(['michael@stevens.edu', 'chris@stevens.edu', 'andrew@stevens.edu']) == ['michael@stevens.edu', 'andrew@stevens.edu']\nassert solution(['stephen@stevens.edu','stephen@stevens.edu','michael@stevens.edu', 'chris@stevens.edu','michael@stevens.edu','stephen@stevens.edu','stephen@stevens.edu', 'chris@stevens.edu']) == ['stephen@stevens.edu','stephen@stevens.edu','michael@stevens.edu','michael@stevens.edu', 'chris@stevens.edu']\nassert solution(['andrew@stevens.edu','stevens@stevens.edu','stevens@stevens.edu']) == ['andrew@stevens.edu']\nassert solution(['andrew@stevens.edu','stevens@stevens.edu','stevens@stevens.edu']) == ['andrew@stevens.edu','stevens@stevens.edu']\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nuser@abc.com\") == \"user@abc.com\"\nassert solution(\"3\\nuser2@abc.com\") == \"user2@abc.com\"\nassert solution(\"3\\nuser3@abc.com\") == \"\"\n"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'h@i'\nassert solution('2\\nh@i') == 'h@i'\n\n'''"
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\ngmail.com\\ngmail.com\\nyahoo.com\") == [\"gmail.com\", \"yahoo.com\"]\nassert solution(\"3\\ngmail.com\\ngmail.com\\nyahoo.com\\nyahoo.com\\nyahoo.com\") == [\"gmail.com\", \"yahoo.com\"]\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''5''') == \\\n'''[0, 1, 8, 27, 64]'''"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '''[0, 1, 1, 8, 27]'''\n=====Sample Test Cases=====\nInput 1\n\nOutput 1\n\n'''\nOutput 1\n\n[0, 1, 1, 8, 27]\nInput 2\n\nOutput 2\n\n'''\nOutput 2\n\n[0, 1, 1, 8, 27]\n\"\"\""
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"0 1 1 8\"\nassert solution(\"10\") == \"0 1 1 8 9 27\"\nassert solution(\"-1\") == \"\"\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == [0, 1, 1, 8, 27]"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == '0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 51244 7920 2673 39088 71493 84669 1316 9224'"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '0 1 1 8 27'"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == ['0', '1', '8', '27', '64']\n\nSample Test Cases\nInput\n\nOutput\n\nExplanation\n\nInput 1:\n\n5\nOutput 1:\n\n0 1 8 27 64\n\nInput 2:\n\n2\nOutput 2:\n\n0 1\n\n'''"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"[0, 1, 8, 27, 64]\", solution(\"5\")\nassert solution(\"10\") == \"[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\", solution(\"10\")\nassert solution(\"25\") == \"[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155]\", solution(\"25\")\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == [1, 8, 27]\nassert solution('5') == [1, 8, 27, 64, 125]\n"
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == []\nassert solution('5') == [0, 1, 1, 8, 27]\nassert solution('10') == [0, 1, 1, 8, 27, 56, 89, 144, 233, 377]\n\n=====Explanation=====\nTest Case 1:\n\n>>> solution('')\n[]\n\n>>> solution('5')\n[0, 1, 1, 8, 27]\n\n>>> solution('10')\n[0, 1, 1, 8, 27, 56, 89, 144, 233, 377]\n\"\"\"\n\nstdin = input()\nn = int(stdin)\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('<a><b><c><d><e><f><g></g></f></e></d></c></b></a>') == 3\n\n===================================================================================================================\n\n=======  Code Explanation  ======="
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == 3\n=====Sample Input & Output Section=====\nSample Input 1:\n\n6\n<feed xml:lang='en'>\n    <title>XML Developer News</title>\n    <subtitle lang='en'>Developer has updated their XML proddution on the news site.</subtitle>\n    <link rel='alternate' href='http://example.com/rss' type='application/rss+xml'/>\n    <updated>2013-12-25T12:20:00Z</updated>\n</feed>\nSample Output 1:\n\n2\nSample Input 2:\n\n5\n<feed xml:lang='en'>\n    <title>XML Developer News</title>\n    <subtitle lang='en'>Developer has updated their XML proddution on the news site.</subtitle>\n    <link rel='alternate' href='http://example.com/rss' type='application/rss+xml'/>\n    <updated>2013-12-25T12:20:00Z</updated>\n    <author>\n        <name>John Smith</name>\n        <email>jsmith@example.com</email>\n    </author>\n</feed>\nSample Output 2:\n\n2\n=====Sample Test Case=====\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('<feed xml:lang=\"en\"><title>HackerRank</title><subtitle lang=\"en\">Programming</subtitle><content><![CDATA[<em>Programming is cool!</em>]]></content></feed>') == '4'\nassert solution('<feed><title>HackerRank</title><subtitle lang=\"en\">Programming</subtitle><content><![CDATA[<em>Programming is cool!</em>]]></content></feed>') == '3'\nassert solution('<feed><title>HackerRank</title><subtitle lang=\"en\">Programming</subtitle><content><![CDATA[<em>Hi</em>]]></content></feed>') == '1'\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <link rel=\"alternate\" href=\"some.rss\"/>\n  <id>some.rss</id>\n</feed>''') == 2\n\nassert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <link rel=\"alternate\" href=\"some.rss\"/>\n  <id>some.rss</id>\n  <author>\n    <name>Some name</name>\n  </author>\n  <updated>2015-12-30T11:21:00Z</updated>\n  <subtitle>Some subtitle</subtitle>\n  <icon>http://www.example.com/icon.png</icon>\n  <rights>Copyright 2015 Some Copyright</rights>\n  <entry>\n    <title>Some entry title</title>\n    <link rel=\"alternate\" href=\"some.entry\"/>\n    <id>some.entry</id>\n    <updated>2015-12-30T11:21:00Z</updated>\n    <author>\n      <name>Some entry name</name>\n    </author>\n    <content type=\"html\" />\n    <summary>Some entry summary</summary>\n    <category term=\"some category\"/>\n    <content type=\"application/atom+xml\" />\n  </entry>\n</feed>''') == 3\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('<hello>\\n<world>This is a test') == 3\nassert solution('<hello>\\n<world>This is a test</world>') == 2\nassert solution('<hello>\\n<world><foo><bar>This is a test</bar></foo></world>') == 5\nassert solution('<hello>\\n<world><foo><bar><baz>This is a test</baz></bar></foo></world>') == 6\n=====Constraints=====\n1 <= N <= 100\nEach of the N lines will have the structure: <tag>text</tag>\nThe text will only contain the set {' ', '>'}\n\n'''\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == \"2\"\n\nassert solution(\"\"\"<feed xml:lang='en'>\n  <title>HackerRank</title>\n  <subtitle lang='en'>Programming challenges</subtitle>\n  <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n  <updated>2013-12-25T12:00:00</updated>\n</feed>\"\"\") == \"0\"\n\"\"\")\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n</feed>') == 1\nassert solution('<feed xml:lang=\"en\">\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n</feed>') == 1\nassert solution('<feed xml:lang=\"en\">\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n</feed>') == 2\nassert solution('<feed xml:lang=\"en\">\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n  <title>Spam!</title>\\n</feed>') == 4\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n<a><b>hello\\n</b><c>world</c></a>') == 2\n"
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n<feed xml:lang=\"en\">\\n<title>XML Developer News</title>\\n<subtitle lang=\"en\">Developer</subtitle>\\n<link rel=\"alternate\" href=\"http://example.com/rss\"/>\\n<link rel=\"alternate\" href=\"http://example.com/atom\"/>\\n</feed>\\n') == '3'\n\n=========================================\n=================================================================================================================\nWrite a Python program to remove all consecutive duplicates from a given list of integers.\n\n=====Problem Statement=====\nGiven a list of integers, remove all consecutive duplicates from the list.\n\n=====Input Format=====\nGiven list of integers.\n\n=====Output Format=====\nReturn a list after removing all consecutive duplicates from the list."
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''<?xml version=\"1.0\"?>\n<data>\n  <list>\n    <item>text</item>\n    <item>text</item>\n  </list>\n</data>''') == 1\n\nassert solution('''<?xml version=\"1.0\"?>\n<data>\n  <list>\n    <item>text</item>\n    <item>text</item>\n    <item>text</item>\n    <item>text</item>\n  </list>\n</data>''') == 2\n\nassert solution('''<?xml version=\"1.0\"?>\n<data>\n  <list>\n    <item>text</item>\n    <item>text</item>\n    <item>text</item>\n  </list>\n</data>''') == 3\n\nassert solution('''<?xml version=\"1.0\"?>\n<data>\n  <list>\n    <item>text</item>\n    <item>text</item>\n    <item>text</item>\n  </list>\n</data>''') == 3\n\nassert solution('''<?xml version=\"1.0\"?>\n<data>\n  <list>\n    <item>text</item>\n    <item>text</item>\n    <item>text</item>\n  </list>\n</data>''') == 3"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n73849394813') == 'YES\\nNO'\nassert solution('1\\n91012345678') == 'YES\\nNO'\n\nNote: The mobile number may have +91, +971, +977 or any other prefix.\nNote: For simplicity, you are not permitted to use any features/libraries which is built into mobile number validation\nin your application.\n\n\"\"\""
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n9876543210\n9'8'76543210\n\n''') == 'NO'\nassert solution('''\n2\n987\n89\n\n''') == 'YES'\nassert solution('''\n3\n1\n8\n\n''') == 'NO'"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n923410234567\n991111111111\n9876543210''') == 'YES\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('''8\n923410234567\n991111111111\n9876543210''') == 'YES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n'\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n9880652988\n98806529"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n'\n\"\"\"\n\nn = int(input())\n\nfor _ in range(n):\n    num = input()\n    if any(len(i) == 10 for i in num.split(' ')):\n        if any(i.startswith('7' or '8' or '9') for i in num.split(' ')):\n            print('YES')\n    else:\n        print('NO')\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 80123 456\\n8901234\") == \"YES\"\nassert solution(\"7 80123 456\\n89012345\") == \"NO\"\n\"\"\"\n\nimport re\n\nfor _ in range(int(input())):\n    s = input()\n    if re.match(r\"^7|8|9\\d{9}$\", s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6\n9283629364\n708413632571\n990210203040\n708413632571\n9283629364\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n6\n9283629364\n708413632571\n990210203040\n708413632571\n9283629364\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n9283629364\n708413632571\n990210203040\n708413632571\n9283629364\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n9283629364\n708413632571\n990210203040\n708413632571\n9283629364\n\"\"\") == \"NO\"\n\"\"\"\n\n'''\nimport re\nfor _ in range(int(input())):\n    s=input()\n    if re.match(r\"^(?:[789]\\d{9}|\\d{10})\\d{9}$\",s):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n'''\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n734234567\\n91012345\\n') == \"NO\\nNO\", \"Should be NO\"\nassert solution('2\\n56789123\\n34567891\\n') == \"YES\\nYES\", \"Should be YES\"\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n697234\n884321\n882332\n442322''') == \"YES\\nNO\\nYES\\nNO\"\n\nassert solution('''2\n81212\n8112''') == \"NO\"\n\n=====Sample Input 1=====\n2\n\n697234\n884321\n882332\n442322\n\n=====Sample Output 1=====\nYES\nNO\n'''\n"
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n718273645\\n868273645\\n') == 'YES'\nassert solution('1\\n678910\\n678910\\n') == 'YES'\nassert solution('2\\n718910\\n678910\\n') == 'NO'\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n\n\n'''\n\nclass Solution:\n    def symmetricDifference(self, a: List[int], b: List[int]) -> List[int]:\n        # list(set(a) - set(b))\n        # list(set(b) - set(a))\n        return list(set(a) ^ set(b))\n'''"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n4 5\n2 4''') == '''4 5\n2'''\n\"\"\"\n\n\n=====Expected Output=====\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 4, 5, 9, 11, 12]) == [9, 11, 12, 2, 4, 5]\nassert solution([1, 2, 3, 4, 5]) == [1, 3, 4, 5, 2]\nassert solution([1, 1, 2, 4, 5]) == [1, 4, 2, 5, 1]\nassert solution([2, 4, 5, 9, 11, 12]) == [9, 11, 12, 2, 4, 5]\nassert solution([1, 2, 3, 4, 5]) == [1, 3, 4, 5, 2]\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 3 2') == '3 2 1'\nassert solution('7 6 5 8') == '2 1 3 4 5 6 7'\nassert solution('1 4 3') == '2 3 4'\n\n=====Sample Input & Output=====\nInput\n\n7 4 3 2\n7 6 5 8\nOutput\n\n3 2 1\n2 1 3\n3 4 5 6 7 8 \n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3 2') == \"3 2 4 5\"\nassert solution('2 4 5 3') == \"3 2 4 5\"\nassert solution('4 5 2 3') == \"3 2 4 5\"\nassert solution('2 4 5 3') == \"3 2 4 5\""
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 5 8') == '5 7'\nassert solution('2 2 2 3') == '3'\n\n>>>>\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3 4') == '5'\nassert solution('1 2 3 5') == '4'\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n2 4 5 9 11\\n15\\n2 4 11 12') == '9 5 11 12\\n2 4 15\\n'\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4''') == '3 5 1 4 2'\nassert solution('''7\n1 2 3 4 5 6 7\n2 4''') == '3 5 6 7 1 4'\nassert solution('''4\n1 2 3 4\n2 4''') == '3 1 4 2'\n'''\n"
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 5 9 11 12\") == \"9 12 11\"\nassert solution(\"2 4 5 9 11\") == \"9 11 12\"\nassert solution(\"2 4 5 9\") == \"9 12 11\"\nassert solution(\"2 4 5 9 10\") == \"9 12 11 10\""
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 2 3 4 5\\n1\\n2 3 4 5\") == \"2.00\"\n\n=====Test Cases=====\nInput\n1\n1 2 3 4 5\n1\n2 3 4 5\nOutput\n2.00\n\nInput\n5\nID        MARKS      NAME       CLASS\n1        97         Alex       7\n2        100         Ray       10\n3        91         Adrian    9\n4        72         Stewart   5\n5        80         Peter      6\nOutput\n82.00\n\n=====Explanation=====\nAvg = (97+100+91+72+80)/5 = 82.0\n\n=====Internal Testing====="
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nA B C D E\\n1 2 3 4 5\\n6 7 8 9 10 11\\n12 13 14 15 16 17\\n18 19 20 21 22 23\") == \"8.00\"\nassert solution(\"2\\nA B\\n1 2\\n3 4\") == \"3.00\"\n=====Input Sample Test Cases=====\nInput\n1\nA B C D E\n1 2 3 4 5\n6 7 8 9 10 11\n12 13 14 15 16 17\n18 19 20 21 22 23\n\nOutput\n8.00\n\nInput\n2\nA B C D E\n1 2 3 4 5\n6 7 8 9 10 11\n12 13 14 15 16 17\n18 19 20 21 22 23\n\nOutput\n8.00\n\nInput\n3\nA B C D\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n\nOutput\n7.67\n\nInput\n4\nA B C D E\n1 2 3 4 5\n6 7 8 9 10 11\n12 13 14 15 16 17\n18 19 20 21 22 23\n24 25 26 27 28\n29 30\n\nOutput\n7.67\n\n'''\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 2 3\\n2 5 6\\n\") == \"3.00\"\nassert solution(\"1\\n1 2 3\\n2 5 6\\n\") == \"3.00\"\nassert solution(\"1\\n1 2 3\\n2 5 6\\n\") == \"3.00\"\nassert solution(\"1\\n1 2 3\\n2 5 6\\n\") == \"3.00\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2\n2 4\n5 7''') == '3.18'\nassert solution('''2\n1 2\n2 4''') == '3.25'''\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1\\n1\\n2\\n3\") == \"1.5\"\n\n'''\nimport collections\nfrom collections import namedtuple\n\ncollections.namedtuple()\n\n>>> from collections import namedtuple\n>>> Point = namedtuple('Point','x,y')\n>>> pt1 = Point(1,2)\n>>> pt2 = Point(3,4)\n>>> dot_product = ( pt1.x * pt2.x ) +( pt1.y * pt2.y )\n>>> print dot_product\n11\n\n>>> from collections import namedtuple\n>>> Car = namedtuple('Car','Price Mileage Colour Class')\n>>> xyz = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\n>>> print xyz\nCar(Price=100000, Mileage=30, Colour='Cyan', Class='Y')\n>>> print xyz.Class\nY"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nID,MARKS,CLASS,NAME\\n1,67,2,john\\n2,67,2,jack\\n') == '67.00'\nassert solution('5\\nID,MARKS,CLASS,NAME\\n1,67,2,john\\n2,67,2,jack\\n3,67,2,john\\n4,67,2,jack\\n5,67,2,john\\n') == '67.00'\n'''\n\nclass student_data:\n    def __init__(self, id, marks, class_name, student_name):\n        self.id = id\n        self.marks = marks\n        self.class_name = class_name\n        self.student_name = student_name\n    \n    def avg(self):\n        avg_marks = sum(self.marks) / len(self.marks)\n        return avg_marks"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nID,MARKS,CLASS,NAME\\n1,67,2,JAMES\\n2,88,1,JAMES\\n') == \"67.00\"\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 2 3\\n2 3 4\\n3 4 5') == \"2.00\"\n=====Explanation=====\nExample 1:\nIn the above example, 2 marks are given. The average of the marks is 2.\nExample 2:\nIn the above example, 1 mark is given. The average of the marks is 1.\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nID,MARKS,CLASS,NAME\\n1,89,3,Sami\\n2,87,7,Sara\\n3,91,9,Sara\\n4,91,9,Sami\") == \"89.00\"\n\n=====Test Case 1=====\nInput\n4\nID,MARKS,CLASS,NAME\n1,89,3,Sami\n2,87,7,Sara\n3,91,9,Sara\n4,91,9,Sami\nOutput\n89.00\n\n=====Test Case 2=====\nInput\n4\nID,MARKS,CLASS,NAME\n1,89,3,Sami\n2,87,7,Sara\n3,91,9,Sara\n4,91,9,Sami\nOutput\n95.00\n=====Test Case 3=====\nInput\n1\nID,MARKS,CLASS,NAME\n1,89,3,Sami\nOutput\n89.0\n\n=====Test Case 4=====\nInput\n2\nID,MARKS,CLASS,NAME\n1,89,3,Sami\n2,87,7,Sara\nOutput\n92.5\n\n=====Test Case 5=====\nInput\n3\nID,MARKS,CLASS,NAME\n1,89,3,Sami\n2,87,7,Sara\n3,91,9,Sara\nOutput\n80.0\n\n=====Test Case 6=====\nInput\n4\nID,MARKS,CLASS,NAME\n1,89,3,Sami\n2,87,7,Sara\n3,91,9,Sara\n4,91,9,Sami\nOutput\n91.0\n"
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nA B C D\\n1 2 3 4\\n5 6 7 8\\n\") == \"3.14\"\n\n=====Sample Input & Output=====\nInput\nThe first line contains an integer,, the total number of students.\nThe second line contains the names of the columns in any order.\nThe next  lines contain the marks, IDs, name and class, under their respective column names.\n\nOutput\nPrint the average marks of the list corrected to 2 decimal places.\n\nSample Input\n2\nA B C D\n1 2 3 4\n5 6 7 8\nSample Output\n3.14\n\n=====Explanation=====\n1st testcase\n1st testcase, if we apply 2nd testcase, we get A,B,C,D\n2nd testcase, we apply 1st testcase\nAverage marks = ((1+2+3+4+5+6+7+8)/8) = (5+6+7+8)/8 = 3.14\n'''\n\nfrom collections import namedtuple\n\nPoint = namedtuple('Point', 'x, y')\npt1 = Point(1, 2)\npt2 = Point(3, 4)\ndot_product = (pt1.x * pt2.x) + (pt1.y * pt2.y)\nprint(dot_product)"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"6\") == \"Weird\"\nassert solution(\"21\") == \"Not Weird\"\nassert solution(\"12\") == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n''') == 'Not Weird'\nassert solution('''\n4\n''') == 'Not Weird'\nassert solution('''\n20\n''') == 'Weird'\nassert solution('''\n6\n''') == 'Weird'\n''') == 'Not Weird'"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Not Weird\"\nassert solution(\"1\") == \"Weird\"\nassert solution(\"2\") == \"Not Weird\"\nassert solution(\"3\") == \"Weird\"\nassert solution(\"4\") == \"Not Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('21') == 'Weird'\nassert solution('4') == 'Weird'\nassert solution('6') == 'Weird'\nassert solution('20') == 'Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(100) == 'Not Weird'\nassert solution(3) == 'Weird'\nassert solution(4) == 'Weird'\nassert solution(11) == 'Weird'\nassert solution(21) == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''20\n''') == 'Not Weird'\nassert solution('''5\n''') == 'Weird'\nassert solution('''3\n''') == 'Not Weird'\nassert solution('''18\n''') == 'Not Weird'\n''')\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Weird'\nassert solution('4') == 'Not Weird'\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1]) == \"Not Weird\"\nassert solution([2]) == \"Weird\"\nassert solution([3]) == \"Not Weird\"\nassert solution([4]) == \"Weird\"\nassert solution([5]) == \"Weird\"\n"
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == 'Weird', '3'\nassert solution('1') == 'Not Weird', '4'\nassert solution('14') == 'Weird', '15'\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n<feed xml:lang=\"en\"><title>How to make shells fast!</title><subtitle lang=\"en\">Learn XML</subtitle><link rel=\"alternate\" href=\"http://example.com/feed/\"/>Hello!</feed>') == '1'\n\nassert solution('6\\n<feed xml:lang=\"en\"><title>Hi, World!</title><subtitle lang=\"en\">How are you?</subtitle><link rel=\"alternate\" href=\"http://example.com/feed/\"/>Hello!</feed>') == '2'\n\nassert solution('5\\n<feed xml:lang=\"en\"><title>Hi, World!</title><subtitle lang=\"en\">How are you?</subtitle><link rel=\"alternate\" href=\"http://example.com/feed/\"/>Hello!</feed>') == '3'\n\nassert solution('5\\n<feed xml:lang=\"en\"><title>Hi, World!</title><subtitle lang=\"en\">How are you?</subtitle><link rel=\"alternate\" href=\"http://example.com/feed/\"/>Hello!</feed>') == '4'\n\nassert solution('5\\n<feed xml:lang=\"en\"><title>Hi, World!</title><subtitle lang=\"en\">How are you?</subtitle><link rel=\"alternate\" href=\"http://example.com/feed/\"/>Hello!</feed>') == '5'\n\n=====Example Input 1=====\n5\n<feed xml:lang=\"en\"><title>Hi, World!</title><subtitle lang=\"en\">How are you?</subtitle><link rel=\"alternate\" href=\"http://example.com/feed/\"/>Hello!</feed>\n\n=====Example Output 1=====\n1\n\n>>>>>>> Stashed changes\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/SDSU</title>\n  <link href='http://www.sdsu.edu/CS3240/SDSU/index.html'/>\n  <description> This is a nice site </description>\n  <category>Science</category>\n  <title>CS3240/"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''<feed xmlns:media=\"http://search.yahoo.com/mrss/\">\n    <title></title>\n    <link>http://search.yahoo.com/</link>\n    <description></description>\n    <subtitle></subtitle>\n    <icon></icon>\n    <rights></rights>\n    <pubDate></pubDate>\n    <updated></updated>\n    <generator></generator>\n    <ttl></ttl>\n    <media:thumbnail></media:thumbnail>\n    <media:video></media:video>\n    <media:player></media:player>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp3\"/>\n    </media:content>\n    <media:content type=\"image/gif\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/x-mpegurl\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"image/jpeg\">\n    <media:source src=\"http://podcast.example.com/feed.jpg\"/>\n    </media:content>\n    <media:content type=\"audio/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.m4a\"/>\n    </media:content>\n    <media:content type=\"video/mp4\">\n    <media:source src=\"http://podcast.example.com/feed.mp4\"/>\n    </media:content>\n    <media:content type=\"video/mp4"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n<doc>2 3 4</doc>\\n') == '6', \"Test 1 Failed\"\nassert solution('2\\n<doc>\\n2 3 4\\n</doc>\\n') == '9', \"Test 2 Failed\"\nassert solution('3\\n<doc>\\n2 3\\n4\\n</doc>\\n') == '3', \"Test 3 Failed\"\nassert solution('4\\n<doc>\\n1 2\\n3 4\\n</doc>\\n') == '3', \"Test 4 Failed\"\nassert solution('5\\n<doc>\\n1 2\\n3 4\\n</doc>\\n') == '5', \"Test 5 Failed\"\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n<title>HackerRank</title>\n<link rel='alternate' href='http://hackerrank.com/'/>\n<link rel='alternate' href='http://hackerrank.com/hackerrank'/>\n<updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == '6'\n'''\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n      xmlns:mathml=\"http://www.w3.org/1998/Math/MathML\"\n      xmlns:svg=\"http://www.w3.org/2000/svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n      xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n      version=\"1.0.7\"\n      id=\"svg11\"\n      width=\"50.0\"\n      height=\"50.0\"\n      viewBox=\"0 0 100 100\">\n    <svg>\n        <rect x=\"0\" y=\"0\" width=\"100.0\" height=\"50.0\" fill=\"blue\" />\n        <rect x=\"0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"red\" />\n        <rect x=\"0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"green\" />\n    </svg>\n</feed>\n''') == \"3.0\"\nassert solution('''\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n      xmlns:mathml=\"http://www.w3.org/1998/Math/MathML\"\n      xmlns:svg=\"http://www.w3.org/2000/svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n      xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n      version=\"1.0.7\"\n      id=\"svg11\"\n      width=\"50.0\"\n      height=\"50.0\"\n      viewBox=\"0 0 100 100\">\n    <svg>\n        <rect x=\"0\" y=\"0\" width=\"100.0\" height=\"50.0\" fill=\"blue\" />\n        <rect x=\"0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"red\" />\n        <rect x=\"0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"green\" />\n        <rect x=\"50.0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"yellow\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"pink\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"orange\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"purple\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"brown\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"grey\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"white\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"black\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"white\" stroke=\"none\" />\n    </svg>\n</feed>\n''') == \"2.0\"\nassert solution('''\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n      xmlns:mathml=\"http://www.w3.org/1998/Math/MathML\"\n      xmlns:svg=\"http://www.w3.org/2000/svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n      xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n      version=\"1.0.7\"\n      id=\"svg11\"\n      width=\"50.0\"\n      height=\"50.0\"\n      viewBox=\"0 0 100 100\">\n    <svg>\n        <rect x=\"0\" y=\"0\" width=\"100.0\" height=\"50.0\" fill=\"blue\" />\n        <rect x=\"0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"red\" />\n        <rect x=\"0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"green\" />\n        <rect x=\"50.0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"yellow\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"pink\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"orange\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"purple\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"brown\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"grey\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"white\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"black\" />\n        <rect x=\"50.0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"white\" stroke=\"none\" />\n        <rect x=\"0\" y=\"50.0\" width=\"100.0\" height=\"50.0\" fill=\"none\" stroke=\"black\" />\n        <rect x=\"50.0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"none\" stroke=\"black\" />\n    </svg>\n</feed>\n''') == \"3.0\"\nassert solution('''\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n      xmlns:mathml=\"http://www.w3.org/1998/Math/MathML\"\n      xmlns:svg=\"http://www.w3.org/2000/svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n      xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n      version=\"1.0.7\"\n      id=\"svg11\"\n      width=\"50.0\"\n      height=\"50.0\"\n      viewBox=\"0 0 100 100\">\n    <svg>\n        <rect x=\"0\" y=\"0\" width=\"100.0\" height=\"50.0\" fill=\"blue\" />\n        <rect x=\"0\" y=\"0\" width=\"50.0\" height=\"50.0\" fill=\"red\" />\n        <rect x=\"0\" y=\"50.0\" width=\"50.0\" height=\"50.0\" fill=\"green\" />\n        <rect x=\"50.0\" y"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n<a>\\n</a>\\n<b>\\n</b>\\n<a>\\n</a>') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>') == 27\nassert solution('<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>') == 27\nassert solution('<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid><description>Has many uses</description><icon>https://images.linux-stats.com/images/icon/chicken.png</icon><link></feed>') == 23\n=====Constraints=====\n1<=N<=100\n1<=a<=1e9\n1<=subtitle<=1e9\n1<=link<=1e9\n1<=guid<=1e9\n1<=title<=1e9\n1<=description<=1e9\n1<=icon<=1e9\n\n=====Sample Input&Output=====\nInput\n\n3\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n\nOutput\n\n27\n23\n23\nExplanation\n\nThe score of the feed of HackerRank is 27\nThe score of the feed of HackerRank is 23\nThe score of the feed of HackerRank is 23\n\n====SAMPLE TEST CASES====\nInput\nOutput\n\n======Test Case 1======\nInput\n\n2\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n\nOutput\n\n27\n23\n23\n\n====Test Case 2======\nInput\n\n1\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n<feed><title>HackerRank</title><subtitle>Programming</subtitle><link>https://hackerrank.com/</link><guid>null</guid></feed>\n\nOutput\n\n27\n23\n23\n'''\n"
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"<feed xml:lang='en'><title>HackerRank</title><subtitle lang='en'>Programming</subtitle><link href='http://hr-test.hackerrank.com/'/>)</feed>\") == \"6\""
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.0 0.0 0.0 0.0') == '0.0'\nassert solution('1.0 1.0 0.0 0.0') == '0.0'\nassert solution('1.0 1.0 1.0 0.0') == '90.0'\nassert solution('1.0 0.0 1.0 0.0') == '90.0'\nassert solution('0.0 1.0 1.0 0.0') == '90.0'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1.0 1.0 1.0\n2.0 2.0 1.0\n0.0 0.0 1.0\n0.0 0.0 2.0''') == '45'\nassert solution('''2.0 1.0 1.0\n2.0 2.0 1.0\n0.0 0.0 1.0\n0.0 0.0 2.0''') == '60.0'\nassert solution('''2.0 -2.0 1.0\n2.0 1.0 1.0\n0.0 0.0 1.0\n0.0 0.0 2.0''') == '-45.0'\nassert solution('''0.0 2.0 -1.0\n0.0 -1.0 -1.0\n2.0 0.0 -1.0\n2.0 0.0 -1.0''') == '180.0'\nassert solution('''1.0 -2.0 1.0\n2.0 -1.0 1.0\n0.0 0.0 1.0\n-1.0 0.0 1.0''') == '-179.0'\n'''\n=====Explanation=====\nThis problem is similar to the third problem. For the 3rd problem, you are given 4 points A, B, C and D in a 3-dimensional Cartesian coordinate system. You are required to print the angle between the plane made by the points A, B, C and B, C, D in degrees(not radians). Let the angle be PHI.\nCos(PHI) = (X.Y)/|X|Y| where X = AB x BC and Y = BC x CD.\nHere, X.Y means the dot product of X and Y, and AB x BC means the cross product of vectors AB and BC. Also, AB = B-A.\n\n=====Example Input=====\nInput 1\n\n1.0 1.0 1.0\n2.0 2.0 1.0\n0.0 0.0 1.0\n0.0 0.0 2.0\n\nInput 2\n\n2.0 1.0 1.0\n2.0 2.0 1.0\n0.0 0.0 1.0\n0.0 0.0 2.0\n\nInput 3\n\n2.0 -2.0 1.0\n2.0 1.0 1.0\n0.0 0.0 1.0\n0.0 0.0 2.0\n\nInput 4\n\n0.0 2.0 -1.0\n0.0 -1.0 -1.0\n2.0 0.0 -1.0\n2.0 0.0 -1.0\n'''"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 1 3 2''') == '89.99'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.0 1.0 2.0 1.0\") == \"90.00\"\nassert solution(\"1.0 1.0 0.0 1.0\") == \"90.00\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"0.00\"\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 0 0 0\n1 1 1 1\n0 0 0 1\n1 0 1 0\n''') == '90.00'\nassert solution('''0 0 0 0\n1 0 1 0\n0 0 1 0\n0 1 0 0\n''') == '60.00'\nassert solution('''0 0 0 0\n1 0 1 0\n0 0 1 0\n0 1 0 0\n''') == '45.00'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0.2 1 0.4') == '27.19285714285714'\nassert solution('1 0.2 -1 0.4') == '27.42857142857143'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0.1 -1') == '45'\nassert solution('1 0.1 0.1') == '45'\nassert solution('-1 0.1 0.1') == '45'\nassert solution('0.1 -1 0.1') == '45'\nassert solution('0.1 -1 0.1') == '45'\n"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3.1 4.5 6.9 -7.2 -8.8') == '30.23333333333334'\nassert solution('5 4 -1 -2') == '45.0'\nassert solution('2 -1 -3 1 1 -2') == '45.0'"
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.23 2.45 3.67 4.89') == '63.09'\nassert solution('2.34 5.56 4.33 7.31') == '42.94'\nassert solution('1.00 4.70 3.00 8.00') == '82.00'\n\n==========================================="
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.0 2.0 3.0 4.0') == '60.0'\nassert solution('3.0 2.0 1.0 4.0') == '60.0'\nassert solution('0.0 0.0 0.0 0.0') == '0.0'\nassert solution('0.0 0.0 0.0 1.0') == '0.0'\nassert solution('0.0 0.0 1.0 0.0') == '0.0'\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 4\n'''\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['hello', 'goodbye', 'hellothere']) == 2\nassert solution(['h', 'o', 'l', 'l', 'o', 'n', 'o', 'k']) == 5\n'''\n\nfrom collections import Counter"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 May\\nhello world\") == \"1 2\"\nassert solution(\"3 1 May\\nhello world\") == \"3 1\"\nassert solution(\"3 1 May\\nhello world\") == \"1 2\"\n\n'''"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z']) == 5\n\n=====Sample Input/Output 1=====\nSample Input 1\n\n6\na a a a a b\n\nSample Output 1\n\n3\n\n=====Sample Input/Output 2=====\nSample Input 2\n\n8\na a a a\nb a\na a\nb a\nc b\na\nb a\na\nc b\n\nSample Output 2\n\n3\n\n'''"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\") == 2\nassert solution(\"i love you\") == 1\n'''"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\ne y o\") == \"3\"\nassert solution(\"1\\na\") == \"1\"\nassert solution(\"1\\nk\") == \"0\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"A B C\") == \"3\"\nassert solution(\"a A a\") == \"1\"\nassert solution(\"Go hang a salami I'm a lasagna hog.\") == \"6\"\nassert solution(\"A star is born.\") == \"5\"\n\n=====Solution====="
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nHi John\") == \"2\"\nassert solution(\"3\\nAlgorithms\") == \"2\"\nassert solution(\"2\\nHi John\") == \"1\"\n\"\"\""
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n  hello\n  world\n  min\n  test\n  ok''') == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nthisisaword\") == \"1\"\nassert solution(\"5\\nthequickbrownfoxjumpsoverthelazydog\") == \"2\"\nassert solution(\"1\\nxyz\") == \"0\"\nassert solution(\"3\\nhannah\") == \"0\"\nassert solution(\"5\\ncharacters\") == \"2\""
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"X\") == True\nassert solution(\"XI\") == True\nassert solution(\"XII\") == True\nassert solution(\"XIII\") == True\nassert solution(\"XIV\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('MMMCMXCIX') == True\nassert solution('MMMCMXCIXI') == False\n=====Sample Input=====\nMMMCMXCIX\n=====Sample Output=====\nTrue\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''XIX\n''') == 'True'\nassert solution('''XXIII\n''') == 'True'\nassert solution('''III\n''') == 'True'\nassert solution('''V\n''') == 'True'\nassert solution('''IV\n''') == 'True'\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"X\") == True\nassert solution(\"VIII\") == True\nassert solution(\"XXI\") == True\nassert solution(\"XX\") == False\nassert solution(\"IIII\") == False\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('XVIII') == 'True', \"XVIII\"\nassert solution('L') == 'True', \"L\"\nassert solution('I') == 'True', \"I\"\nassert solution('V') == 'True', \"V\"\nassert solution('X') == 'True', \"X\"\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"X\") == False\nassert solution(\"C\") == False\nassert solution(\"I\") == True\nassert solution(\"VIII\") == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('MCMXCVI') == True\nassert solution('MMMCCCLXXXVI') == True\nassert solution('MMMCCCLXXXXVII') == False\nassert solution('MMMCCCLXXXXVIII') == True\nassert solution('MMMCCCLXXXXIX') == True\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('VI') == True, 'Solution needs to be a valid Roman numeral.'\nassert solution('VIX') == False, 'Solution needs to be a valid Roman numeral.'\nassert solution('X') == True, 'Solution needs to be a valid Roman numeral.'\nassert solution('XI') == False, 'Solution needs to be a valid Roman numeral.'\nassert solution('VIIII') == False, 'Solution needs to be a valid Roman numeral.'\n"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('MD') == True\nassert solution('MM') == False\nassert solution('MMMCMXCIX') == True\n'''\nfrom re import match"
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"MMMCMXCIX\") == \"True\", \"MMCMXCIX is valid\"\nassert solution(\"MMMCMXCIX\") == \"False\", \"MMCMXCIX is invalid\"\nassert solution(\"MMM\") == \"True\", \"MMM is valid\"\nassert solution(\"MMM\") == \"False\", \"MMM is invalid\"\nassert solution(\"\") == \"False\", \"An empty string is invalid\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == stdin.replace(\" \", \"\")"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n+91 9867 8395 6963 7698\n+91 9871 9183 7492\n+91 9870 9190 7493\n+91 9858 7893\n+91 9855 7896''') == '+91 9867 8395 6963 7698\\n+91 9871 9183 7492\\n+91 9870 9190 7493\\n+91 9858 7893\\n+91 9855 7896'\nprint(\"solution =\",solution(\"\"))\n\n=====Explanation=====\nOutput Format\n+91 9867 8395 6963 7698\n+91 9871 9183 7492\n+91 9870 9190 7493\n+91 9858 7893\n+91 9855 7896\n\n+91 9867 8395 6963 7698\n+91 9871 9183 7492\n+91 9870 9190 7493\n+91 9858 7893\n+91 9855 7896\n\nThe mobile numbers can have any length. To ensure that we write in the correct format, we need to put each number in a separate line.\n\n\"\"\""
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"+91 9999 555 5555\"\"\") == \"+91 9999 555 5555\"\nassert solution(\"\"\"+91 999 654 6432\"\"\") == \"+91 999 654 6432\"\nassert solution(\"\"\"+91 965 432 5646\"\"\") == \"+91 965 432 5646\"\nassert solution(\"\"\"+91 123 4567 890\"\"\") == \"+91 123 4567 890\"\nassert solution(\"\"\"+91 234 567 890\"\"\") == \"+91 234 567 890\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '\\n'.join(map(str, sorted(input().split())))\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n+91 980535235 1\\n+91 980535234\") == \"91 980535235 1\\n91 980535234\"\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0212345678\\n0222345678\\n022 23 45 67\") == \"0212345678+0222345678+022 23 45 67\"\nprint(solution(\"3\\n0212345678\\n0222345678\\n022 23 45 67\"))"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n87654321\n98764321\n98764221\n876543210''') == '''+91 87654321 87643210\n+91 876543211 876432111\n+91 876543212 876432112\n+91 876543213 876431313'''\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n8\n987654321\n987654321\n987643210\n987643210\n987654321\n987643210\n987643210\n987643210\n'''\n) == '+91 9876543210\\n+91 9876543210\\n+91 9876543210\\n+91 9876543210\\n+91 9876543210\\n+91 9876543210\\n+91 9876543210\\n+91 9876543210\\n'"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INP) == OUT\n=====Test Case=====\nInput:\n1\n94926364555\n94093263645\nOutput:\n+91 94926364555\n+91 94093263645\n=====Explanation=====\nTest Case 1:\n+91 94926364555\n+91 94093263645\n\nsolution('+91 9326364555')\noutput:\n+91 9326364555\n\ninput_str = '+91 94926364555'\ninput_arr = input_str.split()\nfor i in range(len(input_arr)):\n    if '+91' in input_arr[i]:\n        input_arr[i] = input_arr[i].replace('+91', '')\nprint(input_arr)\n"
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"0123456789\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nalpha 100\\nbeta 50 50\\ngamma 20\\ndelta 10\\nquery_name beta\\n') == '50.0'\nassert solution('5\\nalpha 100\\nbeta 50 50\\ngamma 20\\ndelta 10\\nquery_name gamma\\n') == '80.0'\nassert solution('5\\nalpha 100\\nbeta 50 50\\ngamma 20\\ndelta 10\\nquery_name beta\\n') == '50.0'\nassert solution('5\\nalpha 100\\nbeta 50 50\\ngamma 20\\ndelta 10\\nquery_name delta\\n') == '100.0'\nassert solution('5\\nalpha 100\\nbeta 50 50\\ngamma 20\\ndelta 10\\nquery_name gamma\\n') == '80.0'\n=====Read input from stdin and solve the problem\nimport sys"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3\nalpha 100\nbeta 75\ngamma 25\nquery_name beta\n''') == \"50.00\"\nassert solution(\n'''\n3\nalpha 100\nbeta 75\ngamma 25\nquery_name beta\n''') == \"50.00\"\nassert solution(\n'''\n3\nalpha 100\nbeta 75\ngamma 25\nquery_name beta\n''') == \"50.00\"\nassert solution(\n'''\n1\na 100\n''') == \"100.00\"\nassert solution(\n'''\n3\nalpha 100\nbeta 75\ngamma 25\nquery_name beta\n''') == \"50.00\"\n'''\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nalpha 100\\nbeta 75\\ngamma 50\\ndelta 25\\n') == '75.00'\nprint('Average:', solution('5\\nalpha 100\\nbeta 75\\ngamma 50\\ndelta 25\\n'))\nprint('Average:', solution('5\\nalpha 100\\nbeta 75\\ngamma 50\\ndelta 25\\n'))\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nalpha 100\\nbeta 50 20\\nteta 70\\nquery_name alpha\\n') == '50.0'\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\ngamma 90') == '50.0'\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nalpha 100\\nbeta 50\\ngamma 20\\ndelta 80\\necho \"Enter a student name to query\"') == \"50.0\"\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nalpha 100\nbeta 100\nalpha 90''') == '90.00'\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nalpha 100\nbeta 80\nalpha''') == '80.00'\nassert solution('''2\nalpha 100\nbeta 80\nalpha''') == '80.00'\nprint(solution('''3\nalpha 100\nbeta 50\nalpha'''))\nprint(solution('''5\nalpha 100\nbeta 40\nalpha\ngamma 70\nalpha'''))\nprint(solution('''5\nalpha 100\nbeta 40\nalpha\ngamma 70\nalpha'''))\n=====Solution Explanation=====\nThe output should be a float value.\n\nExplanation\nSolution Explanation\n\n'''"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nA 20\\nB 30\\nC 40\\n') == '50.00', \"Should be 50.00\"\nassert solution('2\\nA 20\\nB 30\\nC 40\\nD 60\\nE 80\\n') == '60.00', \"Should be 60.00\"\nassert solution('1\\nA 20\\nB 30\\nC 40\\nD 60\\nE 80\\n') == '40.00', \"Should be 40.00\"\n=====Type Test=====\n"
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\n\") == \"50.0\"\nassert solution(\"6\\nBRAIN 12\\nHUMAN 13\\nDRAGON 14\\nVOLVO 14\\n\") == \"14.0\"\nassert solution(\"3\\nHUMAN 100\\nDRAGON 100\\nVOLVO 100\\n\") == \"100.0\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nAlex Thomson 20 M\\nPeter Thomson 20 M\\nEdward Cullen 30 F\\n\") == \"Mr. Edward Cullen\\nMs. Peter Thomson\\nMr. Alex Thomson\\n\"\nassert solution(\"5\\nAlex Thomson 20 M\\nPeter Thomson 20 M\\nEdward Cullen 30 F\\nGeorge Washington 35 M\\n\") == \"Mr. Edward Cullen\\nMs. George Washington\\nMr. Alexander Thomson\\nMs. Peter Thomson\\nMr. Alex Thompson\\n\"\n\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\nMarry\n25\nF\nKaren\n22\nM''') == 'Ms. Karen\\nMr. Marry\\nMr. Marry'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\nChris Thomson 20 M\\nMary George 30 F\\nHenry Davids 20 M\\n\") == \"Mr. Henry Davids\\nMs. Mary George\\nMr. Christopher Thomson\\n\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nAbhi 34 M\\nAbhi 34 F\\nAbhi 34 M\\n\") == \"Ms. Abhi\\nMs. Abhi\\nMr. Abhi\\n\"\n=====Test Case 1=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMs. Abhi\\nMr. Abhi\\n')\nsolution(input())\n\n=====Test Case 2=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMs. Abhi\\nMr. Abhi\\n')\nsolution(input())\n\n=====Test Case 3=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMr. Abhi\\nMr. Abhi\\n')\nsolution(input())\n\n=====Test Case 4=====\n    def solution(stdin):\n        return print('Mr. Abhi\\nMs. Abhi\\nMs. Abhi\\n')\nsolution(input())\n\n=====Test Case 5=====\n    def solution(stdin):\n        return print('Mr. Abhi\\nMs. Abhi\\nMr. Abhi\\n')\nsolution(input())\n\n=====Test Case 6=====\n    def solution(stdin):\n        return print('Mr. Abhi\\nMs. Abhi\\nMr. Abhi\\n')\nsolution(input())\n=====Test Case 7=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMr. Abhi\\nMr. Abhi\\n')\nsolution(input())\n=====Test Case 8=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMr. Abhi\\nMr. Abhi\\n')\nsolution(input())\n=====Test Case 9=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMr. Abhi\\nMr. Abhi\\n')\nsolution(input())\n=====Test Case 10=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMr. Abhi\\nMr. Abhi\\n')\nsolution(input())\n=====Test Case 11=====\n    def solution(stdin):\n        return print('Ms. Abhi\\nMr. Abhi\\nMr. Abhi\\n')\nsolution(input())\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"Mr. Henry Davids\\nMs. Mary George\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\nKate O`neal\\nSmith\\nM\\n\") == \"Ms. Smith\\nMr. Kate O`neal\"\nassert solution(\"5\\nAlex\\nKelly\\nM\\nO\\nS\\n\") == \"Ms. Alex\\nMr. Kelly\\nMs. Alex\\nMr. Kelly\""
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\n    'Cindy', 'Verner', '0', 'F'\n]) == 'Ms. Verner\\nMr. Cindy\\n'\nassert solution([\n    'Kwame', 'Suryakumar', '21', 'M'\n]) == 'Ms. Kwame\\nMr. Syukka\\n'\n'''\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nMarry\\n20\\nF\\n\") == \"Ms. Marry\\n\"\nassert solution(\"2\\nHenry\\n17\\nM\\n\") == \"Mr. Henry\\n\"\n"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\nHarry\nHarry\nHermione\n''') == '''\nMr. Harry\nMr. Hermione\n'''\nassert solution('''\n5\nAlbus Dumbledore\nSirius Black\nRon Weasley\nHermione Granger\nKincaid\n''') == '''\nMs. Sirius Black\nMs. Ron Weasley\nMs. Hermione Granger\nMs. Albus Dumbledore\nMs. Hermione'''"
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"Mr. Henry Davids\\nMs. Mary George\""
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3\") == ['0,0,0','0,0,1','0,0,2','0,1,0','0,1,1','0,1,2','1,0,0','1,0,1','1,0,2','1,1,0','1,1,1','1,1,2'], \"It should print the grid\"\nassert solution(\"1 1 2 3\") == ['0,0,0','0,0,1','0,0,2','0,1,0','0,1,1','1,0,0','1,0,1','1,1,0','1,1,1','1,1,2'], \"It should print the grid\"\n\n\"\"\"\n\nx, y, z, n = map(int, input().split())\n\nd = [[i, j, k]\n     for i in range(0, x + 1)\n     for j in range(0, y + 1)\n     for k in range(0, z + 1)\n     if i + j + k!= n]\n\nprint(d)\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 2, 2]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 2, 3, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 1, 4]) == []\nassert solution([1, 2, 2, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\"\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([2, 2, 2, 2]) == [[0, 0, 0]]\nassert solution([1, 1, 2, 1]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 2, 2]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 2, 3, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([int(x) for x in stdin.split()]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n=====Output Format=====\nPrint the list of all permutations of [i,j,k] on a separate line, where i,j,k are elements of the given array.\n\nSample Input 1\n1\n1\n2\n3\nSample Output 1\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n'''\nfrom itertools import permutations\n\nX = int(input())\nY = int(input())\nZ = int(input())\nN = int(input())\n\ndata = []\n\nfor i in range(X + 1):\n    for j in range(Y + 1):\n        for k in range(Z + 1):\n            if i + j + k!= N:\n                data.append([i, j, k])\n\ndata.sort()\n\nfor i in data:\n    print(i)"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([2,2,3,4]) == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([3,3,4,5]) == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([7,3,2,4]) == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([1,2,3,4,5]) == []\n\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n=====Output=====\n\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\n=====Test Case 1=====\nInput\n\nOutput\n\n=====Test Case 2=====\nInput\n\nOutput\n\n=====Test Case 3=====\nInput\n\nOutput\n\n=====Test Case 4=====\nInput\n\nOutput\n\n=====Test Case 5=====\nInput\n\nOutput\n\n=====Test Case 6=====\nInput\n\nOutput\n\n=====Test Case 7=====\nInput\n\nOutput\n\n=====Test Case 8=====\nInput\n\nOutput\n\n=====Test Case 9=====\nInput\n\nOutput\n\n=====Test Case 10=====\nInput\n\nOutput\n'''\n\n\nx, y, z, n = map(int, input().split())\n\noutput_list = [[i, j, k] for i in range(x + 1) for j in range(y + 1) for k in range(z + 1) if i + j + k!= n]\n\nprint(sorted(output_list))"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n2\n3\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n'''\n"
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\n\n=====Output Example=====\n[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]\n\n>>>>>>> 1.0<<<  "
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n''') == '2 -2i\\n3 +3i\\n6 +6i\\n2 +2i\\n0.00+0.00i\\n'''\nassert solution('''\n1.1 1.1\n''') == '2.2 -2i\\n3 +3i\\n6 +6i\\n2 +2i\\n0.00+0.00i\\n'''\nassert solution('''\n0 1\n''') == '0.00+0.00i\\n'''"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"15.00-5.00i\"\nassert solution(\"0.0 4i\") == \"0.00-4.00i\"\nassert solution(\"-1 -2\") == \"-5.00-5.00i\"\nassert solution(\"1 2\") == \"3.00-2.00i\"\nassert solution(\"2.6 1.1\") == \"3.38-1.80i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n1 -1\n-1 1\n1 1''') == \"1 1\\n1 -1\\n-1 1\\n1 1\"\n\"\"\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\\n-2i\"\nassert solution(\"-1 -2\") == \"-5i\"\nassert solution(\"-1 2\") == \"5i\"\nassert solution(\"-1 1\") == \"-2i\"\nassert solution(\"-1\") == \"-1.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0.00+0.00i\n1.00+1.00i\n0.00+-0.00i\n-0.00+1.00i\n0.00+1.00i\n1.00+-0.00i\n1.00-1.00i\n0.00-1.00i\n-0.00-1.00i\n-1.00-1.00i\n1.00-0.00i\n0.00-1.00i\n1.00+0.00i\n0.00+0.00i\n''') == '''0.00+0.00i\n1.00+1.00i\n0.00+-0.00i\n-0.00+1.00i\n0.00+1.00i\n1.00+-0.00i\n1.00-1.00i\n0.00-1.00i\n-0.00-1.00i\n-1.00-1.00i\n1.00-0.00i\n0.00-1.00i\n1.00+0.00i\n0.00+0.00i'''\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.0+1i\") == \"1.00+1.00i\"\nassert solution(\"1.0+1.0i\") == \"1.00+1.00i\"\nassert solution(\"1.0-1.0i\") == \"0.00+-1.00i\"\nassert solution(\"0.0+1i\") == \"0.00+1.00i\"\nassert solution(\"0.0+0i\") == \"0.00+0.00i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-2 -1') == '-3.00-2.00i'\n=====Solution=====\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5.0 6.0''') == '6.0'\nassert solution('''5 0''') == '5.00+0.00i'\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1+2i\") == \"3+2i\"\n"
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 + 2i') == \"1+2i\"\nassert solution('1 + 2i') == \"1+2i\"\nassert solution('1 - 2i') == \"-1+2i\"\nassert solution('1 - 2i') == \"-1+2i\"\nassert solution('1 * 2i') == \"2+0.00i\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n\"\"\"\n\n\"\"\"\nO(N)\n\"\"\""
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n\n\"\"\""
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'xaybzc'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\nassert solution(\"abc\\nxyz\") == \"xaybzc\"\n\"\"\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''xyz\nabc''') == 'xaybzc'\nassert solution('''zxy\nabc''') == 'zxy'\nassert solution('''aaa\naaa''') == 'aaa'\nassert solution('''aaa\naaa''') == 'aaa'\nassert solution('''aaa\naaa''') == 'aaa'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('dog') == 'oaybz'\nassert solution('cat') == 'aoayb'\nassert solution('log') == 'lgaxb'\n"
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''01B0''') == '00'\nassert solution('''1B0''') == '01'\nassert solution('''01B1''') == '00'\nassert solution('''1B0B1B0B1B0''') == '01'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('01B0') == '00'"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('01B0') == '00'\nassert solution('1') == '1'\nassert solution('1B') == '11'\nassert solution('0B') == '00'\nassert solution('1B0') == '11'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"00\"\n\n'''"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0B0') == '00'\n\n\"\"\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('01B0') == '00'\n\n\"\"\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"01B0\") == \"00\""
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\nassert solution('0B1') == '00'\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"0B01\") == \"01\"\nassert solution(\"1B0\") == \"00\"\nassert solution(\"1B0\") == \"01\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''01B0''') == '00'\nassert solution('''0101B0''') == '01'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1 2') == '2'\nassert solution('6\\n7 3 3 2 5 1') == '7'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == \"4\"\nassert solution('''4\n2 1 5 4 3\n''') == \"0\"\nassert solution('''5\n2 1 5 4 3\n''') == \"2\"\n'''\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('10\\n4 4 4 5 6 6 5 3 3 2 1') == '6'\nassert solution('3\\n2 3 2') == '1'\nassert solution('4\\n1 1 2 2') == '3'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\nassert solution('3\\n4 1 5 2 3') == '2'\nassert solution('4\\n2 1 5 4 3') == '3'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"100\") == \"2\"\nassert solution(\"5 100 5 1 4 3\") == \"5\"\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5 1 2\n''') == '4'\n"
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([5, 2, 1, 5, 4, 3]) == \"4\"\nassert solution([3, 2, 1, 4, 5, 6]) == \"5\"\nassert solution([3, 2, 1, 4, 5, 6]) == \"5\"\nassert solution([3, 2, 1, 4, 5, 6]) == \"5\"\nassert solution([1, 3, 2, 4, 5]) == \"4\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"A\"\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\nassert solution('''accc\naccc\naccc''') == 'B'\nassert solution('''aca\naccc\nca''') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'A'\nassert solution(input()) == 'B'\nassert solution(input()) == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"B\""
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'A'\nassert solution('ca') == 'C'"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'A'\n"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'A'\nassert solution('ca') == 'C'"
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'A'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('2 2 3') == 'NO'\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 7') == 'YES'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 7\") == \"YES\""
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 7') == \"YES\"\nassert solution('4 1 2') == \"NO\"\nassert solution('2 2 5') == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"4 5 7\") == \"NO\"\nassert solution(\"1 5 7\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 2 2\") == \"NO\"\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\\n\") == \"YES\"\nassert solution(\"5 5 7\\n\") == \"YES\"\n\"\"\"\nimport math\nfrom itertools import combinations, permutations\n\nA,B,C=map(int,input().split())\n\nall_hap=[\"A\",\"B\",\"C\"]\nhap1=list(combinations(all_hap,A))\nhap2=list(combinations(all_hap,B))\nhap3=list(combinations(all_hap,C))\nhap1.extend(hap2)\nhap1.extend(hap3)\nhap1.sort(key=lambda x: (len(x),x),reverse=True)\n\nfor hap in hap1:\n    hap1=list(hap)\n    hap1.sort(key=lambda x: (len(x),x))\n    if hap1[0]==\"A\" and hap1[1]==\"B\" and hap1[2]==\"C\":\n        print(\"YES\")\n        break\n    else:\n        continue\nelse:\n    print(\"NO\")\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['5', '5', '7']) == 'YES'\nassert solution(['5', '7', '5']) == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 7') == 'YES'\nassert solution('5 5 7') == 'NO'\n"
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n\"\"\""
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '11'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '11'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"0\") == \"2\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '7'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '11'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '11'\nassert solution('6') == '34'\n\"\"\"\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '11'\n"
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"6\") == \"13\"\nassert solution(\"7\") == \"21\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"10\"\nassert solution(\"3\") == \"8\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n6\\n4') == '15'\nassert solution('8\\n12\\n10') == '80'\nassert solution('12\\n32\\n5') == '56'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\n\n--- Outputs ---\n\nWrite 5 lines of code to test the correctness of solution:\nYou are given a trapezoid. The lengths of its upper base, lower base, and height are a, b, and h, respectively.\nAn example of a trapezoid\nFind the area of this trapezoid.\n\n-----Constraints-----\n - 1\u2266a\u2266100\n - 1\u2266b\u2266100\n - 1\u2266h\u2266100\n - All input values are integers.\n - h is even.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\na\nb\nh\n\n-----Output-----\nPrint the area of the given trapezoid. It is guaranteed that the area is an integer.\n\n-----Sample Input-----\n3\n4\n2\n\n-----Sample Output-----\n7\n\nWhen the lengths of the upper base, lower base, and height are 3, 4, and 2, respectively, the area of the trapezoid is (3+4)\u00d72/2 = 7.\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n2\\n') == \"7\"\nassert solution('3\\n3\\n1\\n') == \"6\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n4\\n2') == '7'\nassert solution('1\\n2\\n3') == '1'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '7'\nassert solution('5') == '9'\nassert solution('4') == '3'\nassert solution('7') == '6'\n\"\"\"\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('2') == '5'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '11'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '11'"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\nassert solution(\"2\\n1 2\") == \"6\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"4670\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"11\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 11, 'TEST 1 FAILED'\nassert solution('3') == 5, 'TEST 2 FAILED'\nassert solution('3 4') == 9, 'TEST 3 FAILED'\n"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '11'\nassert solution('4') == '10'"
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"11\""
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 3 2\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 2') == 'YES'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('9 1 1') == 'NO'"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\") == \"YES\", \"Should return YES if the integer is a multiple of 4\"\nassert solution(\"4 4 4\") == \"YES\", \"Should return YES if the integer is a multiple of 4\"\nassert solution(\"4 4 4\") == \"NO\", \"Should return NO if the integer is not a multiple of 4\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"5 8 1\") == \"YES\"\nassert solution(\"8 8 1\") == \"NO\"\nassert solution(\"3 4 7\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 6 8\") == \"NO\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == 'YES'\n\nassert solution('4 4 4') == 'NO'\n\nassert solution('4 2 4') == 'NO'\n\nassert solution('1 2 3') == 'NO'\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n\") == \"YES\"\n"
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 4 3\") == \"NO\"\n\n'''"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('2') == '2'\nassert solution('10') == '10'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n5\n2\n2\n5\n2\n2\n1\n''') == '30'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\\n2\") == \"5\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('1') == '1'\nassert solution('5 1 2') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 5\") == \"6\"\nassert solution(\"1 2 3\") == \"9\"\nassert solution(\"5 4 3\") == \"10\""
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"11\""
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"12\"\nassert solution(\"5 3 11\\n3\") == \"13\"\nassert solution(\"5 3 11\\n4\") == \"14\"\nassert solution(\"5 3 11\\n5\") == \"15\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 11\\n1') == \"30\"\nassert solution('5 3 11\\n2') == \"15\"\nassert solution('5 3 11\\n3') == \"15\"\nassert solution('5 3 11\\n4') == \"20\"\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n2') == '30'\nassert solution('5 3 11\\n3') == '30'\nassert solution('5 3 11\\n4') == '30'\nassert solution('5 3 11\\n5') == '30'\n"
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 11\") == \"30\"\nassert solution(\"10 20 30\") == \"50\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abaccaba\") == \"Yes\""
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abaccaba') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('abaccaba') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"First\"\nassert solution(\"abbababa\") == \"No\", \"Second\"\nassert solution(\"aabbc\") == \"Yes\", \"Third\"\nassert solution(\"cc\") == \"No\", \"Fourth\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('aaaaaa') == 'No'\nassert solution('aaa') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''abaccaba''') == 'Yes'\nassert solution('''aabccbaa''') == 'No'\nassert solution('''dabcbab''') == 'Yes'\nassert solution('''abababcd''') == 'Yes'\nassert solution('''abcdabcd''') == 'Yes'\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n\n\"\"\"\nimport collections\nimport re\n\nstdin = input()\n\npattern = r'[a-z]{2,}'\nprint(f\"Yes\" if re.findall(pattern, stdin) else \"No\")\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abaccaba') == 'Yes'\n\"\"\""
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"gkxwqsz\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"bdb\") == \"No\"\nassert solution(\"bcda\") == \"Yes\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n1 1\n2 2\n3 3\n4 4\n5 5''') == '4'\n\n'''"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n2 2\\n3 3\") == \"3\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\", \"Wrong answer\"\nassert solution(\"2 2\") == \"2\", \"Wrong answer\"\nassert solution(\"3 3\") == \"3\", \"Wrong answer\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\n"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '3'\nassert solution('10 10') == '9'\n\"\"\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'"
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n1 1\n2 2\n3 3\n4 4\n5 5''') == \"4\"\nassert solution('''5 3\n1 1\n2 2\n3 3\n4 4\n5 5''') == \"3\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"3 5\") == \"5\"\n\"\"\""
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 4\") == \"3\""
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 2\nassert solution('2 2') == 4\nassert solution('3 4') == 14\nassert solution('4 4') == 32\nassert solution('5 4') == 70\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 5') == '41'\nassert solution('0 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 4') == '72'\n\nhttps://judge.yandex.ru/contest/15586/problem/2\n\"\"\"\n\nn, k = map(int, input().split())\n\narr = []\nfor i in range(n):\n    arr.append(int(input()))\n\ndp = [[0 for i in range(k+1)] for i in range(n+1)]\n\ndp[0][0] = 1\nfor i in range(1, n+1):\n    for j in range(1, k+1):\n        if j - arr[i-1] >= 0:\n            dp[i][j] = dp[i-1][j] + dp[i-1][j-arr[i-1]]\n        else:\n            dp[i][j] = dp[i-1][j]\nprint(dp[-1][-1])"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 2') == '2'\nassert solution('4 5') == '2'\nassert solution('5 7') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n\n---\n\nclass Solution:\n    def solve(self, n, k):\n        dp = [0] * (k + 1)\n        dp[0] = 1\n        \n        for i in range(n):\n            for j in range(k):\n                dp[j] += dp[j-1] if j > 0 else 0\n        \n        return dp[k]\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 5\") == \"76\"\n"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"100 10\") == \"208\"\n\"\"\""
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 3') == '5'\nassert solution('2 5') == '8'\nassert solution('3 5') == '14'"
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\n\"\"\""
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\n3\n2\n3\n5\n10\n15\n8\n7\n11\n3\n7\n8\n12\n9\n2\n1''') == '10'\nassert solution('''10\n2\n1\n2\n1\n2\n2\n2\n2\n1\n1''') == '2'\nassert solution('''10\n2\n1\n3\n1\n2\n2\n3\n1\n2\n1''') == '2'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '20 3\\n'\n    '5 10 15\\n'\n) == '10'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 3\n5 10 15\n''') == '10'\nassert solution('''20 4\n5 10 15 5\n''') == '15'\nassert solution('''20 5\n2 5 10 12 25\n''') == '25'"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''1 3\n3 5 4''') == '3'"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 3\") == \"10\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"20 1\") == \"20\"\nassert solution(\"20 2\") == \"20\"\nassert solution(\"20 3\") == \"20\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '1'\nassert solution('20 3') == '10'\nassert solution('3 5 7') == '16'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 3') == '10'\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"20 4\") == \"0\"\n"
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''20 3\n5 10 15\n''') == '10'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5 2 7\n''') == '15'\nassert solution('''3 5 2 7\n3 5 2 7\n''') == '15'\nassert solution('''3 5 2 7\n1 1 5 2\n''') == '15'\nassert solution('''3 5 2 7\n1 5 1 5\n''') == '15'\nassert solution('''3 5 2 7\n3 5 2 7\n1 5 2 7\n''') == '15'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('5 5 3 7') == '15'\nassert solution('3 5 2 7') == '15'\nassert solution('5 5 3 7') == '15'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('5 3 2 4') == '4'\nassert solution('4 2 4 5') == '10'\nassert solution('6 4 7 8') == '14'\nassert solution('12 8 7 6') == '16'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"8 5 2 6\") == \"25\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 3 2 7') == '9'\nassert solution('5 5 2 3') == '12'\nassert solution('3 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'\n\"\"\""
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 2 7\") == \"15\"\nassert solution(\"3 5 2 7\") == \"15\""
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('5 6 2 7') == '15'\nassert solution('2 5 2 7') == '15'\nassert solution('2 7 3 5') == '25'\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('2 2 5 3') == '3'\nassert solution('1 1 1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 2 7') == '15'\nassert solution('7 2 4 3') == '9'"
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"10 10 9 8\") == \"30\"\nassert solution(\"4 5 3 7\") == \"17\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    AC\n    TLE\n    AC\n    AC\n    WA\n    TLE\n    ''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n\nassert solution('''\n    5\n    AC\n    WA\n    AC\n    AC\n    AC\n    ''') == 'AC x 3\\nWA x 2\\nAC x 1\\nAC x 1\\nAC x 1'\n\nassert solution('''\n    10\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    AC\n    ''') == 'AC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3\\nAC x 3'\n\nassert solution('''\n    3\n    AC\n    AC\n    AC\n    ''') == 'AC x 3\\nAC x 2\\nAC x 1\\nAC x 1'\n\nassert solution('''\n    2\n    AC\n    AC\n    ''') == 'AC x 2\\nAC x 1\\nAC x 1'\n''') == 'AC x 1\\nAC x 1\\nAC x 1'"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"AC 1\\nWA 1\\nTLE 1\\nRE 1\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nAC\nWA\nTLE\nAC\nAC\nWA\nAC\nAC''') == 'AC x 3'\nassert solution('''6\nAC\nAC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3'\nassert solution('''1\nWA''') == 'WA x 1'\nassert solution('''1\nTLE''') == 'TLE x 2'\nassert solution('''1\nAC''') == 'AC x 0'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"5\") == \"WA x 1\"\nassert solution(\"4\") == \"TLE x 2\"\nassert solution(\"3\") == \"RE x 0\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nWA\\nWA\\nWA\\nAC\\n') == 'AC x 3'\nassert solution('5\\nWA\\nAC\\nAC\\nWA\\nAC\\n') == 'AC x 3'\nassert solution('4\\nTLE\\nWA\\nWA\\n') == 'WA x 1'\nassert solution('7\\nTLE\\nAC\\nAC\\nWA\\nAC\\nTLE\\n') == 'TLE x 2'\nassert solution('6\\nAC\\nAC\\nAC\\nAC\\nAC\\n') == 'AC x 3'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('5') == 'WA x 1'\nassert solution('4') == 'TLE x 2'\nassert solution('3') == 'RE x 0'\n\n=======\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nassert solution(\"5\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nassert solution(\"4\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\nassert solution(\"3\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\""
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\nAC\nTLE\nAC\nAC\nWA\nTLE''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"AC 1 WA 2 TLE 0 RE\"\nassert solution(\"4\") == \"AC 1 WA 2 TLE 0 RE\"\nassert solution(\"5\") == \"AC 1 WA 2 TLE 0 RE\"\nassert solution(\"6\") == \"AC 1 WA 2 TLE 0 RE\"\nassert solution(\"10\") == \"AC 1 WA 2 TLE 0 RE\"\n"
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"1\") == \"AC x 1\"\nassert solution(\"2\") == \"AC x 2\"\nassert solution(\"3\") == \"AC x 0\"\nassert solution(\"4\") == \"WA x 1\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"22\") == \"27\"\nassert solution(\"23\") == \"27\"\nassert solution(\"24\") == \"27\"\nassert solution(\"25\") == \"27\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"13\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(0) == \"0\"\nassert solution(21) == \"27\"\nassert solution(52) == \"23\"\nassert solution(92) == \"7\"\nassert solution(66) == \"6\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(0) == '0'\nassert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '4'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"21\") == \"27\"\nassert solution(\"21\") == \"27\"\n\"\"\"\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('21') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '6'\nassert solution('22') == '6'\nassert solution('23') == '7'\nassert solution('21') == '7'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''24\n24\n25\n25\n25\n25\n24\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23\n23"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('21') == '27'\nassert solution('21') == '27'\nassert solution('21') == '27'\nassert solution('21') == '27'\nassert solution('21') == '27'\n"
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"30\") == \"27\"\nassert solution(\"30\") == \"27\"\nassert solution(\"31\") == \"26\"\nassert solution(\"40\") == \"26\"\nassert solution(\"0\") == \"24\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 9') == '14'\nassert solution('1 0') == '1'\nassert solution('-5 -3') == '3'\nassert solution('-10 10') == 'error'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3', \"Wrong!\"\nassert solution('3 5') == '8', \"Wrong!\"\nassert solution('4 5') == '9', \"Wrong!\"\nassert solution('6 6') == '12', \"Wrong!\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '9'\nassert solution('10 5') == 'error'"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '4', 'Should be 4'\nassert solution('10 10') == 'error', 'Should be error'\nassert solution('10 10 1') == '11', 'Should be 11'\nassert solution('10 10 2') == 'error', 'Should be error'"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\n''') == '9', 'Sample Test Failed'\nassert solution('''\n10 10\n''') == 'error', 'Sample Test Failed'\nassert solution('''\n5 5\n''') == '10', 'Sample Test Failed'"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '9'\nassert solution('20 10') == '20'\nassert solution('3 8') == '13'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7\") == \"12\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"error\"\nassert solution(\"0 0\") == \"error\"\nassert solution(\"5 2\") == \"8\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 0') == 'error'\nassert solution('1 0') == 'error'\nassert solution('10 10') == '10'\nassert solution('4 3') == '5'\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7\") == \"12\"\nassert solution(\"6 3\") == \"error\"\n"
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'error'\nassert solution('6') == '9'\nassert solution('6') == 'error'\nassert solution('9') == '9'\nassert solution('10') == 'error'\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 7 9\") == \"7\""
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3 7 9\n''') == '7'"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 3 7 9\\n') == '7'\nassert solution('10\\n4 5 2 7 8 9 6 1\\n') == '11'\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3 4\n''') == '4', \"Not quite right\"\nassert solution('''4\n1 2 3 4\n''') == '5', \"Too far away\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2 3\\n\") == \"7\"\nassert solution(\"2\\n2 3\\n\") == \"7\"\nassert solution(\"3\\n4 3\\n\") == \"7\"\nassert solution(\"4\\n4 3\\n\") == \"7\""
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '6'\nassert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('4') == '4'\n\n\"\"\""
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"10\"\nassert solution(\"6\") == \"9\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n2 3 7 9\n''') == '7'\nassert solution('''5\n0 0 0 0 0\n0 0 2 3 4\n''') == '0'"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('1 2') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 5') == 'No'\n\n### ================================================ ###"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('10 7') == 'No'\nassert solution('4 7') == 'No'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == \"Yes\"\nassert solution('2 5') == \"No\"\nassert solution('2 5') == \"Yes\""
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"5 2\") == \"Yes\"\nassert solution(\"5 2\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 4') == 'No'\nassert solution('2 4') == 'No'\nassert solution('3 4') == 'No'\nassert solution('4 5') == 'Yes'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3\\n') == 'Yes', 'First'\nassert solution('2 4\\n') == 'No', 'Second'\nassert solution('6 7\\n') == 'No', 'Third'\nassert solution('13 14\\n') == 'Yes', 'Fourth'\nassert solution('1 2\\n') == 'No', 'Fifth'\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"Yes\"\nassert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\n"
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 5\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"3 2\") == \"No\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == 'Even'\nassert solution('3 4') == 'Odd'\nassert solution('1 1') == 'Even'\n\"\"\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n') == 'Even'\nassert solution('2 1\\n') == 'Odd'\nassert solution('3 3\\n') == 'Even'\nassert solution('6 5\\n') == 'Odd'\nassert solution('3 3\\n') == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 3') == 'Odd'\nassert solution('-2 -1') == 'Odd'\nassert solution('-4 -2') == 'Even'\nassert solution('-3 4') == 'Even'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == 'Even'\nassert solution('-1 5') == 'Odd'\nassert solution('-1 -5') == 'Even'\nassert solution('1 -5') == 'Odd'\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"2 2\") == \"Even\"\nassert solution(\"2 3\") == \"Odd\""
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"Even\"\nassert solution(\"3 4\") == \"Odd\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"Even\"\n"
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"3 4\") == \"Even\"\nassert solution(\"1 1\") == \"Odd\"\nassert solution(\"3 3\") == \"Odd\"\n\n\"\"\"\n\na, b = input().split()\n\na = int(a)\nb = int(b)"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"3 6\") == \"2\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 6\n''') == '2'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"2 4\") == \"3\"\n\"\"\"\nn, m = list(map(int, input().split()))\nprint(min(2, max(n, m) // 2))\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\n\nimport math"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '2'\nassert solution('3 4') == '3'\nassert solution('2 4') == '3'\n\"\"\""
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2\"\n\"\"\""
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6') == '2'\n\"\"\"\n"
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 6]) == 2\n\n---Time---\nThe time complexity of the above solution is O(N*M)\nwhere N and M are the sizes of the NxM array.\n\n---Memory---\nThe above solution uses no additional memory, but it might use a lot of additional memory if we had a NxM-sized array.\n\n\"\"\"\n\n\"\"\"\nDONE\nclass Solution:\n    def solve(self, N, M):\n        res = 0\n        for i in range(N):\n            for j in range(M):\n                if (i + 1) == N and (j + 1) == M:\n                    return 1\n                elif (i + 1) == N:\n                    for k in range(j, M):\n                        if (i + 1) == N and (k + 1) == M:\n                            return 2\n                        elif (i + 1) == N and (k + 1)!= M:\n                            continue\n                        elif (i + 1)!= N and (k + 1) == M:\n                            continue\n                        elif (i + 1)!= N and (k + 1)!= M:\n                            continue\n                        else:\n                            return 3\n                elif (j + 1) == M:\n                    for k in range(i, N):\n                        if (j + 1) == M and (k + 1) == N:\n                            return 4\n                        elif (j + 1) == M and (k + 1)!= N:\n                            continue\n                        elif (j + 1)!= M and (k + 1) == N:\n                            continue\n                        elif (j + 1)!= M and (k + 1)!= N:\n                            continue\n                        else:\n                            return 5\n                elif (i + 1) == N and (j + 1) == M:\n                    return 6\n                elif (i + 1)!= N and (j + 1) == M:\n                    return 7\n                elif (i + 1)!= N and (j + 1)!= M:\n                    return 8\n        return -1\n\nN, M = [int(x) for x in stdin.split()]\nprint(Solution().solve(N, M))\n\"\"\"\n\n\"\"\"\nSolutions 2\n1) http://cs.utdallas.edu/~bz/CS539/notes/notes8.pdf\n\n2) https://www.youtube.com/watch?v=7KL7g5gKr0k\n\"\"\"\n\n\"\"\"\n=============================================\nGiven a string s of parentheses, print the number of matching parentheses.\n\nExample 1:\n\nInput: s = \"()\"\nOutput: 2\nExplanation: The input string contains only two types of parentheses: '()' and ''. There are no other types of parentheses in the\nstring.\n\nExample 2:\n\nInput: s = \"()(())()\"\nOutput: 6\nExplanation: The input string contains seven types of parentheses: '(', '()', '()', '()', '()' and '()'. There are no other types of parentheses.\n\n=============================================\n\nExplanation\nStep 1. remove the '(' from the start of the string and make it a stack.\nStep 2. The i-th element is \"(\" if i == 0, \")\" otherwise.\nStep 3. The i-th element is \"(\" if i is even else \")\" otherwise.\nStep 4. If there are two or more \"(\", \")\", the result will be the sum of the two elements.\n\"\"\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6 9'\nassert solution('3\\n1 2 3\\n2\\n1 1\\n2 3') == '4 6'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\\n9\\n\"\n\n---\n\nfrom math import *\n\nn = int(input())\nt = list(map(int, input().split()))\nm = int(input())\np = list(map(int, input().split()))\n\nd = {}\n\nfor i in range(m):\n    d[p[i]] = t[i]"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2\n2''') == '6'\nassert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '9'\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\n\"\"\""
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2 1\n2\n1 1\n2 3\n''') == '6 9'\n\"\"\""
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"\"\"\n6\n9\n\n\"\"\"\nassert solution(\"\"\"\n4\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"\"\"\n6\n9\n\n\"\"\"\""
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3''') == '6 9'"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\\n9\\n\"\nassert solution(\"2\") == \"6\\n9\\n\"\n"
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('20 50 1 2 3 4 5 6 7 8 9\\n7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '20010'\nassert solution('20 50 1 2 3 4 5 6 7 8 9\\n6 9 10 11 12 13 14 15 16 17 18 19 20\\n10 20\\n5 5 5 5 5 5 5 5 5 5 5 5 5') == '2001020'"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 3 7 4 5''') == '2000'\nassert solution('''100 3\n1 3 2 9''') == '2550'\nassert solution('''1000 4\n3 4 5 9''') == '2000'\nassert solution('''1000 6\n1 4 5 3 8''') == '2500'\nassert solution('''1000 7\n1 4 5 3 8 9''') == '2550'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    100 8\n    1 3 4 5 6 7 8 9\n    \"\"\"\n) == \"2000\"\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '10000'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '10000'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '10000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9\\n') == '2000'\nassert solution('1000 20\\n1 3 4 5 6 7 8 9 10\\n') == '3000'\nassert solution('1000 32\\n1 3 4 5 6 7 8 9 10\\n') == '3000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 8\\n1 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 8\\n1 2 3 4 5 6 7 8 9') == '2000'\nassert solution('1000 8\\n1 2 3 4 5 6 7 8 9') == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('10 4') == '10000'\nassert solution('1 3 4 5 6 7 8 9') == '20000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2000'\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    input()\n) == input()\n"
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 123 456 789') == '2000'\nassert solution('123') == '2000'\nassert solution('1 2 3') == '2000'\nassert solution('123 456 789') == '2000'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '1'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '2'"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 3\n1 3\n2 3\n2 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"1 2\n1 2\n1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"10 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n55 57\n56 58\n56 59\n57 60\n57 61\n58 62\n58 63\n59 64\n59 65\n58 66\n57 67\n56 68\n55 69\n54 70\n53 71\n52 72\n51 73\n50 74\n50 75\n49 76\n48 77\n47 78\n46 79\n45 80\n44 81\n43 82\n42 83\n41 84\n40 85\n39 86\n39 87\n38 88\n38 89\n37 90\n37 91\n36 92\n35 93\n34 94\n34 95\n33 96\n32 97\n31 98\n30 99\n29 100\n28 101\n27 102\n26 103\n25 104\n24 105\n24 106\n24 107\n23 108\n22 109\n21 110\n20 111\n19 112\n18 113\n17 114\n15 115\n15 116\n14 117\n13 118\n12 119\n11 120\n9 121\n8 122\n7 123\n6 124\n5 125\n4 126\n4 127\n4 128\n4 129\n4 130\n4 131\n4 132\n4 133\n4 134\n4 135\n4 136\n4 137\n4 138\n4 139\n4 140\n4 141\n4 142\n4 143\n4 144\n4 145\n4 146\n4 147\n4 148\n4 149\n4 150\n4 151\n4 152\n4 153\n4 154\n4 155\n4 156\n4 157\n4 158\n4 159\n4 160\n4 161\n4 162\n4 163\n4 164\n4 165\n4 166\n4 167\n4 168\n4 169\n4 170\n4 171\n4 172\n4 173\n4 174\n4 175\n4 176\n4 177\n4 178\n4 179\n4 180\n4 181\n4 182\n4 183\n4 184\n4 185\n4 186\n4 187\n4 188\n4 189\n4 190\n4 191\n4 192\n4 193\n4 194\n4 195\n4 196\n4 197\n4 198\n4 199\n4 200\n4 201\n4 202\n4 203\n4 204\n4 205\n4 206\n4 207\n4 208\n4 209\n4 210\n4 211\n4 212\n4 213\n4 214\n4 215\n4 216\n4 217\n4 218\n4 219\n4 220\n4 221\n4 222\n4 223\n4 224\n4 225\n4 226\n4 227\n4 228\n4 229\n4 230\n4 231\n4 232\n4 233\n4 234\n4 235\n4 236\n4 237\n4 238\n4 239\n4 240\n4 241\n4 242\n4 243\n4 244\n4 245\n4 246\n4 247\n4 248\n4 249\n4 250\n4 251\n4 252\n4 253\n4 254\n4 255\n4 256\n4 257\n4 258\n4 259\n4 260\n4 261\n4 262\n4 263\n4 264\n4 265\n4 266\n4 267\n4 268\n4 269\n4 270\n4 271\n4 272\n4 273\n4 274\n4 275\n4 276\n4 277\n4 278\n4 279\n4 280\n4 281\n4 282\n4 283\n4 284\n4 285\n4 286\n4 287\n4 288\n4 289\n4 290\n4 291\n4 292\n4 293\n4 294\n4 295\n4 296\n4 297\n4 298\n4 299\n4 300\n4 301\n4 302\n4 303\n4 304\n4 305\n4 306\n4 307\n4 308\n4 309\n4 310\n4 311\n4 312\n4 313\n4 314\n4 315\n4 316\n4 317\n4 318\n4 319\n4 320\n4 321\n4 322\n4 323\n4 324\n4 325\n4 326\n4 327\n4 328\n4 329\n4 330\n4 331\n4 332\n4 333\n4 334\n4 335\n4 336\n4 337\n4 338\n4 339\n4 340\n4 341\n4 342\n4 343\n4 344\n4 345\n4 346\n4 347\n4 348\n4 349\n4 350\n4 351\n4 352\n4 353\n4 354\n4 355\n4 356\n4 357\n4 358\n4 359\n4 360\n4 361\n4 362\n4 363\n4 364\n4 365\n4 366\n4 367\n4 368\n4 369\n4 370\n4 371\n4 372\n4 373\n4 374\n4 375\n4 376\n4 377\n4 378\n4 379\n4 380\n4 381\n4 382\n4 383\n4 384\n4 385\n4 386\n4 387\n4 388\n4 389\n4 390\n4 391\n4 392\n4 393\n4 394\n4 395\n4 396\n4 397\n4 398\n4 399\n4 400\n4 401\n4 402\n4 403\n4 404\n4 405\n4 406\n4 407\n4 408\n4 409\n4 410\n4 411\n4 412\n4 413\n4 414\n4 415\n4 416\n4 417\n4 418\n4 419\n4 420\n4 421\n4 422\n4 423\n4 424\n4 425\n4 426\n4 427\n4 428\n4 429\n4 430\n4 431\n4 432\n4 433\n4 434\n4 435\n4 436\n4 437\n4 438\n4 439\n4 440\n4 441\n4 442\n4 443\n4 444\n4 445\n4 446\n4 447\n4 448\n4 449\n4 450\n4 451\n4 452\n4 453\n4 454\n4 455\n4 456\n4 457\n4 458\n4 459\n4 460\n4 461\n4 462\n4 463\n4 464\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 4\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('6 4') == '2'\nassert solution('5 3') == '2'\nassert solution('3 2') == '0'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == '2'"
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2'\nassert solution('5 3') == '1'\nassert solution('10 3') == '0'\n\"\"\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '10'\nassert solution('5') == '15'\nassert solution('6') == '26'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\") == \"10\"\nassert solution(\"4\\n2\") == \"9\"\nassert solution(\"5\\n4\") == \"16\"\nassert solution(\"10\\n5\") == \"505\"\nassert solution(\"20\\n8\") == \"512\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '10'\nassert solution('3') == '10'\nassert solution('12') == '14'\nassert solution('123') == '123'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n3') == '10'"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3') == '10'\nassert solution('5\\n4') == '20'\nassert solution('1\\n0') == '1'"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '1'\nassert solution('10') == '1'"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n\") == \"4\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '9'\nassert solution('100') == '49'\n"
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '4'\n\nimport collections\n\n\nclass Node:\n    def __init__(self, value: int, left: 'Node' = None, right: 'Node' = None):\n        self.value = value\n        self.left = left\n        self.right = right\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\""
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 1\nassert solution(\"1\") == 0\nassert solution(\"0\") == 0\nassert solution(\"\") == 1\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '0'\n) == '0', 'First example'\nassert solution(\n    '1'\n) == '1', 'Second example'\nassert solution(\n    '0.1'\n) == '0.1', 'Third example'\nassert solution(\n    '0.0'\n) == '0', 'Fourth example'\nassert solution(\n    '0.00001'\n) == '0.00001', 'Fifth example'"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0', 'For input: 0, the output should be 0'\nassert solution('1') == '0', 'For input: 1, the output should be 0'\n"
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '176'\nassert solution('125') == '176'\nassert solution('1225') == '176'\nassert solution('1225+') == '176'\nassert solution('12+5') == '17'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123') == '125'\nassert solution('1+2+3') == '6'\nassert solution('1+2+3+4') == '10'\nassert solution('1+2+3+4+5') == '15'\nassert solution('1+2+3+4+5+6') == '20'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"12\"\nassert solution(\"1234\") == \"1+2+3+4=6\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"125\") == \"176\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"\n\n-----------------\n\n\n\"\"\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('125') == '176'\nassert solution('12') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n\"\"\"\n"
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\nassert solution('125+1') == '176'\nassert solution('125+1+1') == '176'\nassert solution('125+1+1+1') == '176'\nassert solution('125+1+1+1+1') == '176'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '4'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('3') == '2'\nassert solution('4') == '0'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n1\n1 2\n''') == '0'\nassert solution('''\n3\n1 2 3\n''') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 4 6\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '2'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 2 3 4 5 6\n''') == '1'\n"
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 2\n''') == '1'\n\nassert solution('''\n2\n2 2\n''') == '0'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == '15800'\nassert solution('10') == '50000'\nassert solution('20') == '16000'"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20\") == \"15800\"\nassert solution(\"100\") == \"20000\"\nassert solution(\"-1\") == \"0\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"15800\"\nassert solution(\"100\") == \"25000\"\nassert solution(\"11\") == \"5200\"\nassert solution(\"4\") == \"2800\"\n\n\"\"\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"20\") == \"15800\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"15000\"\nassert solution(\"10\") == \"20000\"\nassert solution(\"100\") == \"150000\""
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20') == '15800'"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n10\n50\n''') == '10'\nassert solution('''30\n10\n35\n''') == '10'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"15800\""
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20') == '15800'\nassert solution('50') == '9375'\nassert solution('20') == '15800'\nassert solution('15') == '8850'\n"
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"20\") == \"15800\""
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ant') == 'abc', 'Should be \"abc\"!'\nassert solution('obe') == 'abec', 'Should be \"abec\"!'\nassert solution('rec') == 'abce', 'Should be \"abce\"!'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\""
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nprint(solution(input()))\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\""
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nassert solution(\"def\") == \"def\"\n"
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\""
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '2'\n\"\"\"\ns1, s2, s3 = input().split()\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '2'"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"111\") == \"1\"\n\"\"\"\n\ns_1, s_2, s_3 = stdin.strip().split()\n\nprint(len(s_1)+len(s_2)+len(s_3)-1)\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"101\") == '2'\nassert solution(\"\") == '0'\nassert solution(\"0\") == '0'\nassert solution(\"1\") == '1'\n\n\"\"\"\n\ns_1, s_2, s_3 = stdin.split(\" \")\ns_1 = int(s_1)\ns_2 = int(s_2)\ns_3 = int(s_3)\n\nanswer = s_1*s_2*s_3\n\nprint(answer)"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"0\") == \"2\"\nassert solution(\"11\") == \"1\"\nassert solution(\"11\") == \"2\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\", \"Wrong answer\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == 2\n\"\"\"\n\ns = input()\nprint(len([i for i in s.split() if i == '1']))"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"010\") == \"1\"\n"
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input) == 2"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n100\\n9000\") == \"48000\"\nassert solution(\"4\\n2\\n10000\\n9000\") == \"32000\"\nassert solution(\"5\\n2\\n10000\\n9000\\n10000\") == \"48000\"\nassert solution(\"5\\n2\\n10000\\n9000\\n10001\") == \"48000\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n10000\\n9000\") == \"512000\"\nassert solution(\"5\\n3\\n10000\\n9000\\n1000\") == \"512000\""
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '48000'\nassert solution('3') == '48000'\nassert solution('5') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3\n10000\n9000\n\n''') == '48000'\nassert solution('''\n4\n3\n80000\n3\n\n''') == '170000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '48000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n10000\n9000\n\n''') == '48000'\nassert solution('''\n10\n3\n10000\n9000\n\n''') == '59000'\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\n"
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 10000') == '48000'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"-1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 / 2\") == \"0.5\"\nassert solution(\"1 * 2 + 2\") == \"5\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"-1 - 2\") == \"0\"\nassert solution(\"1 + -2\") == \"1\"\nassert solution(\"1 - -2\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '1'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"2 - 1\") == \"1\"\nassert solution(\"4 - 2\") == \"2\"\nassert solution(\"1 - 1\") == \"0\"\nassert solution(\"2 - 2\") == \"0\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"-1\"\nassert solution(\"-1 - 2\") == \"1\"\nassert solution(\"2 + - 2\") == \"0\"\nassert solution(\"2 - - 2\") == \"2\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 + -2') == '1'\nassert solution('1 - -2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('-1 + 2') == '1'\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 + 1') == '2'\nassert solution('1 - 2') == '-1'\nassert solution('1 - 1') == '0'\nassert solution('1 - 10') == '-9'\n\n\"\"\""
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('-1 + 2') == '1'\nassert solution('1 - 2') == '-1'\nassert solution('-1 - 2') == '1'\nassert solution('1 * 2') == '2'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('99999') == 'ARC'\nassert solution('9898') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('12000') == 'ABC'\nassert solution('12345') == 'ARC'\n\"\"\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"1000000\") == \"ARC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('2000') == 'ARC'\nassert solution('3000') == 'ARC'\nassert solution('8000') == 'ARC'\nassert solution('9000') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"ARC\"\n"
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ABC', '\u6d4b\u8bd5\u7528\u4f8b\u4e0d\u901a\u8fc7'\nassert solution('2000') == 'ARC', '\u6d4b\u8bd5\u7528\u4f8b\u4e0d\u901a\u8fc7'"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n700 600 780\n''') == '1300'\nassert solution('''\n10000 100000 10000\n''') == '120000'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"10 10 10\") == \"110\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 20 30\n''') == '1300'\nassert solution('''\n10 20 40\n''') == '1480'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('900 600 700') == '1300'\nassert solution('700 500 780') == '1480'\nassert solution('700 600 500') == '1480'\nassert solution('500 700 500') == '1480'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"./testInput/input01.txt\") == \"1300\"\nprint(solution(\"./input.txt\"))\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1200 1400 1800\") == \"1780\"\nassert solution(\"100 20 30\") == \"40\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 200 750') == '1400'\nassert solution('10 10 10') == '20'\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"a b c\") == \"a b c\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"100 200 400\") == \"1540\"\nassert solution(\"500 300 600\") == \"1750\"\nassert solution(\"100 1000 100\") == \"1000\"\n"
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '#####\\n#abc#\\n#arc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '#\\n#'\nassert solution('3 5') == '#####\\n##\\n##'"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nabc\\narc\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\na\nb\nc\nd\ne''') == '#####\\n#abc#\\n#arc#\\n#####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"#abc#\\n#arc#\"\nprint(solution(input()))\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n# #') == '#####\\n# #'\nassert solution('4 4\\n######\\n######\\n# #\\n# #') == '#####\\n# #'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '###\\n#aa#\\n###'\nassert solution('4 5') == '####\\n#a#a#\\n###\\n#aa#\\n####'\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\n\ninput_text = '2 3'\nprint(solution(input_text))\n"
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('20') == '2'\nassert solution('50') == '2'\nassert solution('100') == '2'\nassert solution('200') == '2'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('IIDID') == '1'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"2\"\nassert solution('3') == \"2\"\nassert solution('9') == \"9\"\nassert solution('10') == \"10\"\nassert solution('111') == \"1\"\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"-1\") == \"-2\"\n\"\"\""
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\n\"\"\"\n\nN = int(stdin.readline())\nS = stdin.readline()\n\nmax_value = 0\nfor i in range(N):\n    if S[i] == \"I\":\n        max_value += 1\n    else:\n        max_value -= 1\n\nprint(max_value)\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nIIDID\n''') == '2'\nassert solution('''10\nIICIIDIDID\n''') == '4'\nassert solution('''6\nIIDIDIDID\n''') == '1'\nassert solution('''2\nIID\n''') == '1'"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('10\\nIIDDIDDDID') == '2'\nassert solution('10\\nDDIID') == '3'\n\n\"\"\"\n\nx = 0\nwhile True:\n    n, string = list(map(str, input().split()))\n    if n == '0':\n        break\n    elif int(n) == len(string):\n        print(x)\n        break\n    else:\n        for i in range(len(string)):\n            if string[i] == 'I':\n                x += 1\n            elif string[i] == 'D':\n                x -= 1\n    x = x + 1 if x > 0 else x\n    x = x - 1 if x < 0 else x\nprint(x)"
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nIIDID\\n') == '2'\nassert solution('10\\nININ\\n') == '5'\nassert solution('6\\nIIID\\n') == '5'\nassert solution('4\\nIIDI\\n') == '4'\nassert solution('3\\nIDID\\n') == '2'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '4'\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n\nsolution(\"11111 11332\") == \"3\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n11009 11332\n''') == '4'\n'''\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11009 11332\") == \"4\""
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"11109 11332\") == \"4\"\nassert solution(\"11109 11001\") == \"3\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11009 11332\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11009 11332') == '4'"
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11009 11332') == \"4\"\nassert solution('1') == \"1\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 4') == '3'\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 4\") == \"3\"\nassert solution(\"3 1 4\") == \"3\"\nassert solution(\"2 3 4\") == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    2 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"1 1 4\") == \"3\""
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 3\n2 2\n2 3\n3 3\n3 3''') == \"4\"\nassert solution('''2 1\n2 2\n3 3\n2 3\n2 4\n3 4''') == \"6\"\nassert solution('''4 2\n2 1\n2 2\n3 4\n3 3''') == \"3\"\nassert solution('''4 4\n4 3\n4 4\n4 5''') == \"5\"\nassert solution('''3 2\n2 1\n3 3\n4 4''') == \"5\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"4 5 7\") == \"3\"\nassert solution(\"2 4 5\") == \"2\"\nassert solution(\"1 2 4\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1 4\n''') == '3'\nassert solution('''\n2 2 2\n''') == '1'\nassert solution('''\n1 1 3\n''') == '2'\n'''\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 4') == \"3\"\nassert solution('1 2 4') == \"2\"\nassert solution('1 1 4') == \"2\"\nassert solution('3 3 4') == \"3\"\n"
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('3 1 2') == '3'\nassert solution('3 3 3') == '3'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"7\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"4 4\") == \"10\"\nassert solution(\"10 10\") == \"20\"\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == '12'\nassert solution('4 1') == '4'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 3 4 5\\n') == '12'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '12'\nassert solution(\"3\") == '4'\nassert solution(\"4\") == '5'\nassert solution(\"5\") == '7'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '12'\nassert solution('12 4') == '13'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '12'\nassert solution('5 10') == '21'\nassert solution('5 10') == '21'\nassert solution('5 100') == '100'\nassert solution('5 10') == '100'\n"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '12'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n\") == \"12\""
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''5 3\n1 2 3 4 5\n'''\n) == '12'\n\nassert solution(\n'''5 3\n5 4 4 5 5\n'''\n) == '10'\n\nassert solution(\n'''5 5\n3 5 2 6 1\n'''\n) == '7'\n\nassert solution(\n'''2 3\n1 2\n'''\n) == '3'\n\nassert solution(\n'''3 5\n1 2 3 4 5\n'''\n) == '12'"
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"10 5\") == \"19\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 2 3\") == \"A\"\nassert solution(\"4 5 6\") == \"A\"\nassert solution(\"9 9 9\") == \"A\"\nassert solution(\"0 0 0\") == \"A\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"10 5 5\") == \"A\"\nassert solution(\"10 10 10\") == \"A\"\nassert solution(\"0 0 0\") == \"A\"\nassert solution(\"1 1 1\") == \"A\""
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'A'\nassert solution('5 2 7') == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('3 2 5') == 'A'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 7''') == 'B', 'Expected value: \"B\", but got: \"{0}\"'.format(solution('''5 2 7'''))\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\") == \"B\"\nassert solution(\"5 1 2\") == \"B\"\nassert solution(\"1 1 2\") == \"B\"\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'B'\n\"\"\"\n\nx, a, b = list(map(int, stdin.split()))"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 7') == 'B'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 7\\n') == 'B', 'Check your code'\nassert solution('2 5 3\\n') == 'A', 'Check your code'\nassert solution('5 3 2\\n') == 'A', 'Check your code'\nassert solution('1 1 2\\n') == 'A', 'Check your code'\nassert solution('1 2 1\\n') == 'A', 'Check your code'\n"
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 1 1') == '1'"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/08\") == \"2018/01/08\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/05') == '2017/01/07'\nassert solution('2017/01/10') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"2018/01/07\"\nprint(solution(str(input())))"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/01\") == \"2018/01/01\"\nassert solution(\"2017/02/31\") == \"2018/02/31\"\nassert solution(\"2017/01/30\") == \"2017/01/30\"\nassert solution(\"2017/02/29\") == \"2017/02/29\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"2017/01/07\"\"\") == \"\"\"2018/01/07\"\"\"\"\"\"\nassert solution(\n\"\"\"2017/01/01\"\"\") == \"\"\"2017/01/01\"\"\"\"\"\"\nassert solution(\n\"\"\"2017/01/07\"\"\") == \"\"\"2017/01/07\"\"\"\"\"\"\nassert solution(\n\"\"\"2017/01/01\"\"\") == \"\"\"2017/01/01\"\"\"\"\"\"\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2016/12/23') == '2016/12/23'\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2016/01/01') == '2016/01/01'\nassert solution('2019/02/22') == '2019/02/22'\n"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2017/01/07') == '2018/01/07'"
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\""
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'a'\nassert solution('2') == 'c'\nassert solution('3') == 'abc'\nassert solution('4') == 'ac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"cbaa\"\n\"\"\"\n\nn = int(stdin.readline().strip())\ns = []\nfor i in range(n):\n    s.append(stdin.readline().strip())\n\nres = []\nfor s_i in s:\n    left = 0\n    right = 0\n    for i in range(len(s_i)):\n        if s_i[i] == 'a':\n            if left == 0:\n                res.append(s_i[left+1:i+1])\n                left = i + 1\n        else:\n            right = i\n    res.append(s_i[left:right+1])\n\nres = sorted(set(res), key=res.index)\nfor i in res:\n    print(i)\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\nassert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == ''\nassert solution('''\n3\ncbda\nddaa\naaabc\n''') == 'aaabc'\nassert solution('''\n3\ncdbc\nddaa\naaabc\n''') == 'aaabc'\nassert solution('''\n3\ncdbc\nddaa\naaabc\n''') == 'aaabc'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nabc') == 'abc', 'Test Failed'\nassert solution('2\\nhi') == 'hi', 'Test Failed'\nassert solution('3\\na') == 'a', 'Test Failed'"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'aac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\n"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\n\nThe answer is 'aac'.\n\n--\n\nimport string\nimport sys"
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\\n\") == \"aac\"\n\n----------------------------------------------------------------------------------------------------------------------\n6. Write a program that calculates the sum of the digits of a given number and prints the result.\n\nInput Format:\nFirst line contains the number whose sum of digits is to be found.\n\nOutput Format:\nPrint the sum of the digits of the given number.\n\nConstraints:\n1 \\leq n \\leq 1000000\n\nSample Input 1:\n2133\n\nSample Output 1:\n15\n\nSample Input 2:\n2147\n\nSample Output 2:\n18\n\n----------------------------------------------------------------------------------------------------------------------\n7. Write a program that converts a given number into its decimal equivalent.\n\nInput Format:\nFirst line contains the number whose decimal equivalent is to be found.\n\nOutput Format:\nPrint the decimal equivalent of the given number.\n\nConstraints:\n1 \\leq n \\leq 1000000\n\nSample Input 1:\n2137\n\nSample Output 1:\n3\n\nSample Input 2:\n23\n\nSample Output 2:\n3\n\n----------------------------------------------------------------------------------------------------------------------\n8. Write a program to get the nth root of a given number.\n\nInput Format:\nFirst line contains the number whose root is to be found.\n\nOutput Format:\nPrint the nth root of the given number.\n\nConstraints:\n1 \\leq n \\leq 1000000\n\nSample Input 1:\n2\n\nSample Output 1:\n1.41421356237309504880...\n\nSample Input 2:\n3\n\nSample Output 2:\n1.732050807568877293527...\n\n----------------------------------------------------------------------------------------------------------------------\n9. Write a program to generate a 2D array of size r X c and print the elements in its diagonal line.\n\nInput Format:\nFirst line contains the number of rows r and columns c of the 2D array.\nSecond line contains the elements of the array.\n\nOutput Format:\nPrint the elements of the diagonal line of the 2D array.\n\nConstraints:\n1 \\leq r \\leq 100\n1 \\leq c \\leq 100\n\nSample Input 1:\n4 4\n1 2 3 4\n\nSample Output 1:\n1 2\n3 4\n\nSample Input 2:\n5 5\n1 2 3 4 5\n\nSample Output 2:\n1 2\n3 4\n5 6\n7 8\n9 10\n\nSample Input 3:\n2 2\n1 1\n\nSample Output 3:\n1\n1\n1 1\n\n----------------------------------------------------------------------------------------------------------------------\n10. Write a program to generate the list of prime numbers between 1 and n (both inclusive).\n\nInput Format:\nFirst line contains the number n.\n\nOutput Format:\nPrint the list of prime numbers between 1 and n (both inclusive) in a single line.\n\nConstraints:\n1 \\leq n \\leq 1000000\n\nSample Input 1:\n10\n\nSample Output 1:\n2 3 5 7 11 13 17 19\n\nSample Input 2:\n15\n\nSample Output 2:\n2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97\n\n----------------------------------------------------------------------------------------------------------------------\n11. Write a program to print the longest common prefix among all the strings from the list.\n\nInput Format:\nFirst line contains the number of strings.\nSecond line contains the space separated string.\n\nOutput Format:\nPrint the longest common prefix among all the strings.\n\nConstraints:\n1 \\leq n \\leq 100\n\nSample Input 1:\n4\nab\nabab\nabac\nabac\n\nSample Output 1:\nab\n\nSample Input 2:\n4\nab\nabab\nabac\nabac\n\nSample Output 2:\nab\n\nSample Input 3:\n3\nabc\nabcd\n\nSample Output 3:\nabc\n\nSample Input 4:\n2\nab\nab\n\nSample Output 4:\nab\n\n----------------------------------------------------------------------------------------------------------------------\n12. Write a program to find the maximum element in a given array.\n\nInput Format:\nFirst line contains the number of elements n.\nSecond line contains the space separated elements of the array.\n\nOutput Format:\nPrint the maximum element in the array.\n\nConstraints:\n1 \\leq n \\leq 100\n\nSample Input 1:\n6\n7\n5\n3\n2\n1\n\nSample Output 1:\n7\n\nSample Input 2:\n4\n1\n2\n3\n\nSample Output 2:\n1\n\nSample Input 3:\n2\n3\n2\n\nSample Output 3:\n2\n\nSample Input 4:\n2\n2\n\nSample Output 4:\n2\n\n----------------------------------------------------------------------------------------------------------------------\n13. Write a program to reverse a string using recursion.\n\nInput Format:\nFirst line contains the number of characters in the string.\nSecond line contains the string.\n\nOutput Format:\nPrint the reverse of the string.\n\nConstraints:\n1 \\leq n \\leq 100\n\nSample Input 1:\n6\n\nSample Output 1:\n6\n\nSample Input 2:\n4\n\nSample Output 2:\n4\n\nSample Input 3:\n2\n\nSample Output 3:\n2\n\nSample Input 4:\n3\n\nSample Output 4:\n3\n\n----------------------------------------------------------------------------------------------------------------------\n14. Write a program to swap two characters in a string.\n\nInput Format:\nFirst line contains the number of characters in the string.\nSecond line contains the string.\n\nOutput Format:\nPrint the swap of the characters.\n\nConstraints:\n1 \\leq n \\leq 100\n\nSample Input 1:\n5\n\nSample Output 1:\n5\n\nSample Input 2:\n4\n\nSample Output 2:\n4\n\nSample Input 3:\n3\n\nSample Output 3:\n3\n\nSample Input 4:\n2\n\nSample Output 4:\n2\n\n----------------------------------------------------------------------------------------------------------------------\n15. Write a program to insert a new string after each of these characters:.,? and : in a string.\n\nInput Format:\nFirst line contains the number of strings in the string.\nSecond line contains the string.\n\nOutput Format:\nPrint the modified string.\n\nConstraints:\n1 \\leq n \\leq 100\n\nSample Input 1:\n5\n\nSample Output 1:\n5...??.\n\nSample Input 2:\n5\n\nSample Output 2:\n5...?.\n\nSample Input 3:\n5\n\nSample Output 3:\n5...:.\n\nSample Input 4:\n2\n\nSample Output 4:\n2...:.\n\n----------------------------------------------------------------------------------------------------------------------\n16. Write a program to swap the characters present at the given indices in a string.\n\nInput Format:\nFirst line contains the number of strings n and then n space separated strings s1,s2,s3,...,sn.\n\nOutput Format:\nPrint the modified string.\n\nConstraints:\n1 \\leq n \\leq 100\n\nSample Input 1:\n3\na b c\n\nSample Output 1:\nb a c\n\nSample Input 2:\n4\nb c a\n\nSample Output 2:\nc a b\n\nSample Input 3:\n1\na\n\nSample Output 3:\na\n\nSample Input 4:\n2\na b\n\nSample Output 4:"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"12\""
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('5') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n24 30') == '7'\nassert solution('1\\n50 50') == '2'\nassert solution('2\\n10 30') == '1'\nassert solution('3\\n3 3') == '1'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('6') == '2'\nassert solution('1') == '1'\nassert solution('1000') == '1'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n24 30\n:\n30 24''') == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '4'\nassert solution('3') == '2'\n\"\"\"\nimport math"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '7'\n"
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n24 30\n:\n29 23''') == '7'\nprint(solution('''1\n2 3\n:\n3 4'''))\nprint(solution('''1\n100 100'''))\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '6', 'Sample test failed'\n\nassert solution('2 3') == '5', 'Sample test failed'\n\n'''\n\nn, m = map(int, input().split())"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 1\n1 2\n3 4\"\"\") == \"6\"\nassert solution(\"\"\"1 3\n1 2\n3 4\"\"\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 6, \"Sample Test Failed\"\nassert solution([3, 4]) == 6, \"Sample Test Failed\"\n\"\"\""
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '3'\nassert solution('7 4') == '5'\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n2 3\n3 1\n4 1\n3 2\n2 1\n''') == '6'\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n3 4 1''') == '1'\nassert solution('''4 4\n4 1 2''') == '2'\nassert solution('''5 5\n5 1 4\n4 2 3''') == '4'\nassert solution('''3 5\n3 1 2\n1 2 3''') == '5'\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '6'\n\"\"\"\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '6'\n'''\n"
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"6\"\n\"\"\"\n\nn, m = list(map(int, input().split()))\n\nprint(6)\n\n\"\"\"\nn, m = 3, 4\n\nprint(6)\n\nn, m = 2, 3\n\nprint(5)\n\nn, m = 4, 3\n\nprint(4)\n\nn, m = 3, 3\n\nprint(3)\n\nn, m = 4, 2\n\nprint(3)\n\nn, m = 4, 4\n\nprint(4)\n\"\"\""
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 2\") == \"Impossible\"\n\n'''"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Possible'\nassert solution('1 3') == 'Possible'\nassert solution('1 2') == 'Impossible'\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"Possible\"\nassert solution(\"8 8\") == \"Impossible\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 1\") == \"Impossible\"\nassert solution(\"1 1\") == \"Possible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5\n5 4\n3 2\n5 4''') == 'Possible'\nassert solution('''4 5\n5 4\n2 5\n5 4''') == 'Impossible'\nassert solution('''1 1\n1 1\n1 1\n1 1''') == 'Possible'\n\"\"\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"8 9\") == \"Impossible\"\nassert solution(\"14 9\") == \"Possible\"\n\n'''\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n2 3''') == 'Possible'\nassert solution('''3 4\n4 2''') == 'Impossible'\nassert solution('''1 5\n1 5''') == 'Possible'\n'''\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == \"Possible\"\nassert solution(2) == \"Possible\"\nassert solution(3) == \"Possible\"\nassert solution(4) == \"Impossible\"\nassert solution(5) == \"Impossible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Impossible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"4 5\") == \"Possible\"\nassert solution(\"1 2 2\") == \"Impossible\"\n"
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Impossible\"\nassert solution(\"3 5\") == \"Possible\"\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?tc????') == 'atcoder'\n\"\"\""
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'ctcoder'\nassert solution('bte') == 'UNRESTORABLE'\n\n'''"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('?tc????') == 'atcoder'\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?tc????') == 'atcoder', solution('?tc????')\nassert solution('coder') == 'atcoder', solution('coder')"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"?tc?????\") == \"atcoder\"\nassert solution(\"?tc?????\") == \"atcoder\"\nassert solution(\"?tc?????\") == \"atcoder\"\nassert solution(\"?tc?????\") == \"atcoder\"\nassert solution(\"?tc?????\") == \"atcoder\"\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder', 'test #1'\nassert solution('?tc????') == 'UNRESTORABLE', 'test #2'\nassert solution('??tc????') == 'UNRESTORABLE', 'test #3'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"tc????\") == \"atcoder\"\nassert solution(\"coder????\") == \"atcoder\"\n\"\"\""
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"UNRESTORABLE\"\nassert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"d?c???\") == \"dtc?\"\n\n\"\"\"\nimport unittest"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('?') == 'UNRESTORABLE'\n\n\"\"\"\n"
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"atcoder\"\n\nE869121    \nThe number of possible strings is 13,135,865.\n\nSum of the first 13 digits is 1672 and the sum of the last 13 digits is 2424.\nThe smallest possible string is \"3\"*13 = \"23\"*13 = \"32\"*13 = \"343\"*13 = \"4233\"*13 = \"42333\"*13 = \"423333\"*13 = \"42333333\"*13 = \"42333333333\"*13 = \"42333333333333\"*13 = \"423333333333333\"*13 = \"4233333333333333333\"*13 = \"42333333333333333333333\"*13 = \"423333333333333333333333\"*13 = \"423333333333333333333333333\"*13 = \"4233333333333333333333333333\"*13 = \"42333333333333333333333333333\"*13 = \"42333333333333333333333333333333\"*13 = \"423333333333333333333333333333333\"*13 = \"423333333333333333333333333333333333\"*13 = \"4233333333333333333333333333333333333333\"*13 = \"4233333333333333333333333333333333333333\"*13 = \"4233333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 = \"42333333333333333333333333333333333333333\"*13 ="
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2002\") == \"2032\"\nprint(solution(input()))\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2002'\nassert solution('2032') == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(Takahashi) == \"2032\"\n\"\"\""
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2032'\n\"\"\""
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002\\n2017') == '2032'\nassert solution('2002\\n2017') == '2017'"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2032'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\n\n----------------------------------------\n\nimport math"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '5.0'\nassert solution('4\\n3\\n') == '7.5'\nassert solution('4\\n7\\n') == '15.0'\nassert solution('1\\n20\\n') == '20.0'\n"
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2032'\n\n\"\"\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"string\") == \"6\"\nassert solution(\"letter\") == \"4\"\nassert solution(\"aaaaaa\") == \"0\"\nassert solution(\"uncopyrightable\") == \"13\"\nassert solution(\"ambidextrously\") == \"12\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '2'\nassert solution(input()) == '13'\nassert solution(input()) == '12'\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 26\nassert solution(\"aaa\") == 1\nassert solution(\"abcd\") == 2\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"aaaaaa\") == 0\nassert solution(\"aaaaaa\") == 1\nassert solution(\"aaaaaa\") == 2\nassert solution(\"aaaaaa\") == 3\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n"
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"100000000 500 3\") == \"AC\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"AC\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n19931568 1000000 6\n\"\"\") == \"TLE\""
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'TLE'\nassert solution('19931568 1000000 6') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''500000000 100000000 50 3\n                100000000 10001 5\n                100000000 10000 5\n                19931568 1000000 6''') == 'AC'\nassert solution('''500000000 100000000 50 3\n                100000000 10001 5\n                100000000 10000 5\n                19931568 1000000 6''') == 'AC'\nassert solution('''500000000 100000000 50 3\n                100000000 10001 5\n                100000000 10000 5\n                19931568 1000000 6''') == 'AC'\nassert solution('''500000000 100000000 50 3\n                100000000 10001 5\n                100000000 10000 5\n                19931568 1000000 6''') == 'AC'\nassert solution('''100000000 500 3\n                100000000 50 3\n                100000000 10001 5\n                100000000 10000 5\n                19931568 1000000 6''') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100000000 500 3\nSample Output 1:\nTLE\n\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE\n''') == 'AC'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100000000 500 3\n''') == 'TLE'\nassert solution('''\n100000000 50 3\n''') == 'AC'\nassert solution('''\n100000000 10001 5\n''') == 'TLE'\nassert solution('''\n100000000 10000 5\n''') == 'AC'\nassert solution('''\n19931568 1000000 6\n''') == 'TLE'\n"
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''100000000 500 3\nSample Output 1:\nTLE\n\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE''') == 'AC'\nprint(solution('''100000000 500 3\nSample Output 1:\nTLE\n\nSample Input 2:\n100000000 50 3\nSample Output 2:\nAC\n\nSample Input 3:\n100000000 10001 5\nSample Output 3:\nTLE\n\nSample Input 4:\n100000000 10000 5\nSample Output 4:\nAC\n\nSample Input 5:\n19931568 1000000 6\nSample Output 5:\nTLE'''))\n\nfrom typing import List\nimport math\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n') == '2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3\\n\") == \"2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"4 0 0 0 4 16 8 2 64 32 4 2048 64 0 0 2048 64\"\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"2 16 8 4 4 16 8 2 64 32 4 16 8 2 64 32 4 1024 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16 8 2 64 32 4 16"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\".strip()\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\".strip()\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\".strip()\nassert solution(\"\"\"\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n\"\"\".strip()\nassert solution(\"\"\"\n1\n\"\"\") == \"\"\"\n0\n\"\"\".strip()\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"2 0 0 2\") == \"4 16 8 2\"\nassert solution(\"2 0 0 2\") == \"2 64 32 4\"\nassert solution(\"2 2 2 2\") == \"2 2 2 2\"\nassert solution(\"2 2 2 2\") == \"2 2 2 2\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"4 16 8 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\"\n"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == solution.__doc__\nprint(solution(s))"
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '''\n2 16 8 4\n4 64 32 4\n0 0 2048 64\n0 0 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '''\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n'''"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '0'\nassert solution('C2H6 10') == '6'\nassert solution('C3H8') == '1'\nassert solution('CH3OH 1') == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\nC2H6 10\nC3H8\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\nCH3OH 1\nCH4\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\nC6H6OCH2O 10\nHCN\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\nC6H14 10\nC5H10\n    \"\"\"\n) == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"H 2\nO\n\"\"\") == \"0\"\nassert solution(\"\"\"C 2\nC 3\nC 4\nC 5\nC 6\nC 7\nC 8\nC 9\nC 10\n\"\"\") == \"12\"\nassert solution(\"\"\"CH3OH 1\nCH4\n\"\"\") == \"1\"\nassert solution(\"\"\"C6H6OCH2O 10\nHCN\n\"\"\") == \"0\""
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '0'\nassert solution('C2H6 10') == '6'\nassert solution('C3H8') == '1'\nassert solution('CH3OH 1') == '1'\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"H2OC100H\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"0\"\nassert solution(\"C6H6OCH2O 10\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\nassert solution(\"C6H6OCH2O 10\") == \"12\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nCC\nC\n''') == '0'\nassert solution('''\nCH3OH\nCC\n''') == '0'\nassert solution('''\nCCCCCC\nCCCC\n''') == '2'\nassert solution('''\nCH3OH\nCCCCC\n''') == '0'\nassert solution('''\nCH3OH\nCCCCCCCCCCCCCCCCCCC\n''') == '2'\n\nprint(solution(open(0)))"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"1\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n"
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"H 2\nO\n\"\"\") == \"0\"\n\nassert solution(\"\"\"C2H6 10\nC3H8\n\"\"\") == \"6\"\n\nassert solution(\"\"\"CH3OH 1\nCH4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"C6H6OCH2O 10\nHCN\n\"\"\") == \"0\"\n\nassert solution(\"\"\"C6H14 10\nC5H10\n\"\"\") == \"12\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''SECRET SOMECHORESARETOUGH''') == 'PASS'\nprint(solution('''SECRET SOMECHORESARETOUGH'''))\nprint(solution('''ABC HAPPYBIRTHDAYCACEY'''))\nprint(solution('''ABC TRAGICBIRTHDAYCACEY'''))\nprint(solution('''ABC HAPPYBIRTHDAY'''))\nprint(solution('''ABC HAPPYBIRTHDAYCACEY'''))\n\n\"\"\"\nimport re\n\nimport pytest\n\n\n@pytest.mark.parametrize(\"test_input,expected\",\n                         [\n                             (\"ABC HAPPYBIRTHDAYCACEY\", \"PASS\"),\n                             (\"ABC TRAGICBIRTHDAYCACEY\", \"FAIL\"),\n                             (\"ABC HAPPYBIRTHDAY\", \"FAIL\"),\n                             (\"ABC HAPPYBIRTHDAYCACEY\", \"FAIL\"),\n                             (\"SECRET SOMECHORESARETOUGH\", \"PASS\"),\n                             (\"ABC HAPPYBIRTHDAYCACEY\", \"FAIL\")\n                         ])\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"ABC HAPPYBIRTHDAYCACEY\nABC TRAGICBIRTHDAYCACEY\nABC HAPPYBIRTHDAY\nABC SECRET SOMECHORESARETOUGH\n\"\"\"\n) == \"PASS\"\nassert solution(\n\"\"\"ABC HAPPYBIRTHDAYCACEY\nABC HAPPYBIRTHDAY\nABC SECRET SOMECHORESARETOUGH\n\"\"\"\n) == \"FAIL\"\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"PASS\"\nprint(solution(input()))"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\""
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n\nimport collections\nfrom collections import Counter"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n"
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\nABC HAPPYBIRTHDAYCACEY\n'''\n    ) == 'PASS'\n\nassert solution(\n'''\nABC\n'''\n    ) == 'FAIL'\n\nassert solution(\n'''\nABC HAPPYBIRTHDAY\n'''\n    ) == 'FAIL'\n\n\nassert solution(\n'''\nABC HAPPYBIRTHDAY\n'''\n    ) == 'FAIL'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == ']'\nassert solution('13') == ']'\nassert solution('21') == '] 20'\nassert solution('27') == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"ok so far\"\nassert solution(\"([] [] )\") == \"] 7\"\nassert solution(\"(([] [[]] ()) )\") == \"] 20\"\nassert solution(\"[ { { (()) } ]\") == \"] 20\""
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '] 7'\nassert solution('13') == 'ok so far'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'\n\n'''\n\nn = int(input())\ns = input()\np = \"([{\"\nd = \")]}\"\nd = set(d)\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('[{[[()]]}]') == ']20'\nassert solution('()') == 'ok so far'\nassert solution('[]') == 'ok so far'\nassert solution('([]') == 'ok so far'\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"ok so far\""
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == ']'\nassert solution('13') == ']'\nassert solution('21') == 'ok so far'\nassert solution('27') == 'ok so far'"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"([] [] )\") == \"]\"\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n8\n([] [] ]\n''') == '] 7'\nassert solution(\n'''\n13\n(([] [[]] ())\n''') == '] 20'\nassert solution(\n'''\n21\n[ { { () () () () } ]\n''') == '] 20'\nassert solution(\n'''\n27\n[ { [[()]] (({})) } ] () {}\n''') == 'ok so far'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\napple\nextra\napple\n\"\"\") == \"Player 1 lost\"\nassert solution(\"\"\"\n2\napple\nneat\n\"\"\") == \"Player 2 lost\"\nassert solution(\"\"\"\n4\napple\nletters\nletters\nstyle\n\"\"\") == \"Fair Game\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Fair Game\"\nassert solution(\"5\") == \"Fair Game\"\nassert solution(\"2\") == \"Player 2 lost\"\nassert solution(\"3\") == \"Player 1 lost\""
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\napple\nextra\napple\n''') == 'Player 2 lost'\nassert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n2\napple\nneat\n''') == 'Player 1 lost'"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\napple\\nextra\\nletters') == 'Fair Game'\nassert solution('3\\napple\\neat\\nletters') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"Player 2 lost\"\nassert solution(\"5\") == \"Fair Game\"\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n3\napple\nextra\napple\n''') == 'Player 1 lost'\nassert solution('''\n2\napple\nneat\n''') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle\\n') == 'Fair Game'\nassert solution('2\\napple\\nextra\\napple\\n') == 'Player 1 lost'\nassert solution('4\\napple\\nneat\\nletters\\nstyle\\n') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'Fair Game'\nassert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Fair Game'\nassert solution('1') == 'Player 1 lost'\n"
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"Player 2 lost\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"10\") == \"Fair Game\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10010\"\nassert solution(input()) == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000\n+\n100\n''') == '10010'\nassert solution('''\n10000\n+\n10\n''') == '1010'\nassert solution('''\n10\n+\n1000\n''') == '1010'\nassert solution('''\n10\n*\n100\n''') == '100000'\nassert solution('''\n10\n*\n10\n''') == '10100'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000\\n+\\n100\") == \"100000\"\nassert solution(\"10000\\n+\\n10\") == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == '100000', 'First'\nassert solution('10000') == '101000', 'Second'\nassert solution('10') == '1010', 'Third'"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10\") == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\n+\\n100\") == \"10010\"\nassert solution(\"1\\n+\\n10\") == \"11\"\nassert solution(\"100\\n+\\n10\") == \"1010\"\nassert solution(\"1\\n*\\n10\") == \"10100\"\nassert solution(\"10\\n*\\n10\") == \"10110\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == '100000'\nassert solution('10') == '1010'\nassert solution('+') == '1010'\nassert solution('*') == '10010'\nassert solution('+') == '1010'\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == '100000', solution('1000')\nassert solution('10') == '1010', solution('10')\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"10000\\n+\\n10\\n\") == \"10010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"\n"
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('10000\\n+\\n10\\n') == '1010'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\nassert solution(\"52 in\") == \"8\""
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 out\n8 in''') == '6'\nprint(solution('''8 out\n8 in'''))\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\""
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n"
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint('all tests passed')\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\"\"\"\n\nimport re"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nprint('All tests passed!')\n"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\", \"Sample test case 1\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\", \"Sample test case 2\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\", \"Sample test case 3\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\""
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sorted(['menolaxios mox', 'alemaxe maxos', 'pamoli toxes'])) == sorted(['menolaxiosexmox', 'alemaxexmaxos', 'pamolextoxes'])\nprint(solution(sorted(['menolaxios mox', 'alemaxe maxos', 'pamoli toxes'])))"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'"
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\nassert solution('menolaxios mox abcd') =='menolaxiosexmoxabcd'\nassert solution('alemaxe maxos abcd') == 'alemaxexmaxosabcd'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2018') == 'yes', solution\nassert solution('2019') == 'no', solution\nassert solution('2020') == 'yes', solution\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2018\n2019\n2020''') == \"yes\"\nassert solution('''2017\n2018\n2019''') == \"yes\"\nassert solution('''2017\n2018\n2020''') == \"no\"\nassert solution('''2020\n2019\n2020''') == \"no\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n\"\"\"\n\n\n\"\"\""
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'yes'\n'''"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"no\"\n"
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"yes\"\nassert solution(\"5\") == \"no\"\nassert solution(\"100\") == \"no\"\nassert solution(\"2018\") == \"no\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"9\""
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 0 0 0 4 0 0 0 0 4\n4\n\"\"\") == \"64\"\nassert solution(\n\"\"\"\n10 10 10 20 0 10 10 10 10 10\n4\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n10 10 10 20 0 10 10 10 10 10\n20\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n10 10 10 20 0 10 10 10 10 10\n4\n\"\"\") == \"1820000\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n0\n3\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n5\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n0\n''') == '1820000'\nassert solution('''10 0 0 0 4 0 0 0 0 4\n4\n3\n''') == '0'\nassert solution('''20 0 0 0 4 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n4\n2\n4\n6\n5\n6\n7\n8''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n7"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"64\"\nassert solution_naive(input_string) == \"1820000\"\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '1820000'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\n"
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\nassert solution('4') == '0'\nassert solution('10') == '0'\nprint('All tests passed')"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999\n''') == '0 0'''\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 0\") == \"2 330\"\nassert solution(\"7 1\") == \"2 570\"\nassert solution(\"7 2\") == \"0 0\""
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'''\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples.input_1) == \"2 330\"\nassert solution(samples.input_2) == \"2 570\"\nassert solution(samples.input_3) == \"0 0\"\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999\n''') == '0 0'\n\n'''\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 0\\n30 270 995 996 997 998 999') == '2 330'\nassert solution('7 1\\n30 270 995 996 997 998 999') == '2 570'\nassert solution('7 2\\n30 270 995 996 997 998 999') == '0 0'\nassert solution('7 0\\n8 90 995 996 997 998 999') == '0 0'\n"
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n7 0\n30 270 995 996 997 998 999\n\"\"\") == \"2 330\"\nassert solution(\n\"\"\"\n7 1\n30 270 995 996 997 998 999\n\"\"\") == \"2 570\"\nassert solution(\n\"\"\"\n7 2\n30 270 995 996 997 998 999\n\"\"\") == \"0 0\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == '1'\nassert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nb\na\nb\nb\na\n''') == '1'\nassert solution('''\nabccaba\nb\n''') == '1'\nassert solution('''\naaaaaa\nb\n''') == '2'\nassert solution('''\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '2'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == sys.stdin.read().strip()\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"6\"\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaa') == '1'\nassert solution('aba') == '1'\nassert solution('abba') == '2'\nassert solution('abcdef') == '6'\n"
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    'aaaaaaaa'\n) == '1', f'Expected `1` but got `{solution(\"aaaaaaaa\")}`'\nassert solution(\n    'abbaabbaabba'\n) == '2', f'Expected `2` but got `{solution(\"abbaabbaabba\")}`'\nassert solution(\n    'abcdef'\n) == '6', f'Expected `6` but got `{solution(\"abcdef\")}`'\nprint('Almost done!')\n\"\"\""
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n\nstdin = input()\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\n\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\n\nassert solution('''3 6\n1 2 3\n0 1 2 3 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '0\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6\\n1 2 4\\n11 12 15 19 24 30') == '1'\nassert solution('5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9') == '2'\nassert solution('4 10\\n1 2 3 4 5\\n11 12 15 19 24 30') == '1'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''\n3 6\n1 2 4\n11 12 15 19 24 30\nSample Output 3:\n0\n1\n\nSample Input 4:\n2\n2 2\n1 2\nSample Output 4:\n2\n1\n\nSample Input 5:\n3 4\n1 2 3\n0 1 2 3 4 5\nSample Output 5:\n0\n1\n2\n\nSample Input 6:\n3 2\n1 2 3\n0 1 2 3 4 5\nSample Output 6:\n1\n1\n2\n\nSample Input 7:\n2 3\n1 2 3\n0 1 2 3 4 5\nSample Output 7:\n1\n2\n\nSample Input 8:\n4 3\n1 2 3 4\n0 1 2 3 4 5 6\nSample Output 8:\n0\n1\n1\n1\n\n''') == '2'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\\n1 2\\n'\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\\n1\\n'\nassert solution('''\n3 6\n1 2 4\n11 12 15 19 24 30\nSample Output 3:\n0\n1\n''') == '1\\n1\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"6 8 12 18 26 28 30 34 36 37 39 40\") == \"1 2\"\n\n\"\"\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '2'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40''') == '2\\n1 2\\n'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9''') == '1\\n1 2\\n'\nassert solution('''3 6\n1 2 3 4 5\n11 12 15 19 24 30\nSample Output 3:\n0\n1\n''') == '1\\n1\\n'\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"4 6\") == \"1\"\nassert solution(\"5 10\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 12\\n6 8 12 18 26 28 30 34 36 37 39 40\") == \"2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"3 6\\n1 2 3 4 5\\n11 12 15 19 24 30\") == \"0\"\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5551212''') == '1'\nassert solution('''5519876''') == '0'\nassert solution('''5055555''') == '0'\nprint('Congratulations! All test cases passed.')"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n\"\"\"\n\nn = int(input())\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'"
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n\n\"\"\""
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0/1\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0/1\n33/1\n-40/1\n''') == '5/9'"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nprint('Congratulations! All test cases pass')\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"0/1\"\n"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'"
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"0/1\"\"\") == \"\"\"0/1\"\"\"\nassert solution(\n\"\"\"32/1\"\"\") == \"\"\"0/1\"\"\"\nassert solution(\n\"\"\"33/1\"\"\") == \"\"\"5/9\"\"\"\nassert solution(\n\"\"\"-40/1\"\"\") == \"\"\"-40/1\"\"\""
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"-40/1\") == \"5/9\"\nassert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"0/1\") == \"0/1\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Transposition', solution('5')\nassert solution('6') == 'Transposition', solution('6')\nassert solution('7') == 'Transposition', solution('7')\nassert solution('8') == 'Retrograde', solution('8')\nassert solution('9') == 'Inversion', solution('9')\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"Transposition\"\nassert solution(sample_input_2) == \"Inversion\"\nassert solution(sample_input_3) == \"Retrograde\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\nC D E\nC C G\nD D E\n''') == 'Transposition'\n\nassert solution('''\n4\nC D E\nC C G\nD D E\n''') == 'Inversion'\n\nassert solution('''\n4\nC D E\nC D A\nD D A\n''') == 'Nonsense'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Transposition\"\nassert solution(\"7\") == \"Inversion\"\nassert solution(\"17\") == \"Nonsense\""
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Transposition\"\nassert solution(\"3\") == \"Retrograde\"\nassert solution(\"7\") == \"Inversion\"\nassert solution(\"12\") == \"Nonsense\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"Nonsense\"\nassert solution(\"3\") == \"Transposition\"\nassert solution(\"7\") == \"Retrograde\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nE F G') == \"Retrograde\"\nassert solution('4\\nA B C D E F G') == \"Transposition\"\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('7') == 'Retrograde'\nassert solution('7') == 'Transposition'\n"
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('7') == 'Inversion'\nassert solution('7') == 'Retrograde'\nassert solution('5') == 'Nonsense'"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\nI love ba-na-na\n\n''') == 'Gah kove bababa'\nassert solution('''\n\nCat-a-pil-lar\n\n''') == 'Catacillar'\nassert solution('''\n\nCo-ding is the best\n\n''') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '\\n'.join(input().split()).replace('-', '\\n')\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''I love ba-na-na\n    Sample Output 1:\n    Gah kove bababa''') == 'Gah kove bababa'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\nassert solution('This is a test') == 'Thsih gs a tesuh'\nassert solution('This is a test.') == 'Thsih gs a tesuh.'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', 'First'\nassert solution('Cat-a-pil-lar') == 'Catacillar', 'Second'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', 'Third'\nassert solution('I dont like this') == 'Gah gs gs la la la', 'Forth'\n"
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\nassert solution('5') == 'None'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1\n''') == '1'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n1\n''') == '1'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '6'\nassert solution('4\\n') == '16'\nassert solution('3\\n') == '14'\n"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'"
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1''') == '6'\nassert solution('''4''') == '16'\nassert solution('''3''') == '14'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5 6\\n'\n    '1 2 3 4 5\\n'\n    '5 10\\n'\n    '4 8 1 9 7\\n'\n    ) == '3'\nassert solution(\n    '4 10\\n'\n    '1 3 1 7\\n'\n    '5 10\\n'\n    '4 8 1 9 7\\n'\n    ) == '4'\nassert solution(\n    '4 10\\n'\n    '1 3 1 7\\n'\n    '5 10\\n'\n    '4 8 1 9 7\\n'\n    ) == '4'\nassert solution(\n    '4 10\\n'\n    '1 3 1 7\\n'\n    '5 10\\n'\n    '4 8 1 9 7\\n'\n    '3 4 5\\n'\n    ) == '4'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '4'\nassert solution('''4 10\n1 3 1 7\n''') == '4'"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"2 3\\n\") == \"2\"\nassert solution(\"3 4\\n\") == \"3\"\nassert solution(\"4 2\\n\") == \"2\"\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'\n\nimport pytest"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nprint(\"SUCCESS\")"
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\""
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('5 10') == '2'\nassert solution('4 8 1 9 7') == '4'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"\nassert solution(\"1 2\\n0 0 0\\n0 1 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"possible\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1 2\\n'\n    '0 1 1\\n'\n    '1 0 0\\n'\n    ) == 'possible'\nassert solution(\n    '1 2\\n'\n    '1 0 0\\n'\n    '0 1 0\\n'\n    ) == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'possible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\n\n\"\"\"\n\n\"\"\"\nTLE\n\nfor i in range(1,101):\n    if i > 99:\n        if (99-i) < 0:\n            if (99-i) > i:\n                print('possible')\n            else:\n                print('impossible')\n        else:\n            print('impossible')\n    else:\n        print('possible')\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\") == \"possible\"\nassert solution(r\"\"\"\n1 2\n1 0 0\n0 1 0\n\"\"\") == \"impossible\""
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible'\n"
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nprint(solution(open(\"d1.txt\")))\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 1\n''') == '1.875'\nassert solution('''6 2\n1 1\n''') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('6 2') == '4.25'\n"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1.875'\nassert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'"
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1 4\"\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 0\n0 1 0\n1 0 0\n''') == '1 4'\nassert solution('''4 2 7\n0 1 0\n1 0 0\n''') == '1 4'\nassert solution('''3 0 0\n0 1 0\n1 0 0\n''') == '1 6'"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 0\\n\") == \"0 0\"\nassert solution(\"4 2 7\\n\") == \"1 4\"\nassert solution(\"3 0 0\\n\") == \"1 6\""
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 0\\n') == '0 0'\nassert solution('4 2 7\\n') == '1 4'\nassert solution('3 0 0\\n') == '1 6'\nprint(solution(*input().split()))"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 0\\n\") == \"0 0\\n\"\nassert solution(\"4 2 7\\n\") == \"1 4\\n\"\nassert solution(\"3 0 0\\n\") == \"1 6\\n\"\nprint(solution(*tuple(input().split())))"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'"
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW\n''') == '1', '4'\nassert solution('''4\nBWWB\nWBWB\nBWWB\nBWBW\n''') == '0', '4'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0', '6'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('6') == '0'\nassert solution('30') == '0'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''4\nBWWB\nWBWB\nWBBW\nBWBW''') == '0'\nassert solution('''4\nBWWB\nWBWB\nWBBW\nBWBW''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\nassert solution('''4\nWBBW\nWBWB\nBWWB\nBWBW''') == '0'"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nWBWB\\nWBWB\\nBWWB\\nBWBW\") == \"1\"\nassert solution(\"4\\nBWBW\\nWBWB\\nWBBW\\nBBWB\") == \"0\"\nassert solution(\"5\\nWBWB\\nWBWB\\nWBBW\\nWBWB\\nBBWB\") == \"0\""
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\\n\") == \"1\\n\", \"First\"\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\\n\") == \"0\\n\", \"Second\"\nassert solution(\"8\\nBWWBBBWB\\nWBWBWBWB\\nWBBWBWBWB\\nBBWBWBWBWB\\nBWWBBWBWBW\\nWBWBWBWBWBW\\nWBBWBWBWBWB\\n\") == \"0\\n\", \"Third\"\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0'\nassert solution('''10\nBBBBBWWB\nBWWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBBBBBWWB\n''') == '1'\nassert solution('''10\nBBBBBWWB\nBWWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBBBBBWWB\n''') == '1'\nassert solution('''4\nBWWB\nWBWB\nBWBW\nWBBW\n''') == '1'\nassert solution('''4\nBWWB\nWBWB\nBWBW\nWBBW\n''') == '1'\n"
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"0\"\nprint(solution(input()))"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '2 4'\nassert solution('2 4 1 3') == '1 2'\nassert solution('1 2 1 3') == '3 2'\nassert solution('1 4 5 8') == '3 7'"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '1 2'\nassert solution('1 4 5 8') == '3 7'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2') == '2 1'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '3 4\\n3 2\\n1 2\\n3 7'\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 1 2\") == \"2 1\"\nassert solution(\"2 6 3 4\") == \"2 4\"\nassert solution(\"2 4 1 3\") == \"3 2\"\nassert solution(\"1 2 1 3\") == \"3 2\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\") == \"1 2\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 1\""
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == \"2 1\"\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == \"3 4\"\nassert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == \"3 7\"\n"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\nassert solution('''\n2\n5 1 5\n1 2 1 2\n1 4 5 8\n''') == '3 4'\nassert solution('''\n3\n1 1 5\n1 2 1 2\n1 4 5 8\n''') == '2 1'\nassert solution('''\n4\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\n'''\n---Statistics---\n\nTime complexity: O(n)\nSpace complexity: O(n)\n'''"
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1\\n3 4\\n3 2\\n1 2\\n3 7'\nassert solution('''\n5\n3 4 7 8 4\n3 5 8 9 8\n1 2 3 5\n1 2 4 5\n1 4 3 5\n1 4 5 5\n''') == '2 1\\n4 3\\n4 2\\n1 2\\n4 5\\n1 3\\n1 5\\n1 4\\n1 4\\n1 5\\n1 6\\n'''\nassert solution('''\n5\n5 1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '1 2\\n3 4\\n3 2\\n1 2\\n3 7\\n'''\nassert solution('''\n1\n3 5\n2 6 7\n1 2 3\n2 4 5\n3 4 5\n''') == '2 5\\n5 2\\n2 7\\n3 5\\n4 5\\n4 5\\n'''\nassert solution('''\n1\n2 4\n2 2\n1 1 2\n1 1\n''') == '2 4\\n2 2\\n1 2\\n1 2\\n'''\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'true'\nassert solution('[3,2,0,-4]') == 'true'\nassert solution('[1,2]') == 'true'\nassert solution('[1]') == 'false'\nassert solution('[-1]') == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'true'\n\n'''\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3,2,0,-4]) == True\nassert solution([1,2]) == True\nassert solution([1]) == True\nassert solution([]) == False"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 -> 2\n1 -> 3\n2 -> 1\n3 -> 4\n4 -> 3\n''') == 'true'\nassert solution('''\n1 -> 2\n2 -> 1\n''') == 'false'\nassert solution('''\n1 -> 2\n2 -> 1\n''') == 'false'\nassert solution('''\n1 -> 2\n2 -> 1\n''') == 'true'\nassert solution('''\n1 -> 2\n2 -> 1\n''') == 'true'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n-1') == 'false'\nassert solution('1\\n0') == 'true'\nassert solution('1\\n-2') == 'false'\nassert solution('1\\n-3') == 'true'\nassert solution('5\\n-1') == 'true'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('[3,2,0,-4]\\n1') == 'true'\nassert solution('[1,2]\\n0') == 'true'\nassert solution('[1]\\n-1') == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,2,0,-4]) == 'true'\nassert solution([1,2]) == 'true'\nassert solution([1]) == 'false'\nassert solution(['a','a','b','a','c','c']) == 'true'\nassert solution([]) == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"[3,2,0,-4]\",\"1\") == \"true\"\nassert solution(\"[1,2]\",\"0\") == \"true\"\nassert solution(\"[1]\",\"-1\") == \"false\""
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n[3,2,0,-4]\n1\n[1,2]\n0\n''') == 'true'\nassert solution('''\n4\n[3,2,0,-4]\n1\n[1,2,1]\n0\n''') == 'true'\nassert solution('''\n4\n[3,2,0,-4]\n1\n[1,2,0]\n0\n''') == 'false'\nassert solution('''\n4\n[3,2,0,-4]\n1\n[1,2,1,2]\n0\n''') == 'false'\n"
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n-3\n0\n2\n3\n''') == 'true'\n\nassert solution('''1\n-3\n0\n2\n''') == 'false'\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().strip().split(',')\n\n\"\"\"\nimport sys"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n2\\n7\\n10\\n\") == \"0 1\"\nassert solution(\"0\\n1\\n1\\n\") == \"0 1\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0 1\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\nassert solution([1, 2, 4, 7, 11, 15]) == [1, 2]\n\"\"\"\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '0 1'\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0 1'\n\nimport unittest\n\nclass Test(unittest.TestCase):\n    def test_exercise(self):\n        pass"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 7 11 15\\n\") == [\"0\",\"1\"]\nassert solution(\"2 7 11 15\\n\") == [\"0\",\"1\"]\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3\n1 2 3 4 5\n6\n8 7''') == '0 1'\n\nassert solution('''\n7\n4\n1 2 3 4 5 6''') == '0 1 2'\n\nassert solution('''\n7\n8\n1 2 3 4 5 6''') == '1 2 3 4 5 6'\n\nassert solution('''\n7\n6\n1 2 3 4 5 6''') == '1 2 3 4 5 6'\n\nassert solution('''\n7\n1\n1 2 3 4 5 6''') == '0 1 2 3 4 5 6'\n''') == '''OK'''\n"
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2\n7\n11\n15\n''') == ['0', '1']\nassert solution('''\n2\n7\n11\n15\n''') == ['0', '1']\n'''\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n4 5 6\n7 8 9\n''') == '0'\n\nassert solution('''\n4\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '1'\n\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n''') == '1'\n\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n''') == '0'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"0\"\nassert solution(\"4\\n\") == \"1\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1', \"Should be '1'\"\nassert solution('3') == '0', \"Should be '0'\"\nassert solution('4') == '1', \"Should be '1'\"\n"
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"12\") == \"4\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 2 1\n''') == '4'\nassert solution('''\n1\n3 7\n''') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3 7') == '4'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2 2 1\n''') == '4'\nassert solution('''1\n3 7\n''') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 1, 2, 1]) == \"impossible\"\nassert solution([1, 3, 7]) == \"4\""
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 2, 2, 1]) == \"impossible\"\nassert solution([1, 3, 7]) == \"4\"\nassert solution([1, 1, 2, 2, 1]) == \"4\"\nassert solution([2, 1, 1]) == \"impossible\"\nassert solution([2, 3, 4]) == \"4\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\n\"\n    \"1 2 2 1\"\n) == \"4\"\nassert solution(\n    \"1\\n\"\n    \"3 7\"\n) == \"impossible\"\nassert solution(\n    \"1\\n\"\n    \"5 7 5 7\"\n) == \"impossible\"\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 2\\n1 3\\n') == '4'\nassert solution('1\\n2\\n1 2\\n') == 'impossible'\n"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3 7\n''') == 'impossible'\nassert solution('''\n2\n1 2\n''') == '4'\nassert solution('''\n3\n7 5 2\n''') == 'impossible'\nassert solution('''\n4\n5 4 3 3 2 1\n''') == '4'"
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"impossible\""
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10\n1\n\"\"\") == \"1000\"\n\nassert solution(\"\"\"\n100\n10\n\"\"\") == \"100\"\n\nassert solution(\"\"\"\n987654321\n2\n\"\"\") == \"987654321\"\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"180 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\""
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == '1 1'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n184 1\n''') == '180'\nassert solution('''\n123450995 1\n''') == '123451000'\n''')"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123450995 1') == '123451000'\nassert solution('184 1') == '180'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([[1,3,2], [4,4,1]]) == \"90000\""
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 1\n''') == '10'\nassert solution('''\n60 1\n''') == '60'\nassert solution('''\n0 1\n''') == '0'\nassert solution('''\n9999999999999 1\n''') == '10000000000000000000000000000000'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1') == '3'\nassert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n"
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"18 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1\\n2 2\\n3 3\\n') == '0.000000'\nassert solution('1\\n2 1\\n0 2\\n1 1\\n3 3\\n') == '0.000000'\nassert solution('1\\n2 1\\n2 0\\n1 1\\n3 3\\n') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.000000'\nassert solution('2 2') == '0.000000'\nassert solution('3 3') == '0.000000'"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('3') == '0.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n2 2\\n3 3') == '0.000000'"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"0.000000\"\nassert solution(\"2\\n0 1\\n1 0\\n1 1\") == \"0.000000\"\nassert solution(\"3\\n0 0\\n1 1\\n2 2\") == \"0.000000\"\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3') == '0.000000'\nassert solution('3') == '0.000000'\n\"\"\""
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('3') == '1.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.000000'\nassert solution('4') == '1.000000'\n"
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0.000000'\nassert solution('3.00001') == '0.000001'\nassert solution('3.000001') == '0.000001'\nassert solution('3.0000001') == '0.000000'\nassert solution('-1.0000000000000') == '-0.000000'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1\\n\") == \"1\\n2\\n4\\n\"\nassert solution(\n    \"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1\\n\") == \"1\\n2\\n6\\n8\\n\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 2\") == \"1\"\nassert solution(\"4\\n3 2 3 4\") == \"2 4\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"1 2 4\\n2 5 6\\n4 2 6 8 1\\n\"\nassert solution(\"\"\"\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\") == \"1 2 4\\n2 5 6\\n4 2 6 8 1\\n\""
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 4 6 8\"\nassert solution([\"4\", \"2\", \"5\", \"2\", \"4\"]) == \"1 2 4 6 8\"\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n3\\n2 1 2') == '1\\n2\\n4\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2') == '1\\n2\\n6\\n8\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 4'\nassert solution('''\n10\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n3 4 2\n3 5 2\n6 3 4 1\n6 5 3 1\n7 6 4 1\n7 5 4 1\n8 6 2 1\n8 7 2 1\n''') == '1 2 3 4 5 6 7 8'\n\n'''\nA positive integer is called the (non-trivial) triangular number if it is a triangular number of the form $T_n = \\prod_{i=1}^n T_i$. Triangular numbers of the form $T_n$ are called triangular numbers of the form $T_n \\times T_n \\times T_n$ for $n > 2$.\n\nYour task is to write a program that takes as input a positive integer $N$, and returns the number of all triangular numbers that are less than or equal to $N$.\n\nFor example, for $N = 10$ the answer is 9, since there are 9 triangular numbers less than or equal to $10$.\n\nInput:\nThe first line contains an integer $N$, N is a positive integer.\n\nOutput:\nPrint the number of all triangulare numbers less than or equal to $N$ on a single line.\n\nConstraints:\n1 \u2264 N \u2264 10^4\n\nExample:\nInput:\n4\n\nOutput:\n7\n\nExplanation:\nThere are 7 triangular numbers less than or equal to 4.\n'''\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\n\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 4 6 8'\n"
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n4\n3 1 2 3\n3 2 3 4\n3 4 2 1\n''') == '1 2 3 4'\nassert solution('''\n4\n2 1 2 3\n3 2 3 4\n3 4 2 1\n''') == '1 2 3 4'\nassert solution('''\n5\n2 1 2 3 4\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 3 4 8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\""
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '0'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint(solution(input))\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\nprint(solution(input))\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4\n5\n''') == '60'\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"60\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"8\"\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 3 0 0''') == '2.5'\nassert solution('''4\n1 1 1 0''') == '1.0'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    3 0 2\n''') == '1.6666666666666667'\nassert solution('''\n    3\n    1 -1 4\n''') == '2.5'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 0 2\\n') == '1.6666666666666667'\nprint('Congratulations, have a nice day!')\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 0 2\nSample Input 1:\n3\n3 0 2\nSample Output 1:\n1.6666666666666667\n\nSample Input 2:\n3\n1 -1 4\nSample Output 2:\n2.5\n\nprint(solution(input()))\n''') == '2.5\\n'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 0 2') == '1.6666666666666667'\nassert solution('2\\n1 -1 4') == '2.5'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1.0'\nassert solution('10') == '0.9'\n"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.6666666666666667'\nassert solution('3 2 0') == '2.5'\nassert solution('3 1 2 3 4') == '1.6333333333333333'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n-1 -1 -1 2\n''') == '2.5', 'First'\nassert solution('''\n4\n0 2 0 0\n''') == '2.5', 'Second'\nassert solution('''\n3\n0 2 0\n''') == '1.6666666666666667', 'Third'\nassert solution('''\n3\n0 2 0\n''') == '2.5', 'Fourth'\n\nimport math"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1.6667'\nassert solution('2') == '2.5'"
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 0 2\n''') == '1.6666666666666667'\n\nassert solution('''\n3\n1 0 2\n''') == '2.5'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '6'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '9'\nassert solution('1000000') == '11999'\nassert solution('5') == '4'\nassert solution('100') == '99'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '3'\nassert solution('7') == '9'\nassert solution('11') == '13'\nassert solution('13') == '11'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10') == '6'\nassert solution('7 9') == '6'\nassert solution('12 21') == '13'\nassert solution('1 1') == '2'"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '1'\nassert solution('7 3') == '6'\nassert solution('15 12') == '7'\n\n\"\"\"\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\nprint(\"You're all set!\")\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '6'\nassert solution('15') == '7'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0\n''') == '0'\nassert solution('''\n4\n0\n''') == '1'\nassert solution('''\n5\n0\n''') == '1'\n"
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('1 4') == '4'\nassert solution('1 5') == '5'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nprint('all tests passed')\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == 1\nassert solution('1 2') == 0\nassert solution('1 3 4 5 6 7 8') == 8\nassert solution('1 2 3 4 5 6 7 8') == 0\nassert solution('1 2 3 4 5 6 7 8 9') == 9\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('123456 123456') == '1'\nassert solution('123456 123568') == '0'\nassert solution('123456 123569') == '0'"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n"
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\nassert solution('''\n123864 123865\n''') == '1'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n''') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0.66666667'\nassert solution('1') == '0.50000000'\nassert solution('2') == '0.50000000'"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n\"\"\""
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\nassert solution('3') == '0.33333333'\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0.66666667\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1\n2\n3\n4\n''') == '0.66666667'\nprint(solution('''5\n1\n2\n3\n4\n5\n'''))\nprint(solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n'''))\nprint(solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n'''))\nprint(solution('''1000000\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n'''))"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.66666667'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\""
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"triple 19\\nsingle 9\\ndouble 15\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"single 9\""
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n180\n''') == 'triple 20\nassert solution('''\n96\n''') == 'triple 19\nassert solution('''\n97\n''') == 'triple 20\nassert solution('''\n93\n''') == 'triple 19\nassert solution('''\n10\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"\nassert solution(\"87\") == \"double 15\"\n\n\"\"\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"single 19\\ndouble 15\\ntriple 19\"\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('180') == 'triple 20\\ntriple 20\\ntriple 20'\nassert solution('96') == 'triple 19\\ndouble 15\\nsingle 9'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\n"
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 7') == '36'\nassert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\nassert solution('1 1 1') == '1'\nassert solution('2 2 2') == '4'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n0\n0\n2\n0\n''') == '36'\nassert solution('''\n3\n0\n0\n1\n0\n''') == '8'\n'''"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 4 7\\n') == '168'\nassert solution('5 2 2\\n') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n20 3 9\n10 2 5\n''') == '18'\nassert solution('''\n3\n15 3 9\n8 2 5\n''') == '55'\nassert solution('''\n1\n4 4 8\n''') == '16'\nassert solution('''\n2\n3 3 2\n''') == '8'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '36'\nassert solution('5 2 2') == '36'\n"
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n\"\"\""
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 3, 10]) == 7\nassert solution([2, 3, 8]) == 1\nassert solution([3, 8, 8]) == 1\nassert solution([3, 8, 8]) == 0\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3 10\n5 8\n''') == '7'\nassert solution('''\n2\n3 8\n5 8\n''') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 10') == '7'\nassert solution('2\\n3 8') == '1'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 10\\n3 8') == '1'\nassert solution('2\\n3 8\\n5 8') == '1'\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3 10\n5 8\n''') == '7', \"First\"\n\nassert solution('''\n2\n3 8\n5 8\n''') == '1', \"Second\"\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n3 10\n5 8\n''') == '7'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n10 9\n''') == '7'\n"
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == ''\nassert solution('2') == 'raise your left hand.'\nassert solution('3') == 'raise your right hand.'\nassert solution('4') == ''"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\nSimon says smile.\n2\nSimon says raise your right hand.\n3\nLower your right hand.\n\"\"\") == \" smile.\"\n\nassert solution(\"\"\"\n3\nSimon says raise your right hand.\nLower your left hand.\nSimon says raise your left hand.\nSample Output 3:\n raise your right hand.\n raise your left hand.\n\"\"\") == \" raise your left hand.\"\n\nassert solution(\"\"\"\n3\nSimon says raise your left hand.\nSimon says touch your nose.\n\"\"\") == \" touch your nose.\"\n\nassert solution(\"\"\"\n1\nSimon says smile.\n2\n\"\"\") == \"\"\n\nassert solution(\"\"\"\n10\nSimon says touch your left hand.\n2\nSimon says touch your right hand.\n3\nSimon says smile.\n4\nSimon says smile.\n5\n\"\"\") == \" smile.\""
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"Simon says smile.\") == \" smile.\"\nassert solution(\"Lower your right hand.\") == \" Lower your right hand.\"\nassert solution(\"Simon says raise your left hand.\") == \" raise your left hand.\"\n\n\"\"\"\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('1') == '1 2'\nassert solution('5') == '1 2'\nassert solution('5') == '1 2'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"smile.\"\nassert solution(\"3\") == \"raise your right hand.\"\nassert solution(\"10\") == \"raise your left hand.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"smile.\"\nassert solution('2') == \"raise your right hand.\"\nassert solution('3') == \"raise your left hand.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('2\\nSimon says raise your right hand.\\nLower your right hand.\\n') =='raise your right hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nSimon says smile.') =='smile.'\nassert solution('3\\nSimon says raise your right hand.') =='raise your right hand.'\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nSimon says smile.\\n\") == \"smile.\"\nassert solution(\"2\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSample Output 2:\n raise your right hand.\\n raise your left hand.\\n\") == \" raise your right hand.\"\n"
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\nSimon says smile.\n''') =='smile'\nassert solution('''\n2\nSimon says raise your right hand.\nLower your right hand.\n''') =='raise your right hand.'\nassert solution('''\n3\nSimon says raise your left hand.\nLower your left hand.\n''') =='raise your left hand.'\nassert solution('''\n4\nSimon says you are the cherry.\n''') == 'you are the cherry.'\n\n'''\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 0 4 6 10 12 16 18''') == '5'\nassert solution('''1 2 4 6 10 12 16 18''') == '0'\nassert solution('''1 2 3 4 5 6 7 8 9 10 11 12''') == '0'\nassert solution('''1 2 3 4 5 6 7 8 9 10 11 12''') == '2'\n\nprint('Congratulations! Your solution is correct.')\n\n\"\"\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n''') == '5'\n\nassert solution('''\n2 4 3 6\n7 8 9 10\n11 12 13 14\n15 16 17 18\n''') == '0'\n\nprint(solution('''\n5 8\n12 4 5 17 6\n7 4 1 16 8\n8 5 2 4 18\n9 4 3 7 12\n11 4 2 5 14\n'''))\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nprint('ALL TEST CASES PASSED')"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\nassert solution(sys.stdin.read()) == \"0\"\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('1 3 3 1 1 1 1 1') == '3'\n"
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT\nSample Output 2:\n2\n0 1\n0 2\n0 3\n''') == '2'\nassert solution('''4 1\nA\nA\nG\nT\nSample Output 2:\n2\n0 1\n0 2\n0 3\n''') == '2'\nassert solution('''3 1\nA\nA\nG\nT\nSample Output 2:\n2\n0 1\n0 2\n0 3\n''') == '2'\nassert solution('''4 1\nA\nA\nG\nT\nSample Output 2:\n2\n0 1\n0 2\n0 3\n''') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\\n\"\nassert solution(\n    \"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\\n0 1\\n0 2\\n0 3\\n\"\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 1') == '0'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\"\nprint(\"Everything passed\")\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '3'\nassert solution('4 1') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\nAA\nAT\nTT\nTC\n''') == '3'\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '2'\n"
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"0 1\"\nassert solution(\"2 3\") == \"0 1\"\nassert solution(\"3 4\") == \"0 1\"\nassert solution(\"5 6\") == \"1 2\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-'"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-\"\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaa') == 'a', 'AAAA'\nassert solution('ab') == '-1', 'AB'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\n"
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"100 3\") == \"Dr. Chaz will have 3 pieces of chicken left over!\"\nassert solution(\"2 5\") == \"Dr. Chaz needs 2 more piece[s] of chicken!\"\nassert solution(\"5 2\") == \"Dr. Chaz needs 1 more piece[s] of chicken!\"\n\"\"\""
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '20 100\\n'\n    '2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution('2 3') == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('1 2') == 'Dr. Chaz needs $2 more piece[s] of chicken!'"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('10 10') == 'Dr. Chaz will have 10 pieces of chicken left over!'\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == 'Dr. Chaz needs 1 more piece[s] of chicken!'\nassert solution('100\\n20') == 'Dr. Chaz will have 80 pieces of chicken left over!'"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"10 10\") == \"Dr. Chaz needs 5 more piece[s] of chicken!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Dr. Chaz needs 1 more piece of chicken!\"\nassert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\n"
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''20 100\n2 3''') == 'Dr. Chaz will have 1 piece of chicken left over!'"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\n\nassert solution('''3 20\n1 2 1\n2 3 3\n3 4 4''') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '0'\nprint('all test cases passed')\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\n\nassert solution('''\n3 20\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n\nassert solution('''\n2 20\n2 1 1\n1 2 2\n''') == '1'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"2\n1 1 2\n2 2 2\n3 2 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"3\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"3\n1 1 1\n2 2 2\n3 2 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10') == '-2'\nassert solution('3 30') == '0'"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n\") == \"-2\"\n\nassert solution(\"1 10\\n1 1 2\\n5 2 3\\n5 2 1\\n\") == \"0\"\n\nassert solution(\"15 10\\n1 1 2\\n5 2 3\\n5 2 1\\n4 4 4\\n4 4 3\\n7 7 5\\n7 7 1\\n\") == \"0\"\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '-1'\nassert solution('3 10') == '0'\n"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2'"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nassert solution(\"\"\"5 1 4\n1 2 2\n2 1 2\n2 1 1\n2 1 1\n2 2 1\"\"\") == '0'\nassert solution(\"\"\"5 10\n1 1 2\n5 2 1\n2 5 3\n3 3 1\n1 4 2\n3 2 1\"\"\") == '1'\nassert solution(\"\"\"3 10\n1 1 1\n5 2 1\n2 5 3\n3 3 1\n1 4 2\n3 2 1\"\"\") == '1'\nassert solution(\"\"\"3 30\n1 1 1\n5 2 1\n2 5 3\n3 3 1\n1 4 2\n3 2 1\"\"\") == '0'\nprint('All tests passed!')"
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '-2'\nassert solution('2 30') == '0'"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nluka\\nkula\\ni#a#\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\nsubha\\n\") == \"subha\"\n\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n1abc\\n\") == \"abc\"\n\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n1a\\n\") == \"1a\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'luka'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\nluka\no#a#\nkula\ni#a#''') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nluka\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\nkula\\ni#as\\n\") == \"as\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"as\"\nassert solution(stdin = \"\"\"luka\no#a#\nkula\ni#a#\"\"\") == \"kala\"\n\"\"\"\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\nluka\no#a#\nkula\ni#a#\n\"\"\") == \"kala\"\nassert solution(\"\"\"\n4 4\nluka\no#a#\nkula\ni#a#\nas\n\"\"\") == \"as\"\nassert solution(\"\"\"\n3 3\n2#2\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\naaa\nooo\niii\n''') == 'aaa'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 'a'\nassert solution(\"2\") == 'as'\nassert solution(\"3\") == 'kla'\nassert solution(\"4\") == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\n"
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n# #\\n3 4') == '3 4'\nassert solution('3 3\\n# #\\n1 2') == '1 2'\nprint('You passed all the tests!')"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WNEENWEENEENE') == \"10\"\nassert solution('NSEW') == \"4\"\n\n---Input---\nWNEENWEENEEN\n\n---Output---\n10\n\n---Input---\nNSEW\n\n---Output---\n4\n\n\"\"\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WN') == 'WN'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"10\"\n\"\"\"\n\nimport re\nfrom collections import deque\n\nn = deque(re.split(r'[NSWE]{5,}', input()))\n\nfor _ in range(3):\n    n.rotate(1)\n\nfor _ in range(3):\n    n.rotate(2)\n\nprint(sum(map(len, n)))"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\"\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSWE') == '4'\nassert solution('EEN') == '3'\nassert solution('WNMW') == '6'\nassert solution('WNEENWW') == '9'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '10'\nassert solution('WEENWE') == '13'\nassert solution('WNESENWE') == '16'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('NSEW') == '4'\nassert solution('WNEENWEENEENE') == '10'\nassert solution('EEN') == '0'\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\n\n'''\n"
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('WNEENWEENEENE') == 10\nassert solution('NSW') == 4\nassert solution('N') == 1\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4\n''') == '1 - 2 = 3 - 4'\nassert solution('''\n0 4 2 2\n''') == '0 * 4 = 2 - 2'\nassert solution('''\n0\n''') == 'problems ahead'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4'\n\n\"\"\"\n\nfrom itertools import permutations\nfrom itertools import product\n\nfrom collections import Counter\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 4\n1 2 3 4''') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n'\nassert solution('''0 4 2 2\n1 2 3 4''') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n'\nassert solution('''2 4 2 0\n0 4 2 0''') == 'problems ahead'\n"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4', 'First Test'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2', 'Second Test'"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read().rstrip()\n\"\"\"\n\nimport re\nimport sys\nimport math"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == \"1 - 2 = 3 - 4\"\nassert solution('0 4 2 2') == \"0 * 4 = 2 - 2\"\n\nstdin = '0 4 2 2'\nprint(solution(stdin))"
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABBA\") == \"4\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''BANANA\nPIDZAMA''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....'''\nassert solution('''MAMA TATA\nPIDZAMA''') == '''.T..\nMAMA\n.T..\n.A..\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''ABBA\nCCBB''') == '4'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..\\n'"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nprint(solution('MAMA TATA'))\n\nprint(solution('MAMA TATA'))\n\"\"\"\nimport re\nimport sys\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\nassert solution(\"MAAAAMMMMAAAAAA\") == \".T..\\nMAAAAMMMMAAAAAA\\n.T..\\n.A..\"\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\n"
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n\n\n'''"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '365'"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n4\n10 14\n13 17\n25 26\n22 27\n''') == '10'\nassert solution('''\n1 365\n10 12\n20 34\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '28'\nassert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28\n''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    10 14\n    13 17\n    25 26\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    2\n    1 365\n    20 28\n    \"\"\"\n) == \"365\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('10') == '10'\nassert solution('20') == '20'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n10 14\n13 17\n25 26\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2\n1 365\n20 28\n\"\"\") == \"365\"\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n10 14\n13 17\n25 26''') == '10'\nassert solution('''2\n1 365\n20 28''') == '365'\n"
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"2\") == \"365\"\nassert solution(\"1 365\") == \"365\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n\"\"\") == \"0 1\"\nassert solution(\"\"\"1\n0\n\"\"\") == \"0 1\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '0 1'\nassert solution('4\\n') == '2 3'\n\"\"\"\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n''') == '0 1'\nassert solution('''\n5\n''') == '2 3'\nassert solution('''\n7\n''') == '3 2'\nassert solution('''\n3\n''') == '2 3'\nassert solution('''\n7\n''') == '3 2'"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2 3'\nassert solution('1') == '0 1'\nassert solution('10') == '1 2'\n"
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == '0 1'\nassert solution(\"4\") == '2 3'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 1 197'\nassert solution('1 10\\n1 1 1\\n2 1 1\\n1 0 1\\n3 1 1\\n1 0 1\\n4 1 1\\n3 0 1\\n4 0 1\\n4 0 1\\n3 0 1\\n4 0 1\\n4 0 1\\n4 0 1\\n') == 'A 0 99'"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'A 100 49'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 100 200\\n\"\n    \"2 100 99\\n\"\n    \"3 100 50\\n\"\n    \"3 100 50\\n\"\n    \"2 100 98\\n\"\n    ) == \"A 0 99\\n\"\nassert solution(\n    \"4 4\\n\"\n    \"3 100 99\\n\"\n    \"2 100 99\\n\"\n    \"1 100 99\\n\"\n    \"4 100 99\\n\"\n    ) == \"A 0 99\\n\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'A 100 49\\nA 1 197\\nA 49 100\\n0.1965897693\\n'\nassert solution('4 4') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372\\n'"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"B 1 197\"\nassert solution(\"5 5\") == \"A 1 197 A 0 49\"\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 1') == 'A 1'\nassert solution('2 2\\n2 1') == 'A 1'\nassert solution('3 2\\n2 1') == 'B 1'\nassert solution('4 2\\n3 1') == 'A 0'\nassert solution('5 2\\n4 1') == 'A 0'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'A 1 2 3'\nassert solution('3 2 1') == 'A 1 2 3'\nassert solution('1 2 3 4') == 'A 1 2 3 4'\n"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\nassert solution('10 10') == '0.026497041'"
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n''') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'''\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '168'\nassert solution('1') == '1'\nassert solution('4') == '8'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == \"1\"\nassert solution('5') == \"168\""
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"168\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '168'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"168\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '168'"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1\\n4\\n3') == '1'\nassert solution('5\\n2\\n1\\n4\\n3') == '168'\nassert solution('3\\n5\\n2\\n1\\n4') == '1'\n"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\n\nimport io\nimport sys\n\nsys.stdin = io.StringIO(\"\")\nsolution.__annotations__ = {}\nsolution.__defaults__ = (None,) * (len(solution.__annotations__) - 1)\nsolution.__kwdefaults__ = {}\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('3') == '5'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nA\n2\n2\n''') == 'CBD'\n\nassert solution('''\n2\nA\n2\n2\n''') == 'BDCEA'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'\nassert solution('3 3') == 'EFADCB'\nassert solution('3 3') == 'EFADCB'\nassert solution('3 3') == 'EFADCB'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n2') == 'CBADEF'\nassert solution('2 2\\nAB\\nCD\\nAB') == 'ADCBD'\nassert solution('5 5\\nABABACD\\nBADBCCD\\nBDABABC\\nBCBDABCD\\nADCBBABC') == 'ABCDABCDBA'\nassert solution('4 4\\nABCD\\nABBC\\nBCAB\\nABCD') == 'ABBACBCAD'\nassert solution('5 5\\nAAAAAAABBBBBBB\\nCCCCCCCCCCCCCCCC\\nEEEEEFFFFFFFFFFFFF\\nDDDDDDDDDDDDDDDDDD\\nEEEEEEEEEEEEEFFFFF\\nFFFFFFFFFFFFFFFFFFF') == 'EBEFEFFDFEEEEFFFFFFE'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nABC\\n') == 'CBADEF'\nassert solution('1\\nABC\\n2\\n') == 'CBADEF'\nassert solution('3\\nABC\\nDEF\\n') == 'CBADEF'\nassert solution('3\\nABC\\nDEF\\n2\\n') == 'CBADEF'\nassert solution('3\\nABC\\nDEF\\n') == 'CBADEF'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('5 5\\nABCDE\\nBCDEF\\nADFCA\\nAADFB\\nAACDB\\nAADBC\\nAAADF\\nABDCF\\nABDCB\\nABDCC\\nADCBC\\nBCADF\\nBADCC\\nBADBC\\nBCCBF\\nBDCDD\\nBDDDC\\nBDDCB\\nBCDDD\\nDCBCF\\nBCCBF\\nBCDFD\\nACBCD\\nCBADD\\nDCAAB\\nAADCC\\nBDDCB\\nBDDCB\\nBDDCC\\nADCAB\\nBDDAD\\nBDDCB\\nADCAD\\nADCAD\\nBADCB\\nBDCAD\\nADCBF\\nADCBF\\nADCBD\\nADCBB\\nADCBD\\nADCBB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nADCCB\\nAD"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\nACBD\nEFGH\n0\n''') == 'CDBEAF'\nassert solution('''\n3\nABC\nDEF\n2\n''') == 'CBADEF'\nassert solution('''\n3\nABC\nDEF\n1\n''') == 'EFGHBACADBADBACDDDDDDBDEFGEF'\nassert solution('''\n5\nAAAA\nBBBB\nCCCC\nDDDD\nEEE\nFFF\n''') == 'AABBEFCDEEEEE'\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'CBADEF', solution('3 3')\nassert solution('3 3') == 'CDBEAF', solution('3 3')\n"
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF'\nassert solution('3 3\\nABC\\nDEF\\n10') == 'CBADEF'\nassert solution('3 3\\nABCDEF\\nDEFGAB\\n0') == 'EFABAD'\nassert solution('3 3\\nABCDEF\\nDEFGAB\\n2') == 'CDADFBA'"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T''') == '4'\nassert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N''') == '1'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '4'\n\nassert solution('''10\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n100 T\n100 T\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T\n100 N\n100 T"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"4\"\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\n\nn = int(input())\ndp = {1:0, 2:1, 3:2, 4:3, 5:4, 6:5, 7:6, 8:7}\nfor _ in range(n):\n    p, t, z = map(int, input().split())\n    for i in range(1,8):\n        if i <= p:\n            dp[i] = dp[i] + t\n        else:\n            if dp[i] > dp[i - 1] + t:\n                dp[i] = dp[i - 1] + t\n            else:\n                dp[i] = dp[i]\n    print(dp[p])\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '4'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '55373762133764657327674847895879'\nprint(solution(None))\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8') == '22'\nassert solution('4 3') == '6'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 4') == '8'\nassert solution('10 10') == '20'\nassert solution('10 20') == '18'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '6'\nassert solution('6 8') == '22'\nassert solution('20 20') == '48'\nassert solution('15 5') == '18'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '4'\nassert solution('3 4') == '10'\nassert solution('4 5') == '15'\nassert solution('5 6') == '21'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5\n5 1 2\n5 2 3\n5 3 4\n''') == '6'\nassert solution('''6 6\n1 2 2\n2 3 4\n3 5 4\n5 6 5\n6 7 3\n''') == '22'\n"
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    6 5 4\n    7 8 9\n    \"\"\") == \"1\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\nassert solution('''5 5\n4 3 2 1\n7 8 9 6\n3 4 1 2\n2 5''') == '2'\nassert solution('''5 6\n3 4 2 1\n7 8 9 6\n4 5 1 2\n2 6''') == '0'\nprint('All tests passed!')"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n1 2 3\n4 5 2\n6 7 3\n8 9 1\n10 0\nSample Output 1:\n1\n\nSample Input 2:\n2 2\n1 2\n3 4\nSample Output 2:\n0\n''') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n4 3 2 1\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n6 5 4\\n7 8 9\") == \"0\"\nassert solution(\"5 7\\n1 2 3 4 5\\n5 4 3 2 1\\n4 5 6 7\\n1 8 9 10\\n6 8 7 9 10\\n1 10 9 8 7 6\") == \"4\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 2\n4 3 2\n4 5 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 5\n1 2 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n5 5 5 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3\n2 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5 5\n\"\"\") == \"1\""
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''1 4\n4 3 2 1\n''') == '0'\n"
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''1 4\n4 3 2 1\n''') == '0'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10\n3\n4\n6\n2\n\"\"\") == \"28\"\nassert solution(\"\"\"\n10\n3\n10\n2\n12\n\"\"\") == \"16\"\nassert solution(\"\"\"\n10000\n10000\n10000\n10000\n10000\n\"\"\") == \"10000\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n3\n4\n6\n2\n''') == '28'\nassert solution('''\n10\n3\n10\n2\n12\nSample Output 3:\n16\n\nSample Input 4:\n10\n3\n4\n10\n2\nSample Output 4:\n28\n\nSample Input 5:\n10\n3\n10\n2\n12\nSample Output 5:\n16\n\nSample Input 6:\n10\n3\n4\n10\n2\nSample Output 6:\n28\n\nSample Input 7:\n10\n3\n10\n2\n12\nSample Output 7:\n16\n\nSample Input 8:\n10\n3\n10\n2\n12\nSample Output 8:\n16\n\nSample Input 9:\n10\n3\n10\n2\n12\nSample Output 9:\n28\n\nSample Input 10:\n10\n3\n10\n2\n12\nSample Output 10:\n28\n\nSample Input 11:\n10\n3\n10\n2\n12\nSample Output 11:\n28\n\nSample Input 12:\n10\n3\n10\n2\n12\nSample Output 12:\n28\n\nSample Input 13:\n10\n3\n10\n2\n12\nSample Output 13:\n28\n\nSample Input 14:\n10\n3\n10\n2\n12\nSample Output 14:\n28\n\nSample Input 15:\n10\n3\n10\n2\n12\nSample Output 15:\n28\n\nSample Input 16:\n10\n3\n10\n2\n12\nSample Output 16:\n28\n\nSample Input 17:\n10\n3\n10\n2\n12\nSample Output 17:\n28\n\nSample Input 18:\n10\n3\n10\n2\n12\nSample Output 18:\n28\n\nSample Input 19:\n10\n3\n10\n2\n12\nSample Output 19:\n28\n\nSample Input 20:\n10\n3\n10\n2\n12\nSample Output 20:\n28\n\nSample Input 21:\n10\n3\n10\n2\n12\nSample Output 21:\n28\n\nSample Input 22:\n10\n3\n10\n2\n12\nSample Output 22:\n28\n\nSample Input 23:\n10\n3\n10\n2\n12\nSample Output 23:\n28\n\nSample Input 24:\n10\n3\n10\n2\n12\nSample Output 24:\n28\n\nSample Input 25:\n10\n3\n10\n2\n12\nSample Output 25:\n28\n\nSample Input 26:\n10\n3\n10\n2\n12\nSample Output 26:\n28\n\nSample Input 27:\n10\n3\n10\n2\n12\nSample Output 27:\n28\n\nSample Input 28:\n10\n3\n10\n2\n12\nSample Output 28:\n28\n\nSample Input 29:\n10\n3\n10\n2\n12\nSample Output 29:\n28\n\nSample Input 30:\n10\n3\n10\n2\n12\nSample Output 30:\n28\n\nSample Input 31:\n10\n3\n10\n2\n12\nSample Output 31:\n28\n\nSample Input 32:\n10\n3\n10\n2\n12\nSample Output 32:\n28\n\nSample Input 33:\n10\n3\n10\n2\n12\nSample Output 33:\n28\n\nSample Input 34:\n10\n3\n10\n2\n12\nSample Output 34:\n28\n\nSample Input 35:\n10\n3\n10\n2\n12\nSample Output 35:\n28\n\nSample Input 36:\n10\n3\n10\n2\n12\nSample Output 36:\n28\n\nSample Input 37:\n10\n3\n10\n2\n12\nSample Output 37:\n28\n\nSample Input 38:\n10\n3\n10\n2\n12\nSample Output 38:\n28\n\nSample Input 39:\n10\n3\n10\n2\n12\nSample Output 39:\n28\n\nSample Input 40:\n10\n3\n10\n2\n12\nSample Output 40:\n28\n\nSample Input 41:\n10\n3\n10\n2\n12\nSample Output 41:\n28\n\nSample Input 42:\n10\n3\n10\n2\n12\nSample Output 42:\n28\n\nSample Input 43:\n10\n3\n10\n2\n12\nSample Output 43:\n28\n\nSample Input 44:\n10\n3\n10\n2\n12\nSample Output 44:\n28\n\nSample Input 45:\n10\n3\n10\n2\n12\nSample Output 45:\n28\n\nSample Input 46:\n10\n3\n10\n2\n12\nSample Output 46:\n28\n\nSample Input 47:\n10\n3\n10\n2\n12\nSample Output 47:\n28\n\nSample Input 48:\n10\n3\n10\n2\n12\nSample Output 48:\n28\n\nSample Input 49:\n10\n3\n10\n2\n12\nSample Output 49:\n28\n\nSample Input 50:\n10\n3\n10\n2\n12\nSample Output 50:\n28\n\nSample Input 51:\n10\n3\n10\n2\n12\nSample Output 51:\n28\n\nSample Input 52:\n10\n3\n10\n2\n12\nSample Output 52:\n28\n\nSample Input 53:\n10\n3\n10\n2\n12\nSample Output 53:\n28\n\nSample Input 54:\n10\n3\n10\n2\n12\nSample Output 54:\n28\n\nSample Input 55:\n10\n3\n10\n2\n12\nSample Output 55:\n28\n\nSample Input 56:\n10\n3\n10\n2\n12\nSample Output 56:\n28\n\nSample Input 57:\n10\n3\n10\n2\n12\nSample Output 57:\n28\n\nSample Input 58:\n10\n3\n10\n2\n12\nSample Output 58:\n28\n\nSample Input 59:\n10\n3\n10\n2\n12\nSample Output 59:\n28\n\nSample Input 60:\n10\n3\n10\n2\n12\nSample Output 60:\n28\n\nSample Input 61:\n10\n3\n10\n2\n12\nSample Output 61:\n28\n\nSample Input 62:\n10\n3\n10\n2\n12\nSample Output 62:\n28\n\nSample Input 63:\n10\n3\n10\n2\n12\nSample Output 63:\n28\n\nSample Input 64:\n10\n3\n10\n2\n12\nSample Output 64:\n28\n\nSample Input 65:\n10\n3\n10\n2\n12\nSample Output 65:\n28\n\nSample Input 66:\n10\n3\n10\n2\n12\nSample Output 66:\n28\n\nSample Input 67:\n10\n3\n10\n2\n12\nSample Output 67:\n28\n\nSample Input 68:\n10\n3\n10\n2\n12\nSample Output 68:\n28\n\nSample Input 69:\n10\n3\n10\n2\n12\nSample Output 69:\n28\n\nSample Input 70:\n10\n3\n10\n2\n12\nSample Output 70:\n28\n\nSample Input 71:\n10\n3\n10\n2\n12\nSample Output 71:\n28\n\nSample Input 72:\n10\n3\n10\n2\n12\nSample Output 72:\n28\n\nSample Input 73:\n10\n3\n10\n2\n12\nSample Output 73:\n28\n\nSample Input 74:\n10\n3\n10\n2\n12\nSample Output 74:\n28\n\nSample Input 75:\n10\n3\n10\n2\n12\nSample Output"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '28'\nassert solution('10') == '28'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"28\"\nassert solution(\"3\") == \"16\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n4\n6\n2''') == '28'\nassert solution('''10\n3\n10\n2''') == '16'\nassert solution('''10\n4\n10\n2''') == '16'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n3') == '28'\nassert solution('10\\n3') == '16'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"10\"\n) == \"28\"\nassert solution(\n    \"3\"\n) == \"2\"\nassert solution(\n    \"10\"\n) == \"16\"\nassert solution(\n    \"3\"\n) == \"2\"\nassert solution(\n    \"10\"\n) == \"16\"\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '16'"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '16'\nassert solution('3') == '4'\n"
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '16'\nassert solution('10') == '28'\nassert solution('3') == '16'\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"hiss\"\nprint(solution(input))\n\n\"\"\"\nimport re\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nabc\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().rstrip()\n\"\"\"\n"
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"hiss\"\nassert solution(input()) == \"no hiss\""
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nA\nK\nI\nN\nS\nO\nT\nE\nP\nU\n''') == 'no hiss'\nassert solution('''\na\nk\ni\nn\ns\no\nt\ne\np\n''') == 'hiss'\nassert solution('''\nA\nO\nT\nE\nS\n''') == 'no hiss'\nassert solution('''\nA\nO\nT\nE\nS\n''') == 'hiss'\nassert solution('''\nA\nT\n''') == 'no hiss'\n'''\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\n\nassert solution('5') == '4'\n\nassert solution('6') == '5'\n\nassert solution('7') == '6'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\nc++\nc#\nC++\nCryptography''') == '2'\nassert solution('''2\nMachine-Learning\nArtificial intelligence\nPython''') == '4'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\n\"\"\""
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '5'\n\"\"\""
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('5 2') == '2'\nassert solution('5 3') == '3'\nassert solution('5 4') == '5'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '3'\n"
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '3'\nassert solution('''5\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n'''\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''TCGTTC\nCCCC''') == '9'\nassert solution('''TCGTTC\nTCGTTC''') == '21'\nassert solution('''TCGTTC\nCCCC''') == '9'\nassert solution('''TCGTTC\nTCGTTC''') == '21'\nassert solution('''TCGTTC\nTCGTTC''') == '9'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('TTGTC') == '21'\nassert solution('TCGTTTC') == '21'\nassert solution('TCGGTC') == '21'\nassert solution('TCGCTTC') == '21'\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\nassert solution(\"TTGTTT\") == \"12\"\n\"\"\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\n"
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nTCCT\nCCGTC\nCCCC\nCATG\n''') == \"9\"\nassert solution('''\nTCGG\nTCCG\nCGGC\nTCGG\n''') == \"21\"\nassert solution('''\nCTTG\nTCGT\nCTGTC\nCTGT\n''') == \"15\"\nassert solution('''\nTGTC\nTGTC\nTCGT\nTGTC\n''') == \"8\"\n'''\nSolutions using PyPy:\n'''\nimport sys\nimport math"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"270\") == \"90\""
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '90'\nassert solution('3') == '180'\nassert solution('4') == '270'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '315',\n    '45',\n    '90'\n])) == '90'\nassert solution('\\n'.join([\n    '180',\n    '270',\n    '90'\n])) == '90'\nassert solution('\\n'.join([\n    '180',\n    '270',\n    '315'\n])) == '90'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('180\\n270') == '90'\nassert solution('315\\n45') == '90'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n'.join(['\\n', '1', '0', '180', '1'])) == '90'\nassert solution('\\n'.join(['\\n', '0', '90', '1', '0'])) == '180'\nassert solution('\\n'.join(['\\n', '0', '90', '1', '270'])) == '90'\n"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'"
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('-180') == '90'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\nassert solution('0\\n') == '0'\nassert solution('2') == '0'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1') == '3'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('5\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('5\\n11') == '0'\nassert solution('5\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1\n23\n18\n13\n99\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n11\n20\n33\n40\n55\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n3\n3\n\"\"\") == \"2\"\n\n\"\"\"\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        pass"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == \"3\"\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n\nassert solution('''5\n11\n20\n33\n40\n55''') == '1'\n"
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5\n1\n23\n18\n13\n99\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n5\n11\n20\n33\n40\n55\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBB') == '0'"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBW\") == \"0\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWWWBB') == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBW\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBBBWWWWBB\") == \"1\"\nassert solution(\"WWWWBBBBWWWWBBWWWWBBBBBBW\") == \"0\"\nassert solution(\"W\") == \"1\"\nassert solution(\"WWWW\") == \"1\"\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"WWWWBBW\") == '1'\n"
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''WWBWBBW\n''') == '1'\nassert solution('''WWWWBBW\n''') == '0'\nassert solution('''WWWWBBW\n''') == '0'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 3 3''') == '9'\nassert solution('''1 2 1 1''') == '1.299038105676658'''"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == \"9\"\nassert solution('1 2 1 1') == \"1.299038105676658\"\n\"\"\"\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2 2') == '1'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('3 3 3 3') == '9'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 3 3''') == '9'\nassert solution('''1 2 1 1''') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint(solution(input()))\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\n\nassert solution('3 3 3 3') == '9'"
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roboobert') == 'robert'"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooooobert\") == \"robert\"\nassert solution(\"rrrooobber\") == \"robert\"\nassert solution(\"rottobbemany\") == \"robert\"\nassert solution(\"r1o0ooob1er\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooooobbert\") == \"robert\"\nassert solution(\"roobobert\") == \"robert\"\nassert solution(\"roobert\") == \"robert\"\nassert solution(\"rboobert\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('rooberbert') == 'robert'\nassert solution('robbert') == 'robert'\nassert solution('rbobert') == 'robert'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('robert') == 'robert', 'Should return a single instance of the same letter'\nassert solution('roooobert') == 'robert', 'Should return a compact version of the original name'\nassert solution('rrroobert') == 'robert', 'Should return the original name'\nassert solution('robert apoximuth') == 'robert apoximuth', 'Should replace all instances of the same letter in sequence'\nassert solution('roberts methostenosis') == 'roberts methostenosis', 'Should return the original name'\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooooobert\") == \"robert\"\nassert solution(\"roooooooooobert\") == \"robert\"\n"
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('robert') == 'robert'\nassert solution('roobr') == 'rober'\nassert solution('roobr') == 'rober'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('10000 9 1000 7') == '10000 9 10'"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1000 9 7\n1000 900 7''') == '108 4'\nassert solution('''1000 900 7\n1000 9 7''') == 'Impossible'\nassert solution('''1000 9 7\n1000 900 7''') == 'Impossible'\n\"\"\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Impossible'\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nprint(solution(input()))\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n\"\"\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nassert solution(\"1000 9 10\") == \"Impossible\"\n"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 9 7\\n\") == \"108 4\"\nassert solution(\"1000 900 7\\n\") == \"Impossible\"\nassert solution(\"0 0 0\\n\") == \"Impossible\"\nprint(\"The solution is correct.\")"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 9 7\\n') == '108 4\\n'\nassert solution('1000 900 7\\n') == 'Impossible\\n'"
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '1'\nassert solution('1 3') == 'Impossible'\nassert solution('1 0') == '1'\nassert solution('1 5') == 'Impossible'\nassert solution('1 2') == 'Impossible'\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == \"2\"\nassert solution('4 4') == \"4\"\nassert solution('3 5') == \"5\"\nassert solution('5 5') == \"10\"\nassert solution('5 8') == \"8\""
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n1\\n1\\n2\\n0\\n\", solution(\".#.\\n.##\")\nassert solution() == \"4\\n0\\n0\\n0\\n0\\n\", solution(\".#.\\n.###\")\nassert solution() == \"10\\n10\\n10\\n10\\n10\\n\", solution(\".#.\\n.X..\")\nassert solution() == \"27\\n0\\n0\\n0\\n0\\n\", solution(\".X.#.\\n.X.#\")\nassert solution() == \"35\\n0\\n0\\n0\\n0\\n\", solution(\".X.X.\\n.X.X\")\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n1\\n2\\n1\\n0\\n\""
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n..X.\\n#XX#') == '1\\n1\\n2\\n1\\n0'"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\""
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n###.\\n###.\\n###.\\n###.\\n###.\\n\") == \"1\\n2\\n0\\n0\\n0\\n\"\nassert solution(\"7 5\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n\") == \"9\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"2 10\\n.X.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n\") == \"14\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"4 10\\n.X.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n\") == \"23\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\nassert solution(\"3 4\\n.X.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n###.\\n\") == \"20\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\"\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n.....\\n..X..\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"10 10\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\"
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n14\\n23\\n') == '196', 'Failed: Your solution is wrong!'"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\nassert solution('123') == '1022'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n1''') == '1'\nassert solution('''5\n2\n3\n4\n5''') == '7'"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples.SAMPLE_1) == \"1953566\"\nassert solution(samples.SAMPLE_2) == \"102\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '1953566'\nassert solution('''\n2\n1\n2\n''') == '102'\nassert solution('''\n5\n1\n2\n3\n4\n''') == '0'\nassert solution('''\n3\n1\n2\n3\n''') == '3'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9\\n3 2 1') == '0.000000 3.000000 6.000000'\nprint('All test cases passed!')"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 10 10\n3 3 3''') == '0.000000 0.000000 0.000000', solution.__doc__\nassert solution('''9 9 9\n3 2 1''') == '0.000000 3.000000 6.000000', solution.__doc__\nprint('All test cases passed.')\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('30 10 10') == '0.000000 0.000000 0.000000'\nassert solution('30 10 10') == '0.000000 0.000000 0.000000'\nassert solution('10 20 10') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 4\\n2 4 3') == '0.000000 3.000000 6.000000'\nassert solution('7 9 8\\n3 1 3') == '0.000000 3.000000 6.000000'\n\"\"\"\n"
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 10 10\\n3 3 3\\n') == '0.000000 0.000000 0.000000'\n\nassert solution('9 9 9\\n3 2 1\\n') == '0.000000 3.000000 6.000000'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('<>') == ''\nassert solution('<!@#$%^&*()_+-=`~[]{};:\"|,./<>?') == ''\nassert solution('<<><><>') == ''\nassert solution('<><><><>') == ''\nassert solution('<><><><>') == ''\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"<\") == \"\"\nassert solution(\"<a>\") == \"<\"\nassert solution(\"<a><a>\") == \"<\"\nassert solution(\"<a><a><a><a><a><a>\") == \"<\"\nassert solution(\"<a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><a><"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n\"\"\"\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"foss<rritun\"\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n'''\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('<') == '<'\nassert solution('<>') == '<>'\nassert solution('<><') == '<'\n"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n'''"
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n'''\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nprint(solution(\"Mirko-Slavko\"))\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"KMP\"\nassert solution(input()) == \"MS\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Mirko-Slavko') == 'MS'\nassert solution('Knuth-Morris-Pratt') == 'KMP'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\""
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n        I was not the first mathematician to solve problems. I was the first mathematician to\n        solve problems in the course of my studies in mathematics. I was not the first \n        person to win a Nobel Prize in science.\n\n''') == \"MS\"\n\nassert solution('''\n        The shortest distance between two points p1 and p2 on the unit circle is equal to the \n        absolute value of p2 - p1 (e.g. p1 = (1,0), p2 = (2,1) - 2 = 1)\n\n''') == \"1\"\n\nassert solution('''\n        On the other hand, the length of the hypotenuse of a right triangle with legs of length a \n        and b is equal to the square root of a^2 + b^2 (e.g. a = 2, b = 3 - 4 = 1.73)\n\n''') == \"1.73\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nBJ-M0-L0-FD\n''') == 'BM0LFD'\n\nassert solution('''\nCY-XO-XO\n''') == 'CXOXO'\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    'Knuth-Morris-Pratt'\n) == 'KMP'\nassert solution(\n    'Mirko-Slavko'\n) == 'MS'\n\n\"\"\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n\"\"\"\n"
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\nprint('Hurray!')"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 0') == \"Province or Gold\"\nassert solution('2 1 0') == \"Province or Gold\""
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n\"\"\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\""
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 1 0\n''') == 'Province or Gold'\nassert solution('''\n0 0 0\n''') == 'Estate or Copper'\nassert solution('''\n0 0 2\n''') == 'Estate or Copper'\nassert solution('''\n1 1 0\n''') == 'Province or Gold'\nassert solution('''\n1 0 0\n''') == 'Estate or Copper'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '0 1 0\\n'\n    '2 1 0\\n'\n    '3 2 2\\n'\n    ) == 'Province or Gold\\n'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 0\") == \"Province or Gold\"\nassert solution(\"1 1 0\") == \"Province\"\nassert solution(\"0 1 0\") == \"Estate or Copper\"\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n"
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 1 0\n1 2 1\n2 1 1\n3 4 2\n4 1 2\n''') == 'Gold or Estate\\nGold or Copper\\nGold or Province\\nGold or Duchy\\nGold or Estate\\nGold or Copper\\nGold or Province\\nGold or Duchy'''\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\""
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nassert solution(\"1 1\") == \"impossible\""
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n\"\"\"\n\nn, k = (int(x) for x in input().split())\nd, s = (int(x) for x in input().split())\n\ndifficulty = 0\naverage = 0\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'impossible'\nassert solution('2 1') == '90.0'\nassert solution('3 1') == '75.7'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n"
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n\"\"\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '5'"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 5 4 7 6\") == \"4\\n2 3 5 7\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '3'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2 3\"\nassert solution(\"5\") == \"1 2 3 4 5\""
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7\n2 3 1 5 4 7 6\n\"\"\") == \"\"\"4\n2 3 5 7\"\"\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"\"\"5\n1 2 3 4 5\"\"\"\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2 3 1 5 4 7 6'\nassert solution('5') == '1 2 3 4 5'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 1 5 4 7 6') == '4, 3, 5, 7'\nassert solution('5') == '1, 2, 3, 4, 5'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"10 10\n0 30\n\"\"\") == \"9 25\"\nassert solution(\"\"\"1 1\n1 1\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"10 10\") == \"9 25\""
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 30') == '23 45'\nassert solution('10 10') == '9 25'"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"45 45\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"10 10\") == \"9 25\""
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 30\") == \"23 45\"\nassert solution(\"10 10\") == \"9 25\"\nassert solution(\"10 10\") == \"9 25\"\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nprint(solution(input()))\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    30 10\n    ''') == '23 45'\n"
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.000000\") == \"1.000000\"\nassert solution(\"2.000000\") == \"1.414214\""
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1.000000'\nassert solution('2') == '1.414214'\nprint('Congratulations, you passed all the tests!')\n\nimport math"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1.000000''') == '1.414214'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.000000\") == \"1.414214\"\nassert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"3.000000\") == \"2.828427\"\nassert solution(\"4.000000\") == \"3.162277\"\nassert solution(\"5.000000\") == \"4.712389\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('0.36788') == '0.36788'\nassert solution('2.718281') == '2.718281'\nassert solution('0.36788') == '0.36788'\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"\n"
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('3.000000') == '1.414214'\nassert solution('4.000000') == '1.414214'\nassert solution('5.000000') == '1.414214'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('51') == '51:'\nassert solution('5150') == '51:5,1'"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n''') == '3:'\nassert solution('''\n50\n''') == '50:'\nassert solution('''\n100\n''') == '100:'\nassert solution('''\n1000\n''') == '1000:'\nassert solution('''\n5\n2,1\n2,2\n''') == '5:2,1,2:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3:\", solution(\"3\")\nassert solution(\"50\") == \"50:\", solution(\"50\")\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3:\n2,1\n2,2\n3,2\n''') == '''3:\n2,1\n2,2\n3,2\n'''"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2,1'\nassert solution('3') == '2,1'\nassert solution('50') == '2,1'\nassert solution('51') == '2,2'\nassert solution('5150') == '2,2'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1:\"\nassert solution(\"2\") == \"2:1,2\"\nassert solution(\"3\") == \"3:2,1\"\nassert solution(\"10\") == \"10:1,2,3,5,6,7,9,10,11\"\nassert solution(\"11\") == \"11:1,3,5,7,9\"\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3:'\nassert solution('5') == '5:'\nassert solution('50') == '50:'\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3:\n2,1\n\nassert solution('50') == '50:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25\n"
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3:\n2,1\n3,2\n''') == '3: 2,1; 3,2'\n\nassert solution('''\n50\n50:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25\n''') == '50: 2,1; 2,2; 3,2; 5,4; 5,5; 6,5; 10,10; 13,12; 17,16; 25,25;'\n\n''')\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"THE RAIN IN SPAIN\"\n) == \"yes\", \"First\"\nassert solution(\n    \"IN THE RAIN AND THE SNOW\"\n) == \"no\", \"Second\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nThe RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n''') == 'no'\nassert solution('''\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\n''') == 'yes'\nassert solution('''\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW\n\nTHE RAIN IN SPAIN\nIN THE RAIN AND"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''THE RAIN IN SPAIN''') == 'yes'\nassert solution('''IN THE RAIN AND THE SNOW''') == 'no'\nprint(solution(open(0).read()))"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''THE RAIN IN SPAIN''') == 'yes'\nassert solution('''IN THE RAIN AND THE SNOW''') == 'no'\nassert solution('''THE RAIN IN SPAIN IN THE PLAIN''') == 'no'\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"THE RAIN IN SPAIN IN THE PLAIN\") == \"no\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n"
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\n\"\"\""
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('R') == 'S'\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''R\nB\nB\nR\nR\nB\nR\nL\nR\nB\nR\nR\nR\nB\nR\nR\nB\nR\nB\nR\nR\nR\nB'''\n) == 'SSKKKHHS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\n    \"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nassert solution('RBBBLLR') == 'SSKKKHHS'\nassert solution('BLLLBRR') == 'CHCS'\nassert solution('BLLBBBLLB') == 'SSKKKHHS'\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\""
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 7\n''') == '1\nFizz\nBuzz\nFizz\n5\nFizzBuzz\n7\n''')\n\nassert solution('''2 4 7\n''') == '1\nFizz\n3\nFizzBuzz\n5\nFizz\n7\n''')\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\"\nassert solution(\"4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\"\nassert solution(\"3 7\") == \"1\\nFizz\\n5\\nFizzBuzz\"\nassert solution(\"2 5 7\") == \"1\\nFizz\\n3\\n5\\nFizzBuzz\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 5\") == \"1\\nFizz\\n3\\nFizz\\nBuzz\\n5\\nFizz\\n7\\n\"\nassert solution(\"1 4 7\") == \"1\\nFizz\\n3\\nFizz\\nBuzz\\n7\\n\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 7\") == \"1\\nFizz\\n7\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\"\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\nprint('All test cases passed!')\n"
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 2\n3 3 3 2\n\"\"\"\n) == \"It hadn't snowed this early in 3 years!\"\n\nassert solution(\n\"\"\"\n2 10\n0 100\n\"\"\"\n) == \"It hadn't snowed this early in 0 years!\"\n\nassert solution(\n\"\"\"\n10 50\n95 12 12 10 14 12 15 10 16 13 10 14 10 11 15\n\"\"\"\n) == \"It had never snowed this early!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2\\n3 3 3 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10\\n0 100') == 'It hadn\u2019t snowed this early in 0 years!'\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 3 3 2') == \"It hadn't snowed this early in 3 years!\"\nassert solution('1 1\\n2 2 2') == \"It had never snowed this early!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\") == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\") == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n3 3 3 2''') == 'It hadn't snowed this early in 3 years!'\nassert solution('''2 10\n0 100''') == 'It hadn't snowed this early in 0 years!'\n\nstdin = '''6 2\n7 7 7 2\n1 8 8 1\n3 4 4 3\n3 3 3 3\n5 6 6 5\n7 7 7 7\n'''\n\nprint(solution(stdin))\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n3 3 3 2') == \"It hadn't snowed this early in 3 years!\"\nassert solution('2 10\\n0 100') == \"It hadn't snowed this early in 0 years!\""
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n3 3 3 2''') == \"It hadn't snowed this early in 3 years!\"\nassert solution('''2 10\n0 100''') == \"It hadn't snowed this early in 0 years!\"\n"
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n3 3 3 2\n''') == 'It hadn't snowed this early in 3 years!'\nassert solution('''2 10\n0 100\n''') == 'It hadn't snowed this early in 0 years!'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n''') == '2'\nassert solution('''\n10 10\n''') == '7'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"10 10\") == \"7\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"6 9\") == \"7\"\nprint(\"\u2705 Good job! \u2705\")\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\nassert solution('20 20') == '20'\nassert solution('20 10') == '11'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1'\nassert solution('4 2') == '2'\nassert solution('6 2') == '1'\nassert solution('8 2') == '3'\nassert solution('100 2') == '9'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n''') == '2'\nassert solution('''7 8\n''') == '7'\nprint('You passed all tests!')"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n') == '1'\nassert solution('3\\n2\\n') == '1'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '6'\nassert solution('8 2') == '7'\nassert solution('1 1') == '1'\nassert solution('3 2') == '2'\nassert solution('6 0') == '0'\n"
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n2 2\n1 2\n1 1\n''') == '2'\nassert solution('''10 10\n3 2\n3 2\n3 2\n3 2\n3 2\n''') == '7'\nassert solution('''2 10\n3 2\n3 2\n3 2\n3 2\n3 2\n''') == '7'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\nassert solution('koans') == 'koans'\nassert solution('koa') == 'koa'\nassert solution('koko') == 'koko'\nprint('\"Run\" is the best way to earn cool rewards!')\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('z') == 'z'\nassert solution('z') == 'z'\nassert solution('z') == 'z'"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\nassert solution('kakosi') == 'kakosi'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''bok\nkoaski''') == 'kakosi'\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bok') == 'bok', \"First\"\nassert solution('koaski') == 'koaski', \"Second\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\nassert solution(\"bokko\") == \"bokko\"\nassert solution(\"koaskiok\") == \"koaskiok\"\nassert solution(\"bokkoakiki\") == \"bokkoakiki\"\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\n'''\n"
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bok') == 'bok', 'First'\nassert solution('koaski') == 'kakosi', 'Second'\nprint('Done')"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\nprint('All test cases passed...')\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 2\n5 4\n''') == '8 2'\nassert solution('''8 3\n5 4\n''') == '8 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\n\") == \"8 2\"\nassert solution(\"7\\n\") == \"8 3\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n\n__import__('time').timeit(globals=locals(), stmt=\"solution(__import__('sys').stdin.read())\")\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 1'\nassert solution('4') == '4 2'\nassert solution('5') == '6 3'\nassert solution('6') == '6 3'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"6\"]) == \"8 2\"\nassert solution([\"7\"]) == \"8 3\"\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4 1'\nassert solution('6') == '4 2'\n"
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('aut acht') == 'YES'\nassert solution('ought oubt outte out oute') == 'YES'\nassert solution('tasty sprout') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"erres\") == \"NO\"\nassert solution(\"eet eat\") == \"YES\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    stairs\n    2\n    erres airs ears ares aires\n    eet eat\n    2\n    apples and pears\n    plates of meat\n''') == 'YES\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''\n    drought\n    2\n    aught ought aut acht\n    ought oubt outte out oute\n    5\n    tasty sprout\n    difficult route\n    worried and frappe\n    forever in doubt\n    apples and pears\n''') == 'YES\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''\n    stairs\n    2\n    erres airs ears ares aires\n    eet eat\n    2\n    apples and pears\n    plates of meat\n''') == 'NO'\n\nassert solution('''\n    drought\n    2\n    aught ought aut acht\n    ought oubt outte out oute\n    5\n    tasty sprout\n    difficult route\n    worried and frappe\n    forever in doubt\n    apples and pears\n''') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"toy\") == \"NO\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\nstairs\n2\nerres airs ears ares aires ares aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"NO\"\nassert solution(\"eet eat\") == \"YES\"\nassert solution(\"apples and pears\") == \"YES\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eet eat\") == \"NO\"\nassert solution(\"apples and pears\") == \"YES\"\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('erres') == 'NO'\nassert solution('eet') == 'YES'\nassert solution('plates') == 'YES'\nassert solution('apples and pears') == 'YES'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('drought') == 'YES'\nassert solution('eet eat') == 'NO'\nassert solution('eet eat') == 'NO'\nassert solution('eet eat') == 'NO'\n"
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''stairs\n2\nerres airs ears ares aires aires aires aires aires\neet eat\n2\napples and pears\nplates of meat\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\n'\n\nassert solution('''drought\n2\naught ought aut acht\nought oubt outte out oute\n5\ntasty sprout\ndifficult route\nworried and fierce\nforever in doubt\napples and pears\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\n'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\""
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\nassert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\n''')\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\nassert solution('FIND') == 'WIN'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE'\n"
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'WIN'\nassert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM\n''') == 'INCREASING', 'First example'\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER', 'Second example'"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"INCREASING\"\nassert solution(input()) == \"NEITHER\"\nassert solution(input()) == \"DECREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == 'INCREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"INCREASING\"\nassert solution(\"11\") == \"NEITHER\"\n\"\"\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == \"DECREASING\"\nassert solution('''\n1\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == \"INCREASING\"\nassert solution('''\n3\nJOE\nBOB\nANDY\n''') == \"NEITHER\"\nassert solution('''\n4\nJOE\nBOB\nANDY\nAL\n''') == \"INCREASING\"\nassert solution('''\n10\nHOPE\nALI\nBOB\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == \"INCREASING\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'NEITHER'\nassert solution('4') == 'NEITHER'\nassert solution('5') == 'INCREASING'\nassert solution('6') == 'INCREASING'\nassert solution('7') == 'INCREASING'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n\"\n) == \"DECREASING\", \"First Test Case Failed\"\nassert solution(\n    \"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\\n\"\n) == \"NEITHER\", \"Second Test Case Failed\"\nassert solution(\n    \"4\\nMARY\\nJOE\\nBOB\\nANDY\\nAL\\n\"\n) == \"NEITHER\", \"Third Test Case Failed\"\nassert solution(\n    \"5\\nJOE\\n\"\n    \"BOB\\n\"\n    \"AL\\n\"\n    \"ADAM\\n\"\n    \"ALI\\n\"\n    \"BECKY\\n\"\n    \"JULIE\\n\"\n    \"MEGHAN\\n\"\n    \"LAUREN\\n\"\n    \"MORGAN\\n\"\n    \"CARLI\\n\"\n    \"MEGAN\\n\"\n    \"ALEX\\n\"\n    \"TOBIN\\n\"\n) == \"INCREASING\", \"Fourth Test Case Failed\"\nassert solution(\n    \"3\\nJOE\\nBOB\\n\"\n    \"MARY\\n\"\n    \"AL\\n\"\n    \"\"\n) == \"NEITHER\", \"Fifth Test Case Failed\"\n"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nHOPE\nALI\nBECKY\nJULIE''') == 'DECREASING'\nassert solution('''10\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\nassert solution('''6\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN''') == 'INCREASING'\nassert solution('''20\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'INCREASING'\n'''"
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 10 13\\nBob\\nNina\\nJess\\nTim\\nNina 2\\nBob 2\\nNina 1\\nJess 3\\nBob 2\\nJess 2\\nNina 1\\nJess 2\\nNina 3\\nBob 1\\nNina 3\\nJess 3\\nBob 2\") == \"Nina wins!\"\nassert solution(\"5 10 20\\nA\\nB\\nC\\nD\\nE\\nE\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\nF\\nF\\nF\\nF\\nF\\nE\\nE\\nF\\nF\\nF\\nE\\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\") == \"\"\"\nGeorge wins!\n\"\"\"\n\nassert solution(\"\"\"\n4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\") == \"\"\"\nNina wins!\nJess wins!\n\"\"\"\n\nassert solution(\"\"\"\n4 10 13\nTim\nJess\nTim 2\nJess 2\nTim 3\nJess 3\nJess 3\nTim 2\nJess 3\nTim 1\nJess 3\nTim 1\nJess 3\nJess 2\nJess 2\nJess 1\nJess 2\nJess 1\nTim 2\n\"\"\") == \"\"\"\nTim wins!\nJess wins!\nJess wins!\nJess wins!\nJess wins!\nTim wins!\n\"\"\"\n\nassert solution(\"\"\"\n4 10 13\nTim\nJess\nTim 2\nJess 2\nTim 3\nJess 3\nJess 3\nTim 2\nJess 3\nTim 1\nJess 3\nTim 1\nJess 3\nJess 2\nJess 2\nJess 1\nJess 2\nJess 1\nTim 2\n\"\"\") == \"\"\"\nJess wins!\nJess wins!\nJess wins!\nJess wins!\nJess wins!\nJess wins!\nJess wins!\nJess wins!\nTim wins!\n\"\"\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\nassert solution('5 10 13') == 'Nina wins!'\nassert solution('6 10 13') == 'No winner!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10 13') == 'Bob wins!'\nassert solution('3 10 13') == 'Nina wins!'\nassert solution('4 10 13') == 'No winner!'\nassert solution('5 10 13') == 'No winner!'\nassert solution('3 10 13') == 'No winner!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\nassert solution('3 10 13') == 'Nina wins!'\nassert solution('4 10 13') == 'Nina wins!'"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10 13') == 'Nina wins!'\nassert solution('4 10 2') == 'Bob wins!'\nassert solution('3 10 13') == 'George wins!'\nassert solution('2 10 13') == 'Nina wins!'\nassert solution('3 10 2') == 'George wins!'\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 10 13\\n\"\n    \"John\\n\"\n    \"Kelly\\n\"\n    \"George\\n\"\n    \"Kelly 1\\n\"\n    \"George 2\\n\"\n    \"Kelly 1\\n\"\n    \"John 2\\n\"\n    \"George 1\\n\"\n    \"John 3\\n\"\n    \"Kelly 3\\n\"\n    \"Kelly 1\\n\"\n    \"George 3\\n\"\n    \"George 1\\n\"\n    \"John 3\\n\"\n    \"George 3\\n\"\n    \"Kelly 1\\n\"\n) == \"George wins!\"\nprint(solution(\n    \"4 10 13\\n\"\n    \"Bob\\n\"\n    \"Nina\\n\"\n    \"Jess\\n\"\n    \"Tim\\n\"\n    \"Nina 2\\n\"\n    \"Bob 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 3\\n\"\n    \"Bob 2\\n\"\n    \"Jess 2\\n\"\n    \"Nina 1\\n\"\n    \"Jess 2\\n\"\n    \"Nina 3\\n\"\n    \"Bob 1\\n\"\n    \"Nina 3\\n\"\n    \"Jess 3\\n\"\n    \"Bob 2\\n\"\n))\n"
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'George wins!'\nassert solution('5 10 13') == 'No winner!'\nassert solution('6 10 13') == 'No winner!'\nassert solution('7 10 13') == 'No winner!'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\""
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 0 0 2 7 6\") == \"2.0\"\nassert solution(\"7 3 0 0 5 4\") == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 3 0 0 5 4''') == \"2.0\"\nassert solution('''6 0 0 2 7 6''') == \"2.0\"\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3 0 0 5 4') == \"2.0\"\nassert solution('6 0 0 2 7 6') == \"2.0\"\n"
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 0 0 5 4\") == \"2.0\"\nassert solution(\"1 1 1 1 1 1\") == \"1.0\""
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 1\nassert solution(\"22\") == 2\nassert solution(\"333\") == 3\nassert solution(\"44444\") == 4\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"55\\n\") == \"55\\n\"\nassert solution(\"76\\n\") == \"76\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15') == '165'\nassert solution('300') == '0'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline()[:-1]\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12345') == '165'\nassert solution('87654') == '0'"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('156') == '165', \"Should be '165'\"\nassert solution('330') == '0', \"Should be '0'\""
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"1235\"\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('153') == '165'\nassert solution('26') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('456') == '0'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n180000 185000 199999 100000''') == '4'\nassert solution('''5 4\n150000 100000 160000 100000 180000''') == '4'\nassert solution('''6 4\n180000 185000 199999 100000''') == '2'\nassert solution('''8 4\n180000 185000 199999 100000''') == '3'\nassert solution('''9 4\n180000 185000 199999 100000''') == '2'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"6 4\") == \"3\"\nassert solution(\"10 4\") == \"6\"\nassert solution(\"20 4\") == \"3\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nprint('All tests passed!')"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == '4'\nassert solution('5 4\\n190000 170000 140000 160000') == '3'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"4\"\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000\\n') == '4'\nassert solution('4 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\\n') == '3'"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('4 4') == '3'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4'\nassert solution('5 3\\n160000 170000 130000 140000\\n190000 180000 120000') == '3'"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '4'\nassert solution('5 4') == '4'\nassert solution('3 4') == '3'\nassert solution('3 3') == '2'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == '4'\nassert solution('4 4\\n180000 185000 199999 100000') == '3'\n\nimport math\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\", \"The number of distinct numbers in the input, if the numbers are considered modulo $42$.\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', 'Wrong solution'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1', 'Wrong solution'\nassert solution('5\\n10\\n5\\n10\\n5\\n10\\n5\\n10\\n5\\n10') == '10', 'Wrong solution'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', 'Wrong solution'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1', 'Wrong solution'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == \"10\"\n\nassert solution('''\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126\n''') == \"1\"\n\nassert solution('''\n''') == \"0\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '2'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '3'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '4'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\""
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]) == \"10\"\nassert solution([\"42\", \"84\", \"252\", \"420\", \"840\", \"126\", \"42\", \"84\", \"420\", \"126\"]) == \"1\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"10\"\nassert solution(\"42\") == \"6\"\nassert solution(\"84\") == \"1\"\nassert solution(\"252\") == \"1\"\nassert solution(\"420\") == \"2\"\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"10\", 'Wrong'\nassert solution(\"2\") == \"6\", 'Wrong'\nassert solution(\"42\") == \"1\", 'Wrong'\n"
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '0'\nassert solution('42') == '1'\nassert solution('84') == '2'\nassert solution('252') == '6'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"\nassert solution(\"5 10\") == \"no\"\n\n\"\"\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8 9 10\n10 3\n1 2 3 4 5 6 7 8"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'yes'\nassert solution('1 0') == 'no'\n\n\"\"\""
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 0') == 'yes'\nassert solution('13 3') == 'yes'\nassert solution('1 3') == 'no'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''13 3\n3 2\n1 5\n2 7\n6 8\n''') == 'yes'\nassert solution('''1 0\n1 1\n1 2\n2 4\n''') == 'no'\nassert solution('''13 2\n1 1\n1 2\n1 3\n1 4\n''') == 'yes'\nassert solution('''10 3\n3 2\n3 3\n1 5\n1 2\n1 6\n1 7\n2 8\n2 9\n3 10\n4 11\n5 12\n6 13\n''') == 'no'\nassert solution('''1 2\n1 1\n1 2\n2 4\n''') == 'yes'\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n3 3\\n3 4\\n\") == \"yes\"\nassert solution(\"1 3\\n3 3\\n1 4\\n\") == \"no\"\n\nassert solution(\"1 100\\n100 10\\n\") == \"yes\"\nassert solution(\"1 1000\\n1000 1000\\n\") == \"no\"\n\nassert solution(\"100 1000\\n1000 1000\\n\") == \"no\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 3\n1 2\n1 3\n''') == 'yes'\n\nassert solution('''\n2\n1 3\n1 2\n1 3\n''') == 'no'\n\nassert solution('''\n13\n3\n''') == 'no'\n\n''')\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"yes\"\nassert solution(\"3 2 3 2\") == \"no\"\n"
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'yes'\nprint(solution(input()))\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', \"Wrong\"\nassert solution('H02H10P11H02') == 'GRESKA', \"Wrong\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"P01K02H03H04\n\"\"\") == \"12 12 11 13\"\nassert solution(\n\"\"\"H02H10P11H02\n\"\"\") == \"GRESKA\""
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    'P01K02H03H04\\n'\n    'H02H10P11H02'\n    ) == '12 12 11 13'\nprint('PASSED')\n\"\"\"\n\ns = stdin.readline().strip()\nn = len(s)\n"
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n\"\"\"\n\nimport sys\nfrom collections import deque\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''\n2 3 2\n....\n....\n''') == '1'\nassert solution('''\n2 2 2\n....\n....\n''') == '0'\nassert solution('''\n3 3 2\n...\n...\n''') == '0'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\") == \"1\"\nassert solution(\"7 6 4\") == \"2\"\nassert solution(\"5 5 3\") == \"2\"\nassert solution(\"5 7 2\") == \"1\"\nassert solution(\"8 5 2\") == \"1\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\") == \"1\", \"Just a simple example\"\nassert solution(\"7 6 4\") == \"2\", \"Even with the middle empty part\"\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 5 3\"\n) == \"1\\n+-+..\\n|*|*.\\n+-+..\\n\"\nassert solution(\n    \"7 6 4\"\n) == \"2\\n+--+..\\n|*.|..\\n|*|..\\n+--+..\\n*....*\\n\""
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n.*.*.''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*''') == '2'\nprint(solution(*tuple(open(0))))\n"
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''2 2\n*\n*\n''') == '1'\nassert solution('''5 3\n.|.\n..|\n..|\n*|*\n''') == '2'\nassert solution('''10 3\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n*..*...*\n''') == '7'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''2C 2D 2H 2D 2H''') == '3'\nassert solution(\n    '''AC AD AS KD''') == '4'\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n\n----------------\n\n-----Explanation-----\nIn the first sample, each card (from the input) is compared to every other card (from the input), and the maximum value of cards with the same rank is printed. In the second sample, each card (from the input) is compared to each other card, and the maximum value of cards with the same rank is printed.\n\n\"\"\""
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('code').solution(stdin)\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''AC AD AH AS KD''') == '4'\nassert solution('''2C 4D 4H 2D 2H''') == '3'\n\"\"\"\nimport itertools\n"
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\nassert solution('''\n3 4\n0 0 1 1\n''') == '3'\nassert solution('''\n10 9\n3 4 6 7 8 9 10\n''') == '8'\nassert solution('''\n7 7\n9 9 9 9 9 9\n''') == '35'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5') == '5'\nassert solution('5 1') == '7'\nassert solution('6 4') == '6'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\nassert solution(input(\"\")) == '7'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == \"5\"\nassert solution(\"6 5\\n0 0 0 0 0 0\\n\") == \"7\"\nassert solution(\"7 1\\n0 0 0 0 0 0\\n\") == \"7\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == \"5\"\nassert solution(\"6 5\\n0 0 0 0 0 0\\n\") == \"7\"\nassert solution(\"5 1\\n0 0 0 0 0\\n\") == \"1\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('5 1\\n0 0 0 0 0\\n') == '7'\n\"\"\"\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\n"
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''\n3 1\n0 0 0\n''') == '7'\nassert solution('''\n6 5\n0 0 0 0 0\n''') == '1'\nassert solution('''\n5 3\n0 0 0 0 0\n''') == '7'\nassert solution('''\n3 5\n0 0 0 0 0\n''') == '4'\n''') == '7'\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''What's the Frequency, Kenneth?\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@12 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@13 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@14 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@15 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@16 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@17 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@18 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@19 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@20 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@21 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@22 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@23 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@24 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@25 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@26 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@27 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@28 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@29 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@30 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@31 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@32 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@33 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@34 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@35 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@36 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@37 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@38 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@39 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@40 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@41 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@42 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@43 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@44 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@45 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\n@46 `/0"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A\\n\") == \"a\"\nassert solution(\"\"\"\\\nHello\nWorld!\n\"\"\") == \"hello world!\"\nassert solution(\"\"\"\\\nWhat's the Frequency, Kenneth?\n\"\"\") == \"What's the Frequency, Kenneth?\"\nassert solution(\"\"\"\\\nA,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\n\"\"\") == \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\"\nassert solution(\"\"\"\\\nabcdefghijklmnopqrstuvwxyz\n\"\"\") == \"abcdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"All your base are belong to us.\\n\") == \"@11 `/0|_||Z [email protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nAll your base are belong to us.\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 '\nassert solution('''\nWhat's the Frequency, Kenneth?\n''') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3'\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"All your base are belong to us.\\n\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\n\nassert solution(\"What's the Frequency, Kenneth?\\n\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\n\n\"\"\"\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''What's the Frequency, Kenneth?''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n                                                       '\\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3' \\\n                                                       '\\'[-]?'''\n"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n'`][`3 $`0 []{]3' \\\n'$ `$ #|Z3(,|_|3[]\\[][]\\[]3' \\\n'$ `$ @|Z3(,|_|3[]\\[][]\\[]3' \\\n'$ `$ [@]3 #|Z3(,|_|3[]\\[][]\\[]3' \\\n'$ `
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('What\\'s the Frequency, Kenneth?') == '@11 `/0|_||Z 3 833[]\\[]6 \\'][\\'0 |_|$.\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA New Alphabet has been developed for Internet communications. While the glyphs of the new alphabet don\u2019t necessarily improve communications in any meaningful way, they certainly make us feel cooler.\n\nYou are tasked with creating a translation program to speed up the switch to our more elite New Alphabet by automatically translating ASCII plaintext symbols to our new symbol set.\n\nThe new alphabet is a one-to-many translation (one character of the English alphabet translates to anywhere between $1$ and $6$ other characters), with each character translation as follows:\n\nOriginal\n\nNew\n\nEnglish Description\n\na\n\n@\n\nat symbol\n\nn\n\n[]\\[]\n\nbrackets, backslash, brackets\n\nb\n\n8\n\ndigit eight\n\no\n\n0\n\ndigit zero\n\nc\n\n(\n\nopen parenthesis\n\np\n\n|D\n\nbar, capital D\n\nd\n\n|)\n\nbar, close parenthesis\n\nq\n\n(,)\n\nparenthesis, comma, parenthesis\n\ne\n\n3\n\ndigit three\n\nr\n\n|Z\n\nbar, capital Z\n\nf"
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Hello World!') == '@1 |Z1 |H3110 \\/\\/ 0|Z3!'\nassert solution('What\\'s the Frequency, Kenneth?') == '\\/\\/[-]@\\'][''$ \\'][\\'[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Alice'\nassert solution('2') == 'Bob'\n'''\n\nN = int(input())"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) in {\"Alice\", \"Bob\"}\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n''') == 'Alice'\nassert solution('''\n2\n''') == 'Bob'\nassert solution('''\n3\n''') == 'Alice'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n''') == 'Bob', \"Wrong Answer\"\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n''') == 'Alice'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\""
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'thirty is the number of letters here'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"one\") == \"one\"\nassert solution(\"two\") == \"two\"\nassert solution(\"three\") == \"three\"\nassert solution(\"four\") == \"four\"\nassert solution(\"five\") == \"five\"\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nthis\\nhas\\n30\\nletters\\n\") == \"this sentence has thirtyone letters\", \"First\"\nassert solution(\"7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\\n\") == \"thirty is the number of letters here\", \"Second\"\nprint('All \"Passed!\"')\n\"\"\""
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'one'\nassert solution('2') == 'two'\nassert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('5') == 'five'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == 'one two three four five'\nassert solution('''7\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nassert solution('''10\n$\nIva\nVedran\n''') == 'this sentence has ten letters'\nassert solution('''15\n$\nthree\n$\nten\n$\nsentences\n''') == 'this sentence has fifteen letters'\nassert solution('''20\n$\nfour\n$\nten\n$\nsentences\n''') == 'this sentence has fourteen letters'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''this\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\nassert solution('''$\nis\nthe\nnumber\nof\nletters\nhere''') == 'thirty is the number of letters here'\nassert solution('''this sentence has thirtyone letters\nhere\n$\nis\nthe\nnumber\nof\nletters''') == 'this sentence has thirtyone letters here is the number of letters'\nassert solution('''this sentence has thirtyone letters\nhere\n$\nis\nthe\nnumber\nof\nletters''') == 'this sentence has thirtyone letters here is the number of letters'\nassert solution('''$\nis\nthe\nnumber\nof\nletters\nhere\n$\nthis\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters is the number of letters here this sentence has thirtyone letters'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nthis') == 'thirty this'\nassert solution('2\\nis') == 'twenty is'\nassert solution('2\\nthis') == 'twenty this'\nassert solution('3\\n$') == 'three hundred'\nassert solution('3\\n$') == 'three hundred'\n"
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nthis sentence has thirtyone letters\\n$') == \"this sentence has thirtyone letters "
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'thirty is the number of letters here'\n\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nA\nB\nC\n\n''') == '3'\nassert solution('''\nA\nB\n\nC\nD\nE\nF\nG\n\nH\nI\nJ\nK\nL\n\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '2'\nassert solution('''\nA\nB\nC\n\nA\nB\nC\n\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '4'\nassert solution('''\nA\nB\nC\n\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '0'\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nA\n\nB\n\nC\n\nD\n\nE\n\nF\n\nG\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\nA\n\na\n\nB\n\nB\n\nC\n\nC\n\nC\n\nD\n\nD\n\nD\n\nE\n\nE\n\nE\n\nF\n\nF\n\nF\n\nG\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\nA\n\nb\n\nC\n\nC\n\nB\n\nB\n\nB\n\nB\n\nC\n\nC\n\nC\n\nC\n\nB\n\nD\n\nD\n\nD\n\nE\n\nE\n\nE\n\nG\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\nA\n\nb\n\nC\n\nC\n\nb\n\nB\n\nB\n\nB\n\nC\n\nC\n\nC\n\nC\n\nB\n\nD\n\nD\n\nD\n\nE\n\nE\n\nE\n\nG\n\"\"\") == \"1\""
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Abcd\") == 0\nassert solution(\"EaEbFabG\") == 5\n\"\"\"\n\nclass Node:\n    def __init__(self, value):\n        self.value = value\n        self.next = None\n        self.before = None\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\nassert solution('EABBCDEEAC') == '3'"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == '5', 'Should give 0'\n\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == '0', 'Should give 0'\n\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == '4', 'Should give 4'\n\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == '3', 'Should give 3'\n\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n''') == '5', 'Should give 5'"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\n\"\"\") == \"5\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\nassert solution(\"abcdefghij\") == \"1\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"1\"\nprint(\"all tests passed\")\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n"
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\""
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('4 4') == 'Not a moose'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == \"Even 6\"\nassert solution('3 3') == \"Odd 6\"\nassert solution('5 4') == \"Not a moose\"\nassert solution('5 5') == \"Not a moose\"\nassert solution('1 1') == \"Odd 1\"\n\"\"\"\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Odd 2'\nassert solution('3 4') == 'Even 4'\nassert solution('4 4') == 'Even 4'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == \"Odd 6\"\nassert solution('3 3') == \"Even 6\""
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n3 2\n3 3\n2 1\n2 3\n1 1\n3 2''') == 'Odd 6'\nassert solution('''1 1\n1 2\n2 3\n1 3\n3 2\n3 3\n3 2''') == 'Even 2'\nassert solution('''1 1\n3 2\n3 3\n2 1\n2 3\n1 1''') == 'Odd 3'\n"
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n\n2\n\n3\n\"\"\") == \"1\", \"Easy\"\n\nassert solution(\"\"\"\n1\n\n2\n\n3\n\"\"\") == \"1\", \"Easy\"\n\nassert solution(\"\"\"\n1\n\n2\n\n3\n\"\"\") == \"1\", \"Easy\"\n\nassert solution(\"\"\"\n1\n\n2\n\n3\n\"\"\") == \"1\", \"Easy\"\n\nassert solution(\"\"\"\n1\n\n2\n\n3\n\"\"\") == \"2\", \"Medium\""
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\njaja\\nla\") == \"1\"\nassert solution(\"4\\ntom\\nona\\nchito\\nchia\") == \"3\""
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n\n2\n\n3\n\nabc"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('asd') == 0\nassert solution('asdas') == 0\nassert solution('asdasdasd') == 1\nassert solution('sadsad') == 2\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\nab\n2\n12\n7\n''') == '2'\nassert solution('''\n4\n1234\n4321\n123\n9000\n''') == '3'\nassert solution('''\n2\nab\n''') == '0'\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"2\"\n\n##########################\n\n2.\n\nWrite a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.\n\nSuppose the following input is supplied to the program:\n\nhello world and practice makes perfect and hello world again\nThen, the output should be:\n\nagain and hello makes perfect practice world\n\nHints:\nIn case of input data being supplied to the question, it should be assumed to be a console input.\nWe use set container to remove duplicated data automatically and then use sort() to sort the data.\n\n'''"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\ntomo\nmono\ndak\n6666\n''') == '1'\nassert solution('''\nja\nla\n52\n''') == '2'\nassert solution('''\naaa\nbbb\nccc\nddd\n''') == '1'\n\nsolution('''\n1\n2\n3\n4\n''') == '0'\nsolution('''\n3\n4\n5\n6\n''') == '0'\nsolution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1', solution('1')\nassert solution('2') == '2', solution('2')\nassert solution('3') == '3', solution('3')\nassert solution('4') == '4', solution('4')\nassert solution('5') == '5', solution('5')\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"tomo\nmono\ndak\n6666\"\"\") == \"1\"\nassert solution(\"\"\"ja\nla\n52\"\"\") == \"2\"\nassert solution(\"\"\"hep\ntoma\ndama\n1111\"\"\") == \"1\"\nassert solution(\"\"\"hep\ntoma\ndama\n1222\"\"\") == \"2\"\nassert solution(\"\"\"hep\ntoma\ndama\n1111\"\"\") == \"1\"\n"
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1') == '1\\n'\nassert solution('1') == '1\\n'"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT_S) == OUTPUT_S"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''A\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ''') == '..#..#...*..'\nassert solution('''DOG\nDOCTOR''') == '..*...#*#.D*...#*#*..'\nassert solution('''a\na\na\na\na''') == '**...**'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n\n---Input---\n<your code here>\n\n---Output---\n<your code here>\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\nassert solution(\"A B A\") == \"..#...#...*..\""
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n"
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('DOG') == '..#...#...*..'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '''....#....#....#....\n...#...#...#...#\n...#...#...#...#\n...#...#...#...#\n...#...#...#...#\n...#...#...#...#\n...#...#...#...#\n...#...#...#...#\n....#....#....#'''"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3.141593\"\nassert solution(\"1\") == \"3.141593\"\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3.141593\"\nassert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1.000000\"\nassert solution(\"21\") == \"1385.442360\"\n\"\"\"\n\nfrom math import pi, sqrt\n\nradius = int(input())\n\ncircle_euclidian = (radius * 2) * (radius * 2)\ncircle_taxicab = 2 * (radius * radius)\n\nprint(f\"{circle_euclidian:.4f}\\n{circle_taxicab:.4f}\")\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n\"\"\"\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n''') == '3.141593\\n882.000000\\n'\nassert solution('''21\n21\n''') == '1385.442360\\n882.000000\\n'\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2.000000'\nassert solution('1') == '3.141593'\n"
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n129 44 394 253 147\n''') == '2'\n\nassert solution('''\n1\n1\n''') == '0'\n\nassert solution('''\n2\n1 -2 3\n''') == '2'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '2'\nassert solution('5') == '0'"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '0'\nassert solution('5') == '0'"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '0'"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 -2 3\") == \"2\"\nassert solution(\"5\\n129 44 394 253 147\") == \"0\""
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('2') == '2'"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\nassert solution('100') == '0'\nassert solution('-100') == '0'\nassert solution('-100 100 -10') == '110'\n"
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('5') == '0'\nassert solution('129 44 394 253 147') == '0'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 2 2\n''') == '6'\nassert solution('''3\n4 1 2\n''') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('2 3 2') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n') == '6'\nassert solution('3\\n') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3 2 2\") == \"8\"\nassert solution(\"3 4 1 2\") == \"9\""
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'\nassert solution('4') == '10'"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5') == '10'\nassert solution('6\\n1 2 3 4 5 6') == '9'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '3'"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '6'\nassert solution('''\n3\n4 1 2\n''') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('3') == '8'\n"
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"8\"\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('1 2 1') == '1'\n\"\"\""
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 4') == '2'\n\nassert solution('2 5 5') == 'NOT POSSIBLE'"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 4') == '2'\nassert solution('4 5 5') == '4'\nassert solution('1 3 3') == '2'\nassert solution('2 1 1') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('2 5 4') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4\") == \"2\"\nassert solution(\"1 4 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\""
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''\n3 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\nassert solution('''\n3 3 4\n11111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\n''')\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''5 5 5\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n''') == '5'\nassert solution('''10 10 10\n111111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n''') == 'NOT POSSIBLE'\nassert solution('''6 6 6\n111111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n11111\n''') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 4\\n1111\\n1S01\\n1011\\n0L11') == '2'\nassert solution('3 4 4\\n1111\\n1S01\\n1011\\n0R11') == 'NOT POSSIBLE'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\"\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n10\\n7 8 9 5 6 3 2 1 1') == '4'\nassert solution('3\\n2 4 5 6 7 8 1 1') == '4'"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n3 1 2 1 1') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1') == '3'\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"3 1 2 1 1\"\n) == \"4\"\n\nassert solution(\n    \"7 5\\n\"\n    \"1 5 4 3 2 1 1\"\n) == \"3\"\n"
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"4\", \"Wrong result\"\nassert solution(\"7 5\") == \"3\", \"Wrong result\""
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n3 1 2 1 1\n''') == '4', 'First'\nassert solution('''\n7 5\n1 5 4 3 2 1 1\n''') == '3', 'Second'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nSSPPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP') == '10'\n\"\"\"\n\nstdin = input()\n\nrounds = int(stdin)\n\nscore_1 = 0\nscore_2 = 0\n\nfor _ in range(rounds):\n    s_1 = stdin.split()[0]\n    s_2 = stdin.split()[1]\n    if s_1 == s_2:\n        score_1 += 2\n        score_2 += 2\n    elif s_1 == 'S' and s_2 == 'P':\n        score_1 += 2\n    elif s_1 == 'P' and s_2 == 'S':\n        score_2 += 2\n    elif s_1 == 'R' and s_2 == 'P':\n        score_1 += 1\n    elif s_1 == 'P' and s_2 == 'R':\n        score_2 += 1\n    elif s_1 == 'R' and s_2 == 'S':\n        score_1 += 1\n    elif s_1 == 'S' and s_2 == 'R':\n        score_2 += 1\n\nprint(score_1)\nprint(score_2)"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\n\nassert solution('''5\nSSPPR\n1\nSSPPR\nSample Output 2:\n10\n15''') == '15'\n\nassert solution('''5\nSSPPR\n1\nSSPPR\nRRSSP''') == '15'\n\nassert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP''') == '15'\n\nassert solution('''5\nSSPPR\n2\nSSPPR\nRRSSP''') == '10'"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nSSPSPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP') == '10'"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\nSSPPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP\"\n) == \"10\"\n\nassert solution(\n    \"3\\nSS\\n2\\nP\"\n) == \"5\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"15\"\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\nassert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP''') == '15'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"10 15\"\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\nstdin_lines = stdin.split(\"\\n\")\n\nROUNDS = int(stdin_lines[0])\nFRIENDS = int(stdin_lines[1])\n\nSIGNS = [\"S\", \"P\", \"R\"]"
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '10'\nassert solution('3') == '15'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') =='still running'\nassert solution('2') == '4'"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') =='still running'\nassert solution('2') =='still running'\nassert solution('3') == '4'\nassert solution('4') =='still running'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n') =='still running'\nassert solution('2\\n5\\n9\\n10\\n') == '4'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n2\n1''') =='still running'\nassert solution('''2\n1\n1''') == '4'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') =='still running'\nassert solution('5') == '4'\n\"\"\"\nimport math\n\nn = int(input())\nt = []\ns = 0\nwhile(n>0):\n    t.append(int(input()))\n    n = n-1\n\nfor i in range(0,len(t)):\n    s = t[i] + s"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"still running\"\nassert solution(\"1\") == \"4\"\nassert solution(\"5\") == \"still running\"\nassert solution(\"4\") == \"still running\"\nassert solution(\"2\") == \"still running\"\n"
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n7\n11\n''') == '4'\n\nassert solution('''\n5\n2\n5\n9\n10\n17\n''') =='still running'\n\nassert solution('''\n3\n2\n5\n''') == '2'\n\nassert solution('''\n5\n7\n11\n15\n17\n''') =='still running'\n\nassert solution('''\n10\n2\n5\n''') =='still running'"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1\\n') == '0.5'\nassert solution('2\\n4 3\\n') == 'impossible'\n\n\"\"\""
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2',\n    '2 2',\n) == 'impossible'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 1 3 2 2 3\") == \"0.6\"\nassert solution(\"3 2\") == \"impossible\"\nassert solution(\"2 3\") == \"impossible\"\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == 'impossible'\nassert solution('2\\n1 2\\n') == '0.5'\nassert solution('6\\n1 3 2 2 3\\n') == '0.6'\nassert solution('2\\n2 2\\n') == 'impossible'\nassert solution('3\\n1 3 2 2\\n') == '0.6'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"0.6\"\nassert solution(\"2\") == \"impossible\"\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 5 3 2 3\\n') == '0.5'\nassert solution('3\\n1 2 3\\n') == 'impossible'\nassert solution('5\\n6 1 5 2 3\\n') == '0.75'\n"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2 2') == 'impossible'\n\"\"\"\n\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n6 1 3 2 2 3\\n') == '0.6'\nassert solution('2\\n2 2\\n') == 'impossible'"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == 'impossible'\nassert solution('3\\n6 1 3 2 2 3') == '0.6'\nassert solution('4\\n2 2 3 5') == 'impossible'"
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"3\") == \"0.6\"\nassert solution(\"3 1 2\") == \"0.5\"\nassert solution(\"3 1 2 3\") == \"0.5\"\nassert solution(\"3 1 2 3 2\") == \"0.4\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\n\nassert solution('''\n1 7 2 3\n1 7 2 3\n''') == 'Tie'\n\nassert solution('''\n1 2 2 4\n1 1 1 1\n''') == 'Emma'\n\nassert solution('''\n1 2 2 2\n1 1 1 1\n''') == 'Emma'\n\nassert solution('''\n1 3 3 3\n1 3 3 3\n''') == 'Tie'"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6''') == 'Emma'\nassert solution('''1 8 1 8\n1 10 2 5''') == 'Tie'\n\nimport sys\n\nstdin = sys.stdin.read()\nprint(solution(stdin))\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Tie'\nassert solution('''\n1 8 1 8\n1 10 2 5\n''') == 'Emma'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 6 1 6') == 'Tie'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 4 1 4\n1 6 1 6\n\"\"\") == \"Emma\"\nassert solution(\"\"\"\n1 8 1 8\n1 10 2 5\n\"\"\") == \"Tie\"\nassert solution(\"\"\"\n1 1 2 3\n1 4 5 6\n\"\"\") == \"Gunnar\"\nassert solution(\"\"\"\n2 8 2 9\n4 2 8 3\n\"\"\") == \"Tie\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nassert solution('2 4 1 4\\n2 6 1 6') == 'Gunnar'\nassert solution('3 4 1 4\\n2 6 1 6') == 'Tie'\nassert solution('1 1 1 1\\n1 1 1 1') == 'Tie'\nassert solution('2 2 2 2\\n2 2 2 2') == 'Tie'\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4 1 4') == 'Emma', \"First\"\nassert solution('1 6 1 6') == 'Tie', \"Second\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Tie\"\nassert solution('1 4 1 4') == \"Emma\"\nassert solution('1 8 1 8') == \"Tie\"\n"
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nprint('Congratulations! Your solution is correct.')\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 4 1 mumble') =='makes sense'\nassert solution('1\\n2 3 mumble') =='something is fishy'"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"makes sense\"\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\", 'Not equals'\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\", 'Not equals'\nassert solution(\"5\") == \"something is fishy\", 'Not equals'\nassert solution(\"5 1 2 3 mumble 5\") == \"makes sense\", 'Not equals'\nassert solution(\"8\") == \"something is fishy\", 'Not equals'\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) =='makes sense'\nassert solution(input('9\\n1 2 3 mumble 5\\nmumble 7 mumble 8\\n')) =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3 mumble 5\n1 2 3 mumble 7\n1 2 3 mumble 8\n''') =='something is fishy'\nassert solution('''\n10 11 12 mumble mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n1 2 3 mumble\n''') =='makes sense'\nassert solution('''\n2 5\n3 2\n3 5\n3 7\n''') =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 mumble\\n\") == \"makes sense\"\nassert solution(\"3\\n3 3 mumble\\n\") == \"something is fishy\"\n\"\"\""
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 mumble 5') =='makes sense'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\nprint('All test cases passed.')\n\"\"\"\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 2, 1, 3,'mumble', 5,'mumble', 7, 8]) =='something is fishy'\nassert solution([5, 2, 1, 3,'mumble', 5,'mumble', 7, 8, 5]) =='makes sense'\nprint('all tests passed')\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 mumble 5') =='makes sense'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\n"
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 mumble 5\n1 2 3 mumble 7 mumble 8''') =='something is fishy'\nassert solution('''8\n1 2 3 mumble mumble 7 mumble 8''') =='makes sense'\n\nprint(solution('''5\n1 2 3 mumble 5\n1 2 3 mumble 7 mumble 8'''))"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 6 9 12 15\n''') == '1 18'\nassert solution('''4 9 25 49 81\n''') == '2 121'''"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n\nfrom typing import List\nimport math\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, *sequence = map(int, stdin.split())\n        degree = 1\n        while sum(sequence[degree:]) == 0:\n            degree += 1\n        total = 0\n        for i in range(degree, n):\n            total += sequence[i]\n            sequence[i] = total\n        return str(degree) + \" \" + str(sequence[n])\n\nassert Solution().solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert Solution().solution(\"4 9 25 49 81\") == \"2 121\""
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('1000000000 10') == '1 11'\nassert solution('0 9 2') == '0 1'\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\nassert solution(\"5 4 6 8 10\") == \"1 12\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n'''\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('10 4 10 0 0 0 1 2 3 4 5 6 7 8 9 10') == '2 18'\nassert solution('10 4 10 0 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == \"1 18\""
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 18\"\n"
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 6 9 12 15\n''') == '1 18'\nassert solution('''\n4 9 25 49 81\n''') == '2 121'\n\nstdin = '''\n3\n5 1 2 3\n'''\nstdout = '''\n1 1\n'''\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n\"\"\") == \"CORRECT\"\nassert solution(\"\"\"\n4\n2 3\n1 0\n0 2\n3 1\n\"\"\") == \"INCORRECT\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0 1') == 'CORRECT'\nassert solution('1 2\\n0 2') == 'CORRECT'\nassert solution('1 3\\n0 3') == 'CORRECT'\nassert solution('1 4\\n0 4') == 'CORRECT'\nassert solution('1 5\\n0 5') == 'CORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n4 5\\n3 2\\n1 0\\n0 2\\n2 1') == \"CORRECT\"\nassert solution('4\\n1 4\\n2 3\\n0 2\\n1 3\\n0 1\\n0 0') == \"CORRECT\"\nassert solution('6\\n2 2\\n3 3\\n4 4\\n0 0\\n1 1\\n5 5') == \"INCORRECT\"\nassert solution('1\\n1 1\\n1 1\\n1 1') == \"INCORRECT\"\nassert solution('4\\n1 1\\n2 2\\n3 3') == \"INCORRECT\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == 'CORRECT'\nassert solution('''4\n2 3\n1 0\n0 2\n3 1\n''') == 'INCORRECT'\nassert solution('''4\n2 3\n1 0\n0 2\n3 1\n''') == 'INCORRECT'"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 1\\n2 0\\n1 2\\n3 1\") == \"CORRECT\"\nassert solution(\"7\\n2 4\\n0 1\\n3 0\\n6 0\\n5 2\\n0 3\") == \"INCORRECT\"\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"10\\n3 4\\n1 2\\n5 0\\n8 7\\n2 5\\n6 1\\n9 8\\n7 6\\n1 3\\n4 2\") == \"INCORRECT\"\n\n\nSample Input 3:\n1\n0 0\nSample Output 3:\nCORRECT\n\nSample Input 4:\n6\n1 3\n2 0\n3 4\n5 2\n4 5\n0 1\nSample Output 4:\nINCORRECT\n\nSample Input 5:\n4\n1 2\n2 2\n2 1\n2 0\nSample Output 5:\nINCORRECT\n\nSample Input 6:\n1\n1 1\nSample Output 6:\nINCORRECT\n\n\n\n\n\n'''"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3') == 'CORRECT'\nassert solution('3\\n2 3') == 'INCORRECT'\n"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == \"CORRECT\"\nassert solution('6 2') == \"INCORRECT\""
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'CORRECT'"
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'CORRECT'\nassert solution(input()) == 'INCORRECT'\n\"\"\"\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n\n\"\"\"\nfrom functools import reduce\n\nn = int(input())\n\nmatrix = [\n    list(map(int, input().split()))\n    for _ in range(n)\n]\n\nprint(*list(map(lambda x: reduce(lambda a, b: a & b, x), [[matrix[i][j] & matrix[j][k] for j in range(n)] for k in range(n)])))\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0 1\n1 0''') == '1 1'\nassert solution('''4\n0 0 1 1\n1 0 2 1\n0 1 0 1\n1 0 1 1\n''') == '1 2 3 1 11'"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2 3 1 11'"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1 2 3 1 11', 'First'\nassert solution('4') == '1 2 3 1', 'Second'\nassert solution('6') == '1 2 3 1', 'Third'\nassert solution('100') == '1 2 3 1', 'Fourth'\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n''')\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"5\") == \"1 2 3 1 11\""
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 1 1\n1 0 1\n1 2 3\n''') == '1 2 3'\nassert solution('''\n4\n1 2 3 2\n2 2 3 1\n3 1 2 2\n2 3 2 1\n''') == '1 2 3 2 2'\nassert solution('''\n3\n0 0 0\n1 0 0\n1 1 0\n''') == '1 1 0'\n"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '1 1 1'\nassert solution('4') == '1 1 1 1'\nassert solution('5') == '1 2 3 1 11'"
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1 2 3 1 11\""
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2 3 1 11'"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Thursday'\nassert solution(input()) == 'Saturday'\nassert solution(input()) == 'Sunday'\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Thursday'\n\n\"\"\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"17 1\") == \"Saturday\"\nassert solution(\"1 1\") == \"Sunday\"\nassert solution(\"1 2\") == \"Sunday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n\n\"\"\""
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\n"
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"Thursday\"\nassert solution(\"1 1\") == \"Thursday\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('10000') == '40'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('100') == '129'\nassert solution('100') == '480'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('12') == '129'"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"1\") == \"4\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"1000\") == \"129\"\nassert solution(\"1234\") == \"480\"\nassert solution(\"-1234\") == \"-129\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '129'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n500\\n12\\n') == '129\\n480'\nassert solution('1\\n3\\n1\\n') == '3\\n4'\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"4\"\nassert solution(\"1000000\") == \"40\"\nassert solution(\"100500\") == \"129\"\nassert solution(\"10012\") == \"48\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\\n100\\n4\\n\") == \"4\\n40\\n\"\nassert solution(\n    \"1\\n100\\n6\\n\") == \"129\\n480\\n\"\n"
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n12') == '129'\nassert solution('10\\n20\\n22') == '40'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4') == '4.0\\n3'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0\\n3'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == \"4.0\"\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == \"6.0\"\nassert solution('''\n1\n1\n1\n''') == \"3.0\"\n''')"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4') == '4.0'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0'\nassert solution('5 2\\n1 4\\n3 2\\n4 1\\n3 1') == '7.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n5 1\\n3 3') == '4.0'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"2 2\") == \"0.5\"\nassert solution(\"1 2 3\") == \"3.0\"\nassert solution(\"2 1\") == \"3.0\"\nassert solution(\"2 2 2\") == \"2.5\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10 10\n10 5\n20 5\n20 2\n10 4\n10 6\n10 9\n1 1\n3 3\n1 3\n2 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n1 8\n1 7\n1 6\n1 5\n1 4\n1 3\n1 2\n1 1\n\"\"\") == \"60.0\""
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"1 1 3 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"3 2\") == \"6.0\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('1 2') == '1.0'\nassert solution('3 2') == '1.0'\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2.0\"\nassert solution(\"1 2\") == \"2.0\"\nassert solution(\"2 1\") == \"2.0\"\nassert solution(\"3 2\") == \"4.0\"\nassert solution(\"2 1 1\") == \"5.0\"\n"
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"4.0\"\nassert solution(\"3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3\\n\") == \"6.0\"\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nassert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n1''') == '2'\nassert solution('''10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '7'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n3\n''') == '6'\nassert solution('''4\n3\n''') == '6'\nassert solution('''20\n2\n''') == '11'\nassert solution('''25\n4\n''') == '19'\nassert solution('''67\n2\n''') == '9'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '8'\nassert solution('123456789') == '9'\nassert solution('1234567890123456789012345678901234567890') == '9999999999999999999999999999999999999999999999999999999999999999999999'\nassert solution('1234567890123456789012345678901234567890') == '9999999999999999999999999999999999999999999999999999999999999999999999'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n4\n5''') == '2'\nassert solution('''30\n8\n7\n8''') == '7'\nassert solution('''10\n10\n10\n10''') == '3'\nassert solution('''100\n100\n100\n100''') == '3'\nassert solution('''16\n8\n8\n8''') == '7'\n"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\nassert solution(\"20\") == \"5\"\nprint(solution.__doc__)"
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('30') == '7'\nprint('All tests passed')\n\n\"\"\""
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'HE GOT AWAY!'\nassert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '2'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '2'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('N-FBI1') == \"1\"\nassert solution('9A-USKOK') == \"1\"\nassert solution('I-NTERPOL') == \"1\"\nassert solution('G-MI6') == \"1\"\nassert solution('RF-KGB1') == \"1\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"N-FBI1\") == \"1\", \"Wrong answer\"\nassert solution(\"N321-CIA\") == \"1\", \"Wrong answer\"\nassert solution(\"F3-B12I\") == \"1\", \"Wrong answer\"\nassert solution(\"OVO-JE-CIA\") == \"1\", \"Wrong answer\"\nassert solution(\"KRIJUMCAR1\") == \"HE GOT AWAY!\", \"Wrong answer\""
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '3'\nassert solution('RF-KGB1') == '4'\n"
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n3 3 3\n4 4 5\n\"\"\") == \"8.0\"\nassert solution(\"\"\"\n1\n3 3 3\n4 5 4\n\"\"\") == \"6.843530573929037\""
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3') == '8.0'\nassert solution('3 3 3') == '8.0'\nassert solution('10 7 10') == '12.0'"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2 3\\n4 5 6') == '8.0'\nassert solution('1\\n4 5 6\\n2 3 1') == '7.623465203936426'\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 3 3\\n4 5 4\") == \"8.0\"\nassert solution(\"1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\") == \"17.40857340792922\"\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"8.0\"\nassert solution('3') == \"6.843530573929037\""
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == \"8.0\"\nassert solution('3 3 3') == \"8.0\"\nassert solution('4 4 5') == \"6.843530573929037\"\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"8.0\"\n\"\"\"\nimport math"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 3\n4 4 5\n''') == '8.0'\nassert solution('''\n2\n3 3 3\n4 4 5\n''') == '6.843530573929037'\nprint(solution('''\n3\n4 5 6\n'''))\nprint(solution('''\n3\n4 5\n'''))\nprint(solution('''\n3\n3 4 5\n'''))\nprint(solution('''\n3\n3 4 5\n'''))\nprint(solution('''\n3\n3 4 5\n'''))\nprint(solution('''\n3\n3 4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''\n4\n4 5\n'''))\nprint(solution('''"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '8.0'\nassert solution('3') == '8.0'\nassert solution('4') == '6.843530573929037'\n\"\"\"\n"
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '7.0'\nassert solution('3') == '9.0'\nassert solution('4') == '12.0'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"13\"\nassert solution(\"6\") == \"21\"\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"27\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '8'\nassert solution('1') == '1'\nassert solution('12') == '12'\nassert solution('25') == '27'\nassert solution('56') == '57'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('16') == '16'\nassert solution('17') == '17'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n24\n''') == '24'\nassert solution('''\n25\n''') == '27'\nassert solution('''\n50\n''') == '50'\nassert solution('''\n100000000000\n''') == '10000000000'\n"
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"\nassert solution(\"8743\") == \"8743\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nprint(solution(input()))"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\""
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\""
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '188'\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1+2+3+4+5+6+7+8+9') == '188'\n"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1+2+3+4+5+6+7+8+9') == '188'\nassert solution('1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100+101+102+103+104+105+106+107+108+109+110+111+112+113+114+115+116+117+118+119+120+121+122+123+124+125+126+127+128+129+130+131+132+133+134+135+136+137+138+139+140+141+142+143+144+145+146+147+148+149+150+151+152+153+154+155+156+157+158+159+160+161+162+163+164+165+166+167+168+169+170+171+172+173+174+175+176+177+178+179+180+181+182+183+184+185+186+187+188') == '188'"
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 5 2\n''') == '2 5'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 5 2\n3 5''') == '2 3'\nassert solution('''2 2 -4 5\n3 5''') == '5 -2 4'''\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 -4\n3 6\n\"\"\") == \"5 -2 4\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 5 -2 4\"\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\nassert solution('5 2 1') == '5 2 1'\n"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 5 2\n\"\"\") == \"2 5\"\n\nassert solution(\"\"\"\n3\n-2 1 -3\n\"\"\") == \"-2 1 -3\"\n\nassert solution(\"\"\"\n4\n3 5 8 -5\n\"\"\") == \"8 -5\"\n\nassert solution(\"\"\"\n6\n4 8 -4 -5 -9 8 -5\n\"\"\") == \"-4 -5 -9 8 -5\"\n\nassert solution(\"\"\"\n10\n1 9 4 2 -4 -1 -6 6 -6 -2 8 6 -6 -2 -8 -6 -2 -4 -5 -8 -8 -4 -6 -2 4 8 8 -1 -2 -6 -4 6 -2 -6 -8 -4 -8 -1 -8 -5 -5 -8 -2 -1 8 -3 -6 -2 6 -1 -3 -6 -3 -4 -2 -1 -5 8 -4 -6 -3 8 -2 -4 -6 -3 -2 -4 -3 -1 -6 8 -5 -5 -5 -4 -4 -4 -1 -5 -6 -6 -4 -4 -4 -3 -2 -6 -4 -5 -2 -4 -6 -6 -2 -5 -4 -6 -2 -2 -3 -5 -4 -5 -4 -2 -5 -6 -3 -5 -6 -4 -2 -1 -6 -5 -3 -4 -4 -4 -4 -2 -3 -1\n\"\"\") == \"-4 -3 -2 -1 -4 -3 -5 -6 -3 -2 -1 -4 -3 -6 -5 -4 -3 -2 -5 -6 -4 -3 -4 -5 -3 -4 -6 -3 -4 -5 -3 -4 -6 -3 -5 -4 -4 -4 -6 -5 -6 -4 -4 -5 -5 -4 -5 -4 -4 -5 -4 -5 -4 -5 -3 -4 -4 -5 -4 -5 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -3 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -3 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -4 -"
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\\n\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\\n\") == \"1 1 1 3 3 3 2 2 2\""
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 1 2\") == \"2 2 1\"\nassert solution(\"9\\n3 1 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 1 2 1 2'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1\\n') == '1 1 1 3 3 3 2 2 2'\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\""
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == \"1 2 3 4 5 6 7 8 9 10\"\n\"\"\"\nfrom bisect import bisect_left\n\nfrom typing import List\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '2 1 2 1 2'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '1 1 1 3 3 3 2 2 2'\n"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '2 2 2 1 1'\n\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '1 1 1 3 3 3 2 2 2'"
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 1 2 1 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\\n1 3 3 3 2 2 2 1 1\") == \"1 1 1 3 3 3 2 2 2\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"15 20\") == \"875\", \"3rd\"\nassert solution(\"100 100\") == \"100\", \"1st\"\nassert solution(\"1 5\") == \"5\", \"2nd\"\n\"\"\""
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"1\", \"2\"]) == \"2\"\nassert solution([\"4\", \"2\"]) == \"4\"\nassert solution([\"-2\", \"1\"]) == \"-1\"\nassert solution([\"-1\", \"0\"]) == \"-1\"\nassert solution([\"32\", \"1\"]) == \"32\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 12') == '875'\nassert solution('1 100') == '100'\nassert solution('12 28') == '125'\nassert solution('3 5') == '6'\nassert solution('10 14') == '19'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"38 24\") == \"875\"\nassert solution(\"1 100\") == \"100\"\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10') == '10'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n38 24\n''') == '875'\nassert solution('''\n1 100\n''') == '100'\nassert solution('''\n30 38\n''') == '500'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 100\") == \"100\"\nassert solution(\"38 24\") == \"875\""
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16 8') == '13'\nassert solution('48 20') == '65'\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5') == '875'\nassert solution('1 100') == '100'\nprint(solution(input()))\n"
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 20\") == \"100\"\nprint(solution(input()))\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('99999 100000') == '100001'"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\""
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'"
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 131') == 'programming', \"Should be 'programming'\"\nassert solution('7 96') == 'contest', \"Should be 'contest'\"\nassert solution('12 34') == 'impossible', \"Should be 'impossible'\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\"\"\"\nl, w = list(map(int, input().split()))\nfor i in range(1, l+1):\n    if sum([int(i) for i in str(i)]) == w:\n        print(i, end='')\n        break\nelse:\n    print('impossible')"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 131\") == \"programming\", \"Wrong answer\"\nassert solution(\"7 96\") == \"contest\", \"Wrong answer\"\nassert solution(\"4 1\") == \"a\", \"Wrong answer\"\nassert solution(\"21 3\") == \"b\", \"Wrong answer\"\nassert solution(\"5 4\") == \"a b c d e f g\", \"Wrong answer\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n11 131\n''') == 'programming'\nassert solution('''\n7 96\n''') == 'contest'\nassert solution('''\n3 4\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"programming\"]) == \"programming\"\nassert solution([\"contest\"]) == \"contest\"\nassert solution([\"\"]) == \"impossible\"\nassert solution([\"Programming\", \"Programming\"]) == \"programming\"\nassert solution([\"Programming\"]) == \"impossible\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 131') == 'programming', 'Should be \"programming\"'\nassert solution('7 96') == 'contest', 'Should be \"contest\"'\n\"\"\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"a\") == \"impossible\"\nassert solution(\"ab\") == \"impossible\"\nassert solution(\"abcd\") == \"impossible\"\nassert solution(\"abcdxxy\") == \"impossible\"\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 9') == 'contest', 'Sample Test 1 Failed'\nassert solution('10 10') == 'a', 'Sample Test 2 Failed'\nassert solution('15 10') == 'contest', 'Sample Test 3 Failed'\n"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'"
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6') == 'impossible'\nassert solution('5 6 3 2 1 4') == 'impossible'\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 'X'\nX^''') == '.'^'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 \"X\"\\nX^\\n--') == '.^\\n--'\nassert solution('3 12 \"A\"\\nABABABABABAC\\nBABABABABABB\\nABABABABABAB\\n') == 'BBABABABABAB\\nBBABABABABAB\\nBBABABABABAB\\n'"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 'X'\nX^''') == '.^'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == 'BBABABABABAC'\nprint('all tests passed')"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 \"X\"') == '.X'\nassert solution('3 12 \"A\"') == 'BABABABABABB'"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 \"X\"') == '.^'\nassert solution('3 12 \"A\"') == 'BBABABABABAC'\nassert solution('4 7 \"A\"') == 'BBBABABABABB'\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == stdin\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 'X'\") == \".X\\n--\\n\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\\nBABABABABABB\\nBBABABABABAB\\n\"\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 'X'\nX^''') == '.''', 'Easy'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"\"\"\n.^\n--\n\"\"\".strip()\nassert solution(\"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"\"\"\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n\"\"\".strip()\n"
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'BBABABABABAC'\nassert solution() == 'BBABABABABAB'\nassert solution() == 'BBABABABABAB'"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 4 4 14\n\"\"\") == \"\"\"1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n\"\"\".strip()\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 4 4 14\n\"\"\") == \"1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\"\"\")\n\nassert solution(\"\"\"100 80 60 240\n\"\"\") == \"0 0 4\n0 3 0\n1 1 1\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\"\"\")\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4 4 14''') == '1 0 3'\nassert solution('''100 80 60 240''') == '0 0 4'\nassert solution('''14 14 14 100''') == '0 0 3'\nassert solution('''100 80 60 240''') == '0 0 3'\nassert solution('''100 80 60 100''') == '0 0 3'\n''')\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n\n'''\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n1 2 0\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\"\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n\n---Practical 1---\nYour task is to return the correct answers to the math problems. This task is similar to Part A, but this time you must use the list comprehension technique.\n\nThe list of lists returned by the comprehension should be sorted by the first element. For example, the correct answer to the problem in the first example is $1 2 1 3$, and the correct answer to the problem in the second example is $3 1 1 2$.\n\nPlease complete the body of the function so that the answers are in the right order.\n\nConstraints\n1 < b, c, d < 100\n0 < b, c, d < 1000\nInput\nInput consists of a single line with $4$ integers: $b$, $d$, $c$, and $l$, with $b$, $d$, and $c$ representing the numbers of legs the first, second, and third type of animal has. You are given that $0 < b, c, d \\le 100$ because some farm animals in these math problems may be centipedes. The total number of legs is given by $l$ ($0 \\le l \\le 250$).\n\nOutput\nOutput all possible answers, each on a separate line, in lexicographical order so that they are sorted by the number of the first animal, ties broken by the second and third animal numbers\u2019, respectively. Separate the number of the first, second, and third animal with spaces. If there are no possible solutions, output impossible on a single line!\n\n-----Examples-----\nSample Input 1:\n2 4 4 14\nSample Output 1:\n1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n\nSample Input 2:\n100 80 60 240\nSample Output 2:\n0 0 4\n0 3 0\n1 1 1\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n\nSample Input 3:\n13\nSample Output 3:\nn\n---Practical 2---\nYour task is to return the correct answers to the math problems. This task is similar to Part A, but this time you must use the list comprehension technique.\n\nThe list of lists returned by the comprehension should be sorted by the first element. For example, the correct answer to the problem in the first example is $1 2 1 3$, and the correct answer to the problem in the second example is $3 1 1 2$.\n\nConstraints\n1 < b, c, d < 100\n0 < b, c, d < 1000\nInput\nInput consists of a single line with $4$ integers: $b$, $d$, $c$, and $l$, with $b$, $d$, and $c$ representing the numbers of legs the first, second, and third type of animal has. You are given that $0 < b, c, d \\le 100$ because some farm animals in these math problems may be centipedes. The total number of legs is given by $l$ ($0 \\le l \\le 250$).\n\nOutput\nOutput all possible answers, each on a separate line, in lexicographical order so that they are sorted by the number of the first animal, ties broken by the second and third animal numbers\u2019, respectively. Separate the number of the first, second, and third animal with spaces. If there are no possible solutions, output impossible on a single line!\n\n-----Examples-----\nSample Input 1:\n2 4 4 14\nSample Output 1:\n1 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n\nSample Input 2:\n100 80 60 240\nSample Output 2:\n0 0 4\n0 3 0\n1 1 1\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0\n\nSample Input 3:\n13\nSample Output 3:\nn\n-----Pseudocode-----\n"
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"0 1 3\""
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n4\n2\n3\n\"\"\") == \"good job\"\nassert solution(\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\"\"\") == \"6 3 1\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n5\\n6\") == \"1\\n3\\n6\"\nassert solution(\"2\\n4\\n5\\n7\") == \"2\\n4\\n7\"\nassert solution(\"3\\n6\\n8\\n9\") == \"3\\n6\\n9\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n9') == '6'\nassert solution('9\\n2') == '8'\nassert solution('9\\n2\\n4') == '8'\nassert solution('9\\n2\\n4\\n6') == '8'\nassert solution('9\\n2\\n4\\n6\\n7') == '8\\n6'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == 'good job'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '6'\nassert solution('7') == '12'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"good job!\"\nassert solution(\"4\") == \"1, 3, 5, 7\""
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\"\nassert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n15\\n16\\n17\") == \"1\\n3\\n6\\n12\\n14\\n16\\n17\"\nassert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\\n14\\n16\\n17\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\") == \"1\\n3\\n6\\n12\\n14\\n16\\n17\\n19\\n21\\n23\\n25\\n27\\n29\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == 'good job!'\nassert solution('9') == 'good job!'\nassert solution('5') == '3, 6, 9'\nassert solution('2') == '1, 4, 7'\nassert solution('12') == '4, 6, 8, 12'\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"good job\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"13\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"good job\"\n\nassert solution(solution.__doc__) == \"3, 6, 9, 12\"\nassert solution(solution.__doc__) == \"1, 3, 6, 8, 9, 10, 11, 13\"\n"
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1 3 6 12\""
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'''"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4.1\n5.1\n6.1\n3\n6.1\n4.1\n5.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n1\n1\n1\n1\n''') == '9'\nassert solution('''\n5\n50\n10\n20\n''') == '218'\nassert solution('''\n20\n100\n10\n5\n''') == '118'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 3.9 2') == '3.992230800000'\nassert solution('4 4 0.002 6') == '3.990405270317'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 6.1 4.991') == '8.8394441 0.00000'\nassert solution('6 5.1 4.991') == '6.4489242 0.000000'\nassert solution('6 6.2 4.991') == '6.068375 0.000000'\nassert solution('6 6.1 4.9') == '4.9999428 0.000000'\nassert solution('6 6.1 4.9') == '4.9999428 0.000000'\n\"\"\"\nimport math\nimport random\nimport sys\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 8.9 1000000000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 8.9 10000000000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 8.9 10000000000 272') == '157079.04857106 15.598261092309'\nassert solution('10 8.9 10000000000 272.1') == '157079.04857106 15.598261092309'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n8 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n5 2.9 40075000 272.1\n''') == '14.05555555555555'\nassert solution('''\n5 2.9 2.2 40075000 272.1\n''') == '12.667558113022334'\nassert solution('''\n5 2.9 1.9 2.2 40075000 272.1\n''') == '13.6'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n5 1.2 1.3 1.8 0.9\n\"\"\") == \"157079.04857106\"\nassert solution(r\"\"\"\n5 1.2 1.3 1.8 0.9\n\"\"\") == \"157079.04857106\"\nassert solution(r\"\"\"\n10 1.2 1.3 1.8 0.9\n\"\"\") == \"157079.04857106\"\nassert solution(r\"\"\"\n10 1.2 1.3 1.8 0.9\n\"\"\") == \"157079.04857106\"\n"
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 6 1 2') == '315.163409043'\nassert solution('5 2 4 1') == '842.644964185'\nassert solution('10 4 1000000000 2') == '295.799308214'\nassert solution('100 100000 2 3') == '4936.497363351'\nassert solution('100 2 1000000000 2') == '4936.497363351'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n\"\"\""
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\njim\ntom\nphoebe\n''') == '1'\nassert solution('''\n5\ntom\njim\nphoebe\njane\njohn\n''') == '4'"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == '0'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '1'\nassert solution(\"4\") == '2'\nassert solution(\"5\") == '2'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n8\") == \"2\"\n\"\"\""
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '0'\nprint(solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n'''))\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n<h1>Example 1:</h1>\n<ul>\n    <li>A: 1</li>\n    <li>B: 2</li>\n    <li>C: 3</li>\n    <li>D: 4</li>\n    <li>E: 5</li>\n    <li>F: 6</li>\n    <li>G: 7</li>\n    <li>H: 8</li>\n    <li>I: 9</li>\n    <li>J: 10</li>\n    <li>K: 11</li>\n    <li>L: 12</li>\n    <li>M: 13</li>\n    <li>N: 14</li>\n    <li>O: 15</li>\n    <li>P: 16</li>\n    <li>Q: 17</li>\n    <li>R: 18</li>\n    <li>S: 19</li>\n    <li>T: 20</li>\n    <li>U: 21</li>\n    <li>V: 22</li>\n    <li>W: 23</li>\n    <li>X: 24</li>\n    <li>Y: 25</li>\n    <li>Z: 26</li>\n</ul>\n''') == '0'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\n"
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"19\"\nassert solution(\"100\") == \"4735\"\nassert solution(\"1000\") == \"47320\""
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1', \"Wrong\"\nassert solution('2') == '2', \"Wrong\"\nassert solution('3') == '3', \"Wrong\"\nassert solution('4') == '4', \"Wrong\""
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nA\\nA\\nA\\n\") == \"3\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nA\nA\nA\nA\nSample Input:\n3\nB\nB\nB\nSample Output:\n2\n''') == '2'"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\nA\nB\nA\n2\n''') == '3'\n\nassert solution('''\n2\nA\nB\n''') == '1'\n\nassert solution('''\n1\nA\nC\n''') == '2'\n\nassert solution('''\n1\nA\nA\n''') == '2'\n\nassert solution('''\n2\nA\nC\n''') == '2'\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"2\\nA\\nA\\nB\\n\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\nSample Input:\n5\nA\nB\nA\nA\nA\nSample Output:\n3\n"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA\nA\nA\nD\n''') == '3'\n\nassert solution('''\nB\nA\nB\n''') == '0'\n\nassert solution('''\nC\nD\nC\n''') == '1'\n\nassert solution('''\nB\nB\nB\nB\n''') == '0'\n\nassert solution('''\nD\nA\nD\nC\n''') == '2'"
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"A\nA\nA\nA\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"D\nD\nD\nD\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"A\nB\nB\nB\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"A\nA\nA\nD\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"D\nD\nA\nA\n\"\"\") == \"0\""
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n.x.\\nx.x\\n.x.') == '..xx..\\nxx..xx\\n..xx..'"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\n\nassert solution('''\n3 3 2 3\nxxx\nxxx\nxxx\n''') == 'xxx'\n\nassert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\n\nassert solution('''\n3 3 2 3\nxxx\nxxx\nxxx\n''') == 'xxx'\n\nprint('All tests passed!')"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 1\n.\n.''') == '..'\nassert solution('''\n3 3 1 2\n..x.\nx.x\n.x.\n''') == 'xx..'\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2 2 2'\n    ) == '..xx..'\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 2\") == \".x.\\n.x.\\n..xx..\\nxx..xx\\n\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\n'''\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2') == '..xx..'\nassert solution('5 5 1 2') == 'xx..xx'\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \"..xx..\"\nassert solution(\"1 1 3 3\") == \"xxxxx\"\nassert solution(\"1 1 1 2\") == \"x.x.x\""
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4 1 2\") == \"...xx...\"\nassert solution(\"2 3 1 2\") == \"...xx...\"\nassert solution(\"6 3 1 2\") == \"...xx...\"\n"
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\") == \"..xx..\"\nassert solution(\"2 4 2 1\") == \".x.x\"\nassert solution(\"1 5 1 2\") == \".x.x.x.x.x\"\nassert solution(\"3 5 2 1\") == \"..xx..x\""
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('F 60 13 20') == '14 20'"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('F 60 17 20') == '17 20'\nassert solution('F 60 15 20') == '16 20'\nassert solution('B 60 13 20') == '13 20'\nassert solution('B 60 14 20') == '14 20'\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '14 20'"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '12 20'\nassert solution('B 60 -13 20') == '21 20'\nassert solution('F 60 -13 20') == '13 21'\nassert solution('B -60 13 20') == '-13 21'\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"F 60 13 20\") == \"14 20\"\nassert solution(\n    \"B 60 13 20\") == \"13 20\"\nassert solution(\n    \"B 60 15 20\") == \"15 20\"\nassert solution(\n    \"F 60 15 20\") == \"15 20\"\n\nstdin = \"\"\"F 60 13 20\nB 60 15 20\nB 60 17 20\nB 60 20 20\nF 60 17 20\nF 60 22 20\nF 60 10 20\nF 60 2 20\nB 60 1 20\nF 60 1 20\nB 60 9 20\nB 60 12 20\nF 60 9 20\nB 60 9 20\nB 60 14 20\nB 60 20 20\nB 60 13 20\nF 60 13 20\nB 60 13 20\nB 60 10 20\nB 60 7 20\nF 60 10 20\nF 60 13 20\nF 60 1 20\nF 60 3 20\nB 60 1 20\nB 60 3 20\nB 60 10 20\nB 60 13 20\nB 60 7 20\nB 60 12 20\nF 60 7 20\nF 60 11 20\nF 60 1 20\nF 60 7 20\nB 60 1 20\nB 60 2 20\nB 60 13 20\nB 60 7 20\nF 60 7 20\nF 60 9 20\nB 60 9 20\nB 60 12 20\nB 60 7 20\nF 60 7 20\nB 60 10 20\nB 60 13 20\nF 60 3 20\nF 60 5 20\nB 60 5 20\nB 60 10 20\nB 60 2 20\nF 60 2 20\nB 60 3 20\nB 60 11 20\nB 60 9 20\nB 60 11 20\nF 60 9 20\nF 60 6 20\nF 60 10 20\nB 60 6 20\nF 60 8 20\nF 60 6 20\nB 60 6 20\nB 60 6 20\nB 60 2 20\nF 60 2 20\nF 60 7 20\nF 60 8 20\nB 60 7 20\nB 60 8 20\nB 60 11 20\nB 60 7 20\nB 60 1 20\nB 60 3 20\nF 60 3 20\nF 60 7 20\nB 60 7 20\nB 60 9 20\nB 60 11 20\nB 60 12 20\nB 60 7 20\nB 60 2 20\nB 60 3 20\nF 60 3 20\nB 60 3 20\nB 60 3 20\nF 60 3 20\nB 60 3 20\nB 60 2 20\nB 60 4 20\nB 60 11 20\nF 60 11 20\nB 60 10 20\nB 60 12 20\nF 60 9 20\nB 60 6 20\nB 60 7 20\nB 60 10 20\nF 60 9 20\nF 60 8 20\nB 60 8 20\nB 60 6 20\nF 60 6 20\nB 60 10 20\nF 60 8 20\nB 60 9 20\nB 60 7 20\nF 60 7 20\nB 60 7 20\nF 60 6 20\nF 60 3 20\nF 60 2 20\nB 60 2 20\nB 60 6 20\nF 60 10 20\nB 60 6 20\nF 60 6 20\nF 60 5 20\nF 60 4 20\nB 60 4 20\nB 60 5 20\nB 60 6 20\nB 60 1 20\nF 60 1 20\nF 60 2 20\nB 60 2 20\nB 60 3 20\nB 60 3 20\nB 60 1 20\nB 60 2 20\nF 60 2 20\nF 60 7 20\nB 60 7 20\nB 60 9 20\nB 60 11 20\nB 60 13 20\nB 60 12 20\nB 60 10 20\nB 60 7 20\nB 60 11 20\nB 60 14 20\nB 60 2 20\nB 60 6 20\nB 60 9 20\nB 60 12 20\nF 60 9 20\nB 60 12 20\nB 60 8 20\nB 60 1 20\nB 60 9 20\nB 60 10 20\nB 60 11 20\nB 60 7 20\nB 60 13 20\nB 60 6 20\nB 60 5 20\nB 60 4 20\nB 60 3 20\nB 60 2 20\nF 60 2 20\nB 60 2 20\nB 60 3 20\nB 60 6 20\nB 60 10 20\nB 60 11 20\nB 60 4 20\nB 60 9 20\nB 60 12 20\nB 60 7 20\nB 60 8 20\nB 60 5 20\nB 60 2 20\nB 60 1 20\nB 60 9 20\nB 60 6 20\nB 60 3 20\nB 60 2 20\nB 60 13 20\nB 60 7 20\nB 60 5 20\nB 60 12 20\nB 60 8 20\nB 60 9 20\nB 60 11 20\nB 60 10 20\nB 60 6 20\nB 60 3 20\nB 60 4 20\nB 60 2 20\nB 60 12 20\nB 60 6 20\nB 60 8 20\nB 60 11 20\nB 60 9 20\nB 60 6 20\nB 60 1 20\nB 60 7 20\nB 60 10 20\nB 60 13 20\nF 60 2 20\nB 60 5 20\nB 60 5 20\nB 60 9 20\nB 60 7 20\nB 60 3 20\nB 60 11 20\nB 60 2 20\nF 60 9 20\nF 60 10 20\nB 60 4 20\nB 60 2 20\nB 60 6 20\nB 60 8 20\nB 60 10 20\nB 60 12 20\nB 60 9 20\nB 60 11 20\nB 60 9 20\nB 60 7 20\nB 60 4 20\nB 60 1 20\nB 60 7 20\nB 60 6 20\nB 60 5 20\nB 60 3 20\nB 60 2 20\nF 60 2 20\nF 60 5 20\nB 60 6 20\nB 60 8 20\nB 60 3 20\nB 60 9 20\nB 60 10 20\nB 60 11 20\nB 60 6 20\nB 60 7 20\nB 60 12 20\nB 60 9 20\nB 60 7 20\nB 60 11 20\nB 60 6 20\nB 60 5 20\nB 60 4 20\nB 60 3 20\nB 60 1 20\nB 60 2 20\nB 60 8 20\nB 60 9 20\nB 60 11 20\nB 60 12 20\nB 60 10 20\nB 60 7 20\nB 60 8 20\nB 60 5 20\nB 60 2 20\nF 60 2 20\nB 60 2 20\nB 60 3 20\nB 60 3 20\nB 60 6 20\nB 60 4 20\nB 60 5 20\nB 60 2 20\nF 60 3 20\nB 60 3 20\nB 60 4 20\nB 60 6 20\nB 60 9 20\nB 60 10 20\nB 60 11 20\nB 60 7 20\nB 60 12 20\nB 60 8 20\nB 60 6 20\nB 60 5 20\nB 60 3 20\nB 60 1 20\nB 60 4 20\nB 60 2 20\nB 60 6 20\nB 60 9 20\nB 60 11 20\nB 60 13 20\nB 60 12 20\nB 60 8 20\nB 60 9 20\nB 60 10 20\nB 60 6 20\nB 60 7 20\nB 60 5 20\nB 60 4 20\nB 60 3 20\nB 60 1 20\nB 60 2 20\nB 60 7 20\nB 60 9 20\nB 60 11 20\nB 60 13 20\nB 60 6 20\nB 60 8 20\nB 60 10 20\nB 60 11 20\nB 60 12 20\nB 60 6 20\nB 60 5 20\nB 60 4 20\nB 60 2 20\nB 60 1 20\nB 60 9 20\nB 60 7 20\nB 60 8 20\nB 60 6 20\nB 60 3 20\nB 60 5 20\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nF 60 13 20\\n') == '14 20'\nassert solution('1\\nB 60 13 20\\n') == '11 23'\nassert solution('2\\nB 60 13 20\\n') == '11 23'\n'''"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"F 60 13 20\\n\") == \"14 20\"\nassert solution(\"B 60 13 20\\n\") == \"13 20\"\nassert solution(\"F 60 -13 20\\n\") == \"13 20\"\nassert solution(\"B 60 -13 20\\n\") == \"20 13\"\nassert solution(\"F 60 13 -20\\n\") == \"13 20\"\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''F 60 13 20\nB''') == '14 20'''\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''F 60 13 20''') == '14 20'\nassert solution('''B 60 13 20''') == '13 20'\n''')\n"
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nF 60 13 20\nB 60 -7 13 -20\nF 60 -7 13 20\n''') == '14 20'\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\n\nassert solution(\"SEP 31\") == \"nope\"\n\nassert solution(\"JAN 31\") == \"yup\"\n\nassert solution(\"APR 31\") == \"nope\"\n\nassert solution(\"MAY 31\") == \"yup\""
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\nassert solution('FEB 12') == 'nope'\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 1\") == \"yup\"\nassert solution(\"JAN 1\") == \"yup\""
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 15\") == \"nope\"\nassert solution(\"DEC 12\") == \"nope\"\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'yup'\nassert solution('OCT 31') == 'yup'\nassert solution('JAN 1') == 'nope'\nassert solution('FEB 1') == 'yup'\nassert solution('JUN 1') == 'yup'\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"SEP 9\") == \"nope\"\n\n'''\n\nimport unittest\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"./input_test/test1.in\") == \"yup\"\nassert solution(\"./input_test/test2.in\") == \"nope\"\nprint(\"The solution is correct!\")\n\n'''\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\nassert solution('JAN 9') == 'yup'\nassert solution('FEB 10') == 'nope'\nassert solution('JAN 1') == 'nope'\n"
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'nope'\nassert solution('10 FEB 20') == 'yup'\nassert solution('FEB 10') == 'nope'\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\\n\") == \"honi\\noker\\nnera\\nirak\\n\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '#.#.#.#.'\nassert solution('1 2 3 4') == '#.honi.#.'\nassert solution('5 5') == '#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak#irak"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '#.#.#.#.\\n.honi#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.'"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 2 2 2\") == \"#.#.#.#\\n#.honi#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#.\\n#.#.#.#.\\n\"\nassert solution(\"4 4\\n2 2 2 2\") == \"#.#.#.#.\\n.#.honi#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#.\\n#.#.#.#.\\n\"\nassert solution(\"5 5\\n2 2 2 2\") == \"#.#.#.#.\\n.#.honi#.\\n#.nera#.\\n#.irak#.\\n#.nera#.\\n#.#.#.#.\\n#.#.#.#.\\n\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 2\") == \"\\n##\\n##\\n##\\n##\\n\"\nassert solution(\"4 4\") == \"\\n####\\n####\\n####\\n####\\n\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\nhi\ner\nni\nro\ner\n''') == '#.#.#.#.\\n.honi#.\\n#.er.#.\\n.nera#.\\n.irak#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.\\n'''\nassert solution('''\n10 10\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nomg\nom"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n#honi#honi#honi#honi\\n###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n#nera#nera#nera#nera\\n###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n#irak#irak#irak#irak\\n###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n###.###.###.###\\n#honi#honi#honi#honi\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 1\") == \"2.1\"\nassert solution(\"1 2\\n1 2\") == \"1.2\"\nassert solution(\"4 4\\n2 2 2 2\") == \"2.2\"\nassert solution(\"4 4\\n2 2 2 2\\n1 1\\n1 1\\n1 1\") == \"1.1\"\nassert solution(\"4 4\\n2 2 2 2\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1.1\"\n"
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 2 2') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.##'"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"White: a1,q1,b1,c1,d1,e1,f1,g1,h1,i1,j1,k1,l1,m1,n1,o1,p1,q1,r1,s1,t1,u1,v1,w1,x1,y1,z1,aa1,ab1,ac1,ad1,ae1,af1,ag1,ah1,ai1,aj1,ak1,al1,am1,an1,ao1,ap1,aq1,ar1,as1,at1,au1,av1,aw1,ax1,ay1,az1,ba1,bb1,bc1,bd1,be1,bf1,bg1,bh1,bi1,bj1,bk1,bl1,bm1,bn1,bo1,bp1,bq1,br1,bs1,bt1,bu1,bv1,bw1,bx1,by1,bz1,ca1,cb1,cc1,cd1,ce1,cf1,cg1,ch1,ci1,cj1,ck1,cl1,cm1,cn1,co1,cp1,cq1,cr1,cs1,ct1,cu1,cv1,cw1,cx1,cy1,cz1,da1,db1,dc1,dd1,de1,df1,dg1,dh1,di1,dj1,dk1,dl1,dm1,dn1,do1,dp1,dq1,dr1,ds1,dt1,du1,dv1,dw1,dx1,dy1,dz1,ea1,eb1,ec1,ed1,ee1,ef1,eg1,eh1,ei1,ej1,ek1,el1,em1,en1,ao1,ap1,aq1,ar1,as1,at1,au1,av1,aw1,ax1,ay1,az1,ba1,bb1,bc1,bd1,be1,bf1,bg1,bh1,bi1,bj1,bk1,bl1,bm1,bn1,bo1,bp1,bq1,br1,bs1,bt1,bu1,bv1,bw1,bx1,by1,bz1,ca1,cb1,cc1,cd1,ce1,cf1,cg1,ch1,ci1,cj1,ck1,cl1,cm1,cn1,co1,cp1,cq1,cr1,cs1,ct1,cu1,cv1,cw1,cx1,cy1,cz1,da1,db1,dc1,dd1,de1,df1,dg1,dh1,di1,dj1,dk1,dl1,dm1,dn1,do1,dp1,dq1,dr1,ds1,dt1,du1,dv1,dw1,dx1,dy1,dz1,ea1,eb1,ec1,ed1,ee1,ef1,eg1,eh1,ei1,ej1,ek1,el1,em1,en1,ao1,ap1,aq1,ar1,as1,at1,au1,av1,aw1,ax1,ay1,az1,ba1,bb1,bc1,bd1,be1,bf1,bg1,bh1,bi1,bj1,bk1,bl1,bm1,bn1,bo1,bp1,bq1,br1,bs1,bt1,bu1,bv1,bw1,bx1,by1,bz1,ca1,cb1,cc1,cd1,ce1,cf1,cg1,ch1,ci1,cj1,ck1,cl1,cm1,cn1,co1,cp1,cq1,cr1,cs1,ct1,cu1,cv1,cw1,cx1,cy1,cz1,da1,db1,dc1,dd1,de1,df1,dg1,dh1,di1,dj1,dk1,dl1,dm1,dn1,do1,dp1,dq1,dr1,ds1,dt1,du1,dv1,dw1,dx1,dy1,dz1,ea1,eb1,ec1,ed1,ee1,ef1,eg1,eh1,ai1,aj1,ak1,al1,am1,an1,ao1,ap1,aq1,ar1,as1,at1,au1,av1,aw1,ax1,ay1,az1,ba1,bb1,bc1,bd1,be1,bf1,bg1,bh1,bi1,bj1,bk1,bl1,bm1,bn1,bo1,bp1,bq1,br1,bs1,"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Kf3,Qd3,Ra3,Rh3,Bc3,Bf3,Nb3,a4,c4,d4,f4,g4,h4,a5,e5\") == \"White: Kf3,Qd3,Ra3,Rh3,Bc3,Bf3,Nb3,a4,c4,d4,f4,g4,h4,a5,e5\"\nassert solution(\"Black: Kb6,Qd6,Ra6,Rh6,Bc6,Ng6,Nc5,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Kb6,Qd6,Ra6,Rh6,Bc6,Ng6,Nc5,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+' == solution(stdin)\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+' == solution(stdin)\n\nprint(solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+')\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"White:Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack:Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\""
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n\"\"\") == \"\"\"+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\"\"\": stdout.getvalue(), \"\""
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\", \"Should be White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\", \"Should be Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+'\nprint(\"All test cases passed\")"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: qd1,kd1,ra1,nh1,bc1,bf1,nb1,qk1,qb1,qn1,qc1,qf1,qg1,qh1,qa2,qe4,qh2,qp3,qg4,qb4,qn5,qc6,qf6,qg6,qh6,qk7,qb7,qn7,qc7,qf7,qh7,qp8,qg8,qh8\\nBlack: pg8,nh8,bc8,ng8,nc6,a7,b7,c7,d7,e7,f7,h7,h6,hp8,hb8,hg8,hk8,hb8,hn8,hc8,hf8,hg8,hk8,hp8,hg8,hk8,hp8,hg8,hk8,hp8,hg8,hk8,hp8\\n\"\n"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Nc6:qd8,Ke1,Ng8,Ke8,Qd8,Rh8,Nb1,Bf8,Bc8,Bb8,Nr8,Qd1,Rb8,Nb1,Qg8,Qf8,Rg8,Qf1,Nf8,Nc6,Qg1,Nf8,Qd1,Nd8,Nf8,Qf8,Nc6,Qg1,Nf8,Qd1,Nd8,Qg8,Qf8,Rb8,Nr8,Qg8,Qf8,Rb8,Qf8,Rb8,Qf8,Rg8,Qf8,Rb8,Qf8,Rb8,Qf8,Rg8,Qf8,Rg8,Qf8,Qf8,Qf8,Qf8,Rg8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Qf8,Rb8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,Nf8,Qg8,Qf8,Qd1,N"
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(White) == Black, \"No, it isn't the same.\"\nassert solution(White) == White, \"Looks like we got the answer wrong.\"\nassert solution(Black) == White, \"Looks like we got the answer wrong.\"\nassert solution(Black) == Black, \"Looks like we got the answer wrong.\"\nassert solution(Black) == Black, \"Looks like we got the answer wrong.\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 50.000000') == 'Need more materials!'\n\nstdin = input()\nn, a = list(map(int, stdin.split()))\nprint('Diablo is happy!' if n == a*a else 'Need more materials!')\n\n\n\n------------"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.100000000 1.100000000') == 'Need more materials!'\n\"\"\"\nimport math\na, b = map(int, input().split())\nprint(\"Diablo is happy!\" if math.sqrt(a)**2 == b else \"Need more materials!\")\n\n\"\"\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"4.000000 3.000000\") == \"Need more materials!\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('100.000000 200.000000') == 'Need more materials!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1.000000 4.000000''') == 'Diablo is happy!'\nassert solution('''1.000000 10.000000''') == 'Need more materials!'\nassert solution('''1.000000 2.000000''') == 'Need more materials!'\nassert solution('''1.000000 50.000000''') == 'Need more materials!'\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Need more materials!\"\nprint(solution('''2.0 3.0\n0.0 0.0\n1.0 1.0\n1.0 1.0'''))\nprint(solution('''0.1 3.0\n0.0 0.0\n1.0 1.0\n0.9 0.9'''))"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 1.000000') == 'Need more materials!'\nassert solution('0.000000 2.000000') == 'Need more materials!'\nassert solution('2.000000 1.000000') == 'Need more materials!'\nassert solution('3.000000 1.000000') == 'Need more materials!'"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"2.000000 4.000000\") == \"Need more materials!\"\n\n'''\n"
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"0.100000 9.000000\") == \"Need more materials!\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"20 20 100 50 1\") == \"use the stairs\"\nassert solution(\"10 1 100 100 1\") == \"use the stairs\"\n\"\"\"\n\ntest = \"\"\"10 1 10 2 1\n20 20 100 50 1\n\"\"\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1 3 2\") == \"use the stairs\"\nassert solution(\"4 1 3 1\") == \"8\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 1 10 2 1\n''') == 'use the stairs'\n\nassert solution('''5 1 8 5\n''') == '1 3 5'\n\nassert solution('''10 1 10 2 1\n''') == 'use the stairs'"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('10 50 100 2 1') == 'use the stairs'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 2 2') == 'use the stairs'\nassert solution('1 1 1 1') == 'use the stairs'\nassert solution('2 4 5 3') == '4'\n\nWrite your code below and put the answer below this line.\n\n'''"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 1 10 2 5\") == \"use the stairs\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"10 0 1 2 1\") == \"use the stairs\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('20 100 200 3 1') == 'use the stairs'\nassert solution('10 100 1 2 5') == '4'\nassert solution('10 100 1 2 3') == 'use the stairs'\nassert solution('10 100 1 2 4') == 'use the stairs'\n\"\"\"\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 9 1') == 'use the stairs'\nassert solution('5 2 10 2') == '6'\n"
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 10 2\\n') == '6'\nassert solution('10 1 10 2 1\\n') == '7'\nassert solution('10 5 1 10 2\\n') == '7'\nassert solution('10 1 10 2 1\\n') == 'use the stairs'\n'''\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n500\n120\n75''') == '128.8'\nassert solution('''10\n2\n5\n4\n3''') == '58.6'"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('4\\n10\\n15\\n20\\n25\\n') == '89.06666666666666'"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"100\") == \"89.0\"\nassert solution(\"1000\") == \"89.0\"\nassert solution(\"9999\") == \"90.0\"\nassert solution(\"999999\") == \"89.9\"\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n500\n120\n75\n''') == '128.8'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('4\\n100\\n50\\n50\\n') == '97.5'\nassert solution('5\\n100\\n50\\n50\\n50\\n') == '97.5'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n500\n120\n75\n''') == \"128.8\", \"First\"\nassert solution('''\n3\n500\n120\n75\n''') == \"89.06666666666666\", \"Second\"\n'''\n------BONUS------\nIt is not necessarily the case that every student has exactly one transfer. In fact, students with no transfer tend to have a much worse average group score than students with a single transfer.\n\nFor example, if your students\u2019 scores are $s_0 = 500$, $s_1 = 120$, $s_2 = 75$, $s_{n-1} = 60$, and $s_{n-2} = 40$, then the average group score if $s_ i = \\frac{1}{4} \\left( 500 + 120 + 75 + 60 + 40 \\right) = \\frac{500+120+75+60+40}{5} = 128.8$, and the group score of your university if $s_ i = \\frac{1}{4} \\left( 500 + 120 + 75 + 60 \\right) = \\frac{500+120+75+60}{5} = 128.8$.\n\n----Hint----\nWe could solve this problem in many ways. We could first sort the students\u2019 scores, take the group score of all non-transfer students, and then take the group score of the transfer student. The average group score is then simply the average of the group scores of all students. But if we make the sort and take the group score of the transfer student, we will get the correct average group score.\n'''\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n500\\n120\\n75\\n') == '128.8'\nassert solution('7\\n500\\n120\\n75\\n1000\\n10000\\n10000\\n') == '89.0'\nassert solution('4\\n100\\n500\\n500\\n') == '1.0'\nassert solution('3\\n100\\n500\\n') == '0.6666666666666666'\nassert solution('5\\n500\\n500\\n500\\n500\\n') == '0.3333333333333333'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '128.8'\nassert solution('6') == '94.33333333333333'\nassert solution('10') == '100.0'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '128.8'\nassert solution('8') == '89.06666666666666'\nassert solution('15') == '190.33333333333334'\nassert solution('20') == '190.0'\nassert solution('38') == '157.0'\n"
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"128.8\"\nassert solution(\"2\") == \"89.06666666666666\"\nassert solution(\"1\") == \"89.0\"\nassert solution(\"123\") == \"89.0\"\nassert solution(\"1234\") == \"89.0\"\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 45 65 84 346') == '4'"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4'\nassert solution('5\\n1 45 65 84 346\\n1 45 65 84 346\\n1 45 65 84 346\\n1 45 65 84 346\\n1 45 65 84 346') == '4'\n\n## Note: Please don't use any additional package except what has been declared in the script.\n## Feel free to add any helper function as needed.\n\n\n\n\n## Clean Code:"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"5\\n1 2 1 1 1\") == \"1\"\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 45 65 84 346\") == \"4\""
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nassert solution('''1\n0\n''') == '0'\nassert solution('''5\n1\n3\n4\n5\n2\n1\n5\n0\n''') == '1'\nprint('All tests passed!')\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 45 65 84 346') == '4'\nassert solution('4 1 5 4 3') == '2'\nassert solution('3 1 3 2 3 2 4 3 4 2 5 3') == '1'\nassert solution('5 1 5 4 3 2 1 3 2 2 3 2 4') == '2'\nassert solution('4 5 1 3 2 1 3 2 2 2 2 2 3 3 4 4 5') == '2'\n"
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == '1'\nassert solution('50 10') == '0'\nassert solution('50 5') == '1'\nassert solution('100 5') == '1'\nassert solution('10 20') == '1'\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3\\nP.G') == '0'\nassert solution('3 3\\nP.G.T.G') == '1'\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n#######\\n#P.GTG#\\n#######\") == \"1\"\nassert solution(\"5 5\\n#######\\n#T#G#G#\\n########\\n#T#T#G#G#\\n#######\") == \"0\""
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n\n'''"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"7 5\") == \"3\"\nassert solution(\"7 5\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 4\n#######\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == \"1\"\nassert solution('6 5\\n#######\\n#P.GTT#\\n#..TGG#\\n#######') == \"0\"\nassert solution('7 6\\n#######\\n#P.GTT#\\n#..TGG#\\n#######') == \"0\"\nassert solution('5 7\\n#######\\n#P.GTT#\\n#..TGG#\\n#######') == \"1\"\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n#.###') == '1'\nassert solution('3\\n2\\n#.###') == '2'\nassert solution('10\\n10\\n.#..#') == '7'\nassert solution('20\\n10\\n.###.G') == '0'\nassert solution('20\\n10\\n.####') == '1'\n"
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 4\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13 50') == '5'\nassert solution('5 4') == '2'\nassert solution('10 0') == '1'\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$''') == '5'\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\nassert solution('10 20\\n_______$_____$_____\\n___$____$____$____\\n__$_____$_____$_____\\n_$_____$_____$_____\\n$_____$_____$_____\\n$_____$_____$_____\\n$_____$_____$_____\\n$_____$_____$_____\\n$_____$_____$_____') == '5'"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"5\""
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 50') == '5'\nassert solution('1 1') == '1'"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 10\n$$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$$$$$$$$$$\n$$$"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13 50') == '5'"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13 50') == '5'\nassert solution('10 10') == '1'\nassert solution('13') == '0'\n\"\"\"\n"
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n10 20\n$$$$$$$$$$$\n$_______$$$\n$$_______$$\n$$$_______$$\n$$$_______$$\n$$$_______$$\n$$$_______$$\n$$$_______$$\n$$$_______$$\n$$$_______$$\n$$$_______$$\n$$$$$$$$$$$\n''') == '10'\nassert solution(\n'''\n9 10\n$$$$$$$$$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$______$$$\n$$$$$$$$$$$\n''') == '10'\nassert solution(\n'''\n9 10\n$$$$$$$$$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$$$$$$$$\n''') == '9'\nassert solution(\n'''\n9 10\n$$$$$$$$$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$____$$$\n$$$$$$$$$$\n''') == '10'\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"I have a dream of a happy birthday.\") == \"Iyay ancay efay atinlay yay oday\"\nassert solution(\"I speak pig latin.\") == \"Iyay antcay eakspay igpay atinlay\""
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Wrong!\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''I cant speak pig latin\n                    i cant speak pig latin''') == 'Icyay otay atinlay otay cyay tay ixay eyay ivecay acay ivecay ayatay ivecay otay caytay ixay eyay ivecay acay ivecay oyay atinlay oyay aycay atinlay atinlay otay oyay tay otay otay atinlay atinlay otay otay tay otay otay otay otay atinlay otay otay otay atinlay otay otay otay otay otay otay atinlay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i can speak any language\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i can speak only english\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i can speak and also darwin\") == \"iyay antcay eakspay igpay atinlay\"\n\n'''\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(__file__))"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"i can speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i wonder what can you do\") == \"iyay andwonder what can you do\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n"
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"I am the very model of a modern major general.\") == \"Iam the very madvlpr of a modern general\""
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nq\\npotatoes') == 'nymble'\nassert solution('3\\nnymble\\npancakes\\npea soup') == 'pea soup'\nassert solution('4\\nnymble\\nnymble\\npancakes\\npea soup') == 'Anywhere is fine I guess'\nassert solution('5\\nnymble\\nnymble\\nnymble\\npancakes\\npea soup\\npea soup') == 'Anywhere is fine I guess'\nassert solution('6\\nnymble\\nnymble\\nnymble\\npancakes\\npea soup\\npunsch') == 'Anywhere is fine I guess'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n\nassert solution('''\n3\nnymble\npancakes\npea soup\n''') == 'Anywhere is fine I guess'\n'''\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''3\n3\npea soup\nsalad\npancakes\n''') == 'Anywhere is fine I guess'\nassert solution('''1\n1\npea soup\nsalad\n''') == 'Anywhere is fine I guess'\n''')"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['2', 'q', 'potatoes','salad', '3', 'nymble', 'pancakes', 'pea soup', 'punsch'])) == 'nymble'\nassert solution('\\n'.join(['1', 'q', 'potatoes','salad', '3', 'anywhere', 'pancakes', 'pea soup', 'punsch'])) == 'anywhere'"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n3\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n4\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n5\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n6\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == \"nymble\"\nassert solution('''\n4\n3\napple\ncocoa\nchicken\n''') == \"apple\"\n'''\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n2\nq\npotatoes\nsalad\n\"\"\") == \"anywhere is fine I guess\"\nassert solution(\"\"\"\n1\n1\nnymble\npancakes\n\"\"\") == \"nymble\"\nassert solution(\"\"\"\n2\n3\nq\npotatoes\nsalad\n\"\"\") == \"anywhere is fine I guess\"\nassert solution(\"\"\"\n2\n2\nnymble\npancakes\n\"\"\") == \"nymble\"\nassert solution(\"\"\"\n2\n2\nq\npotatoes\nsalad\n\"\"\") == \"anywhere is fine I guess\"\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n3\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n5\nsalad\nsalad\nsalad\nsalad\nsalad\n''') == 'Anywhere is fine I guess'\nassert solution('''\n4\nsalad\npotatoes\npotatoes\n''') == 'Anywhere is fine I guess'\nassert solution('''\n3\npotatoes\nsalad\n''') == 'Anywhere is fine I guess'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nq\npotatoes\nsalad\n1\npunsch\n2\npancakes\n3\nnymble\n4\npea soup\n5\npancakes\n6\npotatoes\n7\nnymble\n8\npancakes\n9\nsalad\n10\npea soup\n''') == 'pancakes'\n\nassert solution('''\n1\nq\npotatoes\nsalad\n1\npunsch\n2\npancakes\n3\nnymble\n4\npea soup\n5\npancakes\n6\npotatoes\n7\nnymble\n8\npancakes\n9\nsalad\n10\npea soup\n''') == 'anywhere is fine I guess'\n\nassert solution('''\n3\nq\npotatoes\nsalad\n1\npunsch\n2\npancakes\n3\nnymble\n4\npea soup\n5\npancakes\n6\npotatoes\n7\nnymble\n8\npancakes\n9\nsalad\n10\npea soup\n''') == 'anywhere is fine I guess'\n"
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\npea soup\nsalad\npancakes\n''') == 'nymble', 'Should be nymble'\n\nassert solution('''\n2\n3\npunsch\nsalad\npancakes\n''') == 'Anywhere is fine I guess', 'Should be Anywhere is fine I guess'\n'''\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"5 0 10\") == \"2\"\nassert solution(\"5 0 12\") == \"1\"\nassert solution(\"5 0 9\") == \"1\"\nassert solution(\"0 2 1\") == \"1\"\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\n\nstdin = \"\"\"\n5 0 15\n\"\"\""
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    5 0 15\n''') == '3'\nassert solution('''\n    3 0 4\n''') == '0'\nassert solution('''\n    4 0 5\n''') == '1'\nassert solution('''\n    1 0 2\n''') == '0'\nassert solution('''\n    5 0 2\n''') == '1'\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 0 15\"\n) == \"3\"\nassert solution(\n    \"5 0 100\"\n) == \"6\"\n\n\"\"\"\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 0 15\") == \"3\"\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"1\"\nassert solution(\"2 5 0\") == \"2\"\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 0 15\n''') == '3'\nassert solution('''5 0 10\n''') == '2'\nassert solution('''5 0 15\n''') == '1'\nassert solution('''5 0 10\n''') == '0'\nassert solution('''5 0 10\n''') == '0'\n"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 0 15') == '3'"
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 0 15') == '3'\nassert solution('1 0 15') == '4'\nassert solution('100 0 50') == '101'\nassert solution('1 0 50') == '99'\nassert solution('100 0 50') == '100'\n\"\"\"\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"11 15\n    9\n    15\n    12\"\"\") == \"19\"\n\nassert solution(\"\"\"11 20\n    9\n    15\n    12\"\"\") == \"18\"\n\nassert solution(\"\"\"13 10\n    5\n    12\n    9\"\"\") == \"13\"\n\nassert solution(\"\"\"1 1\n    1\n    1\"\"\") == \"1\"\n\nassert solution(\"\"\"1 10\n    2\n    7\n    4\"\"\") == \"9\"\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdin.readline()[:-1]\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 15') == '19'"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    5 4\n    5 2\n    3 4\n    7 8\n''') == '19'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8') == '7'\nassert solution('15 9') == '14'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 15') == '19'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11 15\nSample Input:\n10 20\nSample Output:\n15\n''') == '15'\n\nassert solution('''\n1 2\nSample Input:\n10 20\nSample Output:\n5\n''') == '5'\n"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 15') == '19', solution('11 15')"
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"11 1\") == \"10\""
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 15') == '19'\nprint('All test cases passed!')\n\n\"\"\""
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('North West South') == 'Yes'\nassert solution('North South East') == 'Yes'\nassert solution('North East South') == 'Yes'\nassert solution('North West') == 'Yes'\nassert solution('North East') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('North South East') == 'Yes'\nassert solution('East South North') == 'No'\nassert solution('West South East') == 'Yes'\nassert solution('East North South') == 'No'\nassert solution('North East South') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('North') == 'Yes'\nassert solution('North South East') == 'Yes'\nassert solution('North East South') == 'No'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East West') == 'No'\nassert solution('North East South') == 'No'\nassert solution('North East South') == 'No'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''North South South East\nNorth South East\nNorth East''') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"North West East\") == \"Yes\"\nassert solution(\"North South West\") == \"No\"\nassert solution(\"East West South\") == \"Yes\"\nassert solution(\"North East South\") == \"No\"\nassert solution(\"West East North\") == \"Yes\"\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nSouth West East\n''') == 'Yes'\nassert solution('''\nSouth North East\n''') == 'Yes'\nassert solution('''\nSouth South East\n''') == 'No'\nassert solution('''\nNorth East North East\n''') == 'Yes'\nassert solution('''\nNorth South East\n''') == 'No'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East South') == 'No'\nassert solution('North South East') == 'Yes'\nassert solution('North East South') == 'No'\nassert solution('North South South') == 'Yes'\n"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'Yes'\nassert solution('South West East') == 'Yes'"
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nNorth\nEast\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\nNorth\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\n\nassert solution('''\n6 7\nrhytuydfnopxuw\npapaufnrhytuydfnopxuw\n''') == 'papaufnrhytuydfnopxuw'\n\nassert solution('''\n6 6\nrhytuydfnopxuw\npapaufnrhytuydfnopxuw\n''') == 'papaufnrhytuydfnopxuw'\n\nassert solution('''\n6 10\nrhytuydfnopxuw\npapaufnrhytuydfnopxuw\n''') == 'papaufnrhytuydfnopxuw'\n\nassert solution('''\n6 13\nrhytuydfnopxuw\npapaufnrhytuydfnopxuw\n''') == 'papaufnrhytuydfnopxuw'"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n'+'q w e r t y u i o p a s d f g h j k l m n'.lower()) == 'bmbbvsrvjxqjsjyvjmnkqnmjds'.lower()\nassert solution('5 8\\n'+'h yg sfkf sdkfkf bgjhbsjfhgjhgjkhyjgjkfhghbhhgjhg'.lower()) == 'fwgjgbkvhbzsjgkvhgvjhgjhgjgjhgj'.lower()\nassert solution('5 10\\n'+'vmybqrpwvsytqxkzqdzcqzxzsxzqxqdvcsnkzqxqxvqrzcxzvxqrvqr'.lower()) == 'pxqoicrsr'.lower()"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 16\npirpumsemoystoal\nagain\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'a'\nassert solution('2\\n') == 'b'\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal''') == \"marywasnosyagain\"\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() =='marywasnosyagain'\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\nassert solution('''\n3 6\naab\nbcd\n''') == 'abcd'\nassert solution('''\n3 3\nhe\nbe\n''') == 'he'\nassert solution('''\n10 10\na\nacd\nbcd\n''') == 'acdbcd'\n'''"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n10\nhello\n\"\"\") == \"hello\"\n\nassert solution(r\"\"\"\n15\nmars\n\"\"\") == \"mars\""
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') =='m'\nassert solution('2') == 'a'\nassert solution('3') == 'p'\nassert solution('4') =='m'\nassert solution('5') == 'a'\n"
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"abc\"\nassert solution(\"5\") == \"wxyz\"\nassert solution(\"5 2\") == \"ghi\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"Even\"\nassert solution('3') == \"Odd\"\nassert solution('1') == \"Either\"\n\"\"\"\n\nimport sys\nimport re\n\nsys.setrecursionlimit(10 ** 6)\n\nn = int(input())"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Even'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Either'\n\"\"\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Odd'\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Either\"\nassert solution(\"100\") == \"Even\"\nassert solution(\"200\") == \"Odd\"\nassert solution(\"20000\") == \"Even\"\nassert solution(\"10000\") == \"Odd\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Even'\n\n\"\"\"\nn = int(input())\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Even\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Either\"\nassert solution(\"4\") == \"Even\"\nassert solution(\"5\") == \"Odd\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Even'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Either'\nassert solution('5') == 'Odd'\nassert solution('6') == 'Odd'"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == \"Odd\"\nassert solution('2') == \"Even\"\nassert solution('15') == \"Odd\"\nassert solution('1') == \"Even\"\nassert solution('11') == \"Either\"\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\nassert solution('4') == 'Either'\nassert solution('5') == 'Either'\n"
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('2') == 'Either'\nassert solution('5') == 'Even'\nassert solution('10') == 'Odd'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('314') == '3'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1\\n5926\\n5\\n35897\") == \"3\\n1\\n4\\n1\""
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('314') == '3'\nassert solution('5926') == '4'\nassert solution('35897') == '5'\n\nstdin = \"\"\"\n1\n\"\"\"\n\nstdout = \"\"\"\n1\n\"\"\"\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5\\n'\nassert solution('1\\n10') == '1\\n'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897\\n') == '3\\n1\\n4\\n1\\n5\\n'\nassert solution('100\\n1\\n123456789\\n1\\n12345\\n') == '4\\n1\\n4\\n1\\n4\\n'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2') == '2'\nassert solution('5\\n78') == '3'\nassert solution('10\\n78') == '4'\nassert solution('100\\n78') == '4'\nassert solution('1000\\n78') == '5'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '4'\nassert solution('101') == '3'\nassert solution('10000') == '9'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('100') == '3'\nassert solution('2') == '0'\nassert solution('5') == '1'\nassert solution('100') == '3'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\n1\n31\n3\n1\n''') == '1'\nassert solution('''\n1\n315\n4\n1\n''') == '2'\nassert solution('''\n1\n6\n4\n1\n''') == '2'\nassert solution('''\n5\n-314\n1\n5926\n5\n35897\n''') == '4'\n"
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n314\\n1\\n5926\\n5\\n35897\\n\") == \"3\\n1\\n4\\n1\\n5\\n\"\nassert solution(\"3\\n1\\n4\\n1\\n5\\n\") == \"3\\n1\\n4\\n1\\n5\\n\"\n\n\"\"\""
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nt\nt f''') == 'no'\nassert solution('''6\na\na y\nb\na y\nb y\nb y''') == 'yes'\nassert solution('''9\na\na a\na r\na t\na y\nb\nb y\nb y\nb y''') == 'yes'\nassert solution('''15\na\na b\na c\na d\na e\na f\na g\na h\na i\na j\na k\na l\na m\na n\na o\na p\na q\na r\na s\na t\na u\na v\na w\na x\na y\na z\nb\nb a\nb b\nb c\nb d\nb e\nb f\nb g\nb h\nb i\nb j\nb k\nb l\nb m\nb n\nb o\nb p\nb q\nb r\nb s\nb t\nb u\nb v\nb w\nb x\nb y\nb z\nc\nc a\nc b\nc c\nc d\nc e\nc f\nc g\nc h\nc i\nc j\nc k\nc l\nc m\nc n\nc o\nc p\nc q\nc r\nc s\nc t\nc u\nc v\nc w\nc x\nc y\nc z\nd\nd a\nd b\nd c\nd d\nd e\nd f\nd g\nd h\nd i\nd j\nd k\nd l\nd m\nd n\nd o\nd p\nd q\nd r\nd s\nd t\nd u\nd v\nd w\nd x\nd y\nd z\ne\ne a\ne b\ne c\ne d\ne e\ne f\ne g\ne h\ne i\ne j\ne k\ne l\ne m\ne n\ne o\ne p\ne q\ne r\ne s\ne t\ne u\ne v\ne w\ne x\ne y\ne z\nf\nf a\nf b\nf c\nf d\nf e\nf f\nf g\nf h\nf i\nf j\nf k\nf l\nf m\nf n\nf o\nf p\nf q\nf r\nf s\nf t\nf u\nf v\nf w\nf x\nf y\nf z\ng\ng a\ng b\ng c\ng d\ng e\ng f\ng g\ng h\ng i\ng j\ng k\ng l\ng m\ng n\ng o\ng p\ng q\ng r\ng s\ng t\ng u\ng v\ng w\ng x\ng y\ng z\nh\nh a\nh b\nh c\nh d\nh e\nh f\nh g\nh h\nh i\nh j\nh k\nh l\nh m\nh n\nh o\nh p\nh q\nh r\nh s\nh t\nh u\nh v\nh w\nh x\nh y\nh z\ni\ni a\ni b\ni c\ni d\ni e\ni f\ni g\ni h\ni i\ni j\ni k\ni l\ni m\ni n\ni o\ni p\ni q\ni r\ni s\ni t\ni u\ni v\ni w\ni x\ni y\ni z\nj\nj a\nj b\nj c\nj d\nj e\nj f\nj g\nj h\nj i\nj j\nj k\nj l\nj m\nj n\nj o\nj p\nj q\nj r\nj s\nj t\nj u\nj v\nj w\nj x\nj y\nj z\nk\nk a\nk b\nk c\nk d\nk e\nk f\nk g\nk h\nk i\nk j\nk k\nk l\nk m\nk n\nk o\nk p\nk q\nk r\nk s\nk t\nk u\nk v\nk w\nk x\nk y\nk z\nl\nl a\nl b\nl c\nl d\nl e\nl f\nl g\nl h\nl i\nl j\nl k\nl l\nl m\nl n\nl o\nl p\nl q\nl r\nl s\nl t\nl u\nl v\nl w\nl x\nl y\nl z\nm\nm a\nm b\nm c\nm d\nm e\nm f\nm g\nm h\nm i\nm j\nm k\nm l\nm m\nm n\nm o\nm p\nm q\nm r\nm s\nm t\nm u\nm v\nm w\nm x\nm y\nm z\nn\nn a\nn b\nn c\nn d\nn e\nn f\nn g\nn h\nn i\nn j\nn k\nn l\nn m\nn n\nn o\nn p\nn q\nn r\nn s\nn t\nn u\nn v\nn w\nn x\nn y\nn z\no\no a\no b\no c\no d\no e\no f\no g\no h\no i\no j\no k\no l\no m\no n\no p\no q\no r\no s\no t\no u\no v\no w\no x\no y\no z\np\np a\np b\np c\np d\np e\np f\np g\np h\np i\np j\np k\np l\np m\np n\np o"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3\\nc t\\ni r\\nk p\\no c\\nr o\\nt e\\nt f\\nu h\\nwe we\\ncan the\\nwork people\\nit of\\nthe\\nout the') == 'yes\\nno\\nno\\nyes\\nyes'\nassert solution('8 3\\nc t\\ni r\\nk p\\no c\\nt e\\nt f\\nu h\\nwe we\\ncan the\\nwork people\\nit of\\nthe\\nout the') == 'no\\nno\\nyes\\nyes'"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\\\n3 3\nb c\ne f\ng h\n''') == 'yes'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\\\n2\np p\nx x\n''') == 'yes'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 6\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n10 6\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n10 4\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n'''\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == \"yes\"\nassert solution(r\"\"\"\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n\"\"\") == \"no\"\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()\nprint(solution(__import__(\"sys\").stdin.read()))\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'no'\nassert solution('''5 3\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\nSample Output:\nyes\nno\nno\nyes\nno\nno\n"
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4\nc\ni\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\nassert solution('''\n3 5\nt\nw u\nl o\n''') == 'no'\nassert solution('''\n2 5\nu\nu\nt\nw u\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n''')\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\nassert solution('''\n10 10\ncarrots?\nbunnies\nbunnies?\nbunnies?\nbunnies?\nbunnies?\nbunnies?\nbunnies?\nbunnies?\nbunnies?\nbunnies?\nbunnies?\n''') == '81'\n'''\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\ncarrots?') == '1'\nassert solution('2 3\\ncarrots?\\nbunnies\\n') == '2'\nassert solution('3 1\\ncarrots?\\nbunnies?\\n') == '1'"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\ncarrots?\nbunnies\ncarrots?\ncarrots?\nbunnies\ncarrots?\ncarrots?\nbunnies\n''') == '1'\nassert solution('''\n2 4\ncarrots?\nbunnies?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\nbunnies?\nbunnies?\ncarrots?\nbunnies?\ncarrots?\nbunnies?\ncarrots?\nbunnies?\ncarrots?\nbunnies?\nbunnies?\ncarrots?\ncarrots?\nbunnies?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\nbunnies?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\nbunnies?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\nbunnies?\ncarrots?\ncarrots?\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 1\\nbunnies?') == '1'\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport os\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('carrots?\\nbunnies\\n') == '1'\nassert solution('carrots?\\ncarrots?\\n') == '2'\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\ncarrots?') == '1'\n\nassert solution('2\\ncarrots?\\nbunnies') == '1'\n\nassert solution('100\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies') == '1'\n\nassert solution('100\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies') == '1'\n\nassert solution('100\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies') == '1'"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\ncarrots?\\nbunnies\\n') == '1'\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\ncarrots') == '1'\nassert solution('2\\nbunnies') == '2'\nassert solution('3\\ncarrots?\\nbunnies') == '3'\nassert solution('4\\ncarrots?\\nbunnies') == '1'\n"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == '1'\nassert solution('3 1\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncarrots?\\ncar"
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\nassert solution('2 5\\nbunny-boy\\nbunny-girl\\nbunny-dick\\nbunny-er\\nbunny-bob\\nbunny-bunny\\ncarrots?') == '3'\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\") == \"White: Kd1,Kd2,Kd3,Kd4,Kd5,Kd6,Kd7,Kd8,Kd9,Ke1,Ke2,Ke3,Ke4,Ke5,Ke6,Ke7,Ke8\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|:::|.n.|:::|...|:::|.n.|:::|.n.|:::|\\n+---+---+---+---+---+---+---+---+\") == \"White: Qd1,Qd2,Qd3,Qd4,Qd5,Qd6,Qd7,Qd8,Qd9,Nf1,Nf2,Nf3,Nf4,Nf5,Nf6,Nf7,Nf8,Nf9\"\nassert solution(\"+---+---+---+---+---+---+---+---+\\n|:P:|.P.|:P.|.P.|:P.|.P.|:::|.P.|\\n+---+---+---+---+---+---+---+---+\") == \"White: Pd1,Pd2,Pd3,Pd4,Pd5,Pd6,Pd7,Pd8,Pd9,Pc1,Pc2,Pc3,Pc4,Pc5,Pc6,Pc7,Pc8,Pc9\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b3,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4,h4,a4,b4,c4,d4,e4,f4"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: K1,Q1,R1,B1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: K1,Q1,R1,B1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: K1,Q1,R1,B1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|...|:::|.n.|:::|...|:::|...|:::|.n.|\") == \"White: K1,Q1,R1,B1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|...|:::|.P.|\") == \"White: K1,Q1,R1,B1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == '''\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''':\n    print(\"Nice job, you solved it!\")\nelse:\n    print(\"Oops, something went wrong. Please try again.\")"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b3,f3,h3'\nassert solution('+---+---+---+---+---+---+---+---+') == 'Black: Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,a6,b5,c5,d5,e5,f5,g5,h5,a4,e4,b4,f4,h4'"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qd1,Qh1,Qc1,Rc1,Rf1,Rg1,Qc2,Qh2,Qc2,Kc2,Rh2,Bc2,Bf2,Nc2,Nf2,Ng2,Qb2,Rh2,Qb2,Kb2,Bc2,Bf2,Nc2,Nf2,Ng2,Qa2,Qa2,Ka2,Bc3,Bf3,Qc3,Qh3,Qc3,Ka3,Nc3,Nf3,Ng3,Qa4,Qa4,Ka4,Bc4,Bf4,Qc4,Qh4,Qc4,Ka4,Nc4,Nf4,Ng4,Qa5,Qa5,Ka5,Bc5,Bf5,Qc5,Qh5,Qc5,Ka5,Nc5,Nf5,Ng5,Qa6,Qa6,Ka6,Bc6,Bf6,Qc6,Qh6,Qc6,Ka6,Nc6,Nf6,Ng6,Qa7,Qa7,Ka7,Bc7,Bf7,Qc7,Qh7,Qc7,Ka7,Nc7,Nf7,Ng7,Qa8,Qa8,Ka8,Bc8,Bf8,Qc8,Qh8,Qc8,Ka8,Nc8,Nf8,Ng8,Qa9,Qa9,Ka9,Bc9,Bf9,Qc9,Qh9,Qc9,Ka9,Nc9,Nf9,Ng9,Qa10,Qa10,Ka10,Bc10,Bf10,Qc10,Qh10,Qc10,Ka10,Nc10,Nf10,Ng10,Qa11,Qa11,Ka11,Bc11,Bf11,Qc11,Qh11,Qc11,Ka11,Nc11,Nf11,Ng11,Qa12,Qa12,Ka12,Bc12,Bf12,Qc12,Qh12,Qc12,Ka12,Nc12,Nf12,Ng12,Qa13,Qa13,Ka13,Bc13,Bf13,Qc13,Qh13,Qc13,Ka13,Nc13,Nf13,Ng13,Qa14,Qa14,Ka14,Bc14,Bf14,Qc14,Qh14,Qc14,Ka14,Nc14,Nf14,Ng14,Qa15,Qa15,Ka15,Bc15,Bf15,Qc15,Qh15,Qc15,Ka15,Nc15,Nf15,Ng15,Qa16,Qa16,Ka16,Bc16,Bf16,Qc16,Qh16,Qc16,Ka16,Nc16,Nf16,Ng16,Qa17,Qa17,Ka17,Bc17,Bf17,Qc17,Qh17,Q"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\nSample Input:\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\nSample Output:\nWhite: Kc1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Kc8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd3,Qh3,Ra4,Rh4,Bc4,Ng4,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n"
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: KQR,NBR,QKR,KNR,BQR,BNR,NBR\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\") == \"White: KP,PQ,PQ,PQ,PQ,PP,PP,PP\"\nassert solution(\"|...|:::|...|:::|...|:::|...|:::|\") == \"White: PA,PB,PC,PD,PE,PF,PG,PH\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|\") == \"White: NA,NB,NC,ND,NE,NF,NG,NH\"\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n5 9\n''') == 'Your wish is granted!'\n\nassert solution('''\n8 3\n10 1\n''') == 'Your wish is granted!'\n\nassert solution('''\n5 1\n5 2\n''') == 'You will become a flying monkey!'\n\nassert solution('''\n10 8\n10 9\n''') == 'You will become a flying monkey!'"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('10 2') == 'You will become a flying monkey!'"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\""
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 3\n''') == 'Your wish is granted!'\nassert solution('''\n1 2\n''') == 'You will become a flying monkey!'\nassert solution('''\n10 3\n''') == 'Your wish is granted!'\n'''\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3''') == 'Your wish is granted!'\nassert solution('''3 2''') == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nTrue True False True\nFalse True False False\nTrue True False True\nTrue False False False\nTrue False False False\nFalse True False True\nFalse True False True\nTrue True True True\nFalse True False False\nTrue True False False\nTrue False False True\nTrue False False False\nTrue False False False\nTrue False False False\nTrue True True False\nTrue False False True\nTrue False False True\nTrue True True True\nTrue False False False\nTrue False False False\nFalse False False True\nFalse False False False\nTrue False True True\nFalse True True False\nFalse True True False\nFalse False False False\nFalse True False False\nFalse False False True\nFalse False False False\nTrue False False False\nFalse True False True\nTrue False False False\nTrue True True False\nTrue False False True\nFalse True False False\nTrue False False False\nFalse False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False False\nTrue False False False\nTrue False False False\nTrue False False False\nTrue False False False\nTrue False False False\nTrue False False False\nTrue False False False\nTrue False False False\nTrue True True True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nFalse False False True\nFalse False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nFalse False False True\nFalse False False True\nTrue False False True\nFalse False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False False True\nTrue False"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 3\n''') == 'Your wish is granted!'\nassert solution('''\n5 3\n''') == 'You will become a flying monkey!'\nassert solution('''\n11 3\n''') == 'Your wish is granted!'\nassert solution('''\n9 3\n''') == 'You will become a flying monkey!'\nassert solution('''\n8 0\n''') == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 9') == 'Your wish is granted!'\nassert solution('4 4') == 'Your wish is granted!'\nassert solution('20 3') == 'Your wish is granted!'\nassert solution('5 6') == 'Your wish is granted!'\nassert solution('50 3') == 'You will become a flying monkey!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Your wish is granted!'\n"
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('1 1') == 'You will become a flying monkey!'"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == '16'\nassert solution('10') == '10'"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('18') == '42'\nassert solution('16') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"4\"\nassert solution(\"16\") == \"10\"\nassert solution(\"32\") == \"8\"\nassert solution(\"64\") == \"10\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == '16'\nassert solution('4') == '4'\nassert solution('123') == '123'\nassert solution('4000000000') == '30000000000'\nassert solution('5000000000') == '30000000000'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16') == '16'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15') == '15'\nassert solution('17') == '21'\nassert solution('13') == '13'"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"16\"\nassert solution(\"30\") == \"76\"\nassert solution(\"100\") == \"300\"\nassert solution(\"10_000\") == \"100000\"\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '16'\nassert solution('16') == '16'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16') == '16'\n"
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '8'\nassert solution('6') == '12'\nassert solution('10') == '16'\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nprint('\\033[92m' + 'OK' + '\\033[0m')\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n5 180\n10 20 15 30 20\n''') == '2'\n\n------------------\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20\n''') == '4'"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n3 10\n1 2 4 5 6\n''') == '6'\nassert solution('''\n4 10\n1 2 4 5\n''') == '3'\n'''\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''2 5\n1 4 3 4 5''') == '0'\n"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4'\n\"\"\""
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input) == example_output"
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"\nassert solution(\"3 5 7 3 1 2 1\\n1 3 2 2 2 1\") == \"2\"\nprint(f\"Success rate: {(total_result/total_testcases)*100:.2f}%\")\nprint(total_result)\nprint(total_testcases)\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n21\") == \"79\"\nassert solution(\"2\\n34\") == \"80\"\nassert solution(\"2\\n18\") == \"80\"\nassert solution(\"2\\n9\") == \"87\"\nassert solution(\"3\\n21\") == \"79\"\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n') == '2\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('1\\n1\\n') == '1\\n1\\n'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\nassert solution('5\\n50\\n45\\n36\\n30') == '66'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\nassert solution('2\\n3\\n4\\n5') == '20'\n\"\"\""
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n21\\n34') == '79'\nassert solution('3\\n21\\n34\\n24') == '78'\nassert solution('4\\n21\\n34\\n24\\n9') == '89'"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n10\\n5\") == \"11\"\nassert solution(\"1\\n6\\n5\") == \"16\"\nassert solution(\"4\\n3\\n3\\n7\") == \"27\"\nassert solution(\"1\\n3\\n8\") == \"18\"\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n4\\n') == '12\\n', '3, 4, 2'\nassert solution('2\\n1\\n3\\n') == '14\\n', '2, 1, 3'\nassert solution('4\\n7\\n8\\n7\\n8\\n') == '22\\n', '4, 7, 8, 7, 8'\nassert solution('2\\n1\\n2\\n') == '4\\n', '2, 1, 2'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '5\\n', '5, 1, 2, 3, 4'\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == \"79\"\n"
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '-1'\nassert solution('4') == '0'\n\n\"\"\""
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4 5\") == \"2 3 0\"\nassert solution(\"4 0 3\") == \"0 2 0\"\nassert solution(\"2 0 2\") == \"2 0 0\"\nassert solution(\"6 1 2\") == \"0 2 0\"\nassert solution(\"6 1 2\") == \"1 1 2\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 3 4\n0 1 4\n''') == \"impossible\"\nassert solution('''5 3 3 4\n0 2 4\n''') == \"impossible\"\nassert solution('''5 3 3 4\n0 2 4\n''') == \"2 3 1 0\"\nassert solution('''5 3 3 4\n0 2 4\n''') == \"2 3 1 0\"\nassert solution('''5 3 3 4\n0 3 4\n''') == \"2 3 0 3\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3 4') == '2 3 0', \"Too hot!\"\nassert solution('10 10 10 10') == '0 0 0 0', \"Too cold!\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\") == \"2 3 0\"\nassert solution(\"7 4 1\") == \"3 3 0\"\nassert solution(\"10 10 1\") == \"7 7 0\"\nassert solution(\"20 3 2\") == \"10 10 0\"\n\nimport collections\nimport random\nfrom typing import List\n\nimport pytest\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\nassert solution(\"7 4 5\\n1 0 3\\n2 0 2\\n3 2 0\\n4 4 0\\n5 5 0\\n6 6 0\\n7 0 0\\n8 0 0\\n9 0 0\") == \"2 3 0\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 3 4\n0 1 4\n''') == '2 3 0'\n\"\"\"\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 0') == 'impossible'\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 4') == 'impossible'\nassert solution('5 3 3 4') == '2 0 1 3'\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3 3 4\n0 1 4\n''') == '2 3 0'\nassert solution('''\n5 3 3 4\n0 1 4\n0 0 1\n''') == 'impossible'\n"
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\\n\") == \"2 3 0\"\nassert solution(\"5 3 3 5\\n0 1 4\\n\") == \"2 3 0\"\nassert solution(\"5 3 3 6\\n0 1 4\\n\") == \"2 3 0\"\nassert solution(\"5 3 3 7\\n0 1 4\\n\") == \"2 3 0\"\nassert solution(\"5 3 3 8\\n0 1 4\\n\") == \"2 3 0\"\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nprint('solution() =', solution(input()))\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nprint('Sample Test Passed')\n\n\"\"\""
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('-1 0 1 0 1 0 -1') == '1 0 0 0 0 1'\nassert solution('-1 1 1 1 1 1 -1') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 0 0 0 0 1\"\nprint(solution())\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"0 1 2 2 2 7\"\n) == \"1 0 0 0 0 1\"\nprint('Solution = Complete!')"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 0 0 0 0 1'\nassert solution(input()) == '1 0 0 0 0 1'\n'''\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"-2 0 1 2 1 3 -1 5\") == \"-1 0 1 2 1 3 -1 5\"\nassert solution(\"-2 0 1 2 2 3 1 5\") == \"-1 0 1 2 2 3 1 5\"\n"
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 0 2 2\") == \"1 1 1 0 1 1\"\n\n---Input-------\n6\n0 2 0 0 1 1 0\n---Output--------\n1 1 0 1 0 0 0\n\"\"\""
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n\n\"\"\"\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n123456 0.6666\nqwerty 0.3334\nasdfgh 0.2222''') == '1.3334'\n\n'''"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334\\n') == '1.3333333333333333'\nprint('All test cases passed!')"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"1.3334\"\nassert solution(\"\"\"\n1\n123456 0.6666\nqwerty 0.3334\n\"\"\") == \"0.6666\"\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n\n-- Explanation --\n\nThis puzzle is an interactive problem. You can use the sample data to solve it. The second line of your input contains the password, followed by the probability of success. To solve this problem, your program must first guess the password. If the password is correct, the program will print the number of attempts, else it will print the number of attempts. The program should print the password that was found on the next line.\n\nSample Output:\n1\npassword: 123456\nattempts: 1\n\nSample Input:\n3\n123456 0.6666\nqwerty 0.3334\npikachu 0.0533\nSample Output:\n1\npassword: 123456\nattempts: 1\npassword: qwerty\nattempts: 1\npassword: pikachu\nattempts: 2\n'''\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('3\\nabcd 0.2525\\ngfgh 0.00001') == '1.00001'\n"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('2\\nabcdef 0.3333\\nqwerty 0.3334') == '0.8333'\n\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3\n    123456 0.6666\n    qwerty 0.3334\n    123465 0.3334\n\"\"\") == \"1.333333333334\"\n\nassert solution(\"\"\"\n    2\n    123456 0.6666\n    qwerty 0.3334\n\"\"\") == \"1.333333333334\"\n\nassert solution(\"\"\"\n    1\n    12345\n\"\"\") == \"1\""
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 2 4\n''') == \"1\""
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\n3 3\n1 1\n4 2\n3 4\n5 6''') == '1'\nassert solution('''4 4\n5 2\n3 4\n6 2\n1 1\n2 3\n5 1\n3 2\n4 4\n2 4\n5 4''') == '2'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '1'\n\nassert solution('''\n3\n1 2 4\n''') == '1'\n\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"\nassert solution(\"3 1\\n1 2 4\\n4 5 6\") == \"3\"\nassert solution(\"3 1\\n1 2 4\\n1 2 3\") == \"1\"\nassert solution(\"3 1\\n1 2 4\\n1 2 3\\n1 2 4\") == \"2\"\nassert solution(\"3 1\\n1 2 4\\n1 2 3\\n1 2 4\\n4 5 6\") == \"1\"\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 1 2') == '1'\nassert solution('4 3 1 2') == '2'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '1'\nassert solution('1000000 1') == '100000'\nassert solution('100000000 10') == '10'\nassert solution('100000000 100') == '100'\nassert solution('100000000 1000') == '1000'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\n1 2 4\n''') == '1'\nassert solution('''5 1\n1 2 3 4 5\n''') == '1'"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('4 1') == '2'\n\nimport random\nn, p = map(int, input().split())\n\na = list(map(int, input().split()))\n\nt = 0\nfor _ in range(n):\n    t += a[_]\n    if t >= p:\n        break\n    else:\n        t += 1\n\nprint(t)"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 1') == '1'\nassert solution('20 2') == '2'\nassert solution('20 1') == '2'\nassert solution('1 20') == '20'\n"
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n1\\n') == '1'\nassert solution('3 1\\n1 2 4\\n') == '2'\nassert solution('3 1\\n1 2 3 4\\n') == '1'\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"\"\"G:\nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------\"\"\"\nassert solution(\"28\\n
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '27') == 'G:    \\nF:        \\nE:         \\nD:         \\nC:        \\nB:        \\nA:         \\ng:         \\nf:         \\ne:         \\nd:         \\nc:        \\nb:         \\na:         \\n'\nassert solution(\n    '10') == 'G:    \\nF:        \\nE:        \\nD:        \\nC:        \\nB:        \\nA:        \\ng:         \\nf:        \\ne:         \\nd:         \\nc:        \\nb:         \\na:         \\n'\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == 'G:\\nF:\\nE:\\nD:\\nC:\\nB:\\nA:\\ng:\\nf:\\ne:\\nd:\\nc:\\nb:\\na:\\n'\nassert solution(\"1\\nA\") == '\\ng:\\nf:\\n'\nassert solution(\"1\\nA\\n\\n\") == '\\ng:\\nf:\\n'\nassert solution(\"1\\nA\\n\\n\\n\\n\\n\") == '\\ng:\\nf:\\n'\nassert solution(\"3\\nC\") == 'G:\\nF:\\nE:\\nD:\\nC:\\nB:\\nA:\\n'\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''13\nC C D E E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''G:\nF: -----------------*--------------------*---\nE: *   *          *             *   *                \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: -----------------------------------------------*----------\nf:\ne:\nd:\nc:\nb:\na:\n'''\nassert solution('''2\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''G:\nF: -------------------------*----------------*-------\nE: * *     *      * *     **    * *           *         ** **\nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:\ng: ------------------------*----------*----------\nf: ------------------------*----------*----------\nd: ------------------------*----------*----------\nc: ------------------------*----------*----------\nb: ------------------------*----------*----------\na: ------------------------*----------*----------\n'''\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'G:                                           \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  \\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------'\nassert solution('2') == 'G:                                           \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  \\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                               \\nc:                                                               \\nb:                                                               \\na: ----------------------------------------------------------'\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'G:                                           \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                           \\nc:                                                           \\nb:                                                           \\na: ----------------------------------------------------------'"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n''') == '''G:\nF: **********************\nE: **********************\nD: **********************\nC: **********************\nB: **********************\nA: **********************\ng: **********************\nf: **********************\ne: **********************\nd: **********************\nc: **********************\nb: **********************\na: **********************\n'''\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''G:\nF: ------------------------*-------*----------------\nE: * *     *      * *     **    * *           *         ** **\nD: * *     *      * *     * *     **    * *           * ** **\nC: * *     *      * *     **    * *    ** *           * ** **\nB: ------------------------*-----*------*-----*------\nA:\ng: ------------------------*----------*----------\nf:\ne: ------------------------*-------*----------------\nd:\nc:\nb:\na: ------------------------*-------*----------------\n'''\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"27\") == \"G:       \\nF: -------------------------------------*--------------------\\nE:       *      *          *            *      *      *      *\\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *      **    *      * *      * *      *\\nB: --------------------------**-----------------*-----*------\\nA:                                                \\ng: -----------------------------------------------*----------\\nf:       *                                    \\ne: ----------------------------------------------------------\\nd:                                                            \\nc:                                                            \\nb:                                                            \\na: ----------------------------------------------------------\"\n"
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''G:\nF: -------------------------*------------------------------\nE:  *    *     *          *            *\nD: ------------------------*-------*-------------------\nC: * *    *          * *    **    * *          * **\nB: ------------------------*-------*-------------------\nA: ------------------------*-------*-------------------\ng: ------------------------*-------*-------------------\nf: ------------------------*-------*-------------------\ne: ------------------------*-------*-------------------\nd: ------------------------*-------*-------------------\nc: ------------------------*-------*-------------------\nb: ------------------------*-------*-------------------\na: ------------------------*-------*-------------------\n'''"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1\\n1 2 3\\n4 5 6') == 'impossible'\nassert solution('2\\n4 3 5\\n5 6 8\\n10 11 12\\n15 16 17\\n') == 'impossible'\nprint(\"You passed all tests!\")\n\"\"\"\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3 2\n''') == 'possible'\nassert solution('''\n2\n1 1\n''') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 2 1') == 'possible'\nassert solution('3\\n1 1 1') == 'impossible'\n\n'''"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == 'possible'\nassert solution('2 2 2') == 'impossible'\nassert solution('3 3 3') == 'impossible'\nassert solution('4 4 4') == 'impossible'\nassert solution('5 5 5') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n2 2 2\\n3 3 3\") == \"possible\"\nassert solution(\"4\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\") == \"impossible\"\nassert solution(\"5\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\") == \"impossible\""
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n''') == 'possible'\nassert solution('''\n7\n1 1 1 1 1 1 1\n''') == 'impossible'\nassert solution('''\n10\n2 3 5 1 1 2 3 5\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'possible'\n\nSample Input:\n10\n5 5 4 4 5 5 5 5\nSample Output:\nimpossible\n\nclass Solution:\n    def solve(self, n: int, *args: List[int]) -> str:\n        if sum(args)!= n*(n-1)//2:\n            return \"impossible\"\n        else:\n            return \"possible\""
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 1 1\n''') == 'possible'\nassert solution('''\n6\n1 1 3\n''') == 'impossible'\nassert solution('''\n2\n1 1\n''') == 'impossible'\nassert solution('''\n3\n5 4 1\n''') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2 1\\n') == 'impossible'\nassert solution('3\\n3 2 1\\n') == 'possible'\nassert solution('4\\n3 2 2\\n') == 'impossible'\nassert solution('5\\n4 4 4\\n') == 'possible'\nassert solution('6\\n5 5 5\\n') == 'impossible'\n"
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == 'possible'\nassert solution('2 1 1') == 'impossible'\nassert solution('3 1 1') == 'impossible'\nassert solution('3 2 1') == 'possible'\nassert solution('3 3 1') == 'impossible'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1\\n'\n    '4 3 3 2 1 2 2 1 1 3\\n'\n    '7\\n'\n    '1 2 2 2 2\\n'\n    '5\\n'\n    '1 1 1 1 1\\n'\n    '3\\n'\n    '2 1 1 1\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '4\\n'\n    '3\\n'\n    '3\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '3\\n'\n    '3\\n'\n    '4\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n    '5\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '4\\n'\n    '5\\n'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '4'\nassert solution('1000000') == '5'\nassert solution('1000000000') == '5'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n3\n4 3 3 2 1 2 2 1 1 3\n\"\"\") == \"3\"\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('6') == '2'\nassert solution('12') == '4'\nassert solution('22') == '4'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n') == '3'\nassert solution('5\\n1 2 3 4 5\\n') == '3'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('2\\n10 4 3 2 1 2 2 1 1 3') == '3'\nassert solution('2\\n100 4 3 2 1 2 2 1 1 3') == '1'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('2 3 1 2 3 1 1 1') == '2'"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"10\\n4 3 3 2 1 5 2 2 1 3\") == \"5\"\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10\n4 3 3 2 1 2 2 1 1 3\n    ''') == '3'\nassert solution('''30\n4 8 2 3 7 6 1 3 2\n    ''') == '5'\nassert solution('''10\n4 2 3 2 1 2 1 1\n    ''') == '1'\nassert solution('''10\n4 3 3 2 1 2 2 1 1 3\n    ''') == '2'\nassert solution('''10\n4 2 3 2 1 2 1 1\n    ''') == '0'\n"
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\nassert solution('''\n20\n2 1 4 3 6 5 7 8 10 6 3 2 1 4 1 5 2 4 3 6\n''') == '3'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\nASHMEADE'\n\nassert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\nASHMEADE'\n\nassert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\\nASHMEADE'"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nASHMEADE 9.80 8.82\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n\") == \"35.54\"\nassert solution(\"1\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"41.11\"\nassert solution(\"2\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\") == \"41.11\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.93\") == \"35.54\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nFRATER 9.78 8.92\\nPOWELL 9.72 8.61\\n\") == \"BLAKE\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '35.54'\nassert solution('1') == 'ASHMEADE'\nassert solution('2') == 'ASHMEADE BLAKE'\nassert solution('3') == 'ASHMEADE BLAKE POWELL'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"2\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"59.74\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE\\nPOWELL\\nASHMEADE\\nCARTER\\nBOLT\\n'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'\nassert solution('''\n4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\n''') == 'BOLT'\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'\nassert solution('''\n5\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == 'BLAKE'\nassert solution('''\n4\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\n''') == 'BLAKE'\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '35.54'\n\n\"\"\"\n"
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\") == \"35.54\"\nassert solution(\"3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nCARTER 9.78 8.43\") == \"35.54\"\nassert solution(\"5\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"10\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nCARTER 9.78 8.43\\nASHMEADE 9.69 8.72\\nBLAKE 9.58 8.72\\nBOLT 9.78 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nCARTER 9.78 8.43\") == \"35.54\"\nassert solution(\"13\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nCARTER 9.78 8.43\\nASHMEADE 9.69 8.72\\nBLAKE 9.58 8.72\\nBOLT 9.78 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nCARTER 9.78 8.43\\nASHMEADE 9.69 8.72\\nBLAKE 9.58 8.72\\nBOLT 9.78 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nCARTER 9.78 8.43\") == \"35.54\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n1\n1 1\n1 1\n''') == '1'\nassert solution('''\n2\n1 2\n2 4\n''') == '2'\nassert solution('''\n3\n1 2\n2 4\n5 6\n''') == '1'\nassert solution('''\n4\n1 2\n2 4\n5 6\n7 8\n''') == '2'\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''5\n1 3\n4 6\n4 3\n3 6\n''') == '1'\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"2\"\nassert solution(\"2\\n1 2\\n2 4\\n5 6\") == \"1\"\nassert solution(\"3\\n1 2\\n2 4\\n5 6\") == \"1\""
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n2\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n2\n1 2\n2 4\n5 6\n''') == '1'\nassert solution('''\n2\n1 2\n2 4\n5 6\n''') == '0'"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '2'\nassert solution('2\\n4\\n5\\n') == '1'\nassert solution('3\\n5\\n6\\n') == '0'"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n2 4\\n5 6\\n') == '2'\nassert solution('10\\n1 2\\n2 4\\n5 6\\n7 8\\n9 10\\n') == '4'\nassert solution('5\\n1 2\\n2 4\\n5 6\\n7 8\\n9 10\\n') == '3'\nassert solution('1\\n1 2\\n2 4\\n5 6\\n7 8\\n9 10\\n') == '3'\nassert solution('2\\n1 2\\n2 4\\n5 6\\n7 8\\n9 10\\n') == '1'\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 4\\n5 6') == '2'\nassert solution('2 3\\n4 5\\n5 6\\n4 6') == '3'\nassert solution('3 1\\n2 2\\n5 6\\n6 1') == '3'\nassert solution('5 1\\n2 2\\n6 1\\n6 2') == '4'\nassert solution('5 1\\n1 2\\n5 2\\n1 4') == '4'\n\n'''"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n2 4\n1 2\n5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1 3 4 5\n2 3 4 5\n3 5 4 5\n1 5 4 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"1\", \"2\"]) == \"2\"\nassert solution([\"2\", \"4\"]) == \"1\"\nassert solution([\"5\", \"6\"]) == \"2\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heey\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('hey') == 'heey'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hee') == 'heey'\nassert solution('heey') == 'hey'\nassert solution('hee') == 'heey'\nassert solution('hey') == 'hey'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hey') == 'heey'\nassert solution('yhey') == 'yehee'\nassert solution('heeyy') == 'heeyy'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''hey\nhey''') == \"heyheyhey\"\n\"\"\"\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('hey') == 'hey'\nassert solution('heyy') == 'heyhey'\nassert solution('heheh') == 'hehehe'\nassert solution('hehehey') == 'hehehey'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hey') == 'hee'\nassert solution('hi') == 'h'\nassert solution('heyy') == 'hey'\nassert solution('heeyy') == 'hee'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'heeyy'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('hey') == 'hey'\nassert solution('hey how are you?') == 'hey how are you'\nassert solution('hey what is your name?') == 'hey what is your name'\nassert solution('hey what is your e') == 'hey what is your e'\nassert solution('hey what is your ey') == 'hey what is your ey'\n"
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"eey\") == \"hee\"\nassert solution(\"hee\") == \"heee\"\nassert solution(\"heee\") == \"heeee\"\nassert solution(\"oo\") == \"ooo\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"5\") == \"1 3\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 2\\n1 3\\n1 4\\n\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 2\\n1 3\\n1 4'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\"\n) == \"1 2\\n1 3\\n1 4\"\nassert solution(\n    \"\"\"\n2\n0 1\n1 0\n\"\"\"\n) == \"0 1\"\nassert solution(\n    \"\"\"\n6\n0 1 1 2 2 3\n1 0 2 3 4 5\n1 2 0 3 4 5\n2 3 1 0 4 5\n2 4 1 0 5 6\n3 4 2 0 5 6\n4 5 2 0 3 6\n5 6 2 0 3 4\n\"\"\"\n) == \"2 3\\n4 5\\n6 4\"\nassert solution(\n    \"\"\"\n8\n0 1 1 2 2 3 3\n1 0 2 3 4 5 5\n1 2 0 3 4 5 5\n2 3 1 0 4 5 5\n2 4 1 0 5 6 6\n3 4 2 0 5 6 6\n4 5 2 0 3 6 6\n5 6 2 0 3 4 6\n6 7 2 0 3 4 5\n\"\"\"\n) == \"2 3\\n4 5\\n6 7\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\\n1 3\\n1 4\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"1 2\"\nassert solution(\"1 1 1 2\") == \"1 3\"\nassert solution(\"1 1 1 2\") == \"1 4\"\nprint('Yay, your solution beats 85% of submissions.')\n\"\"\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\"\nassert solution(\"10\\n1 1 1 2\\n2 3 3 0\\n3 4 4 0\\n4 5 5 0\\n5 6 6 0\\n6 7 7 0\\n7 8 8 0\\n8 9 9 0\\n9 10 10 0\\n10 11 11 0\") == \"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\"\n\nimport sys"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\"\n) == \"1 2\\n1 3\\n1 4\\n\"\n"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 2\\n1 3\\n1 4'\nprint(solution(input()))"
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0') == '1 4'\nassert solution('3\\n0 0 1\\n1 2 3\\n2 3') == '1 2'\n\n\"\"\""
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('EWPGAJRB') == 'ABCD', solution('EWPGAJRB')\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('EWPGAJRB') == \"ABCD\""
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n\n'''\n\ninput_stdin = open('input.txt')\ninput_data = input_stdin.read()"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EWPGAJRB''') == 'ABCD'\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nEWPGAJRB\n''') == 'ABCD'\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n"
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\nassert solution
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abc\") == \"bcd\"\nassert solution(\"abcabc\") == \"a\"\nassert solution(\"aabc\") == \"a\"\nassert solution(\"abbc\") == \"bc\"\nassert solution(\"bc\") == \"bc\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abc') == 'bcd'\nassert solution('cba') == 'bac'\nassert solution('ayb') == 'bya'\nassert solution('kyb') == 'by'\nassert solution('ycba') == 'byc'"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abc') == 'a'\nassert solution('def') == 'd'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abc') == 'a'\nassert solution('abbc') == 'b'\nassert solution('abcd') == 'a'\nassert solution('abbcda') == 'd'\nassert solution('abbcad') == 'b'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abbccccddddddd\") == \"bb\"\nassert solution(\"aabbccdddddddddd\") == \"aab\"\nassert solution(\"aaaaaaaaaaaaaaaaa\") == \"a\"\nassert solution(\"z\") == \"z\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'a'\nassert solution('abc') == 'a'\nassert solution('cab') == 'ca'\nassert solution('abcd') == 'abcd'\nassert solution('cdcd') == 'c'\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cba') == 'a'\nassert solution('abab') == 'b'\n\"\"\"\nimport math\nfrom collections import Counter\n\nstring = input()\ncounts = Counter(string)\nres = math.ceil(len(string) / 2)\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"dedcba\") == \"d\"\nassert solution(\"aabbcd\") == \"cd\"\nassert solution(\"abcde\") == \"abc\"\nassert solution(\"abcdef\") == \"a\"\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == 2\nassert solution(\"abb\") == 1\nassert solution(\"ab\") == 0\nassert solution(\"dabc\") == 0\nassert solution(\"adcb\") == 2\n"
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abc\") == \"ab\"\nassert solution(\"abcd\") == \"ac\"\nassert solution(\"aac\") == \"a\"\nassert solution(\"aaac\") == \"a\"\nassert solution(\"abcde\") == \"cde\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"go\"\nassert solution(\"aaahh\") == \"no\"\nprint(solution(input()))\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"go\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\nassert solution('a') == 'go'\nassert solution('h') == 'no'\nassert solution('aaaah') == 'no'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaah\\nh\") == \"go\"\nassert solution(\"aaaaah\\nh\") == \"no\""
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaah\\n') == 'go', 'Sample Test 1 Failed'\nassert solution('aaaaah\\n') == 'go', 'Sample Test 1 Failed'\nassert solution('aaaaahhhhhhhahhh\\n') == 'no', 'Sample Test 1 Failed'"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\nassert solution('aah') == 'go'\nassert solution('a') == 'go'\nassert solution('h') == 'go'\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaah\\n\") == \"go\"\nassert solution(\"aaaaah\\n\") == \"no\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\nassert solution(\"aaahhh\") == \"no\"\nassert solution(\"ahhh\") == \"no\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\n"
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\nassert solution(\"haa\") == \"no\"\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2B1A2A2A2A2\") == \"B\"\nprint(\"You're doing pretty good so far!\")\nprint(\"If it is done, you're done!\")\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2A1A2B1A2A2A2') == 'B'"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''A2B1A2B2A1A2A2A2''') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A2B1A2B2A1A2A2A2''') == 'A'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2B1B2A2A1A2A2A2') == 'B'\n"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nA2B1A2B2A1A2A2A2\n''') == 'A'\nassert solution('''\nA2B1A2B2A1A2A2A2\n''') == 'B'\nassert solution('''\nA2B1A2A2A2A2A2A2\n''') == 'B'\nassert solution('''\n
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2A1B2A1A2A2A2') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'B'\n'''"
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    A2B1A2B2A1A2A2A2\n    A2B1A2B2A1A2A2A2\n    A2B1A2B2A1A2A2A2\n    ''') == 'A'\n\nassert solution('''\n    A1A2A2A2\n    A1A2A2A2\n    A1A2A2A2\n    ''') == 'A'\n\nassert solution('''\n    B2B2A1A2A2A2A2\n    B1A2A2A2A2A2A2\n    A2B2A1A2A2A2A2\n    ''') == 'B'\n''')\n\n\nfrom collections import Counter\nfrom collections import defaultdict\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '21'\nassert solution('3 3') == '3'\nassert solution('1 5') == '2'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n\"\"\") == \"21\"\n\nassert solution(\"\"\"\n2 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n\"\"\") == \"43\"\n\nassert solution(\"\"\"\n5 1\n1 4\n3 2\n1 3\n4 1\n1 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 3\n1 2\n1 3\n2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"0\""
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('10 12\\n0 0 0\\n3 2 5\\n1 2 3\\n2 4 3\\n0 1 5\\n1 0 4\\n3 1 5\\n0 2 4\\n2 3 7\\n1 3 6\\n4 5 8\\n0 2 1\\n1 0 6\\n2 0 1\\n1 3 8\\n0 1 3\\n2 0 5\\n0 2 1\\n1 4 8\\n0 1 5\\n2 4 9\\n0 2 3\\n2 1 7\\n3 4 1\\n2 3 2\\n3 4 2\\n0 1 5\\n1 1 2\\n2 3 4\\n1 2 3\\n1 0 2\\n2 3 2\\n1 1 2\\n2 0 2\\n2 4 3\\n1 3 2\\n2 2 5\\n0 0 5\\n1 4 5\\n0 3 4\\n1 3 1\\n0 1 5\\n3 1 1\\n1 2 1\\n2 1 5\\n0 2 1\\n1 2 1\\n1 1 3\\n2 0 5\\n1 0 3\\n2 2 0\\n1 4 4\\n2 3 4\\n0 3 3\\n1 2 3\\n1 0 2\\n2 3 1\\n1 3 5\\n2 1 0\\n2 1 5\\n1 3 2\\n0 1 2\\n1 1 3\\n1 0 2\\n2 4 1\\n1 4 3\\n2 3 2\\n0 2 4\\n1 1 1\\n1 1 2\\n2 0 4\\n1 0 4\\n2 0 2\\n1 1 1\\n1 0 2\\n2 0 4\\n1 4 0\\n2 1 1\\n0 0 5\\n1 1 2\\n2 1 5\\n0 1 5\\n1 1 1\\n2 1 1\\n0 2 4\\n1 4 3\\n0 3 1\\n1 1 4\\n2 1 1\\n2 4 3\\n2 4 3\\n1 3 2\\n2 0 2\\n1 2 2\\n1 2 2\\n2 4 0\\n1 2 3\\n2 0 1\\n2 1 2\\n0 1 2\\n2 0 1\\n0 2 3\\n1 3 1\\n1 2 2\\n2 0 4\\n0 2 2\\n1 0 2\\n1 1 2\\n1 0 2\\n2 1 2\\n1 0 2\\n1 0 2\\n2 3 1\\n1 3 3\\n0 1 4\\n0 1 3\\n1 0 1\\n0 1 3\\n1 3 2\\n0 2 1\\n2 1 1\\n1 3 1\\n0 2 2\\n1 0 4\\n1 1 1\\n2 1 5\\n0 2 2\\n1 1 2\\n0 1 2\\n1 1 2\\n1 1 2\\n2 2 1\\n1 0 2\\n2 1 2\\n1 4 2\\n2 3 4\\n1 2 1\\n0 2 3\\n0 3 4\\n2 3 4\\n1 2 1\\n1 2 3\\n1 1 2\\n1 1 2\\n1 1 2\\n2 3 4\\n1 1 4\\n1 0 2\\n2 4 1\\n0 2 2\\n0 0 2\\n1 1 2\\n1 2 2\\n1 0 2\\n0 2 2\\n2 4 1\\n0 0 5\\n1 1 4\\n1 0 4\\n1 4 3\\n1 0 2\\n2 0 2\\n0 1 4\\n0 1 3\\n0 2 4\\n1 4 1\\n1 2 3\\n1 1 4\\n1 0 2\\n1 1 2\\n2 0 4\\n1 4 3\\n1 0 2\\n2 2 4\\n0 1 2\\n1 1 2\\n0 1 4\\n1 1 4\\n0 1 4\\n1 2 4\\n0 1 2\\n1 1 2\\n0 2 4\\n1 1 4\\n0 2 3\\n1 2 4\\n1 4 4\\n1 1 2\\n0 1 4\\n1 0 2\\n1 0 2\\n1 0 2\\n1 0 2\\n1 1 2\\n1 1 2\\n0 2 3\\n1 2 3\\n1 1 4\\n2 3 4\\n0 1 4\\n1 0 3\\n1 1 4\\n1 0 4\\n1 4 3\\n1 4 3\\n0 1 4\\n0 1 4\\n1 0 4\\n1 1 4\\n1 1 2\\n2 2 1\\n1 1 4\\n1 1 4\\n1 0 4\\n1 0 4\\n1 2 4\\n0 1 4\\n1 0 4\\n1 2 4\\n0 1 4\\n1 1 4\\n1 0 4\\n1 1 4\\n1 2 4\\n1 4 4\\n2 4 3\\n1 2 4\\n1 0 4\\n1 1 4\\n0 1 4\\n1 1 4\\n0 1 4\\n0 1 4\\n0 0 4\\n1 0 4\\n1 1 4\\n1 1 4\\n1 0 4\\n0 1 4\\n0 1 4\\n0 0 4\\n1 0 4\\n1 1 4\\n1 0 4\\n0 1 4\\n0 1 4\\n0 2 4\\n1 1 4\\n0 1 4\\n1 1 4\\n1 0 4\\n1 0 4\\n0 0 5\\n1 0 4\\n1 1 4\\n0 2 4\\n0 0 5\\n0 1 4\\n0 0 5\\n0 1 4\\n1 2"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"7 7\\n1 2 3\\n2 4 5\\n3 6 7\\n4 5 6\\n5 6 7\\n6 7 8\") == \"20\"\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"5 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"15\"\nassert solution(\"6 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n1 6 6\") == \"30\"\nassert solution(\"6 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n1 6 6\") == \"36\"\nassert solution(\"6 5\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n1 6 6\") == \"48\"\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"21\""
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution('''\n3 3\n4 6 7\n6 6\n''') == '4'\n'''"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4') == '22', solution('1 4')\nassert solution('2 2') == '5', solution('2 2')\nassert solution('4 4') == '7', solution('4 4')\n"
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '5'\nassert solution('''\n5 4\n1 2 2\n2 3 8\n3 4 3\n4 5 15\n''') == '8'\nassert solution('''\n3 4\n1 2 2\n2 3 8\n3 4 3\n4 5 15\n''') == '9'\nassert solution('''\n6 5\n1 2 2\n2 3 8\n3 4 3\n4 5 15\n5 6 4\n6 5 4\n''') == '11'\n'''\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"EEHHH\") == \"HEHH\"\nassert solution(\"DEHHH\") == \"HEEHH\"\nassert solution(\"DDDD\") == \"D1DD2DDDDDD\"\nassert solution(\"EEEEE\") == \"HEEEEEEEEEE\"\nassert solution(\"EEEEE\") == \"HEEEEEEEEEE\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''E\nHHHeellloWooorrrrlld!!\n''') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('''D\nH3e2l3o1W1o3r4l2d1!2\n''') == 'HHHeellloWooorrrrlld!!'\nassert solution('''E\n
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"E HELLO WORLD\") == \"H3e2l3o1W1o3r4l2d1!\"\nassert solution(\"D HELLO WORLD\") == \"HELLO WORLD\"\nassert solution(\"E E\") == \"E\"\nassert solution(\"D E\") == \"E\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    'E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution(\n    'D HWEDhGJY!ll3W uudy!u') == 'HWEDhGJY!ll3W uudy!'\nassert solution(\n    'DDDd2d3d4d5d6d7d8d9d') == 'DDDd2d3d4d5d6d7d8d9d'\nassert solution(\n    'DDDDd2d3d4d5d6d7d8d9d') == 'DDDDd2d3d4d5d6d7d8d9d'\nassert solution(\n
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n"
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('E') == 'HHHeellloWooorrrrlld!!'\nassert solution('D') == 'H3e2l3o1W1o3r4l2d1!'"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == \"Alice\"\n\nprint(solution(\"2\"))\nprint(solution(\"1\"))\nprint(solution(\"4\"))\nprint(solution(\"5\"))\nprint(solution(\"6\"))\nprint(solution(\"7\"))\nprint(solution(\"10\"))\nprint(solution(\"100\"))\nprint(solution(\"1000\"))\nprint(solution(\"10000\"))\nprint(solution(\"2147483647\"))\n\n=======\nimport math"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Alice\"\nassert solution(\"1\") == \"Bob\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n''') == 'Alice'\nassert solution('''\n6\n''') == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n\") == \"Bob\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n') == 'Alice'\nassert solution('100\\n') == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"Alice\""
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"3\") == \"Bob\"\nassert solution(\"6\") == \"Alice\"\nassert solution(\"12\") == \"Bob\"\nassert solution(\"100\") == \"Alice\"\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'Alice'\nassert solution() == 'Bob'\n"
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Alice'\nassert solution('5') == 'Bob'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5+3=8'\nstdin = input()\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 8') == '5+3=8'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 2 3\") == \"5*2=10\"\nassert solution(\"2 5 8\") == \"2+5=7\"\nassert solution(\"2 7 2\") == \"2*7=14\"\nassert solution(\"3 2 4\") == \"3+2=5\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 8') == \"5+3=8\"\nassert solution('5 3 5') == \"5+3=5+5\"\nassert solution('5 3 5')!= \"5+3=10\"\nassert solution('5 3 5')!= \"5+3=20\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('1 2 3') == '1+2=3'\nassert solution('1 2 + 1') == '1+2=3'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('1 2 3') == '1+2=3'\nassert solution('2 2 2') == '2'\nassert solution('1 2 3 4 5 6 7') == '1+2+3+4=7'\nassert solution('1 2 3 4 5 6 7 8') == '1+2+3+4=7+8'\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 8') == '5+3=8'\n\n---Input---\n4 4 2\n\n---Output---\n4+4=2\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"3 1 2\") == \"3-1=2\"\nassert solution(\"5 1 2\") == \"5+1=2\"\nassert solution(\"5 1 2\") == \"5-1=2\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 8') == \"5+3=8\"\nassert solution('2 1 5') == \"2+1=5\"\nassert solution('3 2 7') == \"3+2=7\"\n"
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('4 8 5') == '4+8=13'\nassert solution('10 8 5') == '10+8=17'\nassert solution('3 1 5') == '3+1=4'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n8\n3 2 2 1 1 3 1 1\n    \"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"YES\""
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution('''\n10\n5 3 2 1 1 3 1 1\n''') == 'YES'\nassert solution('''\n5\n1 2\n1 2\n1 3\n1 4\n''') == 'NO'\nassert solution('''\n7\n5 3 2 1 2 1 3\n''') == 'NO'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2\n2 3 2 1 3\nYES\n\"\"\"\n    ) == \"YES\"\n    assert solution(\n\"\"\"\n3\n1 2 2 1 3\nYES\n\"\"\"\n    ) == \"YES\"\n    assert solution(\n\"\"\"\n4\n3 1 2 2 1\nYES\n\"\"\"\n    ) == \"YES\"\n    assert solution(\n\"\"\"\n5\n4 3 3 1 2\nYES\n\"\"\"\n    ) == \"YES\"\n    assert solution(\n\"\"\"\n6\n5 3 3 1 2 1\nYES\n\"\"\"\n    ) == \"NO\"\n    "
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'\nassert solution('10\\n1 3 1 1 2 2 3 3 1') == 'NO'\nassert solution('10\\n1 3 1 1 1 1 1 1 1') == 'YES'\nassert solution('10\\n0 0 0 0 0 0 0 0 0') == 'NO'\nassert solution('8\\n0 0 0 0 0 0 0 0') == 'YES'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 2 1 1 3 1 1\n''') == 'YES'\nassert solution('''\n4 6 6 1 5 1 3 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5\n3 2 2 1 1 3 1 1\n''') == 'YES'\nassert solution(\n'''\n9\n1 1 1 1 1 1 1 1\n''') == 'NO'\nassert solution(\n'''\n7\n1 1 1 1 2 2 2\n''') == 'YES'\nassert solution(\n'''\n7\n1 1 1 1 2 2 2\n''') == 'NO'\nassert solution(\n'''\n5\n1 1 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"YES\""
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1') == 'YES'\nassert solution('4\\n3 2 2 1 1 3 1') == 'NO'\nassert solution('3\\n4 2 2 1 1 3 1') == 'YES'\nassert solution('1\\n3 2 2 1 1 3 1') == 'NO'\nassert solution('1\\n0 2 2 1 1 3 1') == 'NO'\n"
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'ghost'\nassert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'ghost'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') =='mummy'\nassert solution('5') =='mummy'\nassert solution('5') =='mummy'\nassert solution('4') =='mummy'\nassert solution('4') =='mummy'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon') == 'ghost'\nassert solution('1\\ngoldest demon\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n') == 'ghost'"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"witch\"\nassert solution(\"3\") == \"mummy\"\n\"\"\"\n\nimport collections\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') =='mummy'\nassert solution('5') == 'ghost'\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nghost\\nghost\\nwitch\\nwitch\\nghost\\n\") == \"ghost\"\n\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\nghost\\nghost\\nwitch\\nwitch\\nwitch\\nwitch\\n\") == \"ghost\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"mummy\"\nassert solution(\"5\") == \"ghost\"\n\"\"\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\nghost\\nmummy\\nwitch\\nghost\\nmummy\\nwitch\\nghost\\nmummy\\nwitch\\ngolden\\nwitch\\ndemon\\ndemon\\ngolden\\ndemon\\ngolden\\ndemon\\ndemon\\ngolden\\ngolden\\ngolden\\ndemon\\ngolden\\ndemon\\ndemon\\ndemon\\ndemon\\ngolden\\ngolden\\ngolden\\ndemon\\ngolden\\ndemon\\ndemon\\ndemon\\ndemon\\ngolden\\ngolden\\ngolden\\ndemon\\ngolden\\ndemon\\ndemon\\ndemon\\ndemon\\ngolden\\ngolden\\ngolden\\ndemon\\ngolden\\ndemon\\ndemon\\ngolden\\ngolden\\ngolden\\ndemon\\ngolden\\ndemon\\ndemon\\ngolden\\ngolden\\ndemon\\ngolden\\ndemon\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ngolden\\ng"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"ghost\"\nassert solution(\"2\\n\") == \"ghost\"\nassert solution(\"3\\n\") == \"ghost\"\nassert solution(\"4\\n\") == \"mummy\"\nassert solution(\"5\\n\") == \"mummy\"\n"
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nghost\\nghost\\nmummy\\nwitch\\nmummy\") == \"mummy\"\nassert solution(\"5\\nghost\\nmummy\\nmummy\\nwitch\\nghost\") == \"mummy\""
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n''') == '''\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n'''"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    Artist Album Song_Title Length_seconds\n    5\n    Tchaikovsky Piano_Favorites November 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    3\n    Artist\n    Album\n    Song_Title\n    Sample Output:\n    Artist Album Song_Title Length_seconds\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n''') == '''\n    Artist Album Song_Title Length_seconds\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n'''\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\") == \"\"\"\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\"\"\".strip()\n\nassert solution(\"\"\"5\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\".strip()) == \"\"\"\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n\"\"\".strip()\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n''') == '''Artist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\nGeorge_Winston Summer Lullaby 215\n'''\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"Artist Album Song_Title Length_seconds\\nGeorge_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n2\\n5\\n3\\n1\\n5\\n3\\n4\\n3\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"\n\nstdin = \"\"\"\n2\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n\"\"\""
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\") == \"\"\"Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n\nassert solution(\"\"\"5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nAlbum\nArtist\nSong_Title\nSample Output:\nAlbum Artist Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\" ) == \"\"\"Album Artist Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\"\"\"\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n'\n"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\") == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163'"
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == \"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\n\"\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 7\\n5 5 5 5 5 5 5') == 'YES'\nassert solution('1 1 1\\n1 1') == 'NO'"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 7\n5 5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n6 4\n1 2 1 2 2 2\n''') == 'YES'\nassert solution('''\n7 5\n1 2 3 4 5 6\n''') == 'NO'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 7') == 'YES'\nassert solution('2 1 0') == 'NO'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\n\nassert solution('''\n2 5 7\n4 4 4 4 4 4\n''') == 'NO'\n\nassert solution('''\n2 1 7\n1 1 1 1 1 1\n''') == 'YES'\n\nassert solution('''\n3 10 7\n5 5 5 5 5 5\n''') == 'NO'\n\nassert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 10 7\n5 5 5 5 5 5\n''') == 'YES'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"NO\"\nassert solution(\"3 10 7\\n5 5 5 5 5 5 5\") == \"NO\"\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 10 7\n5 5 5 5 5 5\n''') == 'YES'\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n7 3 1\n10\n5 5 5 5 5 5 5\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3\n3 2 1\n10\n7 5 5 5 5 5 5\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n7 3 1\n10\n5 5 5 5 5 5 5\n\"\"\") == \"NO\""
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 10 7\\n5 5 5 5 5 5 5\"\n) == \"YES\"\nassert solution(\n    \"2 10 7\\n1 5 5 5 5 5 5\"\n) == \"NO\"\n"
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1 10 7\\n'\n    '5 5 5 5 5 5'\n) == 'YES\\n'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1\\n'\n    'NYNY\\n'\n    'NNYY\\n'\n    'NYYY\\n'\n    'NYYN\\n'\n    'NNNY\\n'\n    'YYNN\\n'\n    'YYNY\\n'\n    'YYNY\\n'\n    'YYNN\\n'\n    'YYNN\\n'\n    'Sample Output:') == '50.000000'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Not Effective\"\nassert solution(\"4\") == \"Not Effective\"\nassert solution(\"6\") == \"Not Effective\"\nassert solution(\"2\") == \"66.666\"\nassert solution(\"10\") == \"50.0\"\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\nNYNY\nNNNY\nNYYY\nNYNN\n\"\"\") == \"Not Effective\""
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Not Effective'\nassert solution('4') == '66.666667'\nassert solution('6') == '50.000000'"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000''') == '50.000000'\nassert solution('''10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000''') == 'Not Effective'\nassert solution('''10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000''') == 'Not Effective'\nassert solution('''10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000''') == 'Not Effective'\nassert solution('''10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYYY\nYYNN\nYYYY\nSample Output:\nNot Effective\n66.666667\n50.000000''') == 'Not Effective'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Not Effective'\nassert solution('4') == 'Not Effective'\nassert solution('5') == '66.666667'\nassert solution('6') == '50.000000'\nassert solution('7') == 'Not Effective'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('1') == 'Not Effective'\nassert solution('2') == '66.666667'\nassert solution('10') == 'Not Effective'\nassert solution('10000') == 'Not Effective'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nNYNY\\nNNYY\\n') == 'Not Effective'\nassert solution('3\\nNYNY\\nNNYY\\nNYNY\\n') == 'Not Effective'\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Not Effective\"\nassert solution(\"10\") == \"66.666667\"\n"
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Adrian'\nassert solution('1') == 'Adrian'\nassert solution('11') == 'Adrian'\nassert solution('11AB') == 'Adrian'\nassert solution('3BC') == 'Bruno'\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nBAACC\n''') == '3'\nassert solution('''3\nBAACC\n''') == '2'\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Goran'\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nBAACC') == 'Bruno'\n\n'''\n\n\nn = int(input())\nstring = input()\na = set(string)"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('ABACC') == '2'"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nAABAA\\n\") == \"2\"\nassert solution(\"4\\nAABAA\\n\") == \"3\"\nassert solution(\"4\\nAABCCC\\n\") == \"2\"\nassert solution(\"10\\n
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\nACB\n\"\"\") == \"\"\"3\nBruno\"\"\"\n"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nAACC') == 'Goran'"
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\n\"\"\"\nimport unittest"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '543'\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '543'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n''') == '543'\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n        \n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == \"3 543\"\nassert solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n''') == \"7 542\"\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\nassert solution('1 A right\\n2 A wrong\\n-1') == '1 1'\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\n\"\"\""
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 E right') == '543'\nassert solution('10 A wrong') == '10'\nassert solution('30 C wrong') == '300'\nassert solution('50 B wrong') == '200'\nassert solution('100 A wrong') == '100'\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == \"3 543\"\nassert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\\n-1') == \"3 543\"\nassert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\\n-1') == \"3 543\"\nassert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\\n-1') == \"3 543\"\nassert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\\n-1') == \"3 543\"\n\n'''\n"
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'\n'''\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nprint('Tests passed')\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '4'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n'''\nSample Input:\n'''\n'''\n10 5\n1 1 2\n1 2 3\n1 3 4\n1 4 5\n1 5 6\n2 2 3\n2 4 1\n2 5 2\n2 6 4\n2 7 5\n3 3 4\n3 5 5\n4 5 4\n4 7 3\n5 6 2\n6 7 6\n7 7 7\n'''\n'''\nSample Output:\n'''\n'''\n\n'''"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '10'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9 10\n3 4 5 6 7 8 9 10\n4 5 6 7 8 9 10\n5 6 7 8 9 10\n6 7 8 9 10\n7 8 9 10\n8 9 10\n9 10\n10''') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 5') == '5'\nassert solution('10 5 3 4 2 4 2 1 2 1') == '3'\nassert solution('10 5 3 4 1 5 3 1 1 4') == '-1'\nassert solution('10 5 5 2 5 1 5 3 1 1 4') == '4'\nassert solution('10 5 2 3 2 4 3 2 3 1 4') == '5'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\") == \"5\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\n"
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == \"5\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 7\\n5 5') == 'gunilla has a point'\nassert solution('2\\n1 7\\n5 5\\n1 3\\n2 4') == 'edward is right'\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"gunilla has a point\"\nassert solution(\"2\") == \"edward has a point\"\n\"\"\""
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n4 8\n8 8\n7 7\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n4\n2 7\n5 5\n6 7\n\"\"\") == \"edward has a point\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 7\n5 5\n''') == 'gunilla has a point'\nassert solution('''\n1 5\n2 1\n''') == 'edward has a point'\n''')"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward has a point'\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n5\n5 5\n''') == 'gunilla has a point'\n'''\nSolution by: Soham Pal\nProblem: https://codingcompetitions.withgoogle.com/kickstart/round/0000000000436afd/000000000046e2a0\nLanguage: Python\nDate: 09/04/2021\n'''"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('3') == 'edward is right'\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5 5') == 'gunilla has a point'\nassert solution('2\\n1 2\\n1 2') == 'edward is right'\nassert solution('2\\n3 4\\n4 5') == 'gunilla has a point'\n\n'''"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 2\n1 2\n3 5\n4 8\n5 10\n\"\"\") == \"gunilla has a point\"\nassert solution(\"\"\"\n1 5\n1 6\n3 5\n4 7\n\"\"\") == \"edward is right\"\n"
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 7\\n5 5\"\n) == \"gunilla has a point\"\nassert solution(\n    \"5 1\\n5 5\\n7 9\\n9 5\\n9 7\"\n) == \"edward is right\"\nassert solution(\n    \"5 5\\n3 9\\n3 5\\n1 1\"\n) == \"gunilla has a point\"\nassert solution(\n    \"4 4\\n1 4\\n4 2\\n2 4\"\n) == \"gunilla has a point\""
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 11') == '4'\nassert solution('10 10') == '2'\nassert solution('10 1') == '1'\nassert solution('1 10') == '2'"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\"\"\") == \"4\"\nassert solution(\"\"\"0 0\ns\"\"\") == \"0\"\nassert solution(\"\"\"1 0\ns\"\"\") == \"0\"\nassert solution(\"\"\"0 1\ns\"\"\") == \"1\"\nprint('All test cases passed')\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n5 6\\ns 5\\ns 6\\ns 10\\n\"\n) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\n\nassert solution(\n    \"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n5 6\\ns 5\\ns 6\\ns 10\\n\"\n) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\n\nassert solution(\n    \"2\\nt 1\\n\\n\"\n) == \"1\"\n\nassert solution(\n    \"3\\n\"\n    \"t 1\\n\"\n    \"t 2\\n\"\n    \"t 3\\n\"\n    \"t 4\\n\"\n    \"s 1\\n\"\n    \"s 2\\n\"\n    \"s 3\\n\"\n    \"s 4\\n\"\n    \"s 5\\n\"\n    \"s 6\\n\"\n    \"t 7\\n\"\n    \"t 8\\n\"\n    \"t 9\\n\"\n    \"t 10\\n\"\n    \"t 11\\n\"\n    \"s 12\\n\"\n    \"s 13\\n\"\n    \"s 14\\n\"\n    \"t 15\\n\"\n    \"t 16\\n\"\n    \"s 17\\n\"\n    \"s 18\\n\"\n    \"s 19\\n\"\n    \"t 20\\n\"\n    \"s 21\\n\"\n    \"s 22\\n\"\n    \"s 23\\n\"\n    \"s 24\\n\"\n    \"s 25\\n\"\n    \"t 26\\n\"\n    \"t 27\\n\"\n    \"s 28\\n\"\n    \"s 29\\n\"\n    \"s 30\\n\"\n    \"t 31\\n\"\n    \"t 32\\n\"\n    \"t 33\\n\"\n    \"s 34\\n\"\n    \"s 35\\n\"\n    \"s 36\\n\"\n    \"s 37\\n\"\n    \"s 38\\n\"\n    \"s 39\\n\"\n    \"s 40\\n\"\n    \"s 41\\n\"\n    \"s 42\\n\"\n    \"s 43\\n\"\n    \"s 44\\n\"\n    \"s 45\\n\"\n    \"s 46\\n\"\n    \"s 47\\n\"\n    \"s 48\\n\"\n    \"t 49\\n\"\n    \"s 50\\n\"\n    \"s 51\\n\"\n    \"s 52\\n\"\n    \"s 53\\n\"\n    \"s 54\\n\"\n    \"s 55\\n\"\n    \"s 56\\n\"\n    \"s 57\\n\"\n    \"s 58\\n\"\n    \"s 59\\n\"\n    \"s 60\\n\"\n    \"s 61\\n\"\n    \"s 62\\n\"\n    \"s 63\\n\"\n    \"s 64\\n\"\n    \"s 65\\n\"\n    \"s 66\\n\"\n    \"s 67\\n\"\n    \"s 68\\n\"\n    \"s 69\\n\"\n    \"s 70\\n\"\n    \"s 71\\n\"\n    \"s 72\\n\"\n    \"s 73\\n\"\n    \"s 74\\n\"\n    \"s 75\\n\"\n    \"s 76\\n\"\n    \"s 77\\n\"\n    \"s 78\\n\"\n    \"s 79\\n\"\n    \"s 80\\n\"\n    \"s 81\\n\"\n    \"s 82\\n\"\n    \"s 83\\n\"\n    \"s 84\\n\"\n    \"s 85\\n\"\n    \"s 86\\n\"\n    \"s 87\\n\"\n    \"s 88\\n\"\n    \"s 89\\n\"\n    \"s 90\\n\"\n    \"s 91\\n\"\n    \"s 92\\n\"\n    \"s 93\\n\"\n    \"s 94\\n\"\n    \"s 95\\n\"\n    \"s 96\\n\"\n    \"s 97\\n\"\n    \"s 98\\n\"\n    \"s 99\\n\"\n    \"s 100\\n\"\n    \"s 101\\n\"\n    \"s 102\\n\"\n    \"s 103\\n\"\n    \"s 104\\n\"\n    \"s 105\\n\"\n    \"s 106\\n\"\n    \"s 107\\n\"\n    \"s 108\\n\"\n    \"s 109\\n\"\n    \"s 110\\n\"\n    \"s 111\\n\"\n    \"s 112\\n\"\n    \"s 113\\n\"\n    \"s 114\\n\"\n    \"s 115\\n\"\n    \"s 116\\n\"\n    \"s 117\\n\"\n    \"s 118\\n\"\n    \"s 119\\n\"\n    \"s 120\\n\"\n    \"s 121\\n\"\n    \"s 122\\n\"\n    \"s 123\\n\"\n    \"s 124\\n\"\n    \"s 125\\n\"\n    \"s 126\\n\"\n    \"s 127\\n\"\n    \"s 128\\n\"\n    \"s 129\\n\"\n    \"s 130\\n\"\n    \"s 131\\n\"\n    \"s 132\\n\"\n    \"s 133\\n\"\n    \"s 134\\n\"\n    \"s 135\\n\"\n    \"s 136\\n\"\n    \"s 137\\n\"\n    \"s 138\\n\"\n    \"s 139\\n\"\n    \"s 140\\n\"\n    \"s 141\\n\"\n    \"s 142\\n\"\n    \"s 143\\n\"\n    \"s 144\\n\"\n    \"s 145\\n\"\n    \"s 146\\n\"\n    \"s 147\\n\"\n    \"s 148\\n\"\n    \"s 149\\n\"\n    \"s 150\\n\"\n    \"s 151\\n\"\n    \"s 152\\n\"\n    \"s 153\\n\"\n    \"s 154\\n\"\n    \"s 155\\n\"\n    \"s 156\\n\"\n    \"s 157\\n\"\n    \"s 158\\n\"\n    \"s 159\\n\"\n    \"s 160\\n\"\n    \"s 161\\n\"\n    \"s 162\\n\"\n    \"s 163"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\""
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"10 11\\n\"\n    \"t 1 10\\n\"\n    \"t 1 2\\n\"\n    \"t 1 3\\n\"\n    \"s 1\\n\"\n    \"s 2\\n\"\n    \"s 3\\n\"\n    \"s 4\\n\"\n    \"t 5 6\\n\"\n    \"s 5\\n\"\n    \"s 6\\n\"\n    \"s 10\"\n    ) == \"4 4 4 4\"\n\nprint(solution(\"\"))\nprint(solution(\"\"))\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\nst 1\\nst 2\\nst 3\\nst 4\\nst 5\\nst 6\\nst 10\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\""
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6\\nt 1 2\\nt 2 5\\nt 3 4\\n4 5\\ns 1\\ns 3\\ns 5') == '2'\nassert solution('10 11\\nt 1 10\\nt 2 1\\nt 4 3\\nt 5 6\\ns 1\\ns 2\\ns 3\\ns 4\\ns 5\\n6 7\\ns 6\\ns 7\\n8 9\\n10 10\\n12 13\\ns 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\ns 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\ns 2\\n3 3\\n5 5\\n7 7\\n11 11\\n13 13\\n15 15\\ns 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\ns 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\ns 2\\n3 3\\n5 5\\n7 7\\n11 11\\n13 13\\n15 15\\n''')\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 11') == '4'\nassert solution('5 6') == '2'\nassert solution('2 3') == '2'\nassert solution('10 11') == '4'\nassert solution('5 6') == '2'\n"
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nIceland 2016\nSweden 2015\nIceland 1982''') == '2015'\nassert solution('''5\nIceland 2016\nSweden 2015\nIceland 1982\nIceland 1984\nSweden 1983''') == '1984'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2015\"\nassert solution(\"3\") == \"1982\"\nassert solution(\"2\") == \"2016\"\nassert solution(\"1\") == \"1982\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2015\"\nassert solution(\"5\") == \"1982\"\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nIceland 2016\\nIceland 1982\\nIceland 1\\nIceland 2') == '1982'\nassert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nIceland 1\\nIceland 2') == '1998'\nassert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nIceland 1\\nIceland 2') == '1982'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2015'\nassert solution('5') == '1982'\nassert solution('4') == '2015'\nassert solution('5') == '1982'\nassert solution('4') == '2015'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2015'\nassert solution('3') == '1982'"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1982'\nassert solution('3') == '1982'\n"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '1985'\n\nassert solution('''\n6\nChina 2011\nChina 1972\nChina 1974\nChina 1996\nChina 1977\nChina 1988\nChina 2013\nChina 2018\nChina 2019\nChina 2020\nChina 2021\nChina 2022\nChina 2023\nChina 2024\nChina 2025\nChina 2026\nChina 2027\nChina 2028\nChina 2029\nChina 2030\nChina 2031\nChina 2032\nChina 2033\nChina 2034\nChina 2035\nChina 2036\nChina 2037\nChina 2038\nChina 2039\nChina 2040\nChina 2041\nChina 2042\nChina 2043\nChina 2044\nChina 2045\nChina 2046\nChina 2047\nChina 2048\nChina 2049\nChina 2050\nChina 2051\nChina 2052\nChina 2053\nChina 2054\nChina 2055\nChina 2056\nChina 2057\nChina 2058\nChina 2059\nChina 2060\nChina 2061\nChina 2062\nChina 2063\nChina 2064\nChina 2065\nChina 2066\nChina 2067\nChina 2068\nChina 2069\nChina 2070\nChina 2071\nChina 2072\nChina 2073\nChina 2074\nChina 2075\nChina 2076\nChina 2077\nChina 2078\nChina 2079\nChina 2080\nChina 2081\nChina 2082\nChina 2083\nChina 2084\nChina 2085\nChina 2086\nChina 2087\nChina 2088\nChina 2089\nChina 2090\nChina 2091\nChina 2092\nChina 2093\nChina 2094\nChina 2095\nChina 2096\nChina 2097\nChina 2098\nChina 2099\nChina 2100\nChina 2101\nChina 2102\nChina 2103\nChina 2104\nChina 2105\nChina 2106\nChina 2107\nChina 2108\nChina 2109\nChina 2110\nChina 2111\nChina 2112\nChina 2113\nChina 2114\nChina 2115\nChina 2116\nChina 2117\nChina 2118\nChina 2119\nChina 2120\nChina 2121\nChina 2122\nChina 2123\nChina 2124\nChina 2125\nChina 2126\nChina 2127\nChina 2128\nChina 2129\nChina 2130\nChina 2131\nChina 2132\nChina 2133\nChina 2134\nChina 2135\nChina 2136\nChina 2137\nChina 2138\nChina 2139\nChina 2140\nChina 2141\nChina 2142\nChina 2143\nChina 2144\nChina 2145\nChina 2146\nChina 2147\nChina 2148\nChina 2149\nChina 2150\nChina 2151\nChina 2152\nChina 2153\nChina 2154\nChina 2155\nChina 2156\nChina 2157\nChina 2158\nChina 2159\nChina 2160\nChina 2161\nChina 2162\nChina 2163\nChina 2164\nChina 2165\nChina 2166\nChina 2167\nChina 2168\nChina 2169\nChina 2170\nChina 2171\nChina 2172\nChina 2173\nChina 2174\nChina 2175\nChina 2176\nChina 2177\nChina 2178\nChina 2179\nChina 2180\nChina 2181\nChina 2182\nChina 2183\nChina 2184\nChina 2185\nChina 2186\nChina 2187\nChina 2188\nChina 2189\nChina 2190\nChina 2191\nChina 2192\nChina 2193\nChina 2194\nChina 2195\nChina 2196\nChina 2197\nChina 2198\nChina 2199\nChina 2400\nChina 2401\nChina 2402\nChina 2403\nChina 2404\nChina 2405\nChina 2406\nChina 2407\nChina 2408\nChina 2409\nChina 2410\nChina 2411\nChina 2412\nChina 2413\nChina 2414\nChina 2415\nChina 2416\nChina 2417\nChina 2418\nChina 2419\nChina 2420\nChina 2421\nChina 2422\nChina 2423\nChina 2424\nChina 2425\nChina 2426\nChina 2427\nChina 2428\nChina 2429\nChina 2430\nChina 2431\nChina 2432\nChina 2433\nChina 2434\nChina 2435\nChina 2436\nChina 2437\nChina 2438\nChina 2439\nChina 2440\nChina 2441\nChina 2442\nChina 2443\nChina 2444\nChina 2445\nChina 2446\nChina 2447\nChina 2448\nChina 2449\nChina 2450\nChina 2451\nChina 2452\nChina 2453\nChina 2454\nChina 2455\nChina 2456\nChina 2457\nChina 2458\nChina 2459\nChina 2460\nChina 2461\nChina 2462\nChina 2463\nChina 2464\nChina 2465\nChina 2466\nChina 2467\nChina 2468\nChina 2469\nChina 2470\nChina 2471\nChina 2472\nChina 2473\nChina 2474\nChina 2475\nChina 2476\nChina 2477\nChina 2478\nChina 2479\nChina 2480\nChina 2481\nChina 2482\nChina 2483\nChina 2484\nChina 2485\nChina 2486\nChina 2487\nChina 2488\nChina 2489\nChina 2490\nChina 2491\nChina 2492\nChina 2493\nChina 2494\nChina 2495\nChina 2496\nChina 2497\nChina 2498\nChina 2499\nChina 2500\nChina 2501\nChina 2502\nChina 2503\nChina 2504\nChina 2505\nChina 2506\nChina 2507\nChina 2508\nChina 2509\nChina 2510\nChina 2511\nChina 2512\nChina 2513\nChina 2514\nChina 2515\nChina 2516\nChina 2517\nChina 2518\nChina 2519\nChina 2520\nChina 2521\nChina 2522\nChina 2523\nChina 2524\nChina 2525\nChina 2526\nChina 2527\nChina 2528\nChina 2529\nChina 2530\nChina 2531\nChina 2532\nChina 2533\nChina 2534\nChina 2535\nChina 2536\nChina 2537\nChina 2538\nChina 2539\nChina 2540\nChina 2541\nChina 2542\nChina 2543\nChina 2544\nChina 2545\nChina 2546\nChina 2547\nChina 2548\nChina 2549\nChina 2550\nChina 2551\nChina 2552\nChina 2553\nChina 2554\nChina 2555\nChina 2556\nChina 2557\nChina 2558\nChina 2559\nChina 2560\nChina 2561\nChina 2562\nChina 2563\nChina 2564\nChina 2565\nChina 2566\nChina 2567\nChina 2568\nChina 2569\nChina 2570\nChina 2571\nChina 2572\nChina 2573\nChina 2574\nChina 2575\nChina 2576\nChina 25"
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n\"\"\") == \"2015\"\nassert solution(\"\"\"\n5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\nIceland 1982\nSweden 1999\n3\nIceland 2\nIceland 1\nIceland 2\nIceland 2\nIceland 1\n\"\"\") == \"1983\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''a\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk''') == '10'"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '10'"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\""
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('aabbcccddddeeeee') == '10'\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abbcccddddeeeee') == '10'"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abbcccddddeeeee') == '10'"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\nassert solution(\"abbcdddd\") == \"1\"\nassert solution(\"abbc\") == \"1\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abbcccddddeeeee') == '10'"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering. is a blight on.. and its.. humanity'\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\n\"\n                 \"Inefficiency is a blight on the world and its\\n\"\n                 \"humanity\") == \"Engineering. will save the world from inefficiency.. is a blight on.. and its humanity\"\nassert solution(\"Innocence is a corruption and a curse, but by the end of it only the developer knows it is correct.\\n\"\n                 \"By its own ignorance, people cannot even read it.\") == \"Innocence is a corruption and a curse, but by the end of it only the developer knows it is correct.\"\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency\\n. is a blight on.. and its humanity\\n'"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == \"Engineering will save the world from inefficiency.\"\n\"\"\"\nfrom typing import List, Any\nimport re"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its humanity''') == '''Engineering will save the world from inefficiency.\n. is a blight on.. and its\nhumanity'''"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency.. is a blight on.. and its humanity'\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity.'\n'''\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering will save the world from inefficiency.. is a blight on.. and its humanity'''"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering will save the world from..\\n. is a.. and its..\\n\"\nassert solution(\"I'm a happy man\") == \"I'm a..\\n.\"\nassert solution(\"I'm the man\") == \"I'm the..\\n.\"\nassert solution(\"I'm the man and the girl\") == \"I'm the..\\n...\\n...\\n...\\n\"\nassert solution(\"I'm the man and I'm the girl\") == \"I'm..\\n...\\n...\\n...\\n.\"\n"
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering... and its humanity\""
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\n\n'''\n\nimport math\nimport re\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n        self.prev = None\n\nclass LinkedList:\n    def __init__(self):\n        self.head = None\n        self.size = 0\n\n    def addNode(self, data):\n        newNode = Node(data)\n        if not self.head:\n            self.head = newNode\n            return\n        curr = self.head\n        while curr.next:\n            curr = curr.next\n        curr.next = newNode\n        newNode.prev = curr\n        newNode.next = None\n        return\n\n    def deleteNode(self, key):\n        curr = self.head\n        if not curr:\n            return\n        if curr and curr.data == key:\n            if not curr.next:\n                curr = None\n                return\n            curr = curr.next\n            curr.prev = None\n            curr.next = None\n        while curr and curr.next:\n            if curr.data == key:\n                break\n            curr = curr.next\n        if not curr:\n            return\n        if curr.prev:\n            curr.prev.next = curr.next\n        else:\n            self.head = curr.next\n        curr.next.prev = curr.prev\n        curr = None\n        return\n\n    def display(self):\n        elems = []\n        curr = self.head\n        while curr:\n            elems.append(curr.data)\n            curr = curr.next\n        print('- '*30)\n        print(elems)\n        print('- '*30)\n        return\n\n    def sort(self):\n        if self.head:\n            curr = self.head\n            while curr:\n                curr.prev = curr.next\n                curr.next = curr.prev\n                curr = curr.prev\n            self.head.prev = None\n            self.head.next = None\n            self.head = self.head.prev\n            self.display()\n        return"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('10 20 10 20 30 20 40 20 50 20') =='satisfactory'\nassert solution('5 3') == 'unsatisfactory'\nassert solution('10 20 10 20 30 20 40 20') == 'unsatisfactory'\nassert solution('8 5 3') == 'unsatisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\n\nassert solution('''\n10 5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-10 -5\n-"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\nassert solution('''\n5\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'''\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n\"\"\") == \"unsatisfactory\"\nassert solution(\"\"\"\n5 3\n1 2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n\"\"\") == \"satisfactory\"\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') =='satisfactory'\nassert solution('1 -2 3') =='satisfactory'\nassert solution('1 -2 -3') == 'unsatisfactory'\nassert solution('1 2 -3') == 'unsatisfactory'\nassert solution('1 -2 3') == 'unsatisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('-1 2 3') == 'unsatisfactory'\nassert solution('-1 -2 3') =='satisfactory'\nassert solution('1 -2 3') =='satisfactory'\nassert solution('1 -2 -3') =='satisfactory'\n"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\\n') =='satisfactory'\nassert solution(\n    '8 2\\n1 -1 2\\n1 1 -2\\n-1 2 3\\n-1 1 -3\\n2 -1 -3\\n2 2 -3\\n3 -1 -2\\n3 2 1\\n') == 'unsatisfactory'"
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() =='satisfactory'\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\nassert solution('5 3\\n1 2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n8\n1 1 1 5 3 4 6 6\n\"\"\") == \"4\"\n\"\"\"\n5\n\n\"\"\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 1 5 3 4 6 6\n''') == '4'\nassert solution('''\n2\n1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n8\n1 1 1 5 3 4 6 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n1 1 1 5 3 4 6 6 2 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1 5 3 4 6 6') == \"none\"\nassert solution('8 1 1 5 3 4 6 6') == \"4\"\nassert solution('8 10 1 1 5 3 4 6 6') == \"1\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\\n\") == \"4\"\nprint('All tests passed!')"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == 'none'\nassert solution('4\\n1 1 1 5 3 4 6 6') == '1'\nassert solution('5\\n1 1 1 5 3 4 6 6') == '5'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2''') == '1'\nassert solution('''3\n2 1 2''') == '2'\nassert solution('''5\n1 1 1 1 1''') == '1'\nassert solution('''10\n1 1 1 1 1 1 1 1 1''') == '1'\nassert solution('''9\n1 1 1 1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('5\\n1 1 1 5 3 4 6 6') == '2'\n\"\"\""
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    8\n    1 1 1 5 3 4 6 6\n''') == \"4\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20:00:00\n04:00:00''') == '08:00:00'\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\n'''\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nprint(solution(input()))"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10:00:00\") == \"10:00:00\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nassert solution(\"20:00:00\\n14:00:00\") == \"15:00:00\"\n\"\"\""
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00\", \"04:00:00\") == \"08:00:00\"\nassert solution(\"03:45:00\", \"00:25:00\") == \"04:25:00\"\nassert solution(\"23:00:00\", \"00:25:00\") == \"00:25:00\"\nassert solution(\"00:00:00\", \"00:25:00\") == \"00:25:00\"\nassert solution(\"00:00:00\", \"00:25:00\") == \"00:00:00\"\n\"\"\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20:00:00\",\"04:00:00\") == \"08:00:00\"\nassert solution(\"00:01:00\",\"00:03:00\") == \"00:03:00\"\n\"\"\"\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\nassert solution('19:29:00\\n00:00:00') == '19:29:00'\n"
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16:00:00') == '08:00:00'\nassert solution('18:00:00') == '11:00:00'\n\"\"\""
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\n\"\"\"\nimport math\n\nl, n = map(int, input().split())"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n5\n''') == '2'\nassert solution('''51\n8\n''') == '4'\nprint(f\"{solution('''{input()}''')}\")"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '4'\nassert solution('40 15') == '10'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('31 6') == '4'\nassert solution('1 1') == '2'"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1', solution('1\\n1')\nassert solution('2\\n1') == '2', solution('2\\n1')\nassert solution('2\\n2') == '3', solution('2\\n2')\nassert solution('3\\n1') == '3', solution('3\\n1')\nassert solution('3\\n2') == '4', solution('3\\n2')\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution('10 1') == \"1\"\nassert solution('1 2 3') == \"3\"\nassert solution('10 1 2') == \"1\"\nassert solution('1 1 1') == \"3\"\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '4'\nassert solution('6') == '5'\nassert solution('5') == '7'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n20 30\n''') == '4'\nassert solution('''\n30 20\n''') == '1'\nassert solution('''\n100 100\n''') == '3'\nassert solution('''\n1000 1000\n''') == '2'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('30 1') == '4'\nassert solution('100 10') == '10'\nassert solution('20 30') == '40'\n"
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"31 6\") == \"4\""
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('10') == '10'\nassert solution('100') == '100'\nassert solution('1000') == '1000'\nassert solution('10000') == 'e'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2.00000000000000000000000000000000000000000000000'\nassert solution('1000') == '2.7182818284590541651986487'"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2.0'\nassert solution('2') == '3.0'\nassert solution('3') == '4.0'\nassert solution('4') == '5.0'\nassert solution('5') == '6.0'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2.6'\nassert solution('3.0') == '2.6'\nassert solution('3.1') == '2.6'\nassert solution('3.01') == '2.61'\nassert solution('3.001') == '2.61'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"2.6666666666666665\""
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('12345') == '11.852713178242424'\nassert solution('0') == '1'\nassert solution('-1') == '0.5'\nassert solution('100') == '10.0000000000000000'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2.0'\nassert solution('3') == '2.82842712475'\nassert solution('10') == '2.718281828459'\nassert solution('100') == '2.718281828459'\nassert solution('100000000000000') == '2.718281828459'\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2.0', solution('2')\nassert solution('1') == '1.0', solution('1')\nassert solution('3') == '2.0', solution('3')\nassert solution('4') == '3.0', solution('4')\nassert solution('5') == '4.0', solution('5')\n"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0\n2\n''') == '2.0'\n\nprint('TESTS PASSED!')"
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2.0000000000000003'\nassert solution('1') == '1.0000000000000002'\n\"\"\"\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 3\n1 3 3\n2 2 4\n2 1 1\n1 2 1\n2 3 3''') == 'opponent'\nassert solution('''5 1 7\n2 2 3\n2 4 3\n1 2 3\n1 3 2\n2 4 3''') == 'paul'\nassert solution('''1 3 1\n2 3 2\n2 2 3\n1 2 2\n1 1 1\n1 3 2''') == 'paul'\nassert solution('''4 1 7\n2 3 2\n2 4 3\n1 2 3\n1 3 2\n2 4 3''') == 'paul'\nassert solution('''5 2 7\n2 3 2\n2 4 3\n1 2 3\n1 3 2\n2 4 3''') == 'paul'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n=====\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 5') == 'opponent'\nassert solution('5 3 7') == 'paul'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3\n7\n''') == 'opponent'\nassert solution('''\n5\n10\n3\n''') == 'paul'\n'''\n    N = int(input())\n    P = int(input())\n    Q = int(input())\n    \n    if Q <= P:\n        print(f'opponent')\n    else:\n        print(f'paul')\n'''\n\nN = 5\nP = 10\nQ = 3"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('1 2 1') == 'opponent'\nassert solution('5 4 8') == 'opponent'\n\n'''"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"5 3 5\") == \"opponent\""
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\\n\") == \"paul\"\n\nSample Input:\n5 3 6\nSample Output:\nopponent\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"5 4 4\") == \"opponent\"\nassert solution(\"5 1 2 1\") == \"paul\"\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 7\npaul\nopponent''') == 'opponent'\n"
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 7\") == \"paul\", \"Should return \\\"Paul\\\"\"\nassert solution(\"5 3 8\") == \"opponent\", \"Should return \\\"Opponent\\\"\"\nassert solution(\"5 5 7\") == \"paul\", \"Should return \\\"Paul\\\"\"\nassert solution(\"5 5 8\") == \"opponent\", \"Should return \\\"Opponent\\\"\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n1''') == '2'\nassert solution('''3\n1\n1\n1''') == '2'\nassert solution('''10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '9'\nassert solution('''13\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '12'\nassert solution('''100\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '99'\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '2'\nassert solution('1\\n') == '2'\nassert solution('10\\n') == '11'"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"6\"\nassert solution(\"12\") == \"10\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n3\n4\n5\"\"\") == \"3\"\nassert solution(\"\"\"8\n2\n2\n4\n4\n5\n6\n7\n3\"\"\") == \"5\"\n"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'"
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('a1233') == 'Yes'\nassert solution('123d') == 'No'\nassert solution('aa12') == 'Yes'\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"1234a\") == \"Yes\"\nassert solution(\"aaaa\") == \"Yes\"\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('1233') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('1231') == 'Yes'"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('A123') == 'Yes'\nassert solution('1234') == 'Yes'\nassert solution('123A') == 'No'\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"Yes\"\nassert solution(\"123ab\") == \"No\"\n\ninput = stdin.read()\n\nprint(solution(input))\n\"\"\"\n\nimport re"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"123ab\") == \"No\"\nassert solution(\"123ab1\") == \"No\"\nassert solution(\"123ab2\") == \"No\"\n"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''123\n123a''') == \"No\"\n\nassert solution('''12\n123a''') == \"Yes\"\n\nassert solution('''1\n123a''') == \"Yes\"\n\nassert solution('''123\n12''') == \"No\"\n\nassert solution('''a123\n123a''') == \"No\""
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\n\"\"\"\nimport re"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\n'''"
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''123\n123a''') == 'No'\n\nassert solution('''bab\n123a''') == 'Yes'\n\nassert solution('''ba\n123a''') == 'No'\n\nassert solution('''a123\n123a''') == 'Yes'\n\nassert solution('''a123\n123a''') == 'No'"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''zepelepenapa papapripikapa''') == 'zelena paprika'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '', 'Test #1'\nassert solution('aapaaalllll') == 'aapaaalllll', 'Test #2'\nassert solution('aapaaalllll') == 'aapaaalllll', 'Test #2'\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INP) == OUT\nINP = 'zepelepenapa papapripikapa'\nOUT = 'zelena paprika'"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"a b c e f g h i j k l m n o p q r s t u v w x y z\"\n) == \"abc ef ghi jkl mno pqrs tuv wxyz\"\nassert solution(\n    \"e e e f e e e e e e e e e f e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e e"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"epelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"kepemipijapa\") == \"kepemipijapa\"\nassert solution(\"kepemipijapa apa\") == \"kepemipijapa apa\"\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(Luka) == \"zelena paprika\""
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kemija papapripe\") == \"kepemipijapa\"\n"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'"
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"papapripikapa\") == \"zepelepenapa\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4') == '12'\nassert solution('14 3') == '14'\nassert solution('16 9') == '16'\nassert solution('-20 8') == '-20'\nassert solution('-25 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '-34'\nassert solution('3 3') == 'ALL GOOD'\nassert solution('1 100') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32 2') == '-32', \"First\"\nassert solution('-1000 1') == 'IMPOSSIBLE', \"Second\"\nassert solution('0 1') == 'ALL GOOD', \"Third\"\nassert solution('-1 1') == 'ALL GOOD', \"Fourth\"\nassert solution('-9999 1') == 'ALL GOOD', \"Fifth\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0\") == \"IMPOSSIBLE\"\nassert solution(\"-10 -10\") == \"IMPOSSIBLE\"\nassert solution(\"-10 -12\") == \"IMPOSSIBLE\"\nassert solution(\"100 100\") == \"ALL GOOD\"\nassert solution(\"-1 -1\") == \"ALL GOOD\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n32 2\n''') == '-32'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'IMPOSSIBLE', 'Should return \\'IMPOSSIBLE\\' for invalid inputs.'\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32 2') == '-32'\nassert solution('20 4') == 'IMPOSSIBLE'\nassert solution('-10 4') == '-10'\nassert solution('-10 4') == '-10'\nassert solution('2 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32 2') == '-32'\nassert solution('-32 2') == 'IMPOSSIBLE'\nassert solution('-5 2') == 'ALL GOOD'\nassert solution('-100 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('-32 2') == '-32'\nassert solution('32 2') == '-32'\nassert solution('-10 20') == '-10'\n\nimport math\n\nX, Y = map(int, input().split())\nprint(int(X)) if abs(Y - int(X)) <= 10**-6 else print('IMPOSSIBLE')\n\"\"\"\n\nfrom decimal import *\n\ngetcontext().prec = 30\n\nX, Y = map(int, input().split())"
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"8\"\n\nassert solution(\"1 0\") == \"0\"\nassert solution(\"-1 0\") == \"0\"\nassert solution(\"-1 -1\") == \"IMPOSSIBLE\"\n\"\"\"\nimport math\nfrom math import sqrt\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"1 3 4 5\") == \"none\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"both\"\nassert solution(\"2 2 3 3\\n1 3 4\") == \"one\"\nassert solution(\"2 2 3 3\\n1 3 4\\n2 2 5\\n3 4 6\") == \"both\"\nassert solution(\"2 2 3 3\\n1 3 4\\n2 2 5\\n3 4 6\\n2 4 3\\n5 2 1\\n2 1 3\\n5 4 2\\n1 2 4\\n1 4 5\\n1 4 6\\n2 3 3\\n3 4 4\\n2 3 4\\n3 3 3\\n1 4 2\\n1 4 2\\n1 3 3\") == \"both\"\nassert solution(\"2 2 3 3\\n1 3 4\\n2 2 5\\n3 4 6\\n2 4 3\\n5 2 1\\n2 1 3\\n5 4 2\\n1 2 4\\n1 4 5\\n1 4 6\\n2 3 3\\n3 4 4\\n2 3 4\\n3 3 3\\n1 4 2\\n1 4 2\\n1 3 3\") == \"one\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\nassert solution(\"1 2 3\") == \"none\"\n\n---\n\"\"\"\n\nstdin = input()\npostman_time = int(stdin.split()[0])\nmilkman_time = int(stdin.split()[1])\ngarbageman_time = int(stdin.split()[2])\n\npostman_attack = int(stdin.split()[3])\nmilkman_attack = int(stdin.split()[4])\ngarbageman_attack = int(stdin.split()[5])\n\ntotal_attack_count = 0\ntotal_attack_count += postman_attack\ntotal_attack_count += milkman_attack\ntotal_attack_count += garbageman_attack"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"both\"\nassert solution(\"3 4 2\") == \"both\"\nassert solution(\"1 2 2\") == \"both\"\nassert solution(\"1 2 2 2\") == \"both\"\nassert solution(\"1 3 2 4\") == \"both\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\") == \"both\"\nassert solution(\"1 3 4 5\") == \"one\"\nassert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 1 2 2\") == \"one\"\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('1 1 1') == 'none'"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'both'\nassert solution(stdin='2 2 3 3') == 'both'\nassert solution(stdin='1 3 4') == 'one'\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1 2') == 'both'\nassert solution('3 2 4 2') == 'both'\nassert solution('3 2 4 1') == 'one'\nassert solution('2 3 2 1') == 'none'\nassert solution('2 3 1 1') == 'one'\n"
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 3') == 'both'\nassert solution('4 1 3') == 'both'\nassert solution('3 3 4') == 'none'\n\n'''"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"5 6 7\") == \"7\"\nassert solution(\"-4 -6 -7\") == \"9\"\nassert solution(\"-8 -6 -3\") == \"3\"\nprint(\"Congratulations! Your solution is correct.\")\n\n'''"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 9 10 6\") == \"10\"\nassert solution(\"-100 -20 10 0\") == \"0\"\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 2') == '1'\nassert solution('0 0 0 1') == '2'\n\nstdin = input().split()\na, b, c = int(stdin[0]), int(stdin[1]), int(stdin[2])\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('-1 -2 -3') == '-3'\nassert solution('-1 -1 -1') == '-2'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('10 7 10') == '3'\nassert solution('-2 3 -1') == '-3'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6 8') == '10'\n\"\"\"\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3 5 7\n''') == '10'\nprint(solution('''\n    1 3 5\n'''))\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('8 5 7 3') == '10'\nassert solution('7 6 4 3') == '10'\nassert solution('9 8 3 5') == '10'\nassert solution('5 6 4 3') == '10'\n"
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 6 8''') == '10'\nassert solution('''2 4 6''') == '4'\n'''\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('500 70') == '533'\nassert solution('3 50') == '5'\nassert solution('400 60') == '5'\nassert solution('500 100') == '600'\nassert solution('500 50') == '600'\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('500 70') == '533'\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"500 70\") == \"533\""
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"10000 0\") == \"10000\""
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('500 70') == '533'\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"500 60\") == \"534\"\nassert solution(\"1000 50\") == \"1033\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"533\"\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 100\") == \"533\"\nassert solution(\"5 50\") == \"533\"\nassert solution(\"5 100 1\") == \"533\"\nassert solution(\"5 100 1.1\") == \"547\"\nassert solution(\"5 100 1.1 1\") == \"547\"\n"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('500 70') == '533'\nassert solution('500 60') == '500'\nassert solution('500 -10') == '490'\nassert solution('500 100') == '500'"
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('500 70') == '533'\nassert solution('1000 70') == '0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 9\n69 60\n100 60''') == '39.0'\nassert solution('''2 1\n1 1\n1 1''') == '2.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 9, 69, 60, 100, 60]) == '39.0'\nassert solution([2, 10, 69, 60, 100, 60]) == '29.92872881355947'\nassert solution([2, 1, 69, 60, 100, 60]) == '30.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 9\") == \"39.0\"\n\nprint(solution(input()))\n\n\"\"\"\n\nN, g = map(int, stdin.split())\nd = []\nfor i in range(N):\n    d.append(list(map(int, stdin.split())))"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('100 60') == '30.0'\n\"\"\"\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '-16.0'\nassert solution('2') == '-33.0'\nassert solution('3') == '-32.0'\n\nassert solution('2 5') == '3.5'\nassert solution('2 100') == '-15.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n90\n''') == '90.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('2 10') == '39.0'\nassert solution('2 11') == '29.0'\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 9, 69, 60, 100, 60]) == \"39.0\"\nassert solution([2, 9, -10, 60, 100, 60]) == \"30.0\"\n"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('4 1') == '0.1'"
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5 10\n15 20\n25 30\n''') == '36.0'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n23 27 31 28 30\n''') == '2 28'''\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n23 27 31 28 30\nSample Output:\n2 28\n''') == '2 28'\n\nassert solution('''\n3\n10 10 10\nSample Output:\n2 10\n''') == '2 10'\n\nassert solution('''\n4\n20 20 20 20\nSample Output:\n2 20\n''') == '2 20'\n\nassert solution('''\n5\n19 21 22 23 24\nSample Output:\n4 23\n''') == '4 23'\n\nassert solution('''\n5\n22 21 20 20\nSample Output:\n4 20\n''') == '4 20'"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2 28'"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 4\\n') == '3 4'\nassert solution('1\\n4 4\\n') == '4 4'\nassert solution('1\\n-12 -2 4 -7\\n') == '3 6'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\nassert solution(\"4\\n1 2 3 4\") == \"1 2\"\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5 8 6 4\\n\") == \"2 4\"\nprint(solution(input()))\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n23 27 31 28 30\n''') == '2 28'\nassert solution('''\n5\n23 27 31 28 30\n''') == '1 30'\nassert solution('''\n5\n23 27 31 28 30\n''') == '0 28'\nassert solution('''\n5\n23 27 31 28 30\n''') == '4 30'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '1 2'\nassert solution('1 2 3') == '1 2'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '8 7'"
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n23 27 31 28 30\n14 21 27 31 28 30\n''') == '2 28'\nassert solution('''5\n23 27 31 28 30\n14 21 27 31 28 30\n''') == '2 30'\nassert solution('''5\n23 27 31 28 30\n14 21 27 31 28 30\n''') == '2 30'\nassert solution('''5\n23 27 31 28 30\n14 21 27 31 28 30\n''') == '2 30'\nassert solution('''5\n23 27 31 28 30\n14 21 27 31 28 30\n''') == '2 30'\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 5') == '3'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n''') == '2'''"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'\nassert solution('''\n3 8\n1 2 3 2 2\n''') == '2'\n'''\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n3 2\\n') == '1'\nassert solution('2\\n3\\n1 2\\n') == '2'\nassert solution('3\\n1\\n2 3\\n') == '2'"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 6\n1 2 3\n\"\"\") == \"3\""
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == \"2\"\n'''\n\n\nimport sys\n\nn, m = map(int, input().split())\nlist1 = list(map(int, input().split()))\n\ncount = 0\n\nlist1 = sorted(list1)\n\nfor i in range(len(list1)):\n    for j in range(i, len(list1)):\n        if list1[j] + list1[i] <= m:\n            count += 1\n\nprint(count)\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3 5') == '2'\nassert solution('3 2') == '1'\nassert solution('3 2 3') == '2'\nassert solution('10 10 10') == '1'\n"
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n1 2 3\") == \"2\""
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\n\nassert solution(\"3\") == \"1\"\n\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nWMMWM\") == \"9\"\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"3\") == \"9\"\nassert solution(\"-10\") == \"2\"\nassert solution(\"-1\") == \"1\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('10') == '18'\nassert solution('100') == '100'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"5\") == \"10\"\nassert solution(\"11\") == \"10\"\nassert solution(\"12\") == \"10\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\nMWW\n2\nMWM\n''') == '1'\nassert solution('''1\nMMW\n2\nMMM\n''') == '0'\nassert solution('''1\nMMW\n3\nMMM\n''') == '1'\nassert solution('''1\nMMW\n2\nMWM\n''') == '1'\nassert solution('''1\nMMW\n2\nMMM\n''') == '1'\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '10'\n\"\"\"\n"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\nWWWWMMWWM\n''') == '1'\n\nassert solution(\n'''\n1\nMMWMMWWM\n''') == '0'\n\nassert solution(\n'''\n2\nWWWWMMW\n''') == '0'\n\nassert solution(\n'''\n6\nWWMMMMM\n''') == '1'\n\nassert solution(\n'''\n4\nMMWMM\n''') == '1'"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '9'\nassert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('-1') == '1'\nassert solution('99') == '99'"
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(samples[0]) == \"2\"\nassert solution(samples[1]) == \"3\"\n\"\"\""
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\nundo\\n3\\n') == '1\\n3'\nassert solution('4\\n2\\nundo\\n3\\nundo\\n2\\nundo\\n1\\nundo\\nundo\\n') == '2'\nprint(\"Solution:\")\nprint(solution(input()))\n'''\nimport math"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()[:-1]\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('4 5\\n-2 3 4 5 8 -1') == '1'\nassert solution('1 1\\n2 2') == '2'\nassert solution('1 0\\n2 2') == '1'\nassert solution('4 4\\n-2 -2 3') == '4'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('1000000000\\n-100000') == '1000000000'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n8 -2 3 undo 2\n''') == '3'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('4 1\\n3 2 4 -1\\n2 0 -1') == '2'\nassert solution('6 1\\n5 -1 7 -1\\n-1 5 6') == '5'\nassert solution('6 5\\n7 2 -1\\n2 1 5') == '4'\nassert solution('8 3\\n-1 -1 4\\n-1 5 -1') == '0'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n8 -2 3 undo 2\n''') == '3'\nassert solution('''\n5 5\n-10000 -10000 1\n''') == '1'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n8 -2 3 undo 2\n''') == '3'\nassert solution('''\n5 5\n-1\n''') == '1'\nassert solution('''\n4 4\n-1\n''') == '4'\nassert solution('''\n5 4\n-1\n''') == '4'\nassert solution('''\n5 5\n-1\n''') == '4'\n"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('10 1\\n11 -3 7 undo 7 undo 2\\n11 -5 1 undo 7 undo 5 undo 1') == '10'\nassert solution('5 9\\n6 -4 7 undo 7 undo 4 undo 2\\n6 -3 1 undo 4 undo 2 undo 6') == '6'\nassert solution('5 30\\n13 -5 1 undo 4 undo 2\\n14 -6 1 undo 7 undo 5 undo 14') == '13'\nassert solution('5 100\\n-19 -4 5 undo 5 undo 4 undo 19 undo 9 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19 undo 4 undo -19 undo -19 undo -19"
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n8 -2 3 undo 2\n''') == '3'\nassert solution('''\n3 3\n10 -1 -1 undo 1\n5 3\n10 -1 -1 undo 1\n2 3\n10 -1 -1 undo 1\n''') == '1'\nassert solution('''\n1 5\n0\n5 0\n''') == '5'\nassert solution('''\n1 5\n0\n-1\n''') == '0'\nassert solution('''\n5 2\n0\n2 0\n''') == '2'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1\\n') == '6 7'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6 7'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6 7'"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 4\\n2 2 1\\n3 2 3\"\n    ) == \"6 7\"\nprint(solution(\n    \"4 5\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\"\n    ))\nprint(solution(\n    \"3 3\\n1 2 3\\n2 3 4\\n3 4 5\"\n    ))\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"6 7\"\nassert solution(\"1 2 3\") == \"5 6\"\nassert solution(\"3 2 1\") == \"2 3\"\nprint(\"You're a swather! \u270c\")\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\n\nassert solution('''\n2 3\n2 2 2\n''') == '7'\n\nassert solution('''\n1 2\n1 1\n''') == '1'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n3 2 1\n''') == '6 7'\nassert solution('''\n1 1 2 3 3\n3 2 1\n''') == '4 5 6'\nassert solution('''\n1 1 2 3 3\n3 2 1\n''') == '0 0 0'\nassert solution('''\n1 1 1\n1 1 1\n''') == '1 1 1'\n"
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n3 2 1\\n') == '6 7'\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"65 incorrect\"\n\"\"\"\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect\\n'''\n\nimport re\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    dictionary\n    2\n    d\n    e\n    correct\"\"\") == \"\"\"64 correct\n665 incorrect\n\"\"\"[:-1]"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\napple apple\\n4\\napple apple\\n4\\napple apple\") == \"2\\n1 correct\\n0 incorrect\"\nassert solution(\"4\\napple apple\\n4\\napple apple\\n4\\napple apple\") == \"1\\n4 correct\\n0 incorrect\"\nassert solution(\"5\\napple apple\\n4\\napple apple\\n4\\napple apple\") == \"3\\n4 correct\\n0 incorrect\"\nassert solution(\"10\\napple apple\\n4\\napple apple\\n4\\napple apple\\n4\\napple apple\\n4\\napple apple\") == \"9\\n8 correct\\n1 incorrect\"\nassert solution(\"12\\napple apple\\n4\\napple apple\\n4\\napple apple\\n4\\napple apple\\n4\\napple apple\") == \"10\\n8 correct\\n1 incorrect\"\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect'\n'''\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nkleinen anstelle kleinen\n5\nkleinen kleinen anstelle kleinen kleinen kleinen\n''') == \"2 correct\\n1 incorrect\\n3 correct\\n3 incorrect\"\n\nassert solution('''4\nkleinen kleinen kleinen kleinen kleinen\n5\nkleinen kleinen kleinen kleinen kleinen kleinen\n''') == \"2 correct\\n1 incorrect\\n3 correct\\n1 incorrect\"\n\nassert solution('''5\nkleinen anstelle kleinen\n5\nkleinen kleinen anstelle kleinen kleinen kleinen\n''') == \"3 correct\\n1 incorrect\\n3 correct\\n1 incorrect\"\n\nassert solution('''4\nkleinen kleinen kleinen kleinen kleinen\n5\nkleinen kleinen kleinen kleinen kleinen kleinen\n''') == \"3 correct\\n1 incorrect\\n3 correct\\n1 incorrect\"\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 incorrect\\n665 correct'"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"65 correct\\n66 incorrect\\n\"\n\n\"\"\"\n\nn = int(input())\n\nn = int(input())\n\ninput_dictionary = {}\n\ni = 0\n\nwhile i < int(input()):\n    lst_input = input().split()\n    input_dictionary[lst_input[0]] = (lst_input[1], lst_input[2])\n    i += 1\n\ni = 0\n\nwhile i < int(input()):\n    lst_input = input().split()\n    if lst_input[0] in input_dictionary:\n        if input_dictionary[lst_input[0]][1] == lst_input[1]:\n            print(str(1) + \" correct\")\n        else:\n            print(str(2) + \" incorrect\")\n    else:\n        print(str(0) + \" incorrect\")\n    i += 1"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'correct'\nassert solution('1') == 'incorrect'\nassert solution('1') == 'incorrect'\n"
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 incorrect\\n665 correct\\n'''"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 4 3') == '7'\nassert solution('4 2 3 4 3') == '7'\nassert solution('3 3 4 3') == '5'"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1 1 1 1\n''') == '1'\n\nassert solution('''\n5\n1 5 1 3 5\n''') == '1'\n\nassert solution('''\n10\n1 3 2 3 3 3 2 2 1\n''') == '4'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\nassert solution('12\\n8 3 6 2') == '7'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 4 3') == '7'\nassert solution('5\\n1 5 4 3 2') == '8'\nassert solution('20\\n3 4 5 6 7 8 10 11 12 13 14 15 16 17 18 19 20') == '29'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 4 3\n''') == '7'\nassert solution('''1\n1\n1\n1\n''') == '1'\nassert solution('''3\n3\n1\n1\n''') == '2'\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\nassert solution(\"5\\n2 1 3 3 2\\n3 5 4\") == \"6\"\nassert solution(\"10\\n5 2 5 2 2 2 2 2\\n9 9 9 9 9 9\") == \"12\"\n"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\nprint(solution())"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0\\n'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('1\\n1 2\\n1 2 3\\n1 2') == '0.5 1.0\\n1.0 0.5\\n1.0 1.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0 4.0'\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0 2.0 4.0'"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"0 0\\n1 1\\n0 2\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\nprint(solution(\n    \"4\\n0 0\\n1 1\\n0 2\\n2 0\"))\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n0 0\\n1 1\\n0 2\\n4\\n\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\""
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n1 1\\n0 2\\n4\") == \"0.0 0.0\\n2.0 2.0\\n0.0 4.0\"\n"
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 0\\n1 1\\n2 2') == '0.0 1.0'\n\nassert solution('100000\\n1 1\\n1 2\\n2 2\\n2 2\\n3 3\\n3 3') == '1.0 2.0\\n2.0 3.0'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('100') == '3'\nassert solution('1000') == '4'\nassert solution('10000') == '5'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n'''"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('100') == '39'\n'''"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\n\ninput_n = int(stdin.readline())\n\nn = input_n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n6\n2\n3\n5\n1\n4\n3\n''') == '2'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1) == 1\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n1\n3\n1\n2''') == '3'\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n\"\"\"\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\n\nimport math\n"
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('10') == '5'\nassert solution('20') == '7'\n\"\"\"\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"34\"\nassert solution(\"7 1\") == \"7\"\nassert solution(\"3 2\") == \"2\"\nprint(\"Congratulations! Your solutions works perfectly.\")\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '34', solution()\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '34'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n8\n3 4\n3 7\n3 4\n4 4''') == '10'\nassert solution('''3\n1\n2\n2\n1''') == '6'\nassert solution('''3\n1\n2\n1\n1''') == '6'\nassert solution('''6\n1\n5\n3\n1\n2\n3\n1''') == '15'\nassert solution('''1\n3\n3\n3\n1''') == '3'\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '34'"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '34', 'test 1 failed'\nassert solution('3 1') == '34', 'test 2 failed'\nassert solution('2 1') == '1', 'test 3 failed'\nassert solution('2 1') == '1', 'test 4 failed'\nassert solution('2 1') == '2', 'test 5 failed'\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '34'\nassert solution('2 2') == '6'\nassert solution('1 2') == '2'\nassert solution('1 3') == '5'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n12 16\n''') == '34', \"Wrong\"\nassert solution('''3 1\n1 2\n''') == '3', \"Wrong\"\nassert solution('''3 1\n1 2\n''') == '3', \"Wrong\"\nassert solution('''3 1\n1 2\n''') == '3', \"Wrong\"\nassert solution('''3 1\n1 2\n''') == '3', \"Wrong\"\n"
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n12 16\n3 5\n10''') == '34'\nassert solution('''4 2\n2 1\n3 4\n8''') == '10'\nassert solution('''5 1\n1 8\n1 6\n1 8\n1 2\n1 1\n10''') == '9'\nassert solution('''6 1\n1 7\n1 9\n1 1\n1 1\n1 1\n10''') == '8'\n\nclass TestSolution(unittest.TestCase):\n    def test_sample(self):\n        assert solution('''3 1\n12 16\n3 5\n10''') == '34'\n        "
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '34'\nassert solution('6\\n1 2') == '3'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n1') == \"1\"\nassert solution('2\\n1\\n2\\n1') == \"2\"\nassert solution('3\\n1\\n2\\n1') == \"3\"\nassert solution('4\\n1\\n2\\n1') == \"2\""
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 1') == '3'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 3 1\n''') == '3'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 3 1\n''') == '3'\nassert solution('''3\n1 2 3\n''') == '1'\nassert solution('''3\n1 3 3\n''') == '2'\nassert solution('''3\n1 3 3\n2 2 2\n''') == '2'\nassert solution('''3\n1 2 3\n2 2 2\n''') == '1'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 1') == '3'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n1 2 3 1\n\"\"\") == \"3\""
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 3 1\n''') == '3'\n\nassert solution('''\n4\n1 2 3 1\n2 3 2 1\n''') == '2'\n\nassert solution('''\n4\n1 2 3 1\n2 3 2 1\n3 1 3 1\n''') == '3'\n\nassert solution('''\n4\n1 2 3 1\n2 3 2 1\n3 1 3 1\n4 3 1 2\n''') == '5'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2 3 1') == '3'\nassert solution('2\\n1 2 3 1\\n2 3 4 1') == '3'\nassert solution('2\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3'\n"
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 1\n5\n1 2 3 1 4''') == '3'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.0') == '1088'\nassert solution('50.0') == '633'\nassert solution('100.0') == '1088'\nassert solution('499.0') == '555'\nassert solution('5.0') == '5'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.0') == '1088'\nassert solution('10.5') == '1100'\nassert solution('10') == '10'\nassert solution('11') == '10'\nassert solution('-12') == '0'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.0') == '1088'\nassert solution('3.5') == '3720'\nassert solution('23.9') == '2732'\nassert solution('12.1') == '1311'\nassert solution('0.1') == '10.1'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"2.5\") == \"567\"\nassert solution(\"0.5\") == \"567\"\nassert solution(\"0.4\") == \"4\"\nassert solution(\"100.1\") == \"110\"\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3.3') == '333'\nassert solution('4.3') == '458'\nassert solution('4.9') == '489'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.0') == '1088'\nassert solution('4.0') == '400'\nassert solution('0.0') == '0'\nassert solution('0.00') == '0'\nassert solution('1.000') == '1088'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.0') == '1088'\nassert solution('0.8') == '890'\nassert solution('0.9') == '900'\nassert solution('1.0') == '1088'\nassert solution('1.5') == '1257'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.0') == '1088'\nassert solution('0.00001') == '1088'\nassert solution('0.999') == '1144'\nassert solution('3.899') == '3124'\nassert solution('7.899') == '7165'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.0') == '1088'\nassert solution('0.0') == '0'\nassert solution('2.0') == '207'\nassert solution('3.0') == '5832'\nassert solution('4.0') == '47236'\n"
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.0') == '1088'\nassert solution('11.2') == '1090'\nassert solution('11.8') == '1108'\nassert solution('1.6') == '1055'\nassert solution('1.3') == '1040'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 2\") == \"10.000000000\"\nassert solution(\"5 5 5 5\") == \"11.000000000\"\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 4\n1 1 1 2\n2 5 2 3\n3 2 2 2\n4 2 2 1\n''') == '25.000000000'\nassert solution('''\n0 4\n1 1 1 2\n2 5 2 3\n3 2 2 2\n4 2 2 1\n5 5 5 2\n6 6 4 4\n7 3 3 1 1\n8 3 3 1 1\n9 3 3 1 1\n''') == '25.000000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 0') == '25.000000000'\nassert solution('0 4') == '25.000000000'\nassert solution('1 1') == '0.3333333333'\nassert solution('2 4') == '0.6666666667'\nassert solution('3 3') == '0.3333333333'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '25.000000000'"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4') == '25.000000000'\nassert solution('0 5') == '25.000000000'\nassert solution('2 5') == '29.964402832'\nassert solution('0 2') == '3.0000000000'\n\n=======\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 4') == '25.000000000'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1\\n5 2 2 3\\n4 1 2 3 4') == '25.000000000'\nassert solution('5 2\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4') == '25.000000000'\nassert solution('3 3\\n1 1 1\\n2 2 2\\n3 3 3') == '25.000000000'"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n3 5\n2 4\n1 1\n5 5\n''') == '''\n25.000000000\n25.000000000\n25.000000000\n25.000000000\n'''\nassert solution('''\n10 10\n1 5\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '''\n17.9375\n17.9375\n17.9375\n17.9375\n'''\nassert solution('''\n6 6\n1 5\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n''') == '''\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.1875\n16.18"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2') == '1.0'\nassert solution('0 3') == '1.6666666667'\nassert solution('1 7') == '1.0'\nassert solution('1 6') == '1.0'\nassert solution('1 5') == '1.0'\n"
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 1 1') == '5'\nassert solution('1 2 2 2') == '1'\nassert solution('3 2 3 4') == '4'\nassert solution('3 2 3 4 5') == '1'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4') == 'DA\\nDA\\nDA'\nassert solution('4\\n6') == 'DA\\nDA\\nNE'\nassert solution('10\\n20') == 'DA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4\") == \"DA\"\nassert solution(\"5\\n6\") == \"NE\""
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('1 2 3') == 'DA'\nassert solution('2 3 4') == 'DA'\nassert solution('3 4 5') == 'DA'\nassert solution('4 5 6') == 'DA'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\nNE'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 4\") == \"DA\"\nassert solution(\"3\") == \"DA\"\nassert solution(\"3 4\") == \"DA\"\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('1 2 3') == 'DA'\nassert solution('5 2 3') == 'DA'\nassert solution('3 4 2') == 'NE'\nassert solution('3 4 3') == 'NE'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\\nDA\\nDA\\nNE\\nNE\""
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n2\\n3\\n5\\n') == 'DA'\nassert solution('1\\n2\\n2\\n3\\n4\\n') == 'DA'\nassert solution('1\\n2\\n2\\n3\\n4\\n') == 'DA'\n\n'''"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == 'DA', 'Test 1 failed'\nassert solution(\"3\") == 'DA', 'Test 2 failed'\nassert solution(\"5\") == 'DA', 'Test 3 failed'\nassert solution(\"7\") == 'DA', 'Test 4 failed'\nassert solution(\"13\") == 'DA', 'Test 5 failed'\n"
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7') == 'DA'\nassert solution('10 10 10\\n10\\n10\\n10\\n10\\n10') == 'NE'\nassert solution('10 10 10\\n10\\n5\\n10\\n10\\n10') == 'NE'\nassert solution('10 10 10\\n10\\n10\\n5\\n10\\n10') == 'DA'\nassert solution('10 10 10\\n5\\n10\\n10\\n10\\n10') == 'DA'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == \"6\"\nassert solution(\"3\\n0 0\\n10 10\\n\") == \"14\"\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n7 42') == '6'\nassert solution('100\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6'\nassert solution('2 2') == '9'\nassert solution('2 3') == '3'\nassert solution('2 2 2') == '5'\nassert solution('2 3 4') == '5'"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3,1,2]) == \"1\"\nassert solution([7,4,1,2,6]) == \"2\"\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"7 42\") == \"6\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\nassert solution(stdin=\"\"\"1\n0 0\n7 42\n\"\"\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0 0\n7 42\n''') == '6'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n7 42') == '6'\nassert solution('1\\n0 5\\n10 10') == '9'\nassert solution('1\\n0 4\\n1 2') == '1'\nassert solution('1\\n0 3\\n4 3') == '1'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n7 42') == '6'\nassert solution('3\\n2 1\\n4 3') == '5'\n"
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3') == '5'\nassert solution('2\\n4 1') == '5'\nassert solution('1\\n10 1') == '10'\nassert solution('10\\n3 0') == '5'\nassert solution('1\\n4 3') == '10'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'correct', 'Expected correct result for input: 2'\nassert solution('3') == 'correct', 'Expected correct result for input: 3'\nassert solution('10') == 'correct', 'Expected correct result for input: 10'\nassert solution('1') == 'correct', 'Expected correct result for input: 1'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'correct'\nassert solution('2') == 'correct'\nassert solution('3') == 'correct'\nassert solution('4') == 'correct'\nassert solution('5') == 'correct'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"correct\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"correct\"\nassert solution(\"1 1\") == \"correct\"\nassert solution(\"2 2\") == \"correct\"\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'correct'\nassert solution('1') == 'correct'\nassert solution('2') == 'correct'\nassert solution('1 2') == 'correct'\nassert solution('1 2 1') == 'correct'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\nALICE CARL -> BOB\\n') == '2'\nassert solution('1\\n-> 3\\n-> 2\\n-> 1') == '1'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n->ALICE\\n->BOB\\nALICEBOB -> CARL\") == \"correct\"\nassert solution(\"2\\n->AB\\n->BC\\nABBC -> C\") == \"correct\"\nassert solution(\"5\\n->AB\\n->BC\\n->ABBC\\n->BCBC\\n->BCBC -> ABC\") == \"correct\"\nassert solution(\"7\\n->AB\\n->BC\\n->AC\\n->ABBC\\n->BCBC\\n->ABC -> ABCBC\") == \"correct\"\nassert solution(\"9\\n->AC\\n->ABC\\n->ABBC\\n->ABCBC\\n->ABC -> ABCBC\") == \"correct\"\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n-> A\n-> B\nA B -> C\n\"\"\") == \"correct\"\n\nassert solution(\"\"\"\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n\"\"\") == \"correct\"\n\nassert solution(\"\"\"\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n\"\"\") == \"correct\"\n\nassert solution(\"\"\"\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n\"\"\") == \"correct\"\n\nassert solution(\"\"\"\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\n\"\"\") == \"correct\""
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == 'correct'\nassert solution('2\\n') == 'correct'\nassert solution('3\\n') == 'correct'\nassert solution('4\\n') == 'correct'\nassert solution('5\\n') == 'correct'\n"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"correct\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"correct\"\nassert solution(\"4\") == \"correct\"\nassert solution(\"5\") == \"correct\"\n\"\"\"\n\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())"
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"correct\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"correct\"\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Penny Franklin'\nassert solution('Connie Froggatt\\nMarti Graham\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Connie Froggatt'\nassert solution('Connie Froggatt\\nMarti Graham\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Runoff!'\nassert solution('Connie Froggatt\\nMarti Graham\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Connie Froggatt'\nassert solution('Connie Froggatt\\nMarti Graham\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nConnie Froggatt\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Runoff!'\n\n\"\"\""
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Penny Franklin\") == \"Penny Franklin\"\nassert solution(\"Marti Graham\") == \"Marti Graham\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Joseph Ivers\"\nassert solution(\"Connie Froggatt\") == \"Runoff!\""
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"Connie Froggatt\"\nassert solution(input_2) == \"Connie Froggatt\"\n\"\"\"\nimport sys\nimport re"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner''') == 'Connie Froggatt'\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Barbara Skinner\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Barbara Skinner\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Barbara Skinner\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Penny Franklin\"\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner') == 'Connie Froggatt'\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Runoff!'"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Penny Franklin'\n\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\n\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Barbara Skinner'\n\nassert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'\n\nprint(solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n'''))\n"
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***\") == \"Connie Froggatt\"\n\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\n\nprint(solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic'))"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '2'\nassert solution('10\\nFrancesca Fulford Fairchild French\\nR2D2 Basic English\\nR2D2 Basic English Vogue\\nLuke Basic Vogue\\nJabba-the-Hutt Huttese\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic English\\nGrakchawwaa Shyriiwook Basic Jawaese\\nChewbacca Basic English Vogue\\nLuke Basic Vogue\\n') == '1'"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\nassert solution('10') == '3'\nassert solution('11') == '3'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\n') == '2'\nassert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n') == '1'"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '2'\nassert solution('10') == '3'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\nassert solution('5\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nChewbacca Jamesonio\\nLuke Jamesonio\\n') == '3'\nassert solution('10\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nChewbacca Jamesonio\\nLuke Jamesonio\\n') == '4'\nassert solution('20\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nChewbacca Jamesonio\\nLuke Jamesonio\\n') == '5'\nassert solution('50\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nChewbacca Jamesonio\\nLuke Jamesonio\\n') == '6'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n"
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"15\") == \"2\""
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic''') == '2'\nassert solution('''4\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic''') == '1'\nassert solution('''17\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic''') == '3'\nassert solution('''36\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic''') == '4'\nassert solution('''71\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic\nLuke-Fett Jawaese Basic''') == '1'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('1 1000 2 3') == '900'\nassert solution('2 1000 2 3') == '900'\nassert solution('100 1000 2 3') == '900'\nassert solution('1 1000 2 3') == '900'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1000 2 3\") == \"900\"\nassert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"2 1000 2 3\") == \"stay home\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('4 10 5 3') == '0'\nassert solution('3 5 1 2') == '0'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"stay home\"\nassert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\") == \"900\"\nassert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\""
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 1000 2 3\n200\n1 2 2\n300\n27 3 20\n\"\"\") == \"200\"\n\nassert solution(\"\"\"\n3 1000 2 3\n900\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 1000 2 3\n200\n1 2 2\n300\n27 3 20\n\"\"\") == \"200\"\n\nassert solution(\"\"\"\n3 1000 2 3\n900\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\""
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1000 2 3\n200\n0 2 2\n300\n27 3 20''') == '900'\nassert solution('''3 500 1 3\n10\n100\n10''') == '100'\n"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n3 1000 2 2\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"200\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"300\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"300\"\n\nprint(\"all tests passed\")"
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nprint(solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n'''))\nprint(solution('''\n3 2000 2 3\n200\n0 2 2\n300\n27 3 20\n'''))\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"A# C D# F\"\n\nassert solution(\"50\") == \"A C D E F\"\n\nassert solution(\"36\") == \"G C D F E A\"\n\nassert solution(\"32\") == \"G F D E A\"\n\nassert solution(\"24\") == \"E F G A\""
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"A# C D# F\"\nassert solution(\"B\") == \"B\""
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nC D F D C D F F C') == 'A# C D# F'\n\"\"\"\n\nn = int(input())\nnotes = input()\n\nnotes = notes.split()\nnotes = list(set(notes))\nnotes.sort()"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\nC D F D C D F F F C \nSample Output:\nA# C D# F''') == \"A# C D# F\"\nassert solution('''5\nG A B A G\nSample Output:\nnone''') == \"none\"\nassert solution('''14\nC D F E F G F C D C\nSample Output:\nA# C D# F\nBb F# G\nDb D# E\nEb F#\nE F E G\nDb A#\nAb C D#\nA# E F\nEb G A\nF# D E\nF D E G\nF D G A\nF C D#\nA# E F\nDb E F\nDb E G\nDb G F\nDb G E\n''') == \"A# E F\"\nassert solution('''6\nC D E F G A B\nSample Output:\nnone\n''') == \"none\"\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"A# C D# F\"\n\nn = int(stdin.readline())\nnotes = stdin.readline().strip()\n\nscales = [\"\"]\n\nfor note in notes:\n    if note not in scales[-1]:\n        scales[-1] += note\n    else:\n        scales.append(scales[-1] + note)\n\nscales = set(scales)\nscales.remove(\"\")\nscales = list(scales)\nscales.sort()\n\nfor scale in scales:\n    if len(scale) >= n:\n        print(scale)\n    else:\n        print(\"none\")\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''12\nC D F D C D F F F C''') == 'A# C D# F'\nassert solution('''12\nC E F D F C D F F F''') == 'A# E D# F'\nassert solution('''12\nC D F E G A F E G''') == 'C D E G A# F'\n''')\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nC D F D C D F F C \n''') == 'A# C D# F'\n"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nC D E F G A''') == 'A# C D# E F# G A'\nassert solution('''3\nA E G F A G''') == 'A# E F# G'\n''')"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"A# C D# F\"\n\nstdin = \"\"\"\n3\nA D E F\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9\nC D E F G A F E\n''') == \"C D E F G A F E\"\n\nassert solution('''\n12\nC D E F G A F E I J K\n''') == \"C D E F G A F E I J K\"\n\nassert solution('''\n10\nC D E F G A F E I J K L\n''') == \"C D E F G A F E I J K L\"\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"\u00e4ra talar vi rikssvenska\") == \"\u00e4ra talar vi rikssvenska\"\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\n\"\"\""
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('haer talar vi xkryterl\u00e4kts\u00e5r') == 'haer talar vi xkryterl\u00e4kts\u00e5r'\nassert solution('haer talar vi v\u00e5r\u00e4tt') == 'haer talar vi v\u00e5r\u00e4tt'\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\ndae ae ju traeligt va\nhaer talar vi rikssvenska\n\"\"\") == \"dae ae ju traeligt va haer talar vi rikssvenska\"\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\", \"Wrong\"\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ndae ae ju traeligt va\n''') == 'dae ae ju traeligt va'\nassert solution('''\ndae ae ju talar vi rikssvenska\n''') == 'haer talar vi rikssvenska'\n''')"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('haer talar vi vi j\u00e4ljestad') == 'haer talar vi vi j\u00e4ljestad'\n"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('dae ae ju traeligt va') == \"dae ae ju traeligt va\"\nassert solution('haer talar vi rikssvenska') == \"haer talar vi rikssvenska\"\nprint('Everything passed')"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\ndae ae ju traeligt va\n''') == 'haer talar vi rikssvenska'\nassert solution('''\ndae ae ju traeligt va ae ju traeligt va\n''') == 'haer talar vi rikssvenska'\nassert solution('''\na e e ju traeligt va\n''') == 'dae ae ju traeligt va'\nassert solution('''\na e e e e e ju traeligt va\n''') == 'dae ae ju traeligt va'\n''')"
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\n'''\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n...#.\\n...#.\\n#.....\\n......\\n##...#\\n') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n'\nassert solution('10 20\\n.####.#.\\n#.##.###.\\n#########\\n#######.#\\n#####.#.#\\n#########\\n#######.#\\n###.#####\\n###.#.###\\n#####.###\\n#########\\n#########\\n#####.###\\n###.#####\\n#######.#\\n#########\\n#######.#\\n###.#####\\n#####.###\\n#########\\n#######.#\\n#######.#\\n#######.#\\n#######.#\\n#######.#\\n#########\\n#########\\n#######.#\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n#########\\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"E..E#E\""
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n.##.\\n#..#\") == \"E..E#\"\nassert solution(\"3 3\\n...#\\n...#\") == \"E...E\"\nassert solution(\"2 1\\n....\\n##..\") == \"E..E#\"\n\n'''\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n....#.\\n#.....\\n......\\n##...#\\n') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n\") == \"E..E#E\"\nassert solution(\"6 6\\n.....#\\n##...#\\n##....\\n#....#\\n#..#.#\\n..#..E\\n..##.#\\n......\\n\") == \"E...E#E\"\nassert solution(\"3 4\\n#####\\n##.##\\n##...\\n#...#\\n#...#\\n##.#E\\n##...\\n##...\\n##...\\n\") == \"E#.E#E\"\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n.....#.\n.....#.\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"...#.\\n...#.\\n##...#\\n......\\n......\"\nassert solution(\"5 5\") == \"E...E\\n..E.#E\\n#..E..\\n.E...E\\n....#.\""
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\nassert solution('6 6') == 'E.E.E#E\\n#.E.#.E\\nE..E.E\\n#.E.#E\\n.E.E.E\\n.E#.E#'\n"
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"...E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\nassert solution(\"1 2\") == \"E.E\""
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"5 3 1 1\") == \"1 1 3\"\nassert solution(\"8 1 1 2 3 6 9\") == \"1 3 2\"\nassert solution(\"16 8 2 4 10 3 25 14\") == \"10 3 2 8 4 2\""
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"8 2 4 10 3 25 14\") == \"8 4 10 2 3 2\"\nassert solution(\"2 4 10 3 25 14\") == \"2 4 10 3 2 2\"\nassert solution(\"4 3 2 8 10 14\") == \"4 3 2 2 8 10 14\"\nassert solution(\"7 3 6 2 9 8 15\") == \"7 3 6 2 9 8 15\""
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"3 9 7 8 4 2\") == \"3 9 8 4 7\"\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 8 5 2 9 8 5 7 3 4 10 5\n''') == '''12 10 3 8 4 2\n'''\n\nassert solution('''1 1 1\n''') == '''1 1 1\n'''\n\nassert solution('''5 5 5\n''') == '''5 5 5\n'''\n\nassert solution('''5 2 5 3\n''') == '''5 3 2 5\n'''\n\nassert solution('''5 5\n''') == '''5 5\n'''"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"12 8 2 4 10 3 25 14 9\") == \"12 10 3 8 4 2 9\"\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'\nassert solution('''5 6 8 10 12''') == '5 10 6 8 12'\nassert solution('''1 1 1 1 1''') == '1'\nassert solution('''2 4 2 3''') == '2 3 4'\nassert solution('''20''') == '20'\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('10 3 2 1 0 5 7 8 9 10') == '10 7 5 8 9 10 3 2 1'\n"
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('3 3 2 1 2 2 2 3 3') == '3 3 2 1 2 2'\nassert solution('2 2 4 7 8 9 6 10 1') == '2 2 4 7 8 9 6 10'\nassert solution('10 10 10 10 10 10 10 10 10 10 10 10 10 10') == '10 10 10 10 10 10 10'\nassert solution('1 1 2 3 5 6 8 9 10') == '1 2 3 5 6 8 9 10'\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 3') == '4'\nassert solution('17 8 5') == '4'\nassert solution('5 1 2') == '3'"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9 0 3\n''') == '4'\nassert solution('''\n10 0 2\n''') == '2'\nassert solution('''\n10 0 5\n''') == '5'\nassert solution('''\n10 1 2\n''') == '3'\nassert solution('''\n10 1 2\n''') == '3'\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 0 3\n''') == '4'\nassert solution('''\n5 0 2\n''') == '3'\nassert solution('''\n1 0 1\n''') == '1'\n'''\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '4\\n'\nprint(solution.__name__, ':', '\\n', solution(input()))\n\"\"\""
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('9 0 0') == '9'\nassert solution('0 9 3') == '9'\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9 0 3\") == \"4\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"3 2 3\") == \"3\"\nassert solution(\"3 3 2\") == \"2\"\nassert solution(\"0 4 0\") == \"4\"\n"
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('5 4 8') == '9'\nassert solution('1 5 8') == '7'\nassert solution('10 10 10') == '0'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\"\nprint(solution(input()))\n\nSample Input:\n001101\nSample Output:\n12\n\nSample Input:\n10110\nSample Output:\n32\n\"\"\"\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('110') == '2'\n\nassert solution('101') == '1'\n\nassert solution('000') == '0'\n\nassert solution('0') == '0'\n\nassert solution('11111111') == '8'"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0001\") == \"1\"\nassert solution(\"0110\") == \"12\"\nassert solution(\"100\") == \"10\"\nassert solution(\"01100\") == \"12\"\nassert solution(\"110110\") == \"52\"\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n100\n''') == '10'\nassert solution('''\n0\n''') == '0'\nassert solution('''\n101\n''') == '1'\nassert solution('''\n010\n''') == '10'\nassert solution('''\n111\n''') == '7'"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1010\") == \"12\"\n\nassert solution(\"1011\") == \"11\"\n\nassert solution(\"1000\") == \"10\"\n\nassert solution(\"1001\") == \"1\"\n\nassert solution(\"1000\") == \"10\""
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1010') == '12'\nassert solution('1011') == '11'\nassert solution('1101') == '10'\nassert solution('1111') == '15'"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1010') == '12'\nassert solution('101') == '1'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1010') == '12'\nassert solution('0') == '0'\nassert solution('111') == '7'\nassert solution('1001') == '1'\nassert solution('111') == '8'\n"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '65'\nassert solution('110111') == '74'"
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1010') == '12'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n..o\no..\n''') == '2'\n\nassert solution('''2 2\n.ooo\nooo.\n''') == '1'\n\nassert solution('''6 1\nooo\no..\nooo\nooo\nooo\nooo\n''') == '6'\n\nassert solution('''1 5\n.ooo\nooo.\n''') == '3'\n\nassert solution('''8 5\n.ooo\nooo.\nooo\nooo\nooo\nooo\nooo\nooo\n''') == '12'"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '2'\nassert solution('3 1') == '2'\nassert solution('5 5') == '6'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '3'\nassert solution('1 1 1') == '2'\nassert solution('1 2 3 4') == '5'\nassert solution('1 3 5 6') == '6'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2'\nassert solution('1') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '6'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n.o\n.o\n''') == '2'\nassert solution('''\n3 3\nooo\nooo\n''') == '1'\nassert solution('''\n6 3\noo.\nooo.\noo.oo\nooo.ooo\nooo.ooo\nooo.ooo\n''') == '3'\nassert solution('''\n8 3\nooo.\nooo.o\nooo.o.\nooo.ooo\nooo.ooo\nooo.ooo\nooo.ooo\nooo.ooo\n''') == '1'"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n.o\no..''') == '2'"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n.o\\n.o') == '2'\nassert solution('2 3\\n.o.\\n.o') == '1'\nassert solution('2 3\\n.oo\\n.oo') == '1'\n'''\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n.o\n.o\n..''') == \"2\"\nassert solution('''3 5\no.o.\n.o.o\n...\n''') == \"3\"\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n.o\\n..o\") == '2'\n"
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '2'\nassert solution('6 5') == '3'\n\"\"\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nLADICA\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\\nSMECE\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 3\\n1 2\\n\") == \"SMECE\\nLADICA\\nSMECE\\nSMECE\\nLADICA\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n1 3\\n1 3\\n1 3\\n\") == \"SMECE\\nSMECE\\nSMECE\\nLADICA\\nLADICA\\nLADICA\\n\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('1 2') == 'LADICA'\nassert solution('1 3') == 'SMECE'\nassert solution('1 2') == 'SMECE'\nassert solution('1 2') == 'SMECE'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"LADICA\" * 3 + \"SMECE\" * 3\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 2\n1 3\n1 3\n1 2\n''') == 'SMECE'\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2''') == \"SMECE\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n\") == \"SMECE\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == \"LADICA\"\nassert solution('''\n5 2\n1 2\n1 3\n1 2\n1 3\n''') == \"SMECE\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == \"LADICA\"\nassert solution('1 1') == \"LADICA\"\nassert solution('1 1') == \"SMECE\"\nassert solution('2 1') == \"SMECE\"\nassert solution('1 2') == \"SMECE\"\n"
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"SMECE\"\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0\n''') == '1 2'\nassert solution('''\n2\n0 0\n''') == '1 2'\nassert solution('''\n2\n1 0\n''') == '1 2'\nassert solution('''\n4\n1 2 0 0\n''') == '1 2 0 3'\nassert solution('''\n5\n1 2 0 0 0\n''') == '1 2 0 3 4'\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2'"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1 2\""
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '0 1 2 3'\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"1 2\"\n\"\"\"\nfrom math import log\nfrom operator import itemgetter\n\nn = int(input())\nlst = list(map(int, input().split()))\nfor i in range(len(lst)-1):\n    if lst[i] == lst[i+1]:\n        lst.remove(lst[i+1])\nlst.sort()\nprint(' '.join(map(str,lst)))\n\n\"\"\"\nIn the first sample input, Jimi and his friends all are in line. The order of the line is the following:\n\n1 2 3 4 5\n\nIn the second sample input, the order of the line is the following:\n\n1 2 3 4 5\n1 2 3 4\n1 2 3\n1 2\n1\n\n\"\"\"\n\n\"\"\"\nCreated on Mon Dec 23 20:31:20 2019\n\n@author: alexg\n\"\"\"\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n') == '1 2'\nassert solution('3\\n1 2 3\\n') == '1 2 3'\nassert solution('10\\n1 3 2 4 5 6 7 8 9 10\\n') == '1 3 2 4 5 6 7 8 9 10'\n\"\"\"\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 3 2 4'\nassert solution('5') == '1 4 3 2 5'\n"
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 2\""
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n\n=====\n\nWrite 5 lines of code to test the correctness of solution:\nIt was time for the 7th Nordic Cinema Popcorn Convention, and this year the manager Ian had a brilliant idea. In addition to the traditional film program, there would be a surprise room where a small group of people could stream a random movie from a large collection, while enjoying popcorn and martinis. \n\nHowever, it turned out that some people were extremely disappointed, because they got to see movies like Ghosts of Mars, which instead caused them to tear out their hair in despair and horror.\n\nTo avoid this problem for the next convention, Ian has come up with a solution, but he needs your help to implement it. When the group enters the surprise room, they will type in a list of movies in a computer. This is the so-called horror list, which consists of bad movies that no one in the group would ever like to see. Of course, this list varies from group to group.\n\nYou also have access to the database Awesome Comparison of Movies which tells you which movies are directly similar to which. You can assume that movies that are similar to bad movies will be almost as bad. More specifically, we define the Horror index as follows:\\[ HI = \\left\\{ \\begin{array}{ll} 0 & \\textrm{if movie is on horror list. This overrides the other definitions.} \\\\ Q+1 & \\textrm{if the worst directly similar movie has $HI = Q$} \\\\ +\\infty & \\textrm{if not similar at all to a horrible movie} \\end{array} \\right. \\]\n\n-----Input-----\nThe first line of input contains three positive integers $N$, $H$, $L$ ($1 \\leq H < N \\leq 1000,0 \\leq L \\leq 10000$), where $N$ is the number of movies (represented by IDs, ranging from $0$ to $N-1$), $H$ is the number of movies on the horror list and $L$ is the number of similarities in the database.\n\nThe second line contains $H$ unique space-separated integers $x_ i$ ($0 \\leq x_ i <N$) denoting the ID of the movies on the horror list.\n\nThe following $L$ lines contains two space-separated integers $a_ i,b_ i$ ($0 \\leq a_ i < b_ i < N$), denoting that movie with ID $a_ i$ is similar to movie with ID $b_ i$ (and vice versa).\n\n-----Output-----\nOutput the ID of the movie in the collection with the highest Horror Index. In case of a tie, output the movie with the lowest ID.\n\n-----Examples-----\nSample Input:\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\nSample Output:\n1\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('10 20 30\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 5 7\\n0 9 5\\n0 3 5\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 7 3 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1 2 4 5\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 9 5\\n0 3 5\\n0 5 7\\n0 8 9\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 2 1 3 4 5 6 7 8 9 10\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 2 4 5\\n0 9 5\\n1 9 5\\n0 9 5\\n0 1 2 3 4 5 6 7 8 9 10\\n1 9 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 9 5\\n0 8 4 5\\n0 4 5\\n1 9 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1 2 4 5\\n0 2 1 4 5\\n0 3 2 1 5\\n0 8 9 5\\n0 9 5\\n0 5 7\\n0 3 5\\n0 9 5\\n0 2 1 4 5\\n0 8 9 5\\n0 4 5\\n0 5 7\\n0 7 9 5\\n0 2 1 4 5\\n0 3 2 1 5\\n0 9 5\\n0 8 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 9 5\\n0 8 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 7 3 5\\n0 9 5\\n0 5 7\\n0 3 5\\n0 9 5\\n0 2 1 4 5\\n0 8 9 5\\n0 4 5\\n0 5 7\\n0 9 5\\n0 1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 8 9 5\\n0 9 5\\n1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 5 7\\n0 8 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 2 1 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 5 7\\n0 8 4 5\\n0 2 1 3 4 5 6 7 8 9 10\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 2 1 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 9 5\\n1 9 5\\n0 9 5\\n0 1 2 3 4 5 6 7 8 9 10\\n1 9 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 9 5\\n0 8 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 2 1 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 5 7\\n0 8 4 5\\n0 2 1 3 4 5 6 7 8 9 10\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 2 1 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 5 7\\n0 8 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 2 1 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 5 7\\n0 8 4 5\\n0 2 1 3 4 5 6 7 8 9 10\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 2 1 3 4 5 6 7 8 9 10\\n0 3 2 1 5\\n0 7 9 5\\n0 8 4 5\\n0 4 5\\n0 1 2 3 4 5 6 7 8 9 10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 2 1 4 5\\n0 8 9 5\\n0"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\nSample Output') == '1'\nassert solution('100 10 50\\n0 100\\n1 50\\n100 50\\n50 100\\n100 50\\n100 50\\n100 50\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n50 100\\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n\n'''"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\"\n\nassert solution(\"5 0 2\\n5 0\\n4 5\\n3 5\\n0 2\\n\") == \"4\"\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('4 3 5') == '5'\nassert solution('6 3 5') == '2'\n\n\"\"\"\n\n\n\"\"\""
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n"
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\""
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == '1'\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == '4'\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == '4'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4 3 1'\nassert solution('1 2 3 4') == '3 2 1 4'\nassert solution('4 3 2 1') == '3 2 1 4'\nassert solution('10 10 10 10 10') == '10 10 10 10 10'\nassert solution('20 10 10 20 10') == '20 10 10 20 10'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 4\n''') == \"4 3 1\"\nassert solution('''4\n1 2 3 4\n''') == \"impossible\"\n'''"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\""
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == '4 3 1'\nassert solution('4') == '4 3 1'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n''') == '2 1'\nassert solution('''\n3\n1 2 3\n''') == '3 1 2'\nassert solution('''\n4\n1 1 2 3\n''') == '4 1 1 2'\nassert solution('''\n5\n1 1 1 1 1\n''') == '5 1 1 1 1'\nassert solution('''\n10\n1 1 2 2 3 3 3 1 1 2 3 4 4 2 3 1 1 2 3 3 4 4 1 1 1 3 4\n''') == '10 1 1 1 1 1 1 2 2 3 3 3 4 4 4 1 1 1 1 2 2 3 3 4 4 1 1 1 3 4'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 3 4\\n\"\n) == \"4 3 1\"\nassert solution(\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n) == \"3 1 2 4 5\"\nassert solution(\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n) == \"4 3 1 2\"\nassert solution(\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n) == \"5 1 2 3 4\"\nassert solution(\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n) == \"5 1 2 3 4\""
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'impossible'\nassert solution('2 1 4') == 'impossible'\nassert solution('2 2 5') == '2 5 1'\nassert solution('2 2 3') == '2 3 1'\nassert solution('2 2 4') == '2 4 1'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 3\\n') == '1 3 4'\nassert solution('2\\n2 3\\n') == '1 2 3 4'\nassert solution('4\\n1 3 2 4') == '3 2 1 4 1'\nassert solution('4\\n1 2 3 4') == '1 3 2 4'\nassert solution('5\\n2 3 4 1 5') == '1 2 3 4 1 5'\n"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 1') == '4 3 1'\nassert solution('6 3 1 2 3 4') == '4 3 1 2 3 4'\nassert solution('10 2 1 3 4 5 6 7 8 9 10') == '4 3 1 2 3 4 5 6 7 8 9 10'\nassert solution('6 3 1 2 3 4 5 6 7 8 9 10') == '4 3 1 2 3 4 5 6 7 8 9 10'"
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 3 4\n''') == '4 3 1'\nassert solution('''\n2\n2 2\n''') == '-1'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('4 4 20') == '3.00'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 20 15\n3 10\n''') == \"18.400\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 20 15\\n3 10') == '18.400'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 20 15') == \"18.400\", 'WRONG!'\nassert solution('10 10 10') == \"10.000\", 'WRONG!'\nassert solution('3 10 5') == \"10.000\", 'WRONG!'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 20 15') == '18.400'"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n20 15\n3 10\n''') == '18.400', 'Should be 18.400'\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 20 15\") == \"18.400\"\nassert solution(\"1 5 2\") == \"8.200\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 10\n3 10\n3 10\n''') == '18.400'\n\n'''\n\na = input().split()\nn, p, k = int(a[0]), int(a[1]), int(a[2])\n\nt = []\nfor i in range(n):\n    t.append(int(input()))"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 20 15\\n3 10\") == \"18.400\"\nassert solution(\"3 1\\n2 5\") == \"8.100\"\n"
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10\\n3') == '18.400', 'Should be 18.400'\nassert solution('1 100\\n1') == '1.000', 'Should be 1.000'\nassert solution('1 100\\n2') == '1.000', 'Should be 1.000'\nassert solution('1 100\\n3') == '1.000', 'Should be 1.000'"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n....H\n.....\nS....\n....H\n.....''') == '6'\nassert solution('''5\n...H.\n...S.\n...H.\n...S.\n...H''') == '3'"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nH.H\") == \"2\"\nassert solution(\"5\\nH.H\\nH..S\\n....H\") == \"5\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....\\n') == '5'\n\nstdin = '5\\n....H\\n.....\\nS....\\n....H\\n.....\\n'\nret = solution(stdin)\nprint(ret)\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution('''\n....H\n.....\nS....\n....H\n.....\n''') == \"5\"\nassert solution('''\n.......\n.S....\n......\n.......\n.H.H..\n........\n''') == \"5\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '10'\nassert solution('3\\n5\\n4H\\nS4') == '10'\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1', \"You are not allowed to modify the code.\"\nassert solution('2') == '4', \"You are not allowed to modify the code.\"\nassert solution('3') == '7', \"You are not allowed to modify the code.\"\nassert solution('4') == '9', \"You are not allowed to modify the code.\"\nassert solution('5') == '3', \"You are not allowed to modify the code.\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n...H\n...H\n...S\n...H\n...S''') == '5'\nassert solution('''\nS..H\n...\n....\n.....\n...H\n.....\n''') == '5'\nassert solution('''\nS...\n.H.\n...\n.S.\n...\n...\n''') == '2'\nassert solution('''\n.H.\n...\n...\n....\n...S\n...\n''') == '2'\nassert solution('''\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n...H\n"
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n.H.\\n.S.\\n.H.\\n.S.\\n.H.') == '5'\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n2 4\n1 3 5\n''') == '0'\nassert solution('''\n6 5 3\n2 4\n1 3 5\n3 4\n4 5\n5 4\n''') == '1'\n''')\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2 3\n2 4\n1 3 5\n''') == '0'\n'''\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 2 3\n2 4\n1 3 5\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 5 1\n2 4\n1 3 5\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n2 3 2\n2 1\n1 4\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5 1 6\n1 6\n1 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(open(0).read()) == '0'\nassert solution(open(1).read()) == '4'\nassert solution(open(2).read()) == '3'\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\"\n\n'''"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_sample_01) == stdout_sample_01\nassert solution(input_sample_02) == stdout_sample_02\nprint('You are all set!')\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"0\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"1 3 5\") == \"2\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == '1'\nassert solution('5 3 4') == '0'\nassert solution('1 3 5') == '2'\nassert solution('2 3') == '0'\nassert solution('2 4') == '1'\n"
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '0'\nassert solution('5 2 3\\n2 4\\n1 3 5') == '0'\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('2 10') == '0.000000000'\nassert solution('2 10') == '0.000000000'\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n\nprint(solution(input))\n\"\"\"\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"-1 -1\") == \"0.000000000\"\nassert solution(\"1 1\") == \"0.000000000\"\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '0.000000000'\nassert solution('1 1') == '0.000000000'\nassert solution('2 5') == '0.20000000'\nassert solution('3 8') == '0.30000000'\nassert solution('4 9') == '0.40000000'\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('10 20') == '0.00000'\n\"\"\"\n\nimport math\n\nradius, cheese_n = list(map(int, input().split()))\n\npercentage = (100 - cheese_n) / 100 * radius * 2 * math.pi\n\nprint(round(percentage, 6))\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('3 2') == '0.125'\n\"\"\""
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0.000000000'"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0.000000000'\n\"\"\"\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 1\n''') == '0.000000000'\nassert solution('''\n    1 1\n    0 0\n''') == '1.0'\nassert solution('''\n    1 1\n    0 0\n    1 0\n''') == '1.0'\nassert solution('''\n    1 1\n    0 0\n    0 0\n''') == '1.0'\nassert solution('''\n    1 1\n    0 0\n    0 1\n''') == '1.0'\n"
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 2') == '0.30000000'\nassert solution('1 3') == '0.40000000'\nassert solution('1 4') == '0.30000000'\nassert solution('1 5') == '0.36363636'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\nSample Input 2:\n3\n100 201 202 203 204\n202 203 203 204 101\n200 203 203 204 103\nSample Output 2:\n2\n''') == '2'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\nassert solution('2\\n100 200 300 101 102\\n103 102 101 488 100') == '1'\nassert solution('3\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\nassert solution('4\\n100 200 300 101 102\\n103 102 101 488 100') == '1'\nassert solution('5\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n100 101 102 103 488\\n100 200 300 101 102') == '2'\nassert solution('2\\n100 101 102 103 488\\n100 200 300 101 102') == '2'\nassert solution('3\\n100 101 102 103 488\\n100 200 300 101 102') == '1'\nassert solution('4\\n100 101 102 103 488\\n100 200 300 101 102') == '1'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\n\nassert solution(\"2\\n100 101 102 103 488\\n100 200 300 101 102\") == \"1\"\n\nassert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"1\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\n''') == '2'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('6') == '5'\nassert solution('7') == '5'\nassert solution('8') == '4'\n"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\nassert solution('1\\n10 20 30 50\\n20 30 50\\n30 50\\n20 30\\n30') == '1'"
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('7') == '6'\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''13\n16\n''') == '16'\nassert solution('''13\n0\n''') == None\nassert solution('''20\n''') == None\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1729\"\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '8'\nassert solution('8') == '8'\nassert solution('9') == '8'\nassert solution('16') == '8'\nassert solution('17') == '8'\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('15') == '15'\nassert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('3') == 'None'\nassert solution('7') == 'None'\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199\n1\n199"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n\"\"\""
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n') == '7\\n'\nassert solution('2\\n') == 'None\\n'\n"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '9'\nassert solution('10000000000') == '10000000000'\n'''\n\n\n\n'''\npythagoras.py"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '12'\nassert solution('19') == '18'"
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1729'"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('65536') == '16'\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65536') == '16'\nassert solution('16') == '16'\n\n\"\"\"\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('65536') == '16'"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('65536') == '16'\n\"\"\"\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('65536') == '16'\nassert solution('11') == '1'\n\"\"\"\n\nx = int(input())\n\ny = [1, 2, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]\n\nimport math"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('65536') == '16'\nassert solution('5') == '0'\n'''\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('65536') == '16'\nassert solution('3') == '0'\n'''"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('65536') == '16'\nprint(solution(input()))\n"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('65536') == '16'\nassert solution('63652') == '18'\nassert solution('65536') == '16'"
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('65536') == '16'\n\nassert solution('1317') == '22'\n\nassert solution('6115') == '12'"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"-$1\"\nassert solution(\"..\") == \"1\"\nassert solution(\"..#\") == \"-$1\"\nassert solution(\"#.K\") == \"2\"\nassert solution(\"##.##\") == \"3\"\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n....\n....\n....\n...K\n''') == '2'\nassert solution('''\n4\n....\n...#\n...#\n.##K\n''') == '-1'\nassert solution('''\n3\n...#\n.##\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n.K.#\n.K.#\n.##.#\n.#K.\n.####\n''') == \"1\"\n\nassert solution('''\n5\n.##.\n...#\n...#\n...#\n...#\n''') == \"-1\"\n\nassert solution('''\n4\n....\n....\n....\n...K\nSample Output:\n0\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n....\n....\n....\n...K\n''') == '2'\nassert solution('''3\n...#\n.###\n.###\n''') == '-1'\nassert solution('''10\n.....\n....#\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n....\n....\n....\n...K''') == '2'"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n.K.\\n.K.\\n.K.\\n') == '2'\nassert solution('3\\n.K.\\n.K.\\n.K.\\n') == '-1'\nassert solution('3\\n....\\n....\\n....\\n') == '-1'\nassert solution('5\\n....\\n....\\n....\\n....\\n') == '-1'"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == '-1'"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n...\\n...\\n...\\n') == '-1'\n"
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"100\") == \"99\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n3\\n99\\n99\\n') == 'too late'\n\n\"\"\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '100 5',\n    '42',\n    '3',\n    '2',\n    '99',\n    '1',\n])) == '23'\nassert solution('\\n'.join([\n    '1000 1000',\n    '1 2',\n    '9 8',\n    '3 7',\n    '9 8',\n])) == 'too late'\nassert solution('\\n'.join([\n    '100 5',\n    '42',\n    '3',\n    '2',\n    '99',\n    '1',\n])) == '23'"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''100 5\n42\n3\n2\n99\n1\nSample Output:\n23''') == '23'\n\nassert solution('''100 5\n42\n3\n2\n99\n1\nSample Output:\ntoo late''') == 'too late'\n\nassert solution('''100 5\n1\n99\n1\nSample Output:\ntoo late''') == 'too late'\n\nassert solution('''100 5\n42\n3\n2\n99\n1\nSample Output:\ntoo late''') == 'too late'\n\nassert solution('''100 5\n1\n99\n1\nSample Output:\ntoo late''') == 'too late'"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100 5') == '23'\nassert solution('500 9') == 'too late'"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100 5\") == \"23\"\nassert solution(\"5\") == \"too late\"\nassert solution(\"4\") == \"too late\"\n\n\"\"\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n42') == '23'\nassert solution('100\\n5') == 'too late'\nassert solution('100\\n5\\n2\\n99') == '23'\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n42\\n3\\n2') == \"23\"\n\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1') == \"23\"\n\nassert solution('100 4\\n42\\n3\\n2\\n99\\n1') == \"too late\"\n\nassert solution('100 10\\n42\\n3\\n2\\n99\\n1') == \"too late\"\n\nassert solution('100 50\\n42\\n3\\n2\\n99\\n1') == \"too late\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\nassert solution('''\n100 10\n5\n4\n7\n8\n10\n''') == 'too late'\nassert solution('''\n100 10\n1\n2\n3\n4\n5\n''') == 'too late'\n\n'''\n100 10\n5\n4\n7\n8\n10\n''') == 'too late'\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n') == '3', \"Wrong Answer\"\nassert solution('4\\n1\\n2\\n3\\n') == '1', \"Wrong Answer\"\nassert solution('1\\n2\\n3\\n') == '3', \"Wrong Answer\"\nassert solution('99\\n2\\n3\\n') == '99', \"Wrong Answer\"\nassert solution('2\\n1\\n2\\n3\\n') == '3', \"Wrong Answer\"\n"
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 3') == '23', \"Oops!\"\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nThe Playfair cipher is a manual symmetric encryption technique and was the first digraph substitution cipher. The scheme was invented in 1854 by Charles Wheatstone, but bearing the name of Lord Playfair who promoted the use of the cipher.\n\nThe Playfair cipher uses a $5$ by $5$ table containing each letter in the English alphabet exactly once (except \u2018Q\u2019 which is missing). The table constitutes the encryption key. To more easily remember the table, it is typically generated from a key phrase. First fill in the spaces in an empty table with the letters of the key phrase (dropping spaces and duplicate letters), then fill the remaining spaces with the rest of the letters of the alphabet in order. The key phrase is written in the top rows of the table, from left to right. For instance, if the key phrase is \u201cplayfair example\u201d, the encryption key becomes\n\nP\n\nL\n\nA\n\nY\n\nF\n\nI\n\nR\n\nE\n\nX\n\nM\n\nB\n\nC\n\nD\n\nG\n\nH\n\nJ\n\nK\n\nN\n\nO\n\nS\n\nT\n\nU\n\nV\n\nW\n\nZ\n\nTo encrypt a message, one would remove all spaces and then break the message into digraphs (groups of $2$ letters) such that, for example, \u201cHello World\u201d becomes \u201cHE LL OW ORLD\u201d. Then map them out on the key table, and apply the rule below that matches the letter combination:\n - If both letters are the same (or only one letter is left), add an \u2018X\u2019 after the first letter. Encrypt the new pair and continue (note that this changes all the remaining digraphs).\n - If the letters appear on the same row of your table, replace them with the letters to their immediate right respectively (wrapping around to the left side of the row). With the table above, the digraph \u2018CH\u2019 would be encrypted \u2018DB\u2019.\n - If the letters appear on the same column of your table, replace them with the letters immediately below respectively (wrapping around to the top side of the column). With the table above, the digraph \u2018VA\u2019 would be encrypted \u2018AE\u2019.\n - If the letters are not on the same row or column, replace them with the letters on the same row respectively but at the other pair of corners of the rectangle defined by the original pair. The order is important \u2013 the first letter of the encrypted pair is the one that lies on the same row as the first letter of the plaintext pair. With the table above, the digraph \u2018KM\u2019 would be encrypted \u2018SR\u2019.\n\nWrite a program that reads a key phrase and a plaintext to encrypt, and outputs the encrypted text.\n\nThe text to encrypt will not contain two \u2019x\u2019s following each other, or an \u2019x\u2019 as the last character, as this might cause the first rule above to repeat indefinitely.\n\n-----Input-----\nThe input contains two lines. The first line contains the key phrase. The second line contains the text to encrypt. Each line contains between $1$ and $1000$ characters, inclusive. Each character is a lower case English letter, \u2018a\u2019-\u2018z\u2019 (except \u2018q\u2019), or a space character. Neither line starts or ends with a space.\n\n-----Output-----\nThe output should be a single line containing the encrypted text, in upper case. There should be no spaces in the output.\n\n-----Examples-----\nSample Input:\nplayfair example\nhide the gold in the tree stump\nSample Output:\nBMNDZBXDKYBEJVDMUIXMMNUVIF\n''')\n    pass\n    return ''"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"playfair example\") == \"HELLO WORLD\"\nassert solution(\"hide the gold in the tree stump\") == \"BUMDYOZWXEGFIPYQIYECIRSHLJNMDZCGU\"\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution(\n    'Voldemort and the Emperor') == 'HVXZLNQWJIMVESODTGHQDZUHW'\n\"\"\"\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('This is a test') == 'GZTNDXPEYKMJAJVWKQZXLADGALRUZ'\n\n\"\"\""
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"HELLO WORLD\"\nassert solution(\"mantra example\") == \"GBACQDYYEBBCNTQQ\"\n\"\"\"\n\nimport re"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"LNVVZZQGHWXFJYERDWBMCJMNTI\""
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\n'''\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('playfair example') == 'SVFAKNSDVXCZZSEBKND'\nassert solution('HIDE THE GOLD IN THE TREE STUMP') == 'HGXNGOHQDZMPSFDSXMDGSLWKZ'\n"
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('hide the gold in the tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n\"\"\""
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''playfair example\nhide the gold in the tree stump''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n''')"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n10.1 10.2 20.3\n20.4 10.2\n10.4 10.3\n20.5 20.5\n''') == 'The gopher can escape through the hole at ($10.4$,$20.5$).'\nassert solution('''\n10\n10.1 10.2 20.3\n20.4 10.2\n10.4 10.3\n20.5 20.5\n''') == 'The gopher cannot escape.'"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\") == \"The gopher can escape through the hole at (1, 2).\"\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1,$1).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape through the hole at (1.000, 1.000).'\nassert solution('1.000 1.000 1.000 1.000') == 'The gopher can escape through the hole at (1.000, 1.000).'\nassert solution('1.000 1.000 1.000 1.000') == 'The gopher can escape through the hole at (1.000, 1.000).'\nassert solution('1.000 1.000 1.000 1.000') == 'The gopher cannot escape.\nassert solution('1.000 1.000 1.000 1.000') == 'The gopher cannot escape.\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('1.000 1.000\\n1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000 2.000 2.000\\n1.500 1.500 1.500 1.500') == 'The gopher can escape through the hole at ($1$,$2$).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1.000 1.000 2.000 2.000\n1.500 1.500''') == 'The gopher can escape through the hole at ($1$,$2$).'''\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('''\n5.000 -6.000 1.000 1.000\n5.000 -1.000\n''') == 'The gopher can escape through the hole at ($5$,$5$).'\nassert solution('''\n3.000 1.000 -2.000 2.000\n1.000 2.000\n''') == 'The gopher can escape through the hole at ($3$,$1$).'\nassert solution('''\n-1.000 1.000 -1.000 2.000\n-2.000 2.000\n''') == 'The gopher can escape through the hole at ($-2$,$2$).'\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($x$,$y$).\"\nprint(solution(\"1.000 1.000 2.000 2.000\"))\n"
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at ($2$,$1$).'\n\n\"\"\",\n    \"solution\": \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\",\n    \"output\": \"\"\"The gopher cannot escape.\nThe gopher can escape through the hole at ($2$,$1$).\nThe gopher can escape through the hole at ($2$,$2$).\nThe gopher can escape through the hole at ($2$,$3$).\nThe gopher can escape through the hole at ($2$,$4$).\nThe gopher can escape through the hole at ($2$,$5$).\nThe gopher can escape through the hole at ($2$,$6$).\nThe gopher can escape through the hole at ($2$,$7$).\nThe gopher can escape through the hole at ($2$,$8$).\nThe gopher can escape through the hole at ($2$,$9$).\nThe gopher can escape through the hole at ($2$,$10$).\nThe gopher can escape through the hole at ($2$,$11$).\nThe gopher can escape through the hole at ($2$,$12$).\nThe gopher can escape through the hole at ($2$,$13$).\nThe gopher can escape through the hole at ($2$,$14$).\nThe gopher can escape through the hole at ($2$,$15$).\nThe gopher can escape through the hole at ($2$,$16$).\nThe gopher can escape through the hole at ($2$,$17$).\nThe gopher can escape through the hole at ($2$,$18$).\"\"\",\n}\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'Y'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Y', \"1 1\"\nassert solution('2 2') == 'Y', \"2 2\"\nassert solution('3 3') == 'Y', \"3 3\"\nassert solution('2 4') == 'N', \"2 4\""
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n') == 'Y'\nassert solution('1\\n2\\n3\\n3') == 'N'\nassert solution('1\\n3\\n3\\n') == 'Y'\nassert solution('1\\n-3\\n-3\\n') == 'Y'\nassert solution('2\\n-3\\n-3\\n') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('3 4\\n3 3\\n2') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n3 1\\n1') == 'Y'\nassert solution('1 4\\n3 4\\n3 1') == 'N'\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\") == \"Y\", \"Should be Y\"\nassert solution(\"1\\n2\\n4\") == \"N\", \"Should be N\"\nassert solution(\"1\\n2\\n1000\") == \"Y\", \"Should be Y\"\nassert solution(\"1\\n2\\n10001\") == \"N\", \"Should be N\""
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"Y\", \"Should be Y\"\nassert solution(\"2 3\") == \"N\", \"Should be N\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"Y\"\nassert solution(\"3 3\") == \"Y\"\nassert solution(\"3\") == \"N\"\nassert solution(\"3\") == \"N\"\nassert solution(\"1\") == \"N\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Y\"\nassert solution(\"1\") == \"N\"\nassert solution(\"1\") == \"Y\"\n"
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('5 6\\n-2 -4\\n9 5\\n3 4') == 'N'\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == \\\n'''\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\n\nassert solution(\n'''\n5 7\n......\n...##.#\n......#.\n##..#..#\n......##\n''') == \\\n'''\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 2\\n.V\\n.V\\n.V\"\n) == \"1 2\\n.V\\n.V\\n.V\"\nassert solution(\n    \"3 3\\nV.V.\\n.V\\n.V\"\n) == \"3 3\\n.V.\\n.V\\n.V\"\nassert solution(\n    \"3 3\\n.V.\\n.V\\n.V\"\n) == \"3 3\\n.V.\\n.V\\n.V\"\nassert solution(\n    \"2 3\\n.V.\\n.V\\n.V\"\n) == \"2 3\\n.V\\n.V\\n.V\"\nassert solution(\n    \"5 5\\n.....\\n.....\\n.....\\n.....\\n.....\"\n) == \"5 5\\n.....\\n.....\\n.....\\n.....\\n.....\"\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\"\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n...V...\n.......\n.......\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''3 3\n...#..\n...#..\n...#..\n''') == '''...#..\n...#..\n...#..\n'''\nassert solution('''2 2\n...#..\n...#..\n''') == '''...#..\n...#..\n'''\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '.....\\n.....\\n.....\\n.....\\n'\nassert solution('5 7') == '.....\\n.....\\n.....\\n.....\\n...V...\\n'\nassert solution('5 5') == '....\\n....\\n....\\n....\\n....\\n'\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n...\") == \"...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\"\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\nassert solution('5 7\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n') == '.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n'\nassert solution('4 8\\n.V....\\n..V...\\n.V...#\\n..##...\\n#..#...\\n....V..\\n.V....#\\n..V...#\\n#..#...\\n#...#.#\\n') == '#..#...\\n#..#...\\n#..#...\\n#..#...\\n#..#...\\n#..#...\\n#..#...\\n#..#...\\n#..#...\\n#..#...\\n'\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n', 'First Test'\nassert solution('10 9\\n.#.#.#\\n#.V.##\\n..#...\\n##..#.\\n##...#\\n##...#\\n##...#\\n##...#\\n##...#\\n##...#\\n#..###\\n') == '.....#\\n.....#\\n..V...\\n..V...\\n..V...\\n.....#\\n.....#\\n.....#\\n.....#\\n', 'Second Test'\nassert solution('5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n', 'Third Test'\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n.....\n.....\n.....\n.....\n''') == '.....\\n.....\\n.....\\n.....\\n'\n"
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '''\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\nassert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '''\n...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.\n'''\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '11'\nassert solution('100') == '1'"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"11\""
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '11'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '11'\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '11'"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"11\"\n\nsolution()"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '11'\nassert solution('101') == '1'\n"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '1'\nassert solution('13') == '11'\nassert solution('1000000000') == '1'\n\"\"\""
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '11'"
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '11'"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '9'\nassert solution('1') == 'I must watch Star Wars with my daughter'\nassert solution('4') == 'I must watch Star Wars with my daughter'\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == \"9\"\nassert solution('13') == \"I must watch Star Wars with my daughter\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '9'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '9'\nassert solution('3') == '1'\nassert solution('1') == '1'\n'''"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == '9'\nassert solution('5') == '9'\nassert solution('1') == '5'\nassert solution('2') == '5'\nassert solution('0') == '9'\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"I must watch Star Wars with my daughter\"\nassert solution(\"10\") == \"I must watch Star Wars with my daughter\"\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n12\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n\"\"\") == \"9\"\nprint(\"Solution: \", solution(r\"\"\"\n12\npink\ntequilaSunrose\nmExicanPInK\nCoquelicot\nturqrose\nroSee\nJETblack\npink\nbabypink\npInKpinkPinK\nPInkrose\nlazerlemon\n\"\"\"))\n"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"11\") == \"6\"\nassert solution(\"10\") == \"6\"\n\ns = stdin.strip().split(\"\\n\")\nfor i in s:\n    if (i!= \"\"):\n        print(solution(i))\n\n'''"
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == '9'\nassert solution('5') == '2'\nassert solution('4') == '3'\n\"\"\""
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\npink\\ntequilaSunrose\\nmExicanPInK\\nCoquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'\nassert solution('2\\npink\\nturqrose\\npink\\nroSee\\nJETblack\\npink\\nbabypink\\npink\\nturqrose\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '6'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 3') == '1 3 2'\nassert solution('10 20 50') == '50 20 10'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1 5 3') == '1 3 5'\nassert solution(\n    'CAB') == 'CAB'\nassert solution(\n    'ABCC') == 'ABCC'\nassert solution(\n    'ABCDEF') == 'ABCDEF'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4\n1''') == '1 4 5', 'Should be 1 4 5'\nassert solution('''4\n1\n5''') == '1 5 4', 'Should be 1 5 4'\nassert solution('''3\n2\n1''') == '2 1 3', 'Should be 2 1 3'\nassert solution('''2\n2\n1''') == '1 2 3', 'Should be 1 2 3'\nassert solution('''1\n1\n1''') == '1 1 1', 'Should be 1 1 1'\n\n-----Hint-----\nYou are going to need to use the function sorted(list), which will sort a list in alphabetical order. Then use the function join(), which will join the items in the list in a single string.\n\nFor example:\n\n>>> lst = ['a', 'b', 'c']\n>>> sorted(lst)\n['a', 'b', 'c']\n>>> \"\".join(sorted(lst))\n'abc'\n'''\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\n\n\"\"\"\n\na, b, c = list(map(int, input().split()))\nprint(c, b, a)"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 5 3\nABC''') == '1 3 5 ABC'\nassert solution('''1 2 3\nA C\nB''') == '1 3 2 A C B'\nassert solution('''1 2 3\nA B\nC''') == '1 2 3 A B C'\nassert solution('''1 2 3\nD E\nF\nC''') == '1 2 3 D F E C'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5 A B C\"\nassert solution(\"1 2 3\\nBC\") == \"1 2 3 B C\"\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 5 3\nABC\n''') == '1 3 5 ABC'\nassert solution('''\n7 2 3\nABC\n''') == '7 3 2 ABC'\nassert solution('''\n3 9 2\nCBA\n''') == '3 2 9 CBA'\nassert solution('''\n1 100\nA\n''') == '1 100 A'\nassert solution('''\n10 1 3\nA\n''') == '10 1 3 A'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('ABC') == 'ABC'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 3') == '1 3 5'\n"
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"ABC\") == \"A C B\"\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"buy 1 15\\n\"\n    \"split 3\\n\"\n    \"sell 1 5\\n\"\n    \"die 4\"\n    ) == \"8.00000000\"\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsell 1 5\nsell 1 6\n\"\"\") == \"8.00000000\"\nassert solution(\"\"\"\nbuy 3 5\nsplit 3\nsell 1 5\nsell 1 6\nsell 1 7\ndie 4\n\"\"\") == \"0.00000000\"\nassert solution(\"\"\"\nbuy 3 5\nsell 1 5\nsell 1 6\nsell 1 7\nsell 1 8\nsell 1 9\nsell 1 10\nsell 1 11\nsell 1 12\nsell 1 13\nsell 1 14\ndie 4\n\"\"\") == \"0.00000000\"\nassert solution(\"\"\"\nbuy 1 6\nsell 1 5\nsell 1 6\nsell 1 7\nsell 1 8\nsell 1 9\nsell 1 10\nsell 1 11\nsell 1 12\nsell 1 13\nsell 1 14\nsell 1 15\nsell 1 16\nsell 1 17\nsell 1 18\nsell 1 19\nsell 1 20\nsell 1 21\nsell 1 22\nsell 1 23\nsell 1 24\nsell 1 25\nsell 1 26\nsell 1 27\nsell 1 28\nsell 1 29\nsell 1 30\nsell 1 31\nsell 1 32\nsell 1 33\nsell 1 34\nsell 1 35\nsell 1 36\nsell 1 37\nsell 1 38\nsell 1 39\nsell 1 40\nsell 1 41\nsell 1 42\nsell 1 43\nsell 1 44\nsell 1 45\nsell 1 46\nsell 1 47\nsell 1 48\nsell 1 49\nsell 1 50\nsell 1 51\nsell 1 52\nsell 1 53\nsell 1 54\nsell 1 55\nsell 1 56\nsell 1 57\nsell 1 58\nsell 1 59\nsell 1 60\nsell 1 61\nsell 1 62\nsell 1 63\nsell 1 64\nsell 1 65\nsell 1 66\nsell 1 67\nsell 1 68\nsell 1 69\nsell 1 70\nsell 1 71\nsell 1 72\nsell 1 73\nsell 1 74\nsell 1 75\nsell 1 76\nsell 1 77\nsell 1 78\nsell 1 79\nsell 1 80\nsell 1 81\nsell 1 82\nsell 1 83\nsell 1 84\nsell 1 85\nsell 1 86\nsell 1 87\nsell 1 88\nsell 1 89\nsell 1 90\nsell 1 91\nsell 1 92\nsell 1 93\nsell 1 94\nsell 1 95\nsell 1 96\nsell 1 97\nsell 1 98\nsell 1 99\nsell 1 100\nsell 1 101\nsell 1 102\nsell 1 103\nsell 1 104\nsell 1 105\nsell 1 106\nsell 1 107\nsell 1 108\nsell 1 109\nsell 1 110\nsell 1 111\nsell 1 112\nsell 1 113\nsell 1 114\nsell 1 115\nsell 1 116\nsell 1 117\nsell 1 118\nsell 1 119\nsell 1 120\nsell 1 121\nsell 1 122\nsell 1 123\nsell 1 124\nsell 1 125\nsell 1 126\nsell 1 127\nsell 1 128\nsell 1 129\nsell 1 130\nsell 1 131\nsell 1 132\nsell 1 133\nsell 1 134\nsell 1 135\nsell 1 136\nsell 1 137\nsell 1 138\nsell 1 139\nsell 1 140\nsell 1 141\nsell 1 142\nsell 1 143\nsell 1 144\nsell 1 145\nsell 1 146\nsell 1 147\nsell 1 148\nsell 1 149\nsell 1 150\nsell 1 151\nsell 1 152\nsell 1 153\nsell 1 154\nsell 1 155\nsell 1 156\nsell 1 157\nsell 1 158\nsell 1 159\nsell 1 160\nsell 1 161\nsell 1 162\nsell 1 163\nsell 1 164\nsell 1 165\nsell 1 166\nsell 1 167\nsell 1 168\nsell 1 169\nsell 1 170\nsell 1 171\nsell 1 172\nsell 1 173\nsell 1 174\nsell 1 175\nsell 1 176\nsell 1 177\nsell 1 178\nsell 1 179\nsell 1 180\nsell 1 181\nsell 1 182\nsell 1 183\nsell 1 184\nsell 1 185\nsell 1 186\nsell 1 187\nsell 1 188\nsell 1 189\nsell 1 190\nsell 1 191\nsell 1 192\nsell 1 193\nsell 1 194\nsell 1 195\nsell 1 196\nsell 1 197\nsell 1 198\nsell 1 199\nsell 1 200\nsell 1 201\nsell 1 202\nsell 1 203\nsell 1 204\nsell 1 205\nsell 1 206\nsell 1 207\nsell 1 208\nsell 1 209\nsell 1 210\nsell 1 211\nsell 1 212\nsell 1 213\nsell 1 214\nsell 1 215\nsell 1 216\nsell 1 217\nsell 1 218\nsell 1 219\nsell 1 220\nsell 1 221\nsell"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '8.00000000'\nassert solution('1\\n2\\n3\\n4\\n') == '8.00000000'\nassert solution('1\\n3\\n5\\n6\\n7\\n8\\n9\\n') == '61.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    buy 1 15\n    split 3\n    sell 1 5\n    die 4\n\"\"\") == \"8.00000000\", \"Sample Test 1\"\n\nassert solution(\"\"\"\n    buy 4 10\n    sell 5 2\n    split 5\n    sell 1 4\n    merge 3\n    split 1\n    merge 2\n    buy 8 5\n    buy 9 7\n    sell 2 9\n    buy 1 3\n    buy 5 1\n    sell 4 5\n    buy 6 2\n    sell 6 2\n    sell 2 1\n    sell 4 3\n    buy 2 5\n    buy 4 4\n    buy 8 9\n    sell 3 7\n    buy 1 1\n    sell 1 6\n    sell 7 1\n    sell 4 1\n    buy 7 7\n    sell 1 5\n    sell 4 3\n    buy 2 5\n    buy 1 4\n    sell 3 1\n    sell 2 3\n    sell 1 3\n    sell 4 4\n    buy 5 8\n    buy 9 8\n    sell 2 4\n    buy 9 2\n    sell 4 4\n    buy 3 1\n    sell 4 3\n    buy 6 2\n    sell 1 5\n    sell 5 2\n    sell 6 2\n    sell 8 9\n    sell 1 2\n    buy 1 7\n    sell 1 3\n    sell 7 4\n    buy 1 2\n    sell 6 5\n    sell 1 4\n    sell 7 5\n    sell 6 5\n    buy 4 5\n    sell 5 5\n    sell 3 7\n    sell 1 1\n    buy 1 1\n    sell 1 7\n    sell 5 2\n    sell 4 3\n    buy 5 1\n    sell 5 3\n    sell 1 3\n    sell 1 5\n    sell 2 3\n    sell 1 6\n    sell 3 4\n    buy 4 6\n    sell 5 6\n    sell 8 3\n    sell 4 3\n    sell 9 4\n    sell 3 4\n    sell 1 3\n    sell 6 5\n    sell 7 4\n    sell 4 5\n    buy 1 1\n    sell 1 3\n    sell 2 3\n    sell 4 4\n    sell 6 5\n    sell 1 4\n    sell 4 4\n    sell 3 1\n    sell 2 1\n    buy 1 5\n    sell 1 5\n    sell 5 2\n    buy 5 3\n    sell 1 4\n    sell 4 3\n    sell 3 4\n    buy 1 4\n    sell 3 4\n    sell 1 4\n    sell 5 1\n    sell 2 3\n    sell 3 4\n    sell 4 5\n    buy 3 7\n    sell 2 2\n    buy 1 2\n    sell 4 3\n    sell 4 2\n    sell 5 1\n    sell 3 5\n    buy 5 5\n    sell 2 2\n    sell 1 2\n    sell 6 2\n    sell 2 1\n    sell 1 4\n    sell 4 1\n    sell 2 2\n    buy 2 5\n    sell 4 1\n    sell 3 2\n    sell 4 1\n    sell 5 3\n    sell 1 2\n    sell 3 5\n    sell 4 4\n    sell 4 4\n    sell 3 4\n    sell 5 1\n    sell 4 1\n    sell 3 3\n    sell 3 1\n    sell 2 3\n    sell 1 2\n    sell 6 5\n    sell 5 5\n    sell 3 7\n    sell 1 4\n    buy 1 2\n    sell 4 1\n    sell 1 5\n    sell 5 4\n    sell 5 2\n    sell 4 2\n    sell 1 1\n    sell 5 1\n    sell 3 1\n    sell 5 1\n    sell 3 2\n    sell 2 4\n    sell 4 2\n    sell 4 2\n    sell 2 3\n    sell 1 5\n    sell 3 4\n    sell 3 1\n    sell 4 4\n    sell 1 4\n    sell 5 2\n    sell 5 2\n    sell 3 4\n    sell 2 3\n    sell 1 4\n    sell 5 3\n    sell 1 5\n    sell 6 4\n    sell 5 4\n    sell 2 1\n    sell 3 2\n    sell 3 5\n    sell 4 4\n    sell 2 4\n    sell 5 5\n    sell 1 6\n    sell 3 5\n    sell 5 1\n    sell 4 2\n    sell 5 1\n    sell 1 4\n    sell 5 4\n    sell 2 3\n    sell 5 2\n    sell 1 5\n    sell 2 3\n    sell 2 2\n    sell 1 2\n    sell 6 2\n    sell 3 4\n    sell 1 6\n    sell 2 6\n    sell 1 3\n    sell 1 4\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '71.45714285714286'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '8.00000000'\nassert solution('buy 2 6\\nbuy 3 7\\nbuy 2 2\\nbuy 1 1\\nbuy 2 2\\nbuy 1 1\\nbuy 4 4\\nbuy 4 6\\nbuy 3 3\\nsell 4 4\\nsell 2 2\\nsell 1 1\\nsell 3 3\\n') == '14.00000000'\nassert solution('sell 1 3\\nbuy 3 3\\nbuy 4 4\\nbuy 3 3\\nsell 4 4\\nsell 2 2\\nbuy 1 1\\nbuy 1 1\\nbuy 4 4\\nsell 3 3\\n') == '11.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4') == '8.00000000'\nassert solution('buy 1 15\\nsell 1 5\\ndie 4') == '0.00000000'\n\"\"\"\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('buy 1 15') == '8.00000000'\n"
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('buy 1 15\\n') == '8.00000000'\nassert solution('sell 1 5\\n') == '8.00000000'\nassert solution('sell 1 5\\n') == '8.00000000'\nassert solution('buy 1 15\\n') == '8.00000000'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('808') == '8'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('123') == '3'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('808') == '8'\nassert solution('1') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('808') == '8'\nassert solution('112') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('808') == '8'\nassert solution('1') == '1'\nassert solution('12') == '2'\n\"\"\""
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('808') == '8', \"wip\"\nassert solution('2') == '2'\n"
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n\"\"\"\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '1'\nassert solution('2\\n1\\n1\\n2\\n') == '0'\nassert solution('3\\n2\\n1\\n2\\n') == '0'\nassert solution('4\\n5\\n3\\n3\\n') == '2'\nassert solution('6\\n6\\n6\\n6\\n') == '2'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5 7\n    LWLWL\n    LWLWL\n    CCCC\n    CCCC\n    CCCC''') == \"3\"\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"LCCCCCCCC\") == \"1\"\nassert solution(\"WWWWWWWWW\") == \"3\"\nassert solution(\"LLLCCCCCCCCCCCCCCCCCCCCCCCCCCLLLLLLCCCCCCCCCCCCCLLLLCCCCCCCCCCCCCLLCCCCCCCCCCC\") == \"2\""
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"CCCCCC\") == 0\nassert solution(\"CCCCCCCCCCCC\") == 1\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\") == 2\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\") == 3\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nLWWWW\nCCCWCC\nLWCCL\nWWWWW''') == '0'\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nCCCCC\nCCCCC\nCCCCC\nCCCCC''') == '1'\n\"\"\"\n"
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"1\""
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"2 S QS 9C\") == \"93\"\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"TH\") == \"60\"\nassert solution(\"9C\") == \"60\"\nassert solution(\"KS\") == \"70\"\nassert solution(\"QS\") == \"60\"\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'\n'''\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 S\") == \"11\"\nassert solution(\"4 S\") == \"20\"\nassert solution(\"5 S\") == \"25\"\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''3 S\nTH\n9C\nKS\nQS''') == '36'\n\nprint(solution('''4 S\nTH\n9C\nKS\nQS'''))\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n\") == '60'\n\"\"\"\n\nn = int(input())\ns = input()\npoints = 0\nfor i in range(n):\n    if s[i] == 'T' or s[i] == 'J' or s[i] == 'Q' or s[i] == 'K':\n        points += 10\n    elif s[i] == 'A':\n        points += 11\n    elif s[i] == '9' or s[i] == '8' or s[i] == '7':\n        points += 2\n    elif s[i] == 'S' or s[i] == 'D' or s[i] == 'H':\n        points += 4\n    else:\n        points += 0\nprint(points)"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\nassert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\n"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\n'''\n'''\nA\n\n$11$\n\n$11$\n\nK\n\n$4$\n\n$4$\n\nQ\n\n$3$\n\n$3$\n\nJ\n\n$20$\n\n$2$\n\nT\n\n$10$\n\n$10$\n\n9\n\n$14$\n\n$0$\n\n8\n\n$0$\n\n$0$\n\n7\n\n$0$\n\n$0$\n\n'''"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH') == '60'\nassert solution('1 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\nTH') == '77'\nprint('All test cases passed.')"
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"3 S\") == \"60\"\nassert solution(\"5 S\") == \"60\"\nassert solution(\"5 T\") == \"60\"\nassert solution(\"5 H\") == \"60\"\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('this is very annoying\\nthiss iss veery annoying\\n') =='se'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('this is very annoying') =='se'\n'''"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n\"\"\"\n\nimport collections"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying''') =='se'\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\n\"\"\"\nimport itertools"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\nassert solution(\"supercalifragilisticexpialidocious\") == \"i\"\nassert solution(\"hello\") == \"l\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('this is very annoying') =='se'\n\nassert solution('thiss iss veery annoying') =='se'\n\nassert solution('test') == 't'\n\nassert solution('testt') == 'e'\n\nassert solution('testtt') == 't'"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"1\") == '2'\nassert solution(\"1 2\") == '2'\nassert solution(\"1 2 3 4\") == '2'\nassert solution(\"0 1 1 1\") == '2'\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2') == '3'\nassert solution('10 4 5\\n0 1 2 3 4 5 6 7 8 9') == '8'\nassert solution('100 100 0\\n0 1 2 3 4 5 6 7 8 9') == '1'\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 0') == '3'\nassert solution('10 3 0') == '1'\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3 0\n0 0 1 1 2\n''') == '3'\nprint(solution('''\n10 3 0\n0 0 1 1 2\n1 1 1 1 1 1\n2 1 1 1 1 1 1\n3 1 1 1 1 1 1 1\n4 1 1 1 1 1 1 1\n'''))\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '3'\n\"\"\"\n\nn, c, k = map(int, input().split())\nnums = list(map(int, input().split()))"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('0 0 1 1 2') == '2'\n'''\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 0\\n0 0 1 1 2\\n') == '3'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input(\"\")) == \"0\"\nprint(\"You're all set!\")\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 1 1 2') == '3'\nassert solution('5 3 0') == '3'\nassert solution('5 3 0 1 1 2') == '4'\nassert solution('5 3 0 1 1 3 2') == '4'\nassert solution('5 3 0 1 1 3 5 2') == '4'\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '24'\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n4\\n\") == \"6\"\nassert solution(\"2\\n2\\n3\\n\") == \"6\"\nassert solution(\"2\\n3\\n4\\n\") == \"6\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n7\") == \"6\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"4\\n5\\n6\") == \"6\"\nassert solution(\"2\\n3\\n4\") == \"6\"\nassert solution(\"10\\n100\") == \"100\"\n\nprint(solution(input()))\n\n[8]\n[10]\n[4]\n[2]\n[1]\n[10]\n[10]\n[10]\n[10]\n[10]\n[10]\n[10]\n[10]\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"1\\n3\\n6\") == \"2\"\nassert solution(\"2\\n3\\n4\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"6\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"24\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\") == \"6\"\nassert solution(\"10\\n10\") == \"45\"\nassert solution(\"12\\n1\") == \"2\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"2\\n3\\n\") == \"6\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"5\\n10\\n15\") == \"6\"\nassert solution(\"3\\n4\\n5\") == \"6\"\nassert solution(\"3\\n5\\n2\") == \"6\"\nassert solution(\"5\\n30\\n20\") == \"2\"\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n"
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"24\"\nassert solution(\"5\") == \"120\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4\\n') == '7 3'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"4 2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"15\") == \"25\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\nassert solution('6\\n4 5 4 1 1') == '10 2'\nassert solution('12\\n8 7 5 5 6') == '15 2'\nassert solution('6\\n4 2 2 1 2') == '9 2'\nassert solution('10\\n6 6 1 1 5 1') == '21 2'\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2''') == '4 2'\nassert solution('''4\n2 4 2 5''') == '10 5'\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n1 3 5\n''') == '''\n4\n2'''\n\nassert solution('''\n10\n10 1 2 3 5 7 11 17 21\n''') == '''\n45 14'''\n\nassert solution('''\n7\n7 1 2 3 4 5 6\n''') == '''\n21'''\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"\nassert solution(\"5\\n1 2 3 5\") == \"6 3\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1 2\n''') == '''\n4 2\n'''\n\nassert solution(\n'''\n3\n2 1\n''') == '''\n3 2\n'''\n\nassert solution(\n'''\n5\n3 6 5 2 6\n''') == '''\n10 8\n'''\n\nassert solution(\n'''\n7\n6 5 3 8 9 6\n''') == '''\n27\n'''\n\nassert solution(\n'''\n13\n7 8 9 6 5 4 2 3 1 6 8 3\n''') == '''\n53\n'''"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == \"3 1 2\"\nassert solution(\"3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"3 2\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\n\"\"\"\n\nclass Solution:\n    def solution(self, input):\n        n = int(input.strip())\n        a = map(int, input.split())\n        res = 0\n        res = reduce(lambda x, y: x * y, a)\n        res1 = 0\n        res1 = reduce(lambda x, y: x * y, a)\n        return str(res), str(res1)"
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4 2'\nassert solution('3 3 4') == '9 8 5'\nassert solution('3 5 5 2') == '10 9 4'\nassert solution('5 3 3 3 3') == '20 7 6 6 5'\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"2\"\nassert solution(\"100 2 1\") == \"99\"\nassert solution(\"1000 2 1\") == \"999\"\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('10 6 2') == '3'\nassert solution('5 2 3') == '4'\nassert solution('3 4 3') == '4'\nassert solution('4 2 5') == '7'\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 2 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3 4 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n3 3 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n10 15 10\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n100 100 100\n\"\"\") == \"2\"\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 1') == '2'"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('10 2 1') == '3'\nassert solution('20 1 1') == '20'"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('3 2 2') == '2'\n\n'''\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\") == \"1\"\nassert solution(\"10 3 2\") == \"4\"\nassert solution(\"5 3 3\") == \"3\"\nprint('solution() is working.')"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == \"2\"\nassert solution(\"5 2 2\") == \"3\"\nassert solution(\"5 3 4\") == \"2\"\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('1 1 1') == '3'\nassert solution('1 1 1 1') == '4'\nassert solution('5 1 3') == '3'\n"
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1\") == \"2\""
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '13'\nassert solution('5') == '31'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '36'\nassert solution('1') == '1'\nassert solution('12') == '26'\nassert solution('3') == '3'\nassert solution('100000') == '87760'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '36'\nassert solution('8') == '37'\nassert solution('4') == '4'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '36'\nassert solution('10') == '181'\nassert solution('100') == '59236'\nassert solution('1000') == '1346269'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '36'"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '36'\n\nassert solution('10') == '46'\n\nassert solution('15') == '46'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '36'\n\nassert solution('7') == '288'\n\nassert solution('1') == '1'\n\nassert solution('15') == '42'\n\nassert solution('16') == '66'"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '36'\nassert solution('15') == '32'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n''') == '36'\nassert solution('''\n7\n''') == '288'\nassert solution('''\n10\n''') == '710'\nassert solution('''\n1000000000\n''') == '100000000000000'\nassert solution('''\n1000000000\n''') == '100000000000000000'\n"
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '36'\nassert solution('10') == '55'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('4 3 3 1') == '2 3 4 1'\nassert solution('4 1 3 3') == '1 3 2 4'"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('4\\n3 4 1 2') == '2 3 4 1'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"impossible\"\nassert solution(\"2\\n\") == \"2 3 1\"\nassert solution(\"3\\n\") == \"2 3 1\"\nassert solution(\"4\\n\") == \"3 1 2\"\nassert solution(\"5\\n\") == \"3 1 4 2\"\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n') == '1 3 4 2'\nassert solution('2\\n3\\n3\\n') == '2 3 4 1'\nassert solution('5\\n1 2 5 5\\n3 4 2 4') == '1 3 4 2'\nassert solution('3\\n3\\n1\\n') == '1 3 2'\nassert solution('4\\n1 4 4 1') == '1 3 2 4'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == '3 1'\nassert solution('4\\n3 4 1 1') == '3 1 1 4'\nassert solution('4\\n4 1 1 1') == '4 1 1 1'\nassert solution('4\\n4 3 1 1') == '1 1 4 3'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('5 3 3 1') == '5 3 4 1'\nassert solution('1 1 2 2') == '1 1'\nassert solution('1 1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('4 5 2 1') == '3 4 5 1'\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 2\") == \"2 1 3\"\nassert solution(\"4\\n2 3 3 1\") == \"1 2 3 4\"\n"
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n') == '1 2 3', \"Should be 1 2 3\"\nassert solution('2\\n2\\n3\\n') == '2 1 2 3', \"Should be 2 1 2 3\"\nassert solution('3\\n3\\n3\\n') == '3 1 2 3', \"Should be 3 1 2 3\"\nassert solution('4\\n2 1 4\\n') == '4 2 1 3', \"Should be 4 2 1 3\"\nassert solution('5\\n2 1 4\\n') == '1 2 3 4', \"Should be 1 2 3 4\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\nleft_oar\\nright_oar\\n') == '4'\nassert solution('5 2\\nleft_oar\\nhull\\nleft_oar\\n') == '3'\nassert solution('5 3\\nleft_oar\\nhull\\nleft_oar\\n') == '2'"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 5 left_oar right_oar left_oar hull right_oar') == '2'\nassert solution('3 5 left_oar left_oar right_oar hull left_oar') == '1'"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 5 3') == '1'\nassert solution('3 5 5') == '2'\nassert solution('1 2 3') == '2'\nassert solution('4 5 3') == '0'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n\") == \"1\"\nassert solution(\"5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar\") == \"1\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == '4'\n\"\"\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == '4'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('3 5\\nleft_oar\\nright_oar\\nright_oar\\nhull\\nleft_oar\\n') == '0'\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == \"4\"\nassert solution('5 3') == \"1\"\nassert solution('2 10') == \"2\"\nassert solution('3 3') == \"1\"\nassert solution('100 2') == \"1\"\n"
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('3 2\\nleft_oar\\nleft_oar\\nhull\\nright_oar\\nright_oar') == '2'\nassert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar') == '5'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1 1\", \"Should be 1 1\"\nassert solution(\"1 2\") == \"1 1\", \"Should be 1 1\"\nassert solution(\"2 2\") == \"1 1\", \"Should be 1 1\"\nassert solution(\"1 2\") == \"1 1\", \"Should be 1 1\"\nassert solution(\"2 3\") == \"2 2\", \"Should be 2 2\"\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nassert solution('6 4\\n6 1\\n1 3\\n3 3') == '3 3'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n5 7\n7 5''') == '7 7'\n\nassert solution('''0 0\n0 1\n1 0''') == '1 1'\n\nassert solution('''0 0\n0 1\n1 0\n''') == '1 1'\n\nassert solution('''5 5\n5 7\n7 5\n7 2\n3 2\n''') == '3 3'\n\nassert solution('''2 3\n1 1\n2 2\n''') == '2 2'"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n5 7\\n7 5') == '7 7'\nassert solution('1 2\\n3 5\\n5 7\\n7 6') == '7 7'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n5 7\n7 5\n''') == '7 7'\nassert solution('''\n5 5\n7 7\n7 6\n''') == '7 7'\n''')\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '7 7'\nassert solution('5 7') == '7 5'\nassert solution('7 5') == '5 7'\n\"\"\""
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1') == '1 1'\n\n\"\"\""
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\n\"\"\"\n"
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n1 60 2\") == \"1.933333333\"\n\nassert solution(\"1\\n1 60\") == \"1.5\"\nassert solution(\"1\\n1 60 2\") == \"1.33333333333\"\nassert solution(\"1\\n1 60 3\") == \"1.25\""
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1.016666667\"\n\nimport math"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('10\\n1 1') == '10.000000000000001'\nassert solution('1000\\n1 1') == '1.0000000000000999'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1.016666667'"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 61\n''') == '1.016666667'\nassert solution('''\n2\n1 60\n''') == '2.0'\nassert solution('''\n3\n1 3600\n''') == '3.0'\nassert solution('''\n4\n1 6\n''') == '4.01666666667'\nassert solution('''\n5\n1 60\n''') == '5.01666666667'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.016666667'\nassert solution('1 2') == '0.973333333'\nassert solution('1 2 3') == '0.973333333'\nassert solution('2 5') == '0.9625'\nassert solution('3 1') == '0.9625'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 60\nSample Input 2:\n2\n1 5\nSample Output 2:\n2.3333333333333333\n''') == '2.3333333333333333'\n\nassert solution('''\n1\n1 3600\nSample Input 3:\n1\n1 2\nSample Output 3:\n1.33333\n''') == '1.3333333333333333'\n\nassert solution('''\n4\n1 61\n1 3600\n1 2\n1 3\nSample Input 4:\n5\n1 13\n1 3\n1 9\n1 18\nSample Output 4:\n1.8333333333333334\n''') == '1.8333333333333334'\n\nassert solution('''\n1\n1 60\nSample Input 5:\n2\n1 61\n1 3600\nSample Output 5:\n1.00000001\n''') == '1.00000001'\n\nassert solution('''\n1\n1 60\nSample Input 6:\n2\n1 61\n1 60\nSample Output 6:\n1.00000001\n''') == '1.00000001'"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''1\n1 61\n''') == '1.016666667'\nassert solution(\n'''2\n3 70\n''') == '2.016666667'\nassert solution(\n'''1\n1 605\n''') == '6.016666667'\nassert solution(\n'''3\n3 60\n''') == '3.016666667'\nassert solution(\n'''5\n1 60\n1 3600\n1 690\n1 5100\n''') == '7.133333333'\n"
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 61\n2 36\n3 81\n\"\"\") == \"1.016667\"\nassert solution(\"\"\"\n1\n1 36\n\"\"\") == \"measurement error\"\n\nassert solution(\"\"\"\n2\n1 81\n2 36\n\"\"\") == \"measurement error\"\n\nassert solution(\"\"\"\n4\n1 81\n2 81\n3 36\n4 36\n\"\"\") == \"measurement error\"\n\nassert solution(\"\"\"\n1\n1 36\n\"\"\") == \"1.0066666667\""
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 60\n''') == \"1.016666667\"\nassert solution('''\n2\n1 60\n1 120\n''') == \"2.0\"\nassert solution('''\n3\n1 60\n2 120\n3 150\n''') == \"3.0\"\nassert solution('''\n4\n1 60\n2 120\n3 150\n4 160\n''') == \"3.0\"\nassert solution('''\n5\n1 60\n2 120\n3 150\n4 160\n5 160\n''') == \"measurement error\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CPMCRYY','ALBERTA') == 'CALGARY'\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''ZLNQQ\nNLETY''') == 'ZLNQQ'\nassert solution('''MMZSE\nALBERTA''') == 'MMZSE'\nassert solution('''KMZZK\nALBERTA''') == 'KMZZK'\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CPMCRYY\\nALBERTA') == 'CALGARY'\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'\nassert solution('CALGARY') == 'CPMCRYY'"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\nassert solution(\"ALBERTA\") == \"CALGARY\"\nassert solution(\"ALBERT\") == \"CALGARY\"\nassert solution(\"ALBER\") == \"CALGARY\"\nassert solution(\"ALBER\") == \"CALGARY\"\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\n\nassert solution('ALBERTA') == 'CALGARY'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'CALGARY'\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''CPMCRYY''') == 'CALGARY'\nassert solution('''ALBERTA''') == 'CALGARY'''')\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"CPMCRYY\\nALBERTA\") == \"CALGARY\"\nassert solution(\"MORTZYY\\nROCYOW\") == \"ALBERTZ\"\nprint(\"Congratulations! All test cases passed.\")\n'''\n"
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"CPMCRYY\") == \"CALGARY\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == \"3\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABABCD\") == \"1\"\nassert solution(\"ACABBCD\") == \"3\"\nassert solution(\"BCD\") == \"2\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '1'\nassert solution('AB') == '1'\nassert solution('ABCD') == '1'\nassert solution('ABCB') == '2'\nassert solution('ACBA') == '2'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AB') == '3'\nassert solution('CB') == '1'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    'AB') == '3'\nassert solution(\n    'ABC') == '1'\nassert solution(\n    'CBA') == '3'\nassert solution(\n    'CABA') == '1'\nassert solution(\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '23'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"BA\") == \"2\"\nassert solution(\"CB\") == \"1\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''AB\nCD\nEF\nGH\n''') == '3'\nassert solution('''ABC\nCDC\nEFG\nHGH\n''') == '3'\nassert solution('''ABC\nCDA\nEFG\nHGH\n''') == '4'\nassert solution('''ABC\nCDE\nEFG\nHGH\n''') == '4'\nassert solution('''ABC\nCDE\nEFG\nHGH\n''') == '2'\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"ABC\") == \"2\"\nassert solution(\"ABCD\") == \"2\"\nassert solution(\"ABCDABCDABCD\") == \"2\"\nassert solution(\"ABCDDABCD\") == \"1\"\n"
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AB') == '3'\nassert solution('BB') == '2'\nassert solution('CC') == '1'\nassert solution('DD') == '0'\n\"\"\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('4 5 2 3') == '4'\nassert solution('3 2 4 5') == '5'\nassert solution('2 3 5 4') == '3'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == \"3\"\nassert solution('1 2 4 3') == \"9\"\nassert solution('1 1 2 1') == \"3\"\nassert solution('1 1 2 3') == \"6\"\nassert solution('1 1 2 2') == \"2\"\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 3 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '5'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == \"3\"\n\"\"\""
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('2 3 2 3') == '5'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3, 4]) == '3'\nassert solution([1, 1, 1, 1]) == '4'\nassert solution([4, 4, 4, 4]) == '4'\nassert solution([1, 2, 3, 4, 5]) == '5'\nassert solution([1, 1, 1, 1, 1]) == '4'"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"3\""
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == \"3\""
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4\n''') == '3'\nassert solution('''2 2 2\n''') == '2'\n"
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 20 10 20\n''') == '30'\nassert solution('''\n10 10 10 10\n''') == '10'\nassert solution('''\n10 1 1 1\n''') == '4'\nassert solution('''\n10 0 10 0\n''') == '10'\nassert solution('''\n20 0 20 0\n''') == '20'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"10 1\") == \"10\""
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"153 7\\n\") == \"1\"\nassert solution(\"153 7\") == \"4\"\nassert solution(\"153 0\") == \"0\"\nassert solution(\"153 0\") == \"0\"\n\"\"\""
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"102 23\") == \"4\"\nassert solution(\"23\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"\") == \"0\"\nassert solution(\"9\") == \"1\"\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('103 27') == '4'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('103 27') == '4'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('18') == '3'\nassert solution('4') == '1'\nassert solution('105') == '2'"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 3') == '1'\nassert solution('4 3') == '1'\nassert solution('6 3') == '2'\nassert solution('3 9') == '3'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '2'\nassert solution('0') == '1'\nassert solution('1213') == '2'\nassert solution('1214') == '2'\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('103 27') == '4'\n\"\"\"\n"
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"103 27\") == \"4\""
    }
]